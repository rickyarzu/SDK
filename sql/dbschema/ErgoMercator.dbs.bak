<?xml version="1.0" encoding="UTF-8" ?>
<project name="Ergo Mercator" id="Project_2f9a77f" database="PostgreSQL" >
	<schema name="accounting" >
		<comment><![CDATA[Accounting Related procedures from petty Cash to General Ledger]]></comment>
	</schema>
	<schema name="carservice" >
		<comment><![CDATA[Car Service Schema]]></comment>
		<table name="booking_addresses" >
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[Foreign key to Booking]]></comment>
			</column>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="address_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="postal_code" length="34" decimal="0" jt="12" />
			<column name="state_province" type="state_province" length="34" decimal="0" jt="12" />
			<column name="town_name" type="town_name" length="132" decimal="0" jt="12" />
			<column name="town_code" type="town_code" length="24" decimal="0" jt="12" />
			<column name="address" type="address" length="260" decimal="0" jt="12" mandatory="y" />
			<column name="address_number" type="address_number" length="24" decimal="0" jt="12" />
			<column name="phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="full_address" type="varchar" length="512" decimal="0" jt="12" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ad_type" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['P'::"char"]]></defo>
			</column>
			<column name="booking_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[Foreign Key to Booking Table using jguid instead of bigint ID]]></comment>
			</column>
			<column name="maps_json" type="json" decimal="0" jt="2000" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="booking_addresses_pk" unique="PRIMARY_KEY" >
				<column name="booking_id" />
				<column name="id" />
			</index>
			<index name="fki_booking_addresses_booking_heads_fk" unique="NORMAL" >
				<column name="booking_id" />
			</index>
			<constraint name="anagraph_id_check" >
				<string><![CDATA[CHECK ((anagraph_id > 0))]]></string>
			</constraint>
			<fk name="booking_addresses_booking_heads_fk" to_schema="carservice" to_table="booking_heads" >
				<fk_column name="booking_id" pk="id" />
			</fk>
			<fk name="fk_booking_addresses_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="booking_heads" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[Unique Identifier]]></comment>
			</column>
			<column name="office_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Car Service identifier (or branch identifier)]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="customer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Car Service's customer anagraph_id]]></comment>
			</column>
			<column name="state_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="branch_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="vehicle_numberplate" type="varchar" length="24" decimal="0" jt="12" >
				<comment><![CDATA[Car or Vehicle Numberplate for this Booking mandatory]]></comment>
			</column>
			<column name="vehicle_model" type="varchar" length="128" decimal="0" jt="12" />
			<column name="vehicle_color" type="varchar" length="64" decimal="0" jt="12" >
				<comment><![CDATA[Color of the vehicle should be a complex definition color and metal just to say]]></comment>
			</column>
			<column name="driver_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key to Drivers anagraph record]]></comment>
			</column>
			<column name="pickup_day" type="date" length="13" decimal="0" jt="91" />
			<column name="pickup_slot_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="return_day" type="date" length="13" decimal="0" jt="91" />
			<column name="return_slot_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="booking_heads_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="booking_heads_uid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
			<fk name="timetable_booking_states_fk" to_schema="carservice" to_table="booking_states" update_action="cascade" >
				<fk_column name="state_id" pk="id" />
			</fk>
		</table>
		<table name="booking_states" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="description" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<index name="booking_states_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="booking_states_jk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="booking_status" >
			<comment><![CDATA[Connected to Booking Status]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Status ID]]></comment>
			</column>
			<column name="description" type="varchar" length="32" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[State description]]></comment>
			</column>
			<index name="pk_booking_status" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="drivers" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="drive_license_number" type="varchar" length="40" decimal="0" jt="12" mandatory="y" />
			<column name="drive_license_expiry" type="date" length="13" decimal="0" jt="91" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="drivers_pkey" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
			</index>
			<fk name="drivers_anagraph_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" update_action="cascade" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="messages" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="msgtype" type="integer" length="10" decimal="0" jt="4" />
			<column name="msgtext" type="text" decimal="0" jt="12" />
			<column name="json" type="json" decimal="0" jt="2000" />
			<column name="booking_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="timetable_jguid" type="uuid" decimal="0" jt="1111" />
			<fk name="fk_messages_booking_heads_uid" to_schema="carservice" to_table="booking_heads" >
				<fk_column name="booking_jguid" pk="jguid" />
			</fk>
			<fk name="fk_messages_timetable_uid" to_schema="carservice" to_table="timetable" >
				<fk_column name="timetable_jguid" pk="jguid" />
			</fk>
		</table>
		<table name="owners_vehicles" >
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="numberplate" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="model" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="owners_vehicles_pkey" unique="PRIMARY_KEY" >
				<column name="owner_id" />
				<column name="numberplate" />
			</index>
			<fk name="fk_owners_vehicles_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="owner_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="timetable" >
			<column name="workingday" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="slot_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="driver_anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="from_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="state_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<column name="from_latitude" type="float8" length="17" decimal="17" jt="6" >
				<comment><![CDATA[Latitude of Starting Address]]></comment>
			</column>
			<column name="from_longitude" type="float8" length="17" decimal="17" jt="6" >
				<comment><![CDATA[From Longitude]]></comment>
			</column>
			<column name="from_full_address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="to_latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="to_longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="to_full_address" type="varchar" length="256" decimal="0" jt="12" />
			<index name="timetable_pkey" unique="PRIMARY_KEY" >
				<column name="workingday" />
				<column name="slot_id" />
				<column name="driver_anagraph_id" />
			</index>
			<index name="day_slot_id" unique="NORMAL" >
				<column name="workingday" />
				<column name="slot_id" />
			</index>
			<index name="fki_timetable_booking_states_fk" unique="NORMAL" >
				<column name="state_id" />
			</index>
			<index name="timetable_day_ndx" unique="NORMAL" >
				<column name="workingday" />
			</index>
			<index name="timetable_slot_id_ndx" unique="NORMAL" >
				<column name="slot_id" />
			</index>
			<index name="timetable_uid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
			<fk name="timetable_booking_states_fk" to_schema="carservice" to_table="booking_states" update_action="cascade" >
				<fk_column name="state_id" pk="id" />
			</fk>
			<fk name="fk_timetable_timetable_slots" to_schema="carservice" to_table="timetable_slots" >
				<fk_column name="slot_id" pk="slot_id" />
			</fk>
			<fk name="fk_timetable_booking_heads" to_schema="carservice" to_table="booking_heads" delete_action="setNull" update_action="cascade" >
				<fk_column name="booking_id" pk="id" />
			</fk>
			<fk name="fk_timetable_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" update_action="cascade" >
				<fk_column name="driver_anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="timetable_files" >
			<comment><![CDATA[A List of Files (Images, PDF, Signatures Attached to a Timetable Workflow).]]></comment>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[UUID primary Key and Filename]]></comment>
			</column>
			<column name="timetable_guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[Unique Foreign Key to TimeTable]]></comment>
			</column>
			<column name="insert_date" type="timetz" length="21" decimal="6" jt="92" mandatory="y" />
			<column name="file_extension" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Blob_id has a value only if a file is stored internally.]]></comment>
			</column>
			<index name="timetable_files_pkey" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="timetable_slots" >
			<column name="slot_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="slot_des" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="slot_time" type="time" length="15" decimal="6" jt="92" />
			<column name="delivery_time" type="timestamp" decimal="6" jt="93" />
			<index name="timetable_slots_pk" unique="PRIMARY_KEY" >
				<column name="slot_id" />
				<column name="slot_des" />
			</index>
			<index name="unq_timetable_slots_slot_id" unique="UNIQUE_KEY" >
				<column name="slot_id" />
			</index>
		</table>
		<view name="booking_head_view" >
			<comment><![CDATA[This view contains All booking informations about Customer, Service and Service Office along with Drivers and Pickup-Delivery-Return Routes info]]></comment>
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT bh.id,
    bh.office_id,
    bh.jguid,
    bh.db_schema_id,
    bh.user_insert,
    bh.insert_date,
    bh.customer_id,
    bh.state_id,
    bh.branch_id,
    bh.vehicle_model,
    bh.vehicle_color,
    bh.vehicle_numberplate,
    bh.pickup_day,
    bh.pickup_slot_id,
    bh.return_day,
    bh.return_slot_id,
    se.an_last_name,
    se.an_vat_id,
    se.an_address,
    se.an_postal_code,
    se.an_fiscal_code,
    se.an_town,
    se.an_last_name AS service_name,
    COALESCE((se.an_full_address)::text, ((((((se.an_address)::text || ', '::text) || (se.an_postal_code)::text) || ', '::text) || (se.an_town)::text) ||
        CASE
            WHEN (se.an_state_province IS NULL) THEN ''::text
            ELSE ((' ('::text || (se.an_state_province)::text) || ')'::text)
        END)) AS service_address,
    se.an_phone,
    se.an_email,
    se.an_cellular,
    br.an_address AS branch_address,
    br.an_postal_code AS branch_postal_code,
    br.an_town AS branch_town,
    br.an_phone AS branch_phone,
    cu.an_name AS cust_first_name,
    cu.an_last_name AS cust_last_name,
    cu.an_address AS full_address,
    cu.an_cellular AS cust_cellular,
    cu.an_email AS cust_email,
    (tp.from_full_address)::text AS pickup_address,
    (tp.to_full_address)::text AS return_address,
    tp.slot_des AS pickup_time,
    tr.slot_des AS return_time,
    tp.workingday AS pickup_date,
    tr.workingday AS return_date,
    tp.driver_anagraph_id AS driver1_id,
    tr.driver_anagraph_id AS driver2_id,
    dp.an_email AS driver1_email,
    dr.an_email AS driver2_email,
    dp.an_cellular AS driver1_cellular,
    dr.an_cellular AS driver2_cellular,
    tp.jguid AS pickup_jguid,
    tr.jguid AS return_jguid,
    (tr.from_full_address)::text AS pickup2_address,
    (tr.to_full_address)::text AS return2_address
   FROM (((((((carservice.booking_heads bh
     JOIN anagraph.anagraphs se ON ((bh.office_id = se.anagraph_id)))
     JOIN anagraph.anagraphs br ON ((bh.branch_id = br.anagraph_id)))
     JOIN anagraph.anagraphs cu ON ((bh.customer_id = cu.anagraph_id)))
     JOIN carservice.timetable_view tp ON (((bh.pickup_day = tp.workingday) AND (bh.pickup_slot_id = tp.slot_id) AND (bh.id = tp.booking_id))))
     JOIN anagraph.anagraphs dp ON ((tp.driver_anagraph_id = dp.anagraph_id)))
     LEFT JOIN carservice.timetable_view tr ON (((bh.return_day = tr.workingday) AND (bh.return_slot_id = tr.slot_id) AND (bh.id = tr.booking_id))))
     LEFT JOIN anagraph.anagraphs dr ON ((tr.driver_anagraph_id = dr.anagraph_id)));]]></view_script>
			<column name="id" type="bigint" />
			<column name="office_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="db_schema_id" type="integer" />
			<column name="user_insert" type="integer" />
			<column name="insert_date" type="timestamptz" />
			<column name="customer_id" type="integer" />
			<column name="state_id" type="smallint" />
			<column name="branch_id" type="integer" />
			<column name="vehicle_model" type="varchar" />
			<column name="vehicle_color" type="varchar" />
			<column name="vehicle_numberplate" type="varchar" />
			<column name="pickup_day" type="date" />
			<column name="pickup_slot_id" type="smallint" />
			<column name="return_day" type="date" />
			<column name="return_slot_id" type="smallint" />
			<column name="an_last_name" type="varchar" />
			<column name="an_vat_id" type="smallint" />
			<column name="an_address" type="varchar" />
			<column name="an_postal_code" type="varchar" />
			<column name="an_fiscal_code" type="varchar" />
			<column name="an_town" type="varchar" />
			<column name="service_name" type="varchar" />
			<column name="service_address" type="text" />
			<column name="an_phone" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_cellular" type="varchar" />
			<column name="branch_address" type="varchar" />
			<column name="branch_postal_code" type="varchar" />
			<column name="branch_town" type="varchar" />
			<column name="branch_phone" type="varchar" />
			<column name="cust_first_name" type="varchar" />
			<column name="cust_last_name" type="varchar" />
			<column name="full_address" type="varchar" />
			<column name="cust_cellular" type="varchar" />
			<column name="cust_email" type="varchar" />
			<column name="pickup_address" type="text" />
			<column name="return_address" type="text" />
			<column name="pickup_time" type="varchar" />
			<column name="return_time" type="varchar" />
			<column name="pickup_date" type="date" />
			<column name="return_date" type="date" />
			<column name="driver1_id" type="integer" />
			<column name="driver2_id" type="integer" />
			<column name="driver1_email" type="varchar" />
			<column name="driver2_email" type="varchar" />
			<column name="driver1_cellular" type="varchar" />
			<column name="driver2_cellular" type="varchar" />
			<column name="pickup_jguid" type="uuid" />
			<column name="return_jguid" type="uuid" />
			<column name="pickup2_address" type="text" />
			<column name="return2_address" type="text" />
		</view>
		<view name="timetable_booking_driver" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT v.jguid,
    v.workingday,
    v.slot_id,
    v.booking_id,
    v.from_id,
    v.to_id,
    v.state_id,
    v.slot_des,
    v.booked,
    v.driver_anagraph_id,
    v.an_cellular,
    v."?column?" AS driver_name,
    v.an_email,
    v.from_latitude,
    v.from_longitude,
    v.from_full_address,
    v.to_latitude,
    v.to_longitude,
    v.to_full_address,
    f.an_cellular AS from_cellular,
    f.an_email AS from_email,
    TRIM(BOTH FROM (((f.an_name)::text || ' '::text) || (f.an_last_name)::text)) AS from_name,
    t.an_cellular AS to_cellular,
    t.an_email AS to_email,
    TRIM(BOTH FROM (((t.an_name)::text || ' '::text) || (t.an_last_name)::text)) AS to_name
   FROM ((((carservice.timetable_view v
     JOIN anagraph.an_addresses fa ON ((fa.id = v.from_id)))
     JOIN anagraph.anagraphs f ON ((fa.anagraph_id = f.anagraph_id)))
     JOIN anagraph.an_addresses ta ON ((ta.id = v.to_id)))
     JOIN anagraph.anagraphs t ON ((fa.anagraph_id = t.anagraph_id)))
  WHERE (v.booking_id IS NOT NULL)
  ORDER BY v.booking_id DESC;]]></view_script>
			<column name="jguid" type="uuid" />
			<column name="workingday" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="booking_id" type="bigint" />
			<column name="from_id" type="integer" />
			<column name="to_id" type="integer" />
			<column name="state_id" type="smallint" />
			<column name="slot_des" type="varchar" />
			<column name="booked" type="boolean" />
			<column name="driver_anagraph_id" type="integer" />
			<column name="an_cellular" type="varchar" />
			<column name="driver_name" type="text" />
			<column name="an_email" type="varchar" />
			<column name="from_latitude" type="float8" />
			<column name="from_longitude" type="float8" />
			<column name="from_full_address" type="varchar" />
			<column name="to_latitude" type="float8" />
			<column name="to_longitude" type="float8" />
			<column name="to_full_address" type="varchar" />
			<column name="from_cellular" type="varchar" />
			<column name="from_email" type="varchar" />
			<column name="from_name" type="text" />
			<column name="to_cellular" type="varchar" />
			<column name="to_email" type="varchar" />
			<column name="to_name" type="text" />
		</view>
		<view name="timetable_booking_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.pickup_an_id,
    t.pickup_first_name,
    t.pickup_address,
    t.pickup_postal_code,
    t.pickup_town,
    t.pickup_full_address,
    t.pickup_phone,
    t.pickup_email,
    t.pickup_longitude,
    t.pickup_latitude,
    t.delivery_first_name,
    t.delivery_address,
    t.delivery_postal_code,
    t.delivery_town,
    t.delivery_full_address,
    t.delivery_phone,
    t.delivery_email,
    t.delivery_longitude,
    t.delivery_latitude,
    t.jguid,
    t.pickup_time,
    t.pickup_date,
    t.slot_id,
    t.driver_id,
    t.booking_id,
    t.driver_email,
    t.driver1_cellular,
    t.driver_jguid,
    h.vehicle_numberplate,
    h.vehicle_model,
    h.vehicle_color,
    h.pickup_day,
    h.pickup_slot_id,
    h.return_day
   FROM (carservice.timetable_summary_view t
     JOIN carservice.booking_heads h ON ((h.id = t.booking_id)));]]></view_script>
			<column name="pickup_an_id" type="integer" />
			<column name="pickup_first_name" type="varchar" />
			<column name="pickup_address" type="address" />
			<column name="pickup_postal_code" type="postal_code" />
			<column name="pickup_town" type="town_name" />
			<column name="pickup_full_address" type="varchar" />
			<column name="pickup_phone" type="phone" />
			<column name="pickup_email" type="varchar" />
			<column name="delivery_first_name" type="varchar" />
			<column name="delivery_address" type="address" />
			<column name="delivery_postal_code" type="postal_code" />
			<column name="delivery_town" type="town_name" />
			<column name="delivery_full_address" type="varchar" />
			<column name="delivery_phone" type="phone" />
			<column name="delivery_email" type="varchar" />
			<column name="jguid" type="uuid" />
			<column name="pickup_time" type="varchar" />
			<column name="pickup_date" type="date" />
			<column name="driver_id" type="integer" />
			<column name="booking_id" type="bigint" />
			<column name="driver_email" type="varchar" />
			<column name="driver1_cellular" type="varchar" />
			<column name="driver_jguid" type="uuid" />
			<column name="slot_id" type="smallint" />
			<column name="vehicle_numberplate" type="varchar" />
			<column name="vehicle_model" type="varchar" />
			<column name="vehicle_color" type="varchar" />
			<column name="pickup_day" type="date" />
			<column name="pickup_slot_id" type="smallint" />
			<column name="return_day" type="date" />
			<column name="pickup_longitude" type="float8" />
			<column name="pickup_latitude" type="float8" />
			<column name="delivery_longitude" type="float8" />
			<column name="delivery_latitude" type="float8" />
		</view>
		<view name="timetable_files_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.timetable_guid,
    t.jguid,
    t.file_extension,
    t.blob_id,
    b.blob_file,
    b.blob_size,
    b.db_schema_id,
    b.blob_key,
    b.db_user_id,
    b.ispublic,
    b.file_ext,
    b.filename,
    b.isresource,
    b.is_external,
    b.ex_location,
    b.insert_date,
    b.description,
    b.flg_stored,
    b.directory_id
   FROM (carservice.timetable_files t
     JOIN cloud.blob_files b ON ((t.blob_id = b.blob_id)));]]></view_script>
			<column name="timetable_guid" type="uuid" />
			<column name="jguid" type="uuid" />
			<column name="file_extension" type="varchar" />
			<column name="blob_id" type="bigint" />
			<column name="blob_file" type="bytea" />
			<column name="blob_size" type="bigint" />
			<column name="db_schema_id" type="integer" />
			<column name="blob_key" type="varchar" />
			<column name="db_user_id" type="integer" />
			<column name="ispublic" type="boolean" />
			<column name="file_ext" type="varchar" />
			<column name="filename" type="varchar" />
			<column name="isresource" type="boolean" />
			<column name="is_external" type="boolean" />
			<column name="ex_location" type="char" />
			<column name="insert_date" type="timestamp" />
			<column name="description" type="varchar" />
			<column name="flg_stored" type="boolean" />
			<column name="directory_id" type="bigint" />
		</view>
		<view name="timetable_places" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT timetable.workingday,
    timetable.slot_id,
    count(1) AS places,
    count(timetable.booking_id) AS booked,
    (count(1) - count(timetable.booking_id)) AS free_places,
    (count(1) > count(timetable.booking_id)) AS free
   FROM carservice.timetable
  GROUP BY timetable.workingday, timetable.slot_id;]]></view_script>
			<column name="workingday" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="places" type="bigint" />
			<column name="booked" type="bigint" />
			<column name="free_places" type="bigint" />
			<column name="free" type="boolean" />
		</view>
		<view name="timetable_summary_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT pickup.anagraph_id AS pickup_an_id,
    pickup.address_name AS pickup_first_name,
    pickup.address AS pickup_address,
    pickup.postal_code AS pickup_postal_code,
    pickup.town_name AS pickup_town,
    COALESCE(pickup.full_address, ((((((pickup.address)::text ||
        CASE
            WHEN (pickup.address_number IS NULL) THEN ''::text
            ELSE (' '::text || (pickup.address_number)::text)
        END) ||
        CASE
            WHEN (pickup.postal_code IS NULL) THEN ''::text
            ELSE (', '::text || (pickup.postal_code)::text)
        END) ||
        CASE
            WHEN (pickup.town_name IS NULL) THEN ''::text
            ELSE (', '::text || (pickup.town_name)::text)
        END) ||
        CASE
            WHEN (pickup.state_province IS NULL) THEN ''::text
            ELSE ((' ('::text || (pickup.state_province)::text) || ')'::text)
        END))::character varying, pickup.full_address) AS pickup_full_address,
    pickup.phone AS pickup_phone,
    pickup.email AS pickup_email,
    pickup.longitude AS pickup_longitude,
    pickup.latitude AS pickup_latitude,
    delivery.address_name AS delivery_first_name,
    delivery.address AS delivery_address,
    delivery.postal_code AS delivery_postal_code,
    delivery.town_name AS delivery_town,
    COALESCE(delivery.full_address, ((((((delivery.address)::text ||
        CASE
            WHEN (delivery.address_number IS NULL) THEN ''::text
            ELSE (' '::text || (delivery.address_number)::text)
        END) ||
        CASE
            WHEN (delivery.postal_code IS NULL) THEN ''::text
            ELSE (', '::text || (delivery.postal_code)::text)
        END) ||
        CASE
            WHEN (delivery.town_name IS NULL) THEN ''::text
            ELSE (', '::text || (delivery.town_name)::text)
        END) ||
        CASE
            WHEN (delivery.state_province IS NULL) THEN ''::text
            ELSE ((' ('::text || (delivery.state_province)::text) || ')'::text)
        END))::character varying, delivery.full_address) AS delivery_full_address,
    delivery.phone AS delivery_phone,
    delivery.email AS delivery_email,
    delivery.longitude AS delivery_longitude,
    delivery.latitude AS delivery_latitude,
    tv.jguid,
    tv.slot_des AS pickup_time,
    tv.workingday AS pickup_date,
    tv.slot_id,
    tv.driver_anagraph_id AS driver_id,
    tv.booking_id,
    drv.an_email AS driver_email,
    drv.an_cellular AS driver1_cellular,
    drv.jguid AS driver_jguid
   FROM (((carservice.timetable_view tv
     RIGHT JOIN anagraph.an_addresses pickup ON ((tv.from_id = pickup.anagraph_id)))
     RIGHT JOIN anagraph.an_addresses delivery ON ((tv.to_id = delivery.anagraph_id)))
     RIGHT JOIN anagraph.anagraphs drv ON ((tv.driver_anagraph_id = drv.anagraph_id)));]]></view_script>
			<column name="pickup_an_id" type="integer" />
			<column name="pickup_first_name" type="varchar" />
			<column name="pickup_address" type="address" />
			<column name="pickup_postal_code" type="postal_code" />
			<column name="pickup_town" type="town_name" />
			<column name="pickup_full_address" type="varchar" />
			<column name="pickup_phone" type="phone" />
			<column name="pickup_email" type="varchar" />
			<column name="delivery_first_name" type="varchar" />
			<column name="delivery_address" type="address" />
			<column name="delivery_postal_code" type="postal_code" />
			<column name="delivery_town" type="town_name" />
			<column name="delivery_full_address" type="varchar" />
			<column name="delivery_phone" type="phone" />
			<column name="delivery_email" type="varchar" />
			<column name="jguid" type="uuid" />
			<column name="pickup_time" type="varchar" />
			<column name="pickup_date" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="driver_id" type="integer" />
			<column name="booking_id" type="bigint" />
			<column name="driver_email" type="varchar" />
			<column name="driver1_cellular" type="varchar" />
			<column name="driver_jguid" type="uuid" />
			<column name="pickup_longitude" type="float8" />
			<column name="pickup_latitude" type="float8" />
			<column name="delivery_longitude" type="float8" />
			<column name="delivery_latitude" type="float8" />
		</view>
		<view name="timetable_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT timetable.jguid,
    timetable.workingday,
    timetable.slot_id,
    timetable.booking_id,
    timetable.from_id,
    timetable.to_id,
    timetable.state_id,
    timetable_slots.slot_des,
        CASE
            WHEN (timetable.state_id > 0) THEN true
            ELSE false
        END AS booked,
    timetable.driver_anagraph_id,
    anagraphs.an_cellular,
    (((anagraphs.an_name)::text || ' '::text) || (anagraphs.an_last_name)::text) AS "?column?",
    anagraphs.an_email,
    timetable.from_latitude,
    timetable.from_longitude,
    timetable.from_full_address,
    timetable.to_latitude,
    timetable.to_longitude,
    timetable.to_full_address
   FROM ((carservice.timetable
     JOIN carservice.timetable_slots ON ((timetable.slot_id = timetable_slots.slot_id)))
     LEFT JOIN anagraph.anagraphs ON ((timetable.driver_anagraph_id = anagraphs.anagraph_id)));]]></view_script>
			<column name="jguid" type="uuid" />
			<column name="workingday" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="booking_id" type="bigint" />
			<column name="from_id" type="integer" />
			<column name="to_id" type="integer" />
			<column name="state_id" type="smallint" />
			<column name="slot_des" type="varchar" />
			<column name="booked" type="boolean" />
			<column name="driver_anagraph_id" type="integer" />
			<column name="an_cellular" type="varchar" />
			<column name="?column?" type="text" />
			<column name="an_email" type="varchar" />
			<column name="from_latitude" type="float8" />
			<column name="from_longitude" type="float8" />
			<column name="from_full_address" type="varchar" />
			<column name="to_latitude" type="float8" />
			<column name="to_longitude" type="float8" />
			<column name="to_full_address" type="varchar" />
		</view>
		<sequence name="booking_heads_sequence" options="START WITH 1" />
		<sequence name="message_seq" options="START WITH 1" />
		<sequence name="messages_seq" options="START WITH 1" />
		<trigger name="booking_heads_view_ioi_trg" id="Trigger_1016" isSystem="false" />
		<trigger name="booking_heads_view_iou_trg" id="Trigger_1cb7" isSystem="false" />
		<trigger name="timetable_bi_trg" table="timetable" id="Trigger_10f9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER timetable_bi_trg BEFORE INSERT ON carservice.timetable FOR EACH ROW EXECUTE PROCEDURE carservice.timetable_insert_trg()]]></string>
		</trigger>
		<trigger name="timetable_bu_trg" table="timetable" id="Trigger_13e2" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER timetable_bu_trg BEFORE UPDATE ON carservice.timetable FOR EACH ROW EXECUTE PROCEDURE carservice.timetable_update_trg()]]></string>
		</trigger>
		<trigger name="timetable_view_iou_trg" id="Trigger_c4b" isSystem="false" />
		<function name="book_confirmation" id="Function_25ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.book_confirmation(p_guid uuid)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$DECLARE
  v_result boolean; 
BEGIN
  	v_result := EXISTS 
  		(SELECT 1 FROM carservice.timetable WHERE jguid = p_guid AND
		 state_id = 1);
	
	IF v_result THEN
	  UPDATE carservice.timetable SET state_id = 2 WHERE jguid = p_guid;	
	END IF; 
	 
	RETURN v_result;    
END;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_guid" jt="1111" type="uuid" />
		</function>
		<function name="booking_heads_insert_trg" id="Function_12c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_heads_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if new.id is null or new.id = 0 then    
    new.id := nextval('carservice.booking_heads_sequence');   
   end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="booking_heads_view_insert_trg" id="Function_182c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_heads_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  -- un nuovo record ha id nullo o 0 quindi 'stacco' una sequence
   if new.id is null or new.id = 0 then    
       new.id := nextval('carservice.booking_heads_sequence');   
   end if; 
   
   -- lo stato inizialmente vale '0' stato di inserimento ma non ancora confermato
   if new.state_id is null  then    
       new.id := 0;   
   end if; 
   
   new.insert_date := now(); 
   
   PERFORM system.setlog('inserting booking head using id:' || new.id::character varying  );
   
  	if new.customer_id is null or new.customer_id = 0 then  
    BEGIN
      	new.customer_id := nextval('anagraph.an_anagraph_seq'); 
		PERFORM system.setlog('inserting anagraph using id:' || new.customer_id::TEXT );
		if NEW.cust_last_name IS NULL THEN RAISE 'Custoemer last name is NULL cust_last_name'; END IF; 
		if NEW.full_address IS NULL THEN RAISE 'Customer Address is NULL full_address'; END IF; 
		if NEW.cust_email IS NULL THEN RAISE 'Customer last name is NULL cust_email'; END IF; 
		
 	INSERT INTO anagraph.anagraphs 
	     (db_schema_id, 
		  jguid, 
		  anagraph_id, 
		  an_name, 
		  an_last_name, 
		  an_address, 
		  an_cellular, 
		  an_email,  
		  an_main_group_id, 
		  an_office_id)
	VALUES
	     (new.db_schema_id, -- db_schema_id
		  new.jguid, -- jguid
		  NEW.customer_id, -- anagraph_id
		  NEW.cust_first_name, -- an_name
		  NEW.cust_last_name, -- an_last_name
		  NEW.full_address,  -- an_address
		  NEW.cust_cellular, -- an_cellular
		  NEW.cust_email, -- an_email
		  28, -- an_main_group_id
		  new.office_id); 
	 EXCEPTION WHEN OTHERS THEN 
	   RAISE 'Errore inserimento anagrafica cliente: %', SQLERRM;
     END; 
   ELSIF EXISTS (SELECT 1 FROM anagraph.anagraphs WHERE anagraph_id = new.customer_id) THEN
     BEGIN
     PERFORM system.setlog('updating anagraph using id:' || new.customer_id::TEXT );
     UPDATE anagraph.anagraphs SET
     	an_name      	 = COALESCE(NEW.cust_first_name, an_name), 
        an_last_name 	 = COALESCE(NEW.cust_last_name, an_name), 
        an_address		 = COALESCE(NEW.full_address, an_address), 	
        an_cellular		 = COALESCE(NEW.cust_cellular, an_cellular), 
        an_email		 = COALESCE(NEW.cust_email, an_email), 
        an_office_id	 = COALESCE(NEW.office_id, an_office_id)
     WHERE anagraph_id = new.customer_id;  
  	 EXCEPTION WHEN OTHERS THEN 
	   RAISE 'Errore inserimento anagrafica cliente: %', SQLERRM;
     END; 
  end if; 
BEGIN
	INSERT INTO carservice.booking_heads(
			id, office_id, branch_id , 
            jguid, db_schema_id, user_insert, insert_date, 
            customer_id, state_id, 
        	vehicle_numberplate, vehicle_model, vehicle_color)
	VALUES (new.id, new.office_id /*ufficio o sede contabile*/, new.branch_id /*location di riferimento service*/,  
            new.jguid, new.db_schema_id, new.user_insert,  Now() /* data inseriment ora */,
			new.customer_id /*identificativo dell'utente del servizio */, NEW.state_id,
		    new.vehicle_numberplate, new.vehicle_model, new.vehicle_color /* dati del veicolo */);
	IF new.state_id = -1 then 
   		update timetable set booking_id = null where booking_id = new.id;
	END IF; 
EXCEPTION WHEN OTHERS THEN 
	   RAISE 'Errore inserimento carservice.booking_heads: %', SQLERRM;
END; 
return new; 
	
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="booking_heads_view_update_trg" id="Function_e32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_heads_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  vGUID uuid;                                      
begin
/* NOTE NOTE NOTE: if Customer IS REPLACED by a 'New' one (that is customer_id = 0) we should do a new customer creation */
--- magari in un secondo momento :) -- 
 if new.customer_id = 0 then 
 BEGIN
   vGUID := uuid_generate_v4 ();
 new.customer_id := nextval('anagraph.an_anagraph_seq');  
  
 INSERT INTO anagraph.anagraphs 
	(db_schema_id, jguid, anagraph_id, an_name, an_last_name, an_address, an_cellular, an_email,  an_main_group_id, an_office_id)
 VALUES
     (new.db_schema_id, vGUID, NEW.customer_id, NEW.cust_first_name, NEW.cust_last_name, NEW.full_address,  NEW.cust_cellular, NEW.cust_email, 28, new.office_id); 
 END; 
 ELSIF EXISTS (SELECT 1 FROM anagraph.anagraphs WHERE anagraph_id = new.customer_id) THEN
 BEGIN
     UPDATE anagraph.anagraphs SET
     	an_name      	 = COALESCE(NEW.cust_first_name, an_name), 
        an_last_name 	 = COALESCE(NEW.cust_last_name, an_name), 
        an_address		 = COALESCE(NEW.full_address, an_address), 	
        an_cellular		 = COALESCE(NEW.cust_cellular, an_cellular), 
        an_email		 = COALESCE(NEW.cust_email, an_email), 
        an_office_id	 = COALESCE(NEW.office_id, an_office_id)
     WHERE anagraph_id = new.customer_id;   
 END;  
 END IF; 
UPDATE carservice.booking_heads
	SET id=new.id, office_id=new.office_id,  branch_id=new.branch_id,   db_schema_id=new.db_schema_id, customer_id=new.customer_id, 
	vehicle_model=new.vehicle_model, vehicle_color=new.vehicle_color, vehicle_numberplate=new.vehicle_numberplate
	WHERE jguid = old.jguid;
	  
	
   return new; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="carservice_book" id="Function_23c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book(p_day date, p_slot_id smallint, p_booking_id bigint)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  v_Free boolean; 
BEGIN
   IF EXISTS (SELECT 1 FROM carservice.timetable_places t
   		WHERE  workingday = p_day AND slot_id = p_slot_id ) 
   THEN
		--SELECT * FROM carservice.timetable_places t
	   	--	WHERE  workingday = p_day AND slot_id = p_slot_id FOR UPDATE NOWAIT;  
		
		PERFORM system.setlog('found carservice.timetable_places'); 
	 
	   	SELECT t.free INTO v_Free FROM carservice.timetable_places t
	   		WHERE  workingday = p_day AND slot_id = p_slot_id; 
			
		PERFORM system.setlog('is free carservice.timetable_places: ' || v_Free::character varying); 
			
	   	IF v_Free THEN
	     select min(driver_anagraph_id) INTO Result FROM
		 	carservice.timetable 
			 WHERE workingday = p_day AND slot_id = p_slot_id 
			 	AND booking_id IS NULL;  
				
		  UPDATE carservice.timetable SET booking_id = p_booking_id
		    WHERE  workingday = p_day AND slot_id = p_slot_id 
			   AND driver_anagraph_id = Result; 
	   	END IF; 
   END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="carservice_book" id="Function_20fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book(p_day date, p_slot_id smallint, p_pickup boolean, p_booking_id bigint)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  r_head record; 
  v_Free boolean; 
BEGIN
   IF NOT EXISTS (SELECT 1 FROM carservice.booking_heads t where id = p_booking_id  )
		THEN RAISE EXCEPTION 'Booking id % not found', p_booking_id;
	END IF; 
		
   IF EXISTS (SELECT 1 FROM carservice.timetable_places t
   		WHERE  workingday = p_day AND slot_id = p_slot_id ) 
   THEN
		SELECT * into r_head from carservice.booking_heads t where id = p_booking_id;  
		
		
		PERFORM system.setlog('found carservice.timetable_places'); 
	 
	   	SELECT t.free INTO v_Free FROM carservice.timetable_places t
	   		WHERE  workingday = p_day AND slot_id = p_slot_id; 
			
		PERFORM system.setlog('is free carservice.timetable_places: ' || v_Free::character varying); 
			
	   	IF v_Free THEN
	     select min(driver_anagraph_id) INTO Result FROM
		 	carservice.timetable 
			 WHERE workingday = p_day AND slot_id = p_slot_id 
			 	AND booking_id IS NULL;  
			IF p_pickup THEN
		  		UPDATE carservice.timetable SET booking_id = p_booking_id,
				    from_id = r_head.customer_id, to_id = r_head.branch_id 
		    		WHERE  workingday = p_day AND slot_id = p_slot_id 
			   		AND driver_anagraph_id = Result; 
				UPDATE carservice.booking_heads set 
				   pickup_day = p_day , pickup_slot_id = p_slot_id 
				WHERE 
				  id = p_booking_id; 
			ELSE
		  		UPDATE carservice.timetable SET booking_id = p_booking_id,
				    to_id = r_head.customer_id, from_id = r_head.branch_id 
		    		WHERE  workingday = p_day AND slot_id = p_slot_id 
			   		AND driver_anagraph_id = Result; 
					
				UPDATE carservice.booking_heads set 
				   return_day = p_day , return_slot_id = p_slot_id 
				WHERE 
				  id = p_booking_id;
				  
			END IF; 
		   
	   	END IF; 
   END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="carservice_book_jguid" id="Function_120f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book_jguid(p_day date, p_slot_id smallint, p_pickup boolean, p_jguid uuid)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  p_booking_id bigint; 
BEGIN
	Result := -1;
   	IF EXISTS (SELECT 1 FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid ) 
   	THEN
	   
		SELECT t.id INTO p_booking_id 
		FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid;
	raise notice 'FOUND BOOKING ';	
		Result := carservice.carservice_book(
					p_day,
					p_slot_id,
			        p_pickup, 
					p_booking_id);
   	END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="change_book_driver" id="Function_2330" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.change_book_driver(p_day date, p_slot_id smallint, p_booking_id bigint, p_driver_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  v_Free boolean; 
BEGIN
   UPDATE carservice.timetable_places t SET booking_id = null where 
      workingday = p_day AND slot_id = p_slot_id and driver_anagraph_id = p_driver_id; 
	  
   IF EXISTS (SELECT 1 FROM carservice.timetable_places t
   		WHERE  workingday = p_day AND slot_id = p_slot_id and driver_anagraph_id != p_driver_id) 
   THEN
		--SELECT * FROM carservice.timetable_places t
	   	--	WHERE  workingday = p_day AND slot_id = p_slot_id FOR UPDATE NOWAIT;  
		
		PERFORM system.setlog('found carservice.timetable_places'); 
	 
	   	SELECT t.free INTO v_Free FROM carservice.timetable_places t
	   		WHERE  workingday = p_day AND slot_id = p_slot_id; 
			
		PERFORM system.setlog('is free carservice.timetable_places: ' || v_Free::character varying); 
			
	   	IF v_Free THEN
	     select min(driver_anagraph_id) INTO Result FROM
		 	carservice.timetable 
			 WHERE workingday = p_day AND slot_id = p_slot_id 
			 	AND booking_id IS NULL;  
				
		  UPDATE carservice.timetable SET booking_id = p_booking_id
		    WHERE  workingday = p_day AND slot_id = p_slot_id 
			   AND driver_anagraph_id = Result; 
	   	END IF; 
   END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
			<input_param name="p_driver_id" jt="4" type="int4" />
		</function>
		<function name="change_book_timetable_date" id="Function_17e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.change_book_timetable_date(p_jguid uuid, p_date date, p_slot smallint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$DECLARE
  R record; 
begin 

  return True; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_date" jt="91" type="date" />
			<input_param name="p_slot" jt="5" type="int2" />
		</function>
		<function name="change_booking_date" id="Function_105e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.change_booking_date(p_jguid uuid, p_date date, p_slot_id smallint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
  r RECORD;
  v_result BOOLEAN; 
BEGIN
	v_result := EXISTS (SELECT 1 FROM carservice.timetable t WHERE jguid = p_jguid) ;
	if v_result THEN
		SELECT INTO R t.* FROM carservice.timetable t WHERE jguid = p_jguid;
	
	
	END IF; 
		
	RETURN v_result;
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_date" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
		</function>
		<function name="drivers_view_insert_trg" id="Function_42a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.drivers_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; 
  v_vessel_id integer; 
  v_db_schema  integer; 
BEGIN
  v_count := 0; 
  
  if New.anagraph_id is null or New.anagraph_id = 0 then
    New.anagraph_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
  /* db Schema management using global variable */
  if New.db_schema_id is null or New.db_schema_id = 0 then
    New.db_schema_id := system.get_schema_id();
  end if; 
  
  if New.jguid is null then
     New.jguid :=  public.uuid_generate_v1mc();
  end if; 
  
  New.an_main_group_id := 29; 
 
 
  IF New.drive_license_number IS NULL THEN New.drive_license_number := 'n.a.'; END IF; 
  
  INSERT INTO anagraph.anagraphs_view (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2
  )
  values( 
    New.db_schema_id,
    case when New.anagraph_id = 0 then NULL else New.anagraph_id end,
    new.an_title,
    new.an_name,
    new.an_second_name,
    new.an_last_name,
    new.an_notes,
    new.an_address,
    new.an_town,
    new.an_postal_code,
    new.an_iso_country_code,
    new.an_state_province,
    new.an_phone,
    new.an_phone2,
    new.an_fax,
    new.an_cellular,
    new.an_code,
    new.an_vat_numeric,
    new.an_email,
    new.an_web,
    case when new.an_contact_id = 0 then NULL else new.an_contact_id end,
    new.an_bank_account,
    new.an_payment_des,
    new.an_discount,
    new.an_distance,
    new.an_distance_mesunit,
    new.an_sex,
    new.an_cod_comune,
    new.an_cod_provincia,
    new.an_credit_line,
    case when new.an_currency_id = 0 then NULL else new.an_currency_id end,
    case when new.an_cat_id = 0 then NULL else new.an_cat_id end,
    new.an_notes2,
    new.an_notes3,
    new.an_edi,
    new.an_privacy,
    case when new.an_office_id = 0 then NULL else new.an_office_id end,
    new.an_cod_prov_rif,
    new.an_data_fido,
    new.an_user_insert,
    new.an_user_update,
    case when new.an_area_id = 0 then NULL else new.an_area_id end,
    case when new.an_agent_id = 0 then NULL else new.an_agent_id end,
    new.an_area_code,
    case when new.an_zone_id = '' then NULL else new.an_zone_id end,
    case when new.an_ins_id = 0 then NULL else new.an_ins_id end,
    case when new.an_upd_id = 0 then NULL else new.an_upd_id end,
    new.an_documents,
    new.an_last_date,
    new.an_birthdate,
    case when new.an_office_type_id = 0 then NULL else new.an_office_type_id end,
    new.an_searchname,
    new.an_extra_ue_flag,
    new.an_external_code,
    case when new.an_vat_id = 0 then NULL else new.an_vat_id end,
    new.an_personal_fiscal_code,
    new.an_privacy_print,
    new.an_sms,
    new.an_encrypted_fiscal_code,
    new.an_vat_purcentage,
    new.an_status,
    new.an_ownsite,
    case when new.an_insurance_id = 0 then NULL else new.an_insurance_id end,
    case when new.an_anagraphs_anagraph_id = 0 then NULL else new.an_anagraphs_anagraph_id end,
    new.an_main_language_code,
    new.an_main_culture_code,
    new.an_fiscal_code,
    new.an_main_group_id,
    case when new.an_image_id = 0 then NULL else new.an_image_id end,
    new.latitude,
    new.longitude,
    new.test,
    new.search_index,
    new.an_birthplace,
    new.an_birthplace_code,
    new.anagraph64,
    case when new.main_category_id = 0 then NULL else new.main_category_id end,
    case when new.osm_id = 0 then NULL else new.osm_id end,
    new.an_description,
    new.an_address_number,
    new.anag_jguid,
    new.anag_deleted,
    new.insert_date,
    new.update_date,
    new.user_insert,
    New.jguid,
    new.custom_field_1,
    new.custom_field_2,
    new.custom_field_3,
    new.custom_float_1,
    new.custom_float_2,
    new.custom_int_1,
    new.custom_int_2,
    case when new.supplier_id = 0 then NULL else new.supplier_id end,
    case when New.vessel_id = 0 then NULL else New.vessel_id end,
    case when new.an_country_id = 0 then NULL else new.an_country_id end,
    new.an_iso_country_code2
	)
  ;
  
  INSERT INTO carservice.drivers (anagraph_id, drive_license_number, drive_license__expiry, db_schema_id)
  	VALUES (New.anagraph_id, New.drive_license_number, New.drive_license__expiry, New.db_schema_id);
	
  RETURN New; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="generate_timetable" id="Function_18ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.generate_timetable()
 RETURNS void
 LANGUAGE plpgsql
AS $function$  begin
     null;
  end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="generate_timetable" id="Function_11ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.generate_timetable(p_days integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
  declare
    v_day date; 
	i integer; 
  begin
    v_day := (select max(workingday) from  carservice.timetable); 
	raise notice 'First Day: %', v_day;
	
	for i in 1..p_days loop
	  INSERT INTO carservice.timetable(workingday, slot_id)
	  	SELECT v_day + i, slot_id
	    FROM carservice.timetable_slots;	
	end loop; 
  end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_days" jt="4" type="int4" />
		</function>
		<function name="generate_timetable_driver" id="Function_104" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.generate_timetable_driver(p_days integer, p_driver_id integer, p_hiring_date date)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
  declare
    v_day date; 
	r record; 
  begin
    IF EXISTS (SELECT 1 FROM carservice.timetable WHERE driver_anagraph_id = p_driver_id) THEN
    	v_day := (select max(workingday) from  carservice.timetable);
	ELSE
	  v_day := p_hiring_date; 
	END IF; 
	  
	RAISE NOTICE 'First Day: %', v_day;
	
	for r in 
	(
		with days as
		(
    	select dd, extract(DOW from dd) dw
    	from generate_series(now()::Date, now()::Date + 365, '1 day'::interval) dd
		)
		select * from days where  dw not in (6,0)
	)
	LOOP 
	  INSERT INTO carservice.timetable(workingday, slot_id, driver_anagraph_id)
	  	SELECT r.dd, slot_id, p_driver_id
	    FROM carservice.timetable_slots;	
	END LOOP; 
  end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_days" jt="4" type="int4" />
			<input_param name="p_driver_id" jt="4" type="int4" />
			<input_param name="p_hiring_date" jt="91" type="date" />
		</function>
		<function name="set_booking_address" id="Function_1ac9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.set_booking_address(p_jguid uuid, p_type "char", p_booking_id bigint, INOUT p_id bigint, INOUT p_booking_jguid uuid)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
BEGIN
  IF (p_id IS NULL OR p_id = 0) AND p_jguid IS NOT NULL
    AND EXISTS (SELECT 1 FROM anagraph.addresses a WHERE a.jguid = p_jguid)
  THEN
    SELECT id into p_id from anagraph.an_addresses where
	  jguid = p_jguid; 
  END IF; 
  
  IF (p_booking_id IS NULL OR p_booking_id = 0) AND p_booking_jguid IS NOT NULL
    AND EXISTS (SELECT 1 FROM carservice.booking_heads A WHERE A.jguid = p_booking_jguid)
  THEN
    SELECT id into p_booking_id from carservice.booking_heads where
	  jguid = p_booking_jguid; 
  END IF; 
 
  IF (p_id IS NOT NULL AND p_id > 0) THEN 
	  BEGIN
		INSERT INTO carservice.booking_addresses(
			db_schema_id, id, address_name, postal_code, state_province, town_name, town_code, address, address_number, phone, 
			full_address, insert_date, update_date, upd_id, ins_id, user_insert, user_update, local, deleted, 
			jguid, country_code, email, anagraph_id, ad_type, booking_id, booking_jguid, maps_json)
		SELECT  
			db_schema_id, id, address_name, postal_code, state_province, town_name, town_code, address, address_number, phone, 
			full_address, insert_date, update_date, upd_id, ins_id, user_insert, user_update, local, deleted, 
			jguid, country_code, email, anagraph_id, ad_type, booking_id, booking_jguid, maps_json
		FROM 
		  anagraph.an_addresses a where a.ID = p_id;  
	  EXCEPTION WHEN OTHERS THEN
		RAISE; 
	  END; 
   END IF; 
 
END; 
$function$
;]]></string>
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_type" jt="1" type="char" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_booking_jguid" jt="1111" type="uuid" />
		</function>
		<function name="timetable_insert_trg" id="Function_20a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.timetable_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.jguid is null 
     then new.jguid = uuid_generate_v4();
  end if; 
  
  if new.state_id is null 
     then new.state_id = 0;
  end if; 
  
  RETURN New; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="timetable_update_trg" id="Function_117d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.timetable_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.jguid is null 
     then new.jguid = old.jguid;
  end if; 
  
  if new.state_id is null 
     then new.state_id = old.state_id;
  end if; 
  
  RETURN New; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="timetable_view_update_trg" id="Function_26fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.timetable_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
declare
  id_driver bigint; 
begin
  -- nota booked = true or booked = false ... 
  
  if coalesce(new.booked, old.booked) and new.booking_id is not null then
  
  
    /* Se ci sono prenotazioni (booking_id) nella medesima direzione  */
    update carservice.timetable SET booking_id=null, from_id=null, to_id=null, state_id = 0
	  WHERE (workingday = old.workingday and slot_id <> old.slot_id) and booking_id = new.booking_id and from_id = new.from_id;  
  
    select min(driver_anagraph_id) into id_driver from carservice.timetable where
	  workingday = old.workingday and slot_id = old.slot_id and state_id = 0;
	  
  UPDATE carservice.timetable
	SET booking_id=new.booking_id, from_id=new.from_id, to_id=new.to_id, 
	state_id = CASE WHEN  new.booked then new.state_id else 0 end
	WHERE workingday = old.workingday and slot_id = old.slot_id and driver_anagraph_id = id_driver;
	
  else
  UPDATE carservice.timetable
	SET booking_id=null, from_id=null, to_id=null, state_id = 0
	WHERE workingday = old.workingday and slot_id = old.slot_id and booking_id = new.booking_id; 
  end if ; 
  
   return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="championship" />
	<schema name="custom_tm_logistic" />
	<schema name="dbms_alert" />
	<schema name="dbms_assert" />
	<schema name="dbms_output" />
	<schema name="dbms_pipe" />
	<schema name="dbms_random" />
	<schema name="dbms_utility" />
	<schema name="ads" catalogname="ergomercator" />
	<schema name="anagraph" catalogname="ergomercator" >
		<comment><![CDATA[Anagraph is one of the Main Schemas of the System. It can be considered th 'core' of near all the possible Applications and comes just one level after the 'system' kernel object.]]></comment>
		<udt name="address" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(256) ]]></udt_script>
		</udt>
		<udt name="address_number" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(20) ]]></udt_script>
		</udt>
		<udt name="full_address" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(512) ]]></udt_script>
		</udt>
		<udt name="phone" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(30) ]]></udt_script>
		</udt>
		<udt name="postal_code" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(30) ]]></udt_script>
		</udt>
		<udt name="state_province" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(30) ]]></udt_script>
		</udt>
		<udt name="town_code" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(20) ]]></udt_script>
		</udt>
		<udt name="town_name" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(128) ]]></udt_script>
		</udt>
		<table name="addresses" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="address_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="postal_code" length="34" decimal="0" jt="12" />
			<column name="state_province" type="state_province" length="34" decimal="0" jt="12" />
			<column name="town_name" type="town_name" length="132" decimal="0" jt="12" />
			<column name="town_code" type="town_code" length="24" decimal="0" jt="12" />
			<column name="address" type="address" length="260" decimal="0" jt="12" />
			<column name="address_number" type="address_number" length="24" decimal="0" jt="12" />
			<column name="phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="full_address" type="varchar" length="512" decimal="0" jt="12" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="maps_json" type="json" decimal="0" jt="2000" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="pos" type="smallint" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="addresses_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="addresses_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="an_addresses" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="address_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="postal_code" length="34" decimal="0" jt="12" />
			<column name="state_province" type="state_province" length="34" decimal="0" jt="12" />
			<column name="town_name" type="town_name" length="132" decimal="0" jt="12" />
			<column name="town_code" type="town_code" length="24" decimal="0" jt="12" />
			<column name="address" type="address" length="260" decimal="0" jt="12" mandatory="y" />
			<column name="address_number" type="address_number" length="24" decimal="0" jt="12" />
			<column name="phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="full_address" type="varchar" length="512" decimal="0" jt="12" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="maps_json" type="json" decimal="0" jt="2000" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="an_addresses_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="an_addresses_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="fki_an_addresses_anagraph_fk" unique="NORMAL" >
				<column name="anagraph_id" />
			</index>
			<constraint name="anagraph_id_check" >
				<string><![CDATA[CHECK ((anagraph_id > 0))]]></string>
			</constraint>
			<fk name="an_addresses_anagraph_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="an_locations" >
			<comment><![CDATA[Different Locations for an anagraph account]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Anagraph Location Id]]></comment>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign kez to Anagraph id]]></comment>
			</column>
			<column name="osm_place_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Foreign Key to GIS open street maps Location]]></comment>
			</column>
			<index name="pk_an_locations_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_an_locations_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="anag_categories" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="category_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="anag_categories_pkey" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="category_id" />
			</index>
			<index name="anag_categories_categories_ndx" unique="NORMAL" >
				<column name="category_id" />
			</index>
			<fk name="an_categories_anagraph_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
			<fk name="an_anagraph_categories_fk" to_schema="ergomercator.anagraph" to_table="categories" >
				<fk_column name="category_id" pk="category_id" />
			</fk>
		</table>
		<table name="anagraphs" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="an_title" type="varchar" length="32" decimal="0" jt="12" />
			<column name="an_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_second_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_last_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="an_notes" type="varchar" length="512" decimal="0" jt="12" />
			<column name="an_address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_iso_country_code" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="an_state_province" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_phone" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_phone2" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_fax" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_cellular" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_code" type="varchar" length="15" decimal="0" jt="12" />
			<column name="an_vat_numeric" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_email" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_web" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_contact_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_bank_account" type="varchar" length="255" decimal="0" jt="12" />
			<column name="an_payment_des" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_discount" type="numeric" length="5" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_distance" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_distance_mesunit" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_sex" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="an_cod_comune" type="varchar" length="3" decimal="0" jt="12" />
			<column name="an_cod_provincia" type="varchar" length="3" decimal="0" jt="12" />
			<column name="an_credit_line" type="numeric" length="14" decimal="2" jt="2" />
			<column name="an_currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_cat_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_notes2" type="varchar" length="40" decimal="0" jt="12" />
			<column name="an_notes3" type="text" decimal="0" jt="12" />
			<column name="an_edi" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_privacy" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_office_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key to Anagraph record of Office it belongs to]]></comment>
			</column>
			<column name="an_cod_prov_rif" type="varchar" length="3" decimal="0" jt="12" />
			<column name="an_data_fido" type="date" length="13" decimal="0" jt="91" />
			<column name="an_user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_area_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_agent_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_area_code" type="varchar" length="1" decimal="0" jt="12" />
			<column name="an_zone_id" type="varchar" length="1" decimal="0" jt="12" />
			<column name="an_ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_documents" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_last_date" type="date" length="13" decimal="0" jt="91" />
			<column name="an_birthdate" type="date" length="13" decimal="0" jt="91" />
			<column name="an_office_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_searchname" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_extra_ue_flag" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_external_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_vat_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_personal_fiscal_code" type="varchar" length="16" decimal="0" jt="12" />
			<column name="an_privacy_print" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_sms" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_encrypted_fiscal_code" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_vat_purcentage" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_status" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_ownsite" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_insurance_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_anagraphs_anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_main_language_code" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="an_main_culture_code" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="an_fiscal_code" type="varchar" length="16" decimal="0" jt="12" />
			<column name="an_main_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[The foreign key to the main group id can be assigned to only one group at a time even if anagraph subject can be in many groups at the same time]]></comment>
			</column>
			<column name="an_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="test" type="float8" length="17" decimal="17" jt="6" />
			<column name="search_index" type="varchar" length="2048" decimal="0" jt="12" >
				<comment><![CDATA[Campo di ricerca]]></comment>
			</column>
			<column name="an_birthplace" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_birthplace_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="anagraph64" type="varchar" length="64" decimal="0" jt="12" >
				<comment><![CDATA[Base 64 Anagraph identifier]]></comment>
			</column>
			<column name="main_category_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="osm_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_description" type="varchar" length="512" decimal="0" jt="12" />
			<column name="an_address_number" type="varchar" length="20" decimal="0" jt="12" >
				<defo><![CDATA[''::character varying]]></defo>
			</column>
			<column name="anag_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="anag_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Unique ID of user inserting]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="custom_field_1" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Custom Field for optional Data]]></comment>
			</column>
			<column name="custom_field_2" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_field_3" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_float_1" type="real" length="8" decimal="8" jt="7" />
			<column name="custom_float_2" type="real" length="8" decimal="8" jt="7" />
			<column name="custom_int_1" type="integer" length="10" decimal="0" jt="4" />
			<column name="custom_int_2" type="integer" length="10" decimal="0" jt="4" />
			<column name="supplier_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="vessel_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[An anagraph can be connected to a Vessel. An anagaph location record can be used (also) to oonnect as specific Vessel to its Shipowner]]></comment>
			</column>
			<column name="an_country_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_iso_country_code2" type="char" length="2" decimal="0" jt="1" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="an_full_address" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[The Route, road, square for the address minus the address number]]></comment>
			</column>
			<index name="anagraph_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
			</index>
			<index name="anagraphs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="anagraph_code_ndx" unique="NORMAL" >
				<column name="an_code" />
				<column name="db_schema_id" />
				<column name="an_main_group_id" />
			</index>
			<index name="anagraph_main_category_ndx" unique="NORMAL" >
				<column name="main_category_id" />
			</index>
			<index name="anagraph_search_index_uk_ndx" unique="NORMAL" >
				<column name="search_index" />
			</index>
			<index name="anagraphs_dbschema_ndx" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="fki_an_anagraphs_groups_fk" unique="NORMAL" >
				<column name="an_main_group_id" />
			</index>
			<fk name="fk_anagraphs_categories" to_schema="ergomercator.anagraph" to_table="categories" update_action="cascade" >
				<fk_column name="main_category_id" pk="category_id" />
			</fk>
			<fk name="fk_anagraphs_groups" to_schema="ergomercator.anagraph" to_table="groups" update_action="cascade" >
				<fk_column name="an_main_group_id" pk="an_group_id" />
			</fk>
		</table>
		<table name="branches" >
			<column name="an_branch_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="an_branch_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="an_branch_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_branch_town_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_branch_town_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_branch_address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="an_update_date" type="timestamp" decimal="6" jt="93" />
			<column name="an_upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="abrn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="abrn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="an_branch_phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="an_branch_state_province" type="state_province" length="34" decimal="0" jt="12" />
			<index name="an_branches_pk" unique="PRIMARY_KEY" >
				<column name="an_branch_id" />
				<column name="anagraph_id" />
			</index>
			<index name="abrn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="abrn_jguid" />
			</index>
			<index name="idx_an_branches" unique="NORMAL" >
				<column name="anagraph_id" />
			</index>
			<fk name="fk_an_branches" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="cars" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="numberplate" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="model" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="color" type="varchar" length="128" decimal="0" jt="12" />
			<column name="pos" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" >
				<defo><![CDATA['IT'::bpchar]]></defo>
			</column>
			<index name="cars_pkey" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="numberplate" />
			</index>
		</table>
		<table name="categories" >
			<column name="category_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="category_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="image_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA['-1'::integer]]></defo>
			</column>
			<column name="master_category_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="osm_category_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="categories_pk" unique="PRIMARY_KEY" >
				<column name="category_id" />
			</index>
			<index name="categories_master_ndx" unique="NORMAL" >
				<column name="master_category_id" />
			</index>
		</table>
		<table name="categories_translations" >
			<column name="category_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="culture_code" type="char" length="5" decimal="0" jt="1" mandatory="y" />
			<column name="category_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="categories_translations_pkey" unique="PRIMARY_KEY" >
				<column name="category_id" />
				<column name="culture_code" />
			</index>
			<fk name="category_t_categories_fk" to_schema="ergomercator.anagraph" to_table="categories" >
				<fk_column name="category_id" pk="category_id" />
			</fk>
		</table>
		<table name="groups" >
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[group id]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="group_des" type="varchar" length="20" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[description group]]></comment>
			</column>
			<column name="contact_group" type="smallint" length="5" decimal="0" jt="5" />
			<column name="sub_group" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[sub group]]></comment>
			</column>
			<column name="sub_group_des" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[sub group description]]></comment>
			</column>
			<column name="settings" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[settings of the group]]></comment>
			</column>
			<column name="position" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[position of the group]]></comment>
			</column>
			<column name="accounting" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<comment><![CDATA[accounting of the group]]></comment>
			</column>
			<column name="cod_account" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[cod of the account]]></comment>
			</column>
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[if the record is made local]]></comment>
			</column>
			<column name="group_cod" type="varchar" length="2" decimal="0" jt="12" >
				<comment><![CDATA[General ledger group cod]]></comment>
			</column>
			<column name="ledger_cod" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[the ledger code of acconting]]></comment>
			</column>
			<column name="subledger_cod" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[GL subledger code of account]]></comment>
			</column>
			<column name="grouping" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[grouping]]></comment>
			</column>
			<column name="description" type="varchar" length="30" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[long description of the row]]></comment>
			</column>
			<column name="angr_jguid" type="varchar" length="40" decimal="0" jt="12" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="angr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="icon_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="an_groups_pk" unique="PRIMARY_KEY" >
				<column name="an_group_id" />
			</index>
			<index name="angr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="angr_jguid" />
			</index>
		</table>
		<table name="identities" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_agent_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_agent_group_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_credit_limit" type="numeric" length="12" decimal="2" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_credit_days" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_credit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="an_credit_notes" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_credit_used" type="numeric" length="12" decimal="2" jt="2" />
			<column name="an_overdue_credit" type="numeric" length="12" decimal="2" jt="2" />
			<column name="adnt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="adnt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="an_anag_gr" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="an_group_id" />
			</index>
			<index name="adnt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="adnt_jguid" />
			</index>
			<index name="fk_identities_anagraphs_ndx" unique="NORMAL" >
				<column name="anagraph_id" />
			</index>
			<index name="idx_an_identities" unique="NORMAL" >
				<column name="an_group_id" />
			</index>
			<fk name="an_identities_anagraphs_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" delete_action="cascade" update_action="cascade" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
			<fk name="fk_an_identities_0" to_schema="ergomercator.anagraph" to_table="groups" >
				<fk_column name="an_group_id" pk="an_group_id" />
			</fk>
		</table>
		<table name="schema_groups" >
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="schema_groups_pkey" unique="PRIMARY_KEY" >
				<column name="an_group_id" />
				<column name="db_schema_id" />
			</index>
			<index name="fki_s" unique="NORMAL" >
				<column name="an_group_id" />
			</index>
			<index name="group_schemas_fki" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="groups_schemas_groups_fk" to_schema="ergomercator.anagraph" to_table="groups" >
				<fk_column name="an_group_id" pk="an_group_id" />
			</fk>
			<fk name="groups_schemas_fk" to_schema="ergomercator.system" to_table="db_schemas" update_action="cascade" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<view name="an_addresses_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT an_addresses.db_schema_id,
    an_addresses.id,
    an_addresses.address_name,
    an_addresses.postal_code,
    an_addresses.state_province,
    an_addresses.town_name,
    an_addresses.town_code,
    an_addresses.address,
    an_addresses.address_number,
    an_addresses.phone,
    an_addresses.full_address,
    an_addresses.insert_date,
    an_addresses.update_date,
    an_addresses.upd_id,
    an_addresses.ins_id,
    an_addresses.user_insert,
    an_addresses.user_update,
    an_addresses.local,
    an_addresses.deleted,
    an_addresses.jguid,
    an_addresses.country_code,
    an_addresses.email,
    an_addresses.anagraph_id,
    an_addresses.maps_json,
    an_addresses.longitude,
    an_addresses.latitude,
    an_addresses.pos,
    an_addresses.master_jguid
   FROM anagraph.an_addresses;]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="id" type="bigint" />
			<column name="address_name" type="varchar" />
			<column name="postal_code" type="postal_code" />
			<column name="state_province" type="state_province" />
			<column name="town_name" type="town_name" />
			<column name="town_code" type="town_code" />
			<column name="address" type="address" />
			<column name="address_number" type="address_number" />
			<column name="phone" type="phone" />
			<column name="full_address" type="varchar" />
			<column name="insert_date" type="timestamp" />
			<column name="update_date" type="timestamp" />
			<column name="upd_id" type="bigint" />
			<column name="ins_id" type="bigint" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="local" type="boolean" />
			<column name="deleted" type="boolean" />
			<column name="jguid" type="uuid" />
			<column name="country_code" type="char" />
			<column name="email" type="varchar" />
			<column name="anagraph_id" type="integer" />
			<column name="maps_json" type="json" />
			<column name="longitude" type="float8" />
			<column name="latitude" type="float8" />
			<column name="pos" type="smallint" />
			<column name="master_jguid" type="uuid" />
		</view>
		<view name="anagraphs_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.db_schema_id,
    a.anagraph_id,
    a.an_title,
    a.an_name,
    a.an_second_name,
    a.an_last_name,
    a.an_notes,
    a.an_address,
    a.an_town,
    a.an_postal_code,
    a.an_iso_country_code,
    a.an_state_province,
    a.an_phone,
    a.an_phone2,
    a.an_fax,
    a.an_cellular,
    a.an_code,
    a.an_vat_numeric,
    a.an_email,
    a.an_web,
    a.an_contact_id,
    a.an_bank_account,
    a.an_payment_des,
    a.an_discount,
    a.an_distance,
    a.an_distance_mesunit,
    a.an_sex,
    a.an_cod_comune,
    a.an_cod_provincia,
    a.an_credit_line,
    a.an_currency_id,
    a.an_cat_id,
    a.an_notes2,
    a.an_notes3,
    a.an_edi,
    a.an_privacy,
    a.an_office_id,
    a.an_cod_prov_rif,
    a.an_data_fido,
    a.an_user_insert,
    a.an_user_update,
    a.an_area_id,
    a.an_agent_id,
    a.an_area_code,
    a.an_zone_id,
    a.an_ins_id,
    a.an_upd_id,
    a.an_documents,
    a.an_last_date,
    a.an_birthdate,
    a.an_office_type_id,
    a.an_searchname,
    a.an_extra_ue_flag,
    a.an_external_code,
    a.an_vat_id,
    a.an_personal_fiscal_code,
    a.an_privacy_print,
    a.an_sms,
    a.an_encrypted_fiscal_code,
    a.an_vat_purcentage,
    a.an_status,
    a.an_ownsite,
    a.an_insurance_id,
    a.an_anagraphs_anagraph_id,
    a.an_main_language_code,
    a.an_main_culture_code,
    a.an_fiscal_code,
    a.an_main_group_id,
    a.an_image_id,
    a.latitude,
    a.longitude,
    a.test,
    a.search_index,
    a.an_birthplace,
    a.an_birthplace_code,
    a.anagraph64,
    a.main_category_id,
    a.osm_id,
    a.an_description,
    a.an_address_number,
    a.anag_jguid,
    a.anag_deleted,
    a.insert_date,
    a.update_date,
    a.user_insert,
    a.jguid,
    a.custom_field_1,
    a.custom_field_2,
    a.custom_field_3,
    a.custom_float_1,
    a.custom_float_2,
    a.custom_int_1,
    a.custom_int_2,
    a.supplier_id,
    a.vessel_id,
    a.an_country_id,
    a.an_iso_country_code2,
    a.deleted,
    i.an_group_id,
    i.an_credit_limit,
    i.an_credit,
    s.an_branch_name AS shipment_name,
    s.an_branch_postal_code AS shipment_postal_code,
    s.an_branch_town_name AS shipment_town,
    s.an_branch_address AS shipment_address,
    s.an_branch_phone AS shipment_phone,
    s.an_branch_state_province AS shipment_state_province,
    b.an_branch_name AS billing_name,
    b.an_branch_postal_code AS billing_postal_code,
    b.an_branch_town_name AS billing_town,
    b.an_branch_address AS billing_address,
    b.an_branch_phone AS billing_phone,
    b.an_branch_state_province AS billing_state_province,
    a.an_full_address
   FROM (((anagraph.anagraphs a
     JOIN anagraph.identities i ON ((i.anagraph_id = a.anagraph_id)))
     LEFT JOIN anagraph.branches s ON (((s.anagraph_id = a.anagraph_id) AND (s.an_branch_id = 2))))
     LEFT JOIN anagraph.branches b ON (((s.anagraph_id = a.anagraph_id) AND (s.an_branch_id = 1))));]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="anagraph_id" type="integer" />
			<column name="an_title" type="varchar" />
			<column name="an_name" type="varchar" />
			<column name="an_second_name" type="varchar" />
			<column name="an_last_name" type="varchar" />
			<column name="an_notes" type="varchar" />
			<column name="an_address" type="varchar" />
			<column name="an_town" type="varchar" />
			<column name="an_postal_code" type="varchar" />
			<column name="an_iso_country_code" type="varchar" />
			<column name="an_state_province" type="varchar" />
			<column name="an_phone" type="varchar" />
			<column name="an_phone2" type="varchar" />
			<column name="an_fax" type="varchar" />
			<column name="an_cellular" type="varchar" />
			<column name="an_code" type="varchar" />
			<column name="an_vat_numeric" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_web" type="varchar" />
			<column name="an_contact_id" type="integer" />
			<column name="an_bank_account" type="varchar" />
			<column name="an_payment_des" type="varchar" />
			<column name="an_discount" type="numeric" />
			<column name="an_distance" type="integer" />
			<column name="an_distance_mesunit" type="smallint" />
			<column name="an_sex" type="varchar" />
			<column name="an_cod_comune" type="varchar" />
			<column name="an_cod_provincia" type="varchar" />
			<column name="an_credit_line" type="numeric" />
			<column name="an_currency_id" type="smallint" />
			<column name="an_cat_id" type="smallint" />
			<column name="an_notes2" type="varchar" />
			<column name="an_notes3" type="text" />
			<column name="an_edi" type="boolean" />
			<column name="an_privacy" type="boolean" />
			<column name="an_office_id" type="integer" />
			<column name="an_cod_prov_rif" type="varchar" />
			<column name="an_data_fido" type="date" />
			<column name="an_user_insert" type="varchar" />
			<column name="an_user_update" type="varchar" />
			<column name="an_area_id" type="smallint" />
			<column name="an_agent_id" type="smallint" />
			<column name="an_area_code" type="varchar" />
			<column name="an_zone_id" type="varchar" />
			<column name="an_ins_id" type="bigint" />
			<column name="an_upd_id" type="bigint" />
			<column name="an_documents" type="smallint" />
			<column name="an_last_date" type="date" />
			<column name="an_birthdate" type="date" />
			<column name="an_office_type_id" type="smallint" />
			<column name="an_searchname" type="varchar" />
			<column name="an_extra_ue_flag" type="boolean" />
			<column name="an_external_code" type="varchar" />
			<column name="an_vat_id" type="smallint" />
			<column name="an_personal_fiscal_code" type="varchar" />
			<column name="an_privacy_print" type="smallint" />
			<column name="an_sms" type="boolean" />
			<column name="an_encrypted_fiscal_code" type="varchar" />
			<column name="an_vat_purcentage" type="smallint" />
			<column name="an_status" type="smallint" />
			<column name="an_ownsite" type="boolean" />
			<column name="an_insurance_id" type="bigint" />
			<column name="an_anagraphs_anagraph_id" type="integer" />
			<column name="an_main_language_code" type="varchar" />
			<column name="an_main_culture_code" type="varchar" />
			<column name="an_fiscal_code" type="varchar" />
			<column name="an_main_group_id" type="integer" />
			<column name="an_image_id" type="bigint" />
			<column name="latitude" type="float8" />
			<column name="longitude" type="float8" />
			<column name="test" type="float8" />
			<column name="search_index" type="varchar" />
			<column name="an_birthplace" type="varchar" />
			<column name="an_birthplace_code" type="varchar" />
			<column name="anagraph64" type="varchar" />
			<column name="main_category_id" type="smallint" />
			<column name="osm_id" type="bigint" />
			<column name="an_description" type="varchar" />
			<column name="an_address_number" type="varchar" />
			<column name="anag_jguid" type="varchar" />
			<column name="anag_deleted" type="boolean" />
			<column name="insert_date" type="timestamp" />
			<column name="update_date" type="timestamp" />
			<column name="user_insert" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="custom_field_1" type="varchar" />
			<column name="custom_field_2" type="varchar" />
			<column name="custom_field_3" type="varchar" />
			<column name="custom_float_1" type="real" />
			<column name="custom_float_2" type="real" />
			<column name="custom_int_1" type="integer" />
			<column name="custom_int_2" type="integer" />
			<column name="supplier_id" type="integer" />
			<column name="vessel_id" type="smallint" />
			<column name="an_country_id" type="integer" />
			<column name="an_iso_country_code2" type="char" />
			<column name="deleted" type="boolean" />
			<column name="an_group_id" type="smallint" />
			<column name="an_credit_limit" type="numeric" />
			<column name="an_credit" type="boolean" />
			<column name="shipment_name" type="varchar" />
			<column name="shipment_postal_code" type="varchar" />
			<column name="shipment_town" type="varchar" />
			<column name="shipment_address" type="varchar" />
			<column name="shipment_phone" type="phone" />
			<column name="shipment_state_province" type="state_province" />
			<column name="billing_name" type="varchar" />
			<column name="billing_postal_code" type="varchar" />
			<column name="billing_town" type="varchar" />
			<column name="billing_address" type="varchar" />
			<column name="billing_phone" type="phone" />
			<column name="billing_state_province" type="state_province" />
			<column name="an_full_address" type="varchar" />
		</view>
		<view name="groups_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT g.db_schema_id,
    g.an_group_id,
    g.group_des,
    g.contact_group,
    g.sub_group,
    g.sub_group_des,
    g.settings,
    g."position",
    g.accounting,
    g.cod_account,
    g.local,
    g.group_cod,
    g.ledger_cod,
    g.subledger_cod,
    g."grouping",
    g.description,
    g.angr_jguid,
    g.angr_deleted,
    g.icon_id,
    g.jguid
   FROM anagraph.groups g
  WHERE (g.an_group_id IN ( SELECT s.an_group_id
           FROM anagraph.schema_groups s
          WHERE (s.db_schema_id = (current_setting('system.db_schema_id'::text))::integer)));]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="an_group_id" type="smallint" />
			<column name="group_des" type="varchar" />
			<column name="contact_group" type="smallint" />
			<column name="sub_group" type="smallint" />
			<column name="sub_group_des" type="varchar" />
			<column name="settings" type="varchar" />
			<column name="position" type="smallint" />
			<column name="accounting" type="boolean" />
			<column name="cod_account" type="varchar" />
			<column name="local" type="boolean" />
			<column name="group_cod" type="varchar" />
			<column name="ledger_cod" type="varchar" />
			<column name="subledger_cod" type="varchar" />
			<column name="grouping" type="varchar" />
			<column name="description" type="varchar" />
			<column name="angr_jguid" type="varchar" />
			<column name="angr_deleted" type="boolean" />
			<column name="icon_id" type="smallint" />
			<column name="jguid" type="uuid" />
		</view>
		<view name="osm_anagraphs" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT ac.category_id,
    c.id AS osm_cat_id,
    p.id AS osm_id,
    p.name,
    p.visible,
    p.creation,
    p.uid,
    p.lat,
    p.lon,
    p.distance,
    p.mapgroup,
    p.address,
    p.description,
    p.brand,
    p.mapoperator,
    p.phone,
    p.website,
    p.email,
    p.fax,
    p.addressfull,
    p.addr_city,
    p.addr_number,
    p.addr_street,
    p.addr_postcode,
    p.tags,
    p.version,
    p.cuisine
   FROM gis.osm_places p,
    gis.osm_categories c,
    anagraph.categories ac
  WHERE (((c.code)::text = (p.address)::text) AND (ac.osm_category_id = c.id) AND (p.visible = true) AND (btrim((p.name)::text) <> ''::text) AND ((p.address)::text <> ALL (ARRAY[('unknown'::character varying)::text, ('highway'::character varying)::text])));]]></view_script>
			<column name="category_id" type="smallint" />
			<column name="osm_cat_id" type="smallint" />
			<column name="osm_id" type="bigint" />
			<column name="name" type="varchar" />
			<column name="visible" type="boolean" />
			<column name="creation" type="timestamp" />
			<column name="uid" type="bigint" />
			<column name="lat" type="float8" />
			<column name="lon" type="float8" />
			<column name="distance" type="float8" />
			<column name="mapgroup" type="varchar" />
			<column name="address" type="varchar" />
			<column name="description" type="varchar" />
			<column name="brand" type="varchar" />
			<column name="mapoperator" type="varchar" />
			<column name="phone" type="varchar" />
			<column name="website" type="varchar" />
			<column name="email" type="varchar" />
			<column name="fax" type="varchar" />
			<column name="addressfull" type="varchar" />
			<column name="addr_city" type="varchar" />
			<column name="addr_number" type="varchar" />
			<column name="addr_street" type="varchar" />
			<column name="addr_postcode" type="varchar" />
			<column name="tags" type="text" />
			<column name="version" type="smallint" />
			<column name="cuisine" type="varchar" />
		</view>
		<sequence name="an_addresses_seq" options="START WITH 1" />
		<sequence name="an_anagraph_seq" options="START WITH 1" />
		<sequence name="categories_seq" options="START WITH 1" />
		<sequence name="group_seq" options="START WITH 2" />
		<trigger name="abrn_bi_trg" table="branches" id="Trigger_2567" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER abrn_bi_trg BEFORE INSERT OR UPDATE ON anagraph.branches FOR EACH ROW EXECUTE PROCEDURE anagraph.abrn_trg()]]></string>
		</trigger>
		<trigger name="adnt_bi_trg" table="identities" id="Trigger_23df" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER adnt_bi_trg BEFORE INSERT OR UPDATE ON anagraph.identities FOR EACH ROW EXECUTE PROCEDURE anagraph.adnt_trg()]]></string>
		</trigger>
		<trigger name="an_addresses_view_bi_trg" id="Trigger_1ea4" isSystem="false" />
		<trigger name="an_addresses_view_bu_trg" id="Trigger_10f5" isSystem="false" />
		<trigger name="an_anagraph_bi_trg" table="anagraphs" id="Trigger_1d67" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER an_anagraph_bi_trg BEFORE INSERT OR UPDATE ON anagraph.anagraphs FOR EACH ROW EXECUTE PROCEDURE anagraph.anagraph_new_id_trg()]]></string>
		</trigger>
		<trigger name="anag_bi_trg" table="anagraphs" id="Trigger_24f6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anag_bi_trg BEFORE INSERT OR UPDATE ON anagraph.anagraphs FOR EACH ROW EXECUTE PROCEDURE anagraph.anag_trg()]]></string>
		</trigger>
		<trigger name="anagraph_addresses_biu_trg" table="an_addresses" id="Trigger_24a2" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anagraph_addresses_biu_trg BEFORE INSERT OR UPDATE ON anagraph.an_addresses FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="anagraph_view_ioi_trg" id="Trigger_1ef4" isSystem="false" />
		<trigger name="anagraphs_identities_aiu_trg" table="anagraphs" id="Trigger_15aa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anagraphs_identities_aiu_trg AFTER INSERT OR UPDATE ON anagraph.anagraphs FOR EACH ROW EXECUTE PROCEDURE anagraph.anagraph_identities_trg()]]></string>
		</trigger>
		<trigger name="anagraphs_view_iou_trg" id="Trigger_23b0" isSystem="false" />
		<trigger name="categories_id_bi_trg" table="categories" id="Trigger_cd" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER categories_id_bi_trg BEFORE INSERT OR UPDATE ON anagraph.categories FOR EACH ROW EXECUTE PROCEDURE anagraph.categories_new_id_trg()]]></string>
		</trigger>
		<trigger name="group_new_id" table="groups" id="Trigger_23f6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER group_new_id BEFORE INSERT OR UPDATE ON anagraph.groups FOR EACH ROW EXECUTE PROCEDURE anagraph.group_new_id_trg()]]></string>
		</trigger>
		<trigger name="identities_bi_trg" table="identities" id="Trigger_16d8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER identities_bi_trg BEFORE INSERT OR UPDATE ON anagraph.identities FOR EACH ROW EXECUTE PROCEDURE anagraph.identities_defaults_trg()]]></string>
		</trigger>
		<function name="abrn_trg" id="Function_73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.abrn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.abrn_jguid is null then
     New.abrn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.abrn_deleted is null then
     New.abrn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="adnt_trg" id="Function_194f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.adnt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.adnt_jguid is null then
     New.adnt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.adnt_deleted is null then
     New.adnt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="an_addresses_view_insert_trg" id="Function_21c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.an_addresses_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
INSERT INTO anagraph.an_addresses(
	db_schema_id, id, address_name, postal_code, 
	state_province, town_name, town_code, address, 
	address_number, phone, full_address, insert_date, 
	update_date, upd_id, ins_id, user_insert, user_update, 
	local, deleted, jguid, country_code, email, anagraph_id)
VALUES 
	(
	  new.db_schema_id, new.id, new.address_name, new.postal_code, 
	  new.state_province, new.town_name, new.town_code, new.address, 
	  new.address_number, new.phone, new.full_address, new.insert_date, 
	  new.update_date, new.upd_id, new.ins_id, new.user_insert, new.user_update, 
	  new.local, new.deleted, new.jguid, new.country_code, new.email, 
	  new.anagraph_id
    );
RETURN new; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="an_addresses_view_update_trg" id="Function_938" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.an_addresses_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
UPDATE anagraph.an_addresses
	SET db_schema_id= new.db_schema_id, id= new.id, address_name= new.address_name, 
	postal_code= new.postal_code, 
	state_province= new.state_province, town_name= new.town_name, 
	town_code= new.town_code, address= new.address, address_number= new.address_number, 
	phone= new.phone, 
	full_address= new.full_address, insert_date= new.insert_date, 
	update_date= new.update_date, 
	upd_id= new.upd_id, ins_id= new.ins_id, user_insert= new.user_insert, 
	user_update= new.user_update, 
	local= new.local, deleted= new.deleted, jguid= new.jguid, 
	country_code= new.country_code, 
	email= new.email, anagraph_id= new.anagraph_id; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anag_categories_trans_update" id="Function_1868" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anag_categories_trans_update()
 RETURNS void
 LANGUAGE sql
AS $function$
INSERT INTO anagraph.categories_translations(
	category_id, culture_code, category_name)
	SELECT category_id, 'it', category_name
	FROM anagraph.categories c
	where not exists (select 1 from  anagraph.categories_translations t where t.category_id = c.category_id and t.culture_code = 'it' );
	
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anag_trg" id="Function_121" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anag_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.anag_jguid is null then
     New.anag_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.anag_deleted is null then
     New.anag_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_add_group" id="Function_1378" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_add_group(p_anagaph_id integer, p_group_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result Boolean; 
BEGIN
   
	Result := NOT EXISTS (SELECT 1 FROM anagraph.identities WHERE
				   an_group_id = p_group_id AND anagraph_id = p_anagaph_id);
	IF Result THEN
	   INSERT INTO anagraph.identities 
	     (db_schema_id, anagraph_id, an_group_id, jguid )
	   VALUES
	     (system.get_schema_id(), 
		  p_anagaph_id,
		  p_group_id, 
		  uuid_generate_v4() 
		 );
	END IF; 
	RETURN Result; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_anagaph_id" jt="4" type="int4" />
			<input_param name="p_group_id" jt="4" type="int4" />
		</function>
		<function name="anagraph_identities_trg" id="Function_263e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_identities_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
declare
   vtest integer; 		
begin
    if (TG_OP = 'INSERT')  then
	INSERT INTO anagraph.identities(
		db_schema_id, anagraph_id, an_group_id)
	VALUES (New.db_schema_id, New.anagraph_id, New.an_main_group_id);
    elsif (New.an_main_group_id <> Old.an_main_group_id)  then
       select count(1) into vtest 
	from anagraph.identities  
        where 
        anagraph_id = New.anagraph_id and an_group_id = New.an_main_group_id;
        if vtest = 0 then
		INSERT INTO anagraph.identities(
			db_schema_id, anagraph_id, an_group_id)
		VALUES (New.db_schema_id, New.anagraph_id, New.an_main_group_id);
	end if; 
    end if; 
    Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_insert_osm" id="Function_f66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_insert_osm()
 RETURNS void
 LANGUAGE sql
AS $function$
--INSERT INTO anagraph.anagraphs(
--	db_schema_id,  an_last_name, an_notes, an_address, an_town, an_postal_code, an_iso_country_code, an_state_province, 
--   an_phone, an_phone2, an_fax, an_cellular, an_code, an_vat_numeric, an_email, an_web, 
--   an_contact_id, an_bank_account, an_payment_des, an_discount, an_distance, an_distance_mesunit, 
--   an_sex, an_cod_comune, an_cod_provincia, an_credit_line, an_currency_id, an_cat_id, an_notes2, an_notes3, an_edi, 
--   an_privacy, an_office_id, an_cod_prov_rif, an_data_fido, an_user_insert, an_user_update, an_area_id, an_agent_id, 
--   an_area_code, an_zone_id, an_ins_id, an_upd_id, an_documents, an_last_date, an_birthdate, an_office_type_id, 
--   an_searchname, an_extra_ue_flag, an_external_code, an_vat_id, an_personal_fiscal_code, an_privacy_print, 
--   an_sms, an_encrypted_fiscal_code, an_vat_purcentage, an_status, an_ownsite, an_insurance_id, an_anagraphs_anagraph_id, 
--   an_main_language_code, an_main_culture_code, an_fiscal_code, an_main_group_id, an_image_id, latitude, longitude, test, search_index, 
--   an_birthplace, an_birthplace_code, anagraph64, main_category_id
INSERT INTO 
anagraph.anagraphs(
		db_schema_id, main_category_id, an_last_name, latitude, longitude, an_phone, an_email , an_address , 
	     an_web , an_town  ,  an_postal_code,    osm_id )
select 
		0           , category_id     , "name"      ,lat      ,lon        , phone  , email     , coalesce (addr_street,  addressfull), 
		website     , addr_city , addr_postcode,  o.osm_id
from anagraph.osm_anagraphs o 
where 
  not exists (select 1 from anagraph.anagraphs a where a.osm_id = o.osm_id ); 
  
INSERT INTO anagraph.identities(
	db_schema_id, anagraph_id, an_group_id)
  select 
     db_schema_id, anagraph_id, 9 
	 from anagraph.anagraphs a where not exists
	   (select 1 from anagraph.identities i where i.anagraph_id = a.anagraph_id and i.an_group_id = 9 )
	  and a.osm_id is not null; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anagraph_new_id_trg" id="Function_259e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_new_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.anagraph_id is null then
          New.anagraph_id:=nextval('anagraph.an_anagraph_seq');
      end if; 
      
      New.anagraph64 := ENCODE(CONVERT_TO(New.anagraph_id::VARCHAR, 'UTF-8'), 'base64'); 
	New.search_index = 
		system.stripstringsearch(New.an_last_name, New.an_name) || '-' ||
		system.stripstringsearch(New.an_address, New.an_town) || '-' ||
		system.stripstringsearch(New.an_name, New.an_last_name) || '-' ||
		system.stripstringsearch(New.an_phone, New.an_fax) || '-' ||
		system.stripstringsearch(New.an_vat_numeric, New.an_fiscal_code);
     -- if New.an_contact_id is null then
     --    New.an_contact_id:=1;
     -- end if; 
      if New.an_currency_id is null then
          New.an_currency_id:=1;
      end if; 
       if New.an_discount is null then
          New.an_discount:=0;
      end if; 
        if New.an_sex is null then
          New.an_sex:='S';
      end if; 
         if New.an_iso_country_code is null then
          New.an_iso_country_code:='ITA';
      end if; 
        if New.an_main_language_code is null then
          New.an_main_language_code:='IT';
      end if; 
         if New.an_main_culture_code is null then
          New.an_main_culture_code:='it-IT';
      end if; 
         if (New.an_main_group_id is null) or (New.an_main_group_id = 0) then
          New.an_main_group_id:=2;
      end if; 
      
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_update_osm" id="Function_10b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_update_osm()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare 
   x record; 
begin
for x in 
	select 
		0           , category_id     , "name"      ,lat      ,lon        , phone  , email     , 
		coalesce (addr_street,  addressfull) as addressfull, 
		website     , addr_city , addr_postcode,  o.osm_id
	from anagraph.osm_anagraphs o 
	where 
 	 exists (select 1 from anagraph.anagraphs a where a.osm_id = o.osm_id )
  	loop
		update 
		anagraph.anagraphs set 
        main_category_id = x.category_id, 
		an_last_name = x.name, 
		latitude = x.lat, 
		longitude = x.lon,
		an_phone = x.phone, 
		an_email = x.email, 
		an_address = x.addressfull , 
	    an_web = x.website, 
		an_town  = x.addr_city,  
		an_postal_code = x.addr_postcode   
		where 
  		osm_id = x.osm_id;
	end loop; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anagraph_update_web" id="Function_2276" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_update_web()
 RETURNS void
 LANGUAGE sql
AS $function$

update
anagraph.anagraphs 
set an_web = 'http://' || an_web
where
an_web is not null and
lower(an_web) not like 'http://%'
and
lower(an_web) not like 'https://%'
and not upper(an_web) like 'NO%';

$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anagraph_view_insert_trg" id="Function_d0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; v_id integer; v_jguid uuid; v_vessel_id integer; 
BEGIN
  v_count := 0; 
  v_id := new.anagraph_id;
  
  if v_id is null or v_id = 0 then
    v_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
  v_jguid := new.jguid; 
  
  if v_jguid is null then
     v_jguid := '{' || public.uuid_generate_v1mc() || '}';
  end if; 
  
  if new.vessel_id = 0 then v_vessel_id := null; else v_vessel_id := new.vessel_id; end if; 
  
  
  INSERT INTO anagraph.anagraphs (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2,
	an_full_address
  )
  values( 
    new.db_schema_id,
    case when v_id = 0 then NULL else v_id end,
    new.an_title,
    new.an_name,
    new.an_second_name,
    new.an_last_name,
    new.an_notes,
    new.an_address,
    new.an_town,
    new.an_postal_code,
    new.an_iso_country_code,
    new.an_state_province,
    new.an_phone,
    new.an_phone2,
    new.an_fax,
    new.an_cellular,
    new.an_code,
    new.an_vat_numeric,
    new.an_email,
    new.an_web,
    case when new.an_contact_id = 0 then NULL else new.an_contact_id end,
    new.an_bank_account,
    new.an_payment_des,
    new.an_discount,
    new.an_distance,
    new.an_distance_mesunit,
    new.an_sex,
    new.an_cod_comune,
    new.an_cod_provincia,
    new.an_credit_line,
    case when new.an_currency_id = 0 then NULL else new.an_currency_id end,
    case when new.an_cat_id = 0 then NULL else new.an_cat_id end,
    new.an_notes2,
    new.an_notes3,
    new.an_edi,
    new.an_privacy,
    case when new.an_office_id = 0 then NULL else new.an_office_id end,
    new.an_cod_prov_rif,
    new.an_data_fido,
    new.an_user_insert,
    new.an_user_update,
    case when new.an_area_id = 0 then NULL else new.an_area_id end,
    case when new.an_agent_id = 0 then NULL else new.an_agent_id end,
    new.an_area_code,
    case when new.an_zone_id = '' then NULL else new.an_zone_id end,
    case when new.an_ins_id = 0 then NULL else new.an_ins_id end,
    case when new.an_upd_id = 0 then NULL else new.an_upd_id end,
    new.an_documents,
    new.an_last_date,
    new.an_birthdate,
    case when new.an_office_type_id = 0 then NULL else new.an_office_type_id end,
    new.an_searchname,
    new.an_extra_ue_flag,
    new.an_external_code,
    case when new.an_vat_id = 0 then NULL else new.an_vat_id end,
    new.an_personal_fiscal_code,
    new.an_privacy_print,
    new.an_sms,
    new.an_encrypted_fiscal_code,
    new.an_vat_purcentage,
    new.an_status,
    new.an_ownsite,
    case when new.an_insurance_id = 0 then NULL else new.an_insurance_id end,
    case when new.an_anagraphs_anagraph_id = 0 then NULL else new.an_anagraphs_anagraph_id end,
    new.an_main_language_code,
    new.an_main_culture_code,
    new.an_fiscal_code,
    new.an_main_group_id,
    case when new.an_image_id = 0 then NULL else new.an_image_id end,
    new.latitude,
    new.longitude,
    new.test,
    new.search_index,
    new.an_birthplace,
    new.an_birthplace_code,
    new.anagraph64,
    case when new.main_category_id = 0 then NULL else new.main_category_id end,
    case when new.osm_id = 0 then NULL else new.osm_id end,
    new.an_description,
    new.an_address_number,
    new.anag_jguid,
    new.anag_deleted,
    new.insert_date,
    new.update_date,
    new.user_insert,
    v_jguid,
    new.custom_field_1,
    new.custom_field_2,
    new.custom_field_3,
    new.custom_float_1,
    new.custom_float_2,
    new.custom_int_1,
    new.custom_int_2,
    case when new.supplier_id = 0 then NULL else new.supplier_id end,
    case when v_vessel_id = 0 then NULL else v_vessel_id end,
    case when new.an_country_id = 0 then NULL else new.an_country_id end,
    new.an_iso_country_code2,
	new.an_full_address
	)
  ;
	
	return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_view_update_trg" id="Function_4fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
declare
  v_id integer; 
begin
  v_id := anagraph.sp_upd_anagraphs(
	new.db_schema_id ,
	new.anagraph_id ,
	new.an_title ,
	new.an_name ,
	new.an_second_name ,
	new.an_last_name ,
	new.an_notes ,
	new.an_address ,
	new.an_town ,
	new.an_postal_code ,
	new.an_iso_country_code ,
	new.an_state_province ,
	new.an_phone ,
	new.an_phone2 ,
	new.an_fax ,
	new.an_cellular ,
	new.an_code ,
	new.an_vat_numeric ,
	new.an_email ,
	new.an_web ,
	new.an_contact_id ,
	new.an_bank_account ,
	new.an_payment_des ,
	new.an_discount ,
	new.an_distance ,
	new.an_distance_mesunit ,
	new.an_sex ,
	new.an_cod_comune ,
	new.an_cod_provincia ,
	new.an_credit_line ,
	new.an_currency_id ,
	new.an_cat_id ,
	new.an_notes2 ,
	new.an_notes3 ,
	new.an_edi ,
	new.an_privacy ,
	new.an_office_id ,
	new.an_cod_prov_rif ,
	new.an_data_fido ,
	new.an_user_insert ,
	new.an_user_update ,
	new.an_area_id ,
	new.an_agent_id ,
	new.an_area_code ,
	new.an_zone_id ,
	new.an_ins_id ,
	new.an_upd_id ,
	new.an_documents ,
	new.an_last_date ,
	new.an_birthdate ,
	new.an_office_type_id ,
	new.an_searchname ,
	new.an_extra_ue_flag ,
	new.an_external_code ,
	new.an_vat_id ,
	new.an_personal_fiscal_code ,
	new.an_privacy_print ,
	new.an_sms ,
	new.an_encrypted_fiscal_code ,
	new.an_vat_purcentage ,
	new.an_status ,
	new.an_ownsite ,
	new.an_insurance_id ,
	new.an_anagraphs_anagraph_id ,
	new.an_main_language_code ,
	new.an_main_culture_code ,
	new.an_fiscal_code ,
	new.an_main_group_id ,
	new.an_image_id ,
	new.latitude ,
	new.longitude ,
	new.test ,
	new.search_index ,
	new.an_birthplace ,
	new.an_birthplace_code ,
	new.anagraph64 ,
	new.main_category_id ,
	new.osm_id ,
	new.an_description ,
	new.an_address_number ,
	new.anag_jguid ,
	new.anag_deleted ,
	new.insert_date ,
	new.update_date ,
	new.user_insert ,
	new.jguid ,
	new.custom_field_1 ,
	new.custom_field_2 ,
	new.custom_field_3 ,
	new.custom_float_1 ,
	new.custom_float_2 ,
	new.custom_int_1 ,
	new.custom_int_2 ,
	new.supplier_id ,
	new.vessel_id ,
	new.an_country_id ,
	new.an_iso_country_code2, 
    new.deleted, 
    new.an_full_address); 
	
	return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraphs_insert" id="Function_273" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraphs_insert(an_group_id smallint, db_schema_id integer, anagraph_id integer, an_title character varying, an_name character varying, an_second_name character varying, an_last_name character varying, an_notes character varying, an_address character varying, an_town character varying, an_postal_code character varying, an_iso_country_code character varying, an_state_province character varying, an_phone character varying, an_phone2 character varying, an_fax character varying, an_cellular character varying, an_code character varying, an_vat_numeric character varying, an_email character varying, an_web character varying, an_contact_id integer, an_bank_account character varying, an_payment_des character varying, an_discount numeric, an_distance integer, an_distance_mesunit smallint, an_sex character varying, an_cod_comune character varying, an_cod_provincia character varying, an_credit_line numeric, an_currency_id smallint, an_cat_id smallint, an_notes2 character varying, an_notes3 text, an_edi boolean, an_privacy boolean, an_office_id smallint, an_cod_prov_rif character varying, an_data_fido date, an_user_insert character varying, an_user_update character varying, an_area_id smallint, an_agent_id smallint, an_area_code character varying, an_zone_id character varying, an_ins_id bigint, an_upd_id bigint, an_documents smallint, an_last_date date, an_birthdate date, an_office_type_id smallint, an_searchname character varying, an_extra_ue_flag boolean, an_external_code character varying, an_vat_id smallint, an_personal_fiscal_code character varying, an_privacy_print smallint, an_sms boolean, an_encrypted_fiscal_code character varying, an_vat_purcentage smallint, an_status smallint, an_ownsite boolean, an_insurance_id bigint, an_anagraphs_anagraph_id integer, an_main_language_code character varying, an_main_culture_code character varying, an_fiscal_code character varying, an_main_group_id integer, an_image_id bigint, latitude double precision, longitude double precision)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$declare
  newid bigint; 
begin
    if anagraph_id is null then
          newid:=nextval('anagraph.an_anagraph_seq');
    else
	newid := anagraph_id; 
    end if; 
    insert into anagraph.anagraphs
    (db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    )
    values
    (    
    db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id, 
    latitude ,
    longitude  
    );
    insert into anagraph.identities
    (  
      db_schema_id ,
      anagraph_id , 
      an_group_id
    )
    values
    (
      db_schema_id,
      anagraph_id, 
      an_group_id
    );
    


    return newid; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="an_group_id" jt="5" type="int2" />
			<input_param name="db_schema_id" jt="4" type="int4" />
			<input_param name="anagraph_id" jt="4" type="int4" />
			<input_param name="an_title" jt="12" type="varchar" />
			<input_param name="an_name" jt="12" type="varchar" />
			<input_param name="an_second_name" jt="12" type="varchar" />
			<input_param name="an_last_name" jt="12" type="varchar" />
			<input_param name="an_notes" jt="12" type="varchar" />
			<input_param name="an_address" jt="12" type="varchar" />
			<input_param name="an_town" jt="12" type="varchar" />
			<input_param name="an_postal_code" jt="12" type="varchar" />
			<input_param name="an_iso_country_code" jt="12" type="varchar" />
			<input_param name="an_state_province" jt="12" type="varchar" />
			<input_param name="an_phone" jt="12" type="varchar" />
			<input_param name="an_phone2" jt="12" type="varchar" />
			<input_param name="an_fax" jt="12" type="varchar" />
			<input_param name="an_cellular" jt="12" type="varchar" />
			<input_param name="an_code" jt="12" type="varchar" />
			<input_param name="an_vat_numeric" jt="12" type="varchar" />
			<input_param name="an_email" jt="12" type="varchar" />
			<input_param name="an_web" jt="12" type="varchar" />
			<input_param name="an_contact_id" jt="4" type="int4" />
			<input_param name="an_bank_account" jt="12" type="varchar" />
			<input_param name="an_payment_des" jt="12" type="varchar" />
			<input_param name="an_discount" jt="2" type="numeric" />
			<input_param name="an_distance" jt="4" type="int4" />
			<input_param name="an_distance_mesunit" jt="5" type="int2" />
			<input_param name="an_sex" jt="12" type="varchar" />
			<input_param name="an_cod_comune" jt="12" type="varchar" />
			<input_param name="an_cod_provincia" jt="12" type="varchar" />
			<input_param name="an_credit_line" jt="2" type="numeric" />
			<input_param name="an_currency_id" jt="5" type="int2" />
			<input_param name="an_cat_id" jt="5" type="int2" />
			<input_param name="an_notes2" jt="12" type="varchar" />
			<input_param name="an_notes3" jt="12" type="text" />
			<input_param name="an_edi" jt="-7" type="bool" />
			<input_param name="an_privacy" jt="-7" type="bool" />
			<input_param name="an_office_id" jt="5" type="int2" />
			<input_param name="an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="an_data_fido" jt="91" type="date" />
			<input_param name="an_user_insert" jt="12" type="varchar" />
			<input_param name="an_user_update" jt="12" type="varchar" />
			<input_param name="an_area_id" jt="5" type="int2" />
			<input_param name="an_agent_id" jt="5" type="int2" />
			<input_param name="an_area_code" jt="12" type="varchar" />
			<input_param name="an_zone_id" jt="12" type="varchar" />
			<input_param name="an_ins_id" jt="-5" type="int8" />
			<input_param name="an_upd_id" jt="-5" type="int8" />
			<input_param name="an_documents" jt="5" type="int2" />
			<input_param name="an_last_date" jt="91" type="date" />
			<input_param name="an_birthdate" jt="91" type="date" />
			<input_param name="an_office_type_id" jt="5" type="int2" />
			<input_param name="an_searchname" jt="12" type="varchar" />
			<input_param name="an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="an_external_code" jt="12" type="varchar" />
			<input_param name="an_vat_id" jt="5" type="int2" />
			<input_param name="an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_privacy_print" jt="5" type="int2" />
			<input_param name="an_sms" jt="-7" type="bool" />
			<input_param name="an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_vat_purcentage" jt="5" type="int2" />
			<input_param name="an_status" jt="5" type="int2" />
			<input_param name="an_ownsite" jt="-7" type="bool" />
			<input_param name="an_insurance_id" jt="-5" type="int8" />
			<input_param name="an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="an_main_language_code" jt="12" type="varchar" />
			<input_param name="an_main_culture_code" jt="12" type="varchar" />
			<input_param name="an_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_main_group_id" jt="4" type="int4" />
			<input_param name="an_image_id" jt="-5" type="int8" />
			<input_param name="latitude" jt="8" type="float8" />
			<input_param name="longitude" jt="8" type="float8" />
		</function>
		<function name="anagraphs_insert_update" id="Function_344" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraphs_insert_update(INOUT an_group_id smallint, INOUT db_schema_id integer, INOUT anagraph_id integer, INOUT an_title character varying, INOUT an_name character varying, INOUT an_second_name character varying, INOUT an_last_name character varying, INOUT an_notes character varying, INOUT an_address character varying, INOUT an_town character varying, INOUT an_postal_code character varying, INOUT an_iso_country_code character varying, INOUT an_state_province character varying, INOUT an_phone character varying, INOUT an_phone2 character varying, INOUT an_fax character varying, INOUT an_cellular character varying, INOUT an_code character varying, INOUT an_vat_numeric character varying, INOUT an_email character varying, INOUT an_web character varying, INOUT an_contact_id integer, INOUT an_bank_account character varying, INOUT an_payment_des character varying, INOUT an_discount numeric, INOUT an_distance integer, INOUT an_distance_mesunit smallint, INOUT an_sex character varying, INOUT an_cod_comune character varying, INOUT an_cod_provincia character varying, INOUT an_credit_line numeric, INOUT an_currency_id smallint, INOUT an_cat_id smallint, INOUT an_notes2 character varying, INOUT an_notes3 text, INOUT an_edi boolean, INOUT an_privacy boolean, INOUT an_office_id smallint, INOUT an_cod_prov_rif character varying, INOUT an_data_fido date, INOUT an_user_insert character varying, INOUT an_user_update character varying, INOUT an_area_id smallint, INOUT an_agent_id smallint, INOUT an_area_code character varying, INOUT an_zone_id character varying, INOUT an_ins_id bigint, INOUT an_upd_id bigint, INOUT an_documents smallint, INOUT an_last_date date, INOUT an_birthdate date, INOUT an_office_type_id smallint, INOUT an_searchname character varying, INOUT an_extra_ue_flag boolean, INOUT an_external_code character varying, INOUT an_vat_id smallint, INOUT an_personal_fiscal_code character varying, INOUT an_privacy_print smallint, INOUT an_sms boolean, INOUT an_encrypted_fiscal_code character varying, INOUT an_vat_purcentage smallint, INOUT an_status smallint, INOUT an_ownsite boolean, INOUT an_insurance_id bigint, INOUT an_anagraphs_anagraph_id integer, INOUT an_main_language_code character varying, INOUT an_main_culture_code character varying, INOUT an_fiscal_code character varying, INOUT an_main_group_id integer, INOUT an_image_id bigint, INOUT latitude double precision, INOUT longitude double precision)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  newid bigint; 
begin
    if anagraph_id is null then
       newid := nextval('anagraph.an_anagraph_seq');
    else
	    newid := anagraph_id; 
    end if; 
    insert into anagraph.anagraphs
    (db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    )
    values
    (    
    db_schema_id ,
    newid ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id, 
    latitude ,
    longitude  
    );
    insert into anagraph.identities
    (  
      db_schema_id ,
      newid , 
      an_group_id
    )
    values
    (
      db_schema_id,
      anagraph_id, 
      an_group_id
    );
    
    select  
    db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    INTO 
    db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    WHERE 
      anagraph_id = newid; 
    --return newid; 

end;
$function$
;]]></string>
			<input_param name="an_group_id" jt="5" type="int2" />
			<input_param name="db_schema_id" jt="4" type="int4" />
			<input_param name="anagraph_id" jt="4" type="int4" />
			<input_param name="an_title" jt="12" type="varchar" />
			<input_param name="an_name" jt="12" type="varchar" />
			<input_param name="an_second_name" jt="12" type="varchar" />
			<input_param name="an_last_name" jt="12" type="varchar" />
			<input_param name="an_notes" jt="12" type="varchar" />
			<input_param name="an_address" jt="12" type="varchar" />
			<input_param name="an_town" jt="12" type="varchar" />
			<input_param name="an_postal_code" jt="12" type="varchar" />
			<input_param name="an_iso_country_code" jt="12" type="varchar" />
			<input_param name="an_state_province" jt="12" type="varchar" />
			<input_param name="an_phone" jt="12" type="varchar" />
			<input_param name="an_phone2" jt="12" type="varchar" />
			<input_param name="an_fax" jt="12" type="varchar" />
			<input_param name="an_cellular" jt="12" type="varchar" />
			<input_param name="an_code" jt="12" type="varchar" />
			<input_param name="an_vat_numeric" jt="12" type="varchar" />
			<input_param name="an_email" jt="12" type="varchar" />
			<input_param name="an_web" jt="12" type="varchar" />
			<input_param name="an_contact_id" jt="4" type="int4" />
			<input_param name="an_bank_account" jt="12" type="varchar" />
			<input_param name="an_payment_des" jt="12" type="varchar" />
			<input_param name="an_discount" jt="2" type="numeric" />
			<input_param name="an_distance" jt="4" type="int4" />
			<input_param name="an_distance_mesunit" jt="5" type="int2" />
			<input_param name="an_sex" jt="12" type="varchar" />
			<input_param name="an_cod_comune" jt="12" type="varchar" />
			<input_param name="an_cod_provincia" jt="12" type="varchar" />
			<input_param name="an_credit_line" jt="2" type="numeric" />
			<input_param name="an_currency_id" jt="5" type="int2" />
			<input_param name="an_cat_id" jt="5" type="int2" />
			<input_param name="an_notes2" jt="12" type="varchar" />
			<input_param name="an_notes3" jt="12" type="text" />
			<input_param name="an_edi" jt="-7" type="bool" />
			<input_param name="an_privacy" jt="-7" type="bool" />
			<input_param name="an_office_id" jt="5" type="int2" />
			<input_param name="an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="an_data_fido" jt="91" type="date" />
			<input_param name="an_user_insert" jt="12" type="varchar" />
			<input_param name="an_user_update" jt="12" type="varchar" />
			<input_param name="an_area_id" jt="5" type="int2" />
			<input_param name="an_agent_id" jt="5" type="int2" />
			<input_param name="an_area_code" jt="12" type="varchar" />
			<input_param name="an_zone_id" jt="12" type="varchar" />
			<input_param name="an_ins_id" jt="-5" type="int8" />
			<input_param name="an_upd_id" jt="-5" type="int8" />
			<input_param name="an_documents" jt="5" type="int2" />
			<input_param name="an_last_date" jt="91" type="date" />
			<input_param name="an_birthdate" jt="91" type="date" />
			<input_param name="an_office_type_id" jt="5" type="int2" />
			<input_param name="an_searchname" jt="12" type="varchar" />
			<input_param name="an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="an_external_code" jt="12" type="varchar" />
			<input_param name="an_vat_id" jt="5" type="int2" />
			<input_param name="an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_privacy_print" jt="5" type="int2" />
			<input_param name="an_sms" jt="-7" type="bool" />
			<input_param name="an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_vat_purcentage" jt="5" type="int2" />
			<input_param name="an_status" jt="5" type="int2" />
			<input_param name="an_ownsite" jt="-7" type="bool" />
			<input_param name="an_insurance_id" jt="-5" type="int8" />
			<input_param name="an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="an_main_language_code" jt="12" type="varchar" />
			<input_param name="an_main_culture_code" jt="12" type="varchar" />
			<input_param name="an_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_main_group_id" jt="4" type="int4" />
			<input_param name="an_image_id" jt="-5" type="int8" />
			<input_param name="latitude" jt="8" type="float8" />
			<input_param name="longitude" jt="8" type="float8" />
		</function>
		<function name="angr_trg" id="Function_296" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.angr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.angr_jguid is null then
     New.angr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.angr_deleted is null then
     New.angr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=current_setting('system.db_schema_id')::integer;
  end if;
  
  if New.vessel_id = 0 then
     New.vessel_id := NULL;
  end if;
  
  
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="categories_from_osm" id="Function_748" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.categories_from_osm()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  x record; 
  i integer; 
  j integer; 
  k integer; 
begin
  k := 0; 
  
  for x in select * from gis.osm_categories
  loop
    select count(1) into j from anagraph.categories
	  where osm_category_id = x.id; 
	  
	if j = 0 then
	   insert into anagraph.categories 
		   (category_name, osm_category_id)
		  values
		   (x.code, x.id);
	    k := k +1; 
	end if; 
  
  end loop; 
  return k; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="categories_new_id_trg" id="Function_126b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.categories_new_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.category_id is null or New.category_id  = 0 then
          New.category_id:=nextval('anagraph.categories_seq');
      end if; 
	        Return NEW;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_id_by_code" id="Function_1a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.get_id_by_code(p_code character varying, p_group_id integer, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
begin
  R := null; 
  select into I count(1)
     from anagraph.anagraphs a
	 where
	    a.an_code = upper(p_code) 
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
		
	if I = 1 then
    select into R anagraph_id 
      from anagraph.anagraphs a
	 where
	    a.an_code = Upper(p_code) 
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_group_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="get_id_by_name" id="Function_1dd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.get_id_by_name(p_name character varying, p_address character varying, p_town character varying, p_group_id integer, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
  test boolean; 
begin
  R := null; 
  test := false;
  
  select into I count(1)
     from anagraph.anagraphs a
	 where
	    a.an_last_name = upper(p_name) 
		-- and ( a.an_address = upper(p_address)  or p_address is null  )
		-- and ( a.an_town = upper(p_town)  or p_town is null  )
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
		
	if I = 1 then
	test := true; 
    select into R anagraph_id 
      from anagraph.anagraphs a
	 where
	    a.an_last_name = upper(p_name) 
		-- and ( a.an_address = upper(p_address)  or p_address is null  )
		--and ( a.an_town = upper(p_town)  or p_town is null  )
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_name" jt="12" type="varchar" />
			<input_param name="p_address" jt="12" type="varchar" />
			<input_param name="p_town" jt="12" type="varchar" />
			<input_param name="p_group_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="get_name_by_id" id="Function_1e7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.get_name_by_id(p_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R character varying; 
begin
  R := null; 
  select into I count(1)
     from anagraph.anagraphs a
	 where
	  a.anagraph_id = p_id;
		
	if I = 1 then
    select into R  an_last_name
      from anagraph.anagraphs a
	 where
	    a.anagraph_id = p_id;
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
		</function>
		<function name="group_new_id_trg" id="Function_1619" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.group_new_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.an_group_id is null then
          New.an_group_id:=nextval('anagraph.group_seq');
      end if; 
	  New.db_schema_id = current_setting('system.db_schema_id')::integer;
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="groups_view_trg" id="Function_1b02" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.groups_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	BEGIN
	  UPDATE anagraph.groups SET
		group_des = New.group_des,
		contact_group = New.contact_group,
		sub_group = New.sub_group,
		sub_group_des = New.sub_group_des,
		settings = New.settings,
		position = New.position,
		accounting = New.accounting,
		cod_account = New.cod_account,
		local = New.local,
		group_cod = New.group_cod,
		ledger_cod = New.ledger_cod,
		subledger_cod = New.subledger_cod,
		grouping = New.grouping,
		description = New.description,
		angr_jguid = New.angr_jguid,
		angr_deleted = New.angr_deleted,
		icon_id = New.icon_id
	WHERE 
		(an_group_id = New.an_group_id) ;
	END;
  ELSIF TG_OP = 'INSERT' THEN 
	BEGIN
	  INSERT INTO anagraph.groups (
		db_schema_id,
		an_group_id,
		group_des,
		contact_group,
		sub_group,
		sub_group_des,
		settings,
		position,
		accounting,
		cod_account,
		local,
		group_cod,
		ledger_cod,
		subledger_cod,
		grouping,
		description,
		angr_jguid,
		angr_deleted,
		icon_id,
		jguid
	  )
	  VALUES (
		current_setting('system.db_schema_id')::integer,
		New.an_group_id,
		New.group_des,
		New.contact_group,
		New.sub_group,
		New.sub_group_des,
		New.settings,
		New.position,
		New.accounting,
		New.cod_account,
		New.local,
		New.group_cod,
		New.ledger_cod,
		New.subledger_cod,
		New.grouping,
		New.description,
		New.angr_jguid,
		New.angr_deleted,
		New.icon_id,
		New.jguid
	  );
	END;
  ELSIF TG_OP = 'DELETE' THEN 
	BEGIN
	  DELETE FROM anagraph.groups
	  WHERE 
		(an_group_id = New.an_group_id) ;
	END;
  END IF; 
  
  RETURN NEW; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="identities_defaults_trg" id="Function_2618" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.identities_defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
    if new.an_agent_id is null then  new.an_agent_id  := 0; end if; 
    if new.an_credit_limit is null then  new.an_credit_limit  := 0; end if; 
    if new.an_credit_days is null then  new.an_credit_days  := 0; end if; 
    if new.an_credit is null then  new.an_credit  := 0; end if; 
    Return NEW;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sp_del_anagraphs" id="Function_33b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_del_anagraphs(p_anagraph_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM anagraph.anagraphs
  WHERE 
    (anagraph_id = p_anagraph_id) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
		</function>
		<function name="sp_ins_anagraphs" id="Function_12a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_ins_anagraphs(p_db_schema_id integer, p_anagraph_id integer, p_an_title character varying, p_an_name character varying, p_an_second_name character varying, p_an_last_name character varying, p_an_notes character varying, p_an_address character varying, p_an_town character varying, p_an_postal_code character varying, p_an_iso_country_code character varying, p_an_state_province character varying, p_an_phone character varying, p_an_phone2 character varying, p_an_fax character varying, p_an_cellular character varying, p_an_code character varying, p_an_vat_numeric character varying, p_an_email character varying, p_an_web character varying, p_an_contact_id integer, p_an_bank_account character varying, p_an_payment_des character varying, p_an_discount numeric, p_an_distance integer, p_an_distance_mesunit smallint, p_an_sex character varying, p_an_cod_comune character varying, p_an_cod_provincia character varying, p_an_credit_line numeric, p_an_currency_id smallint, p_an_cat_id smallint, p_an_notes2 character varying, p_an_notes3 text, p_an_edi boolean, p_an_privacy boolean, p_an_office_id smallint, p_an_cod_prov_rif character varying, p_an_data_fido date, p_an_user_insert character varying, p_an_user_update character varying, p_an_area_id smallint, p_an_agent_id smallint, p_an_area_code character varying, p_an_zone_id character varying, p_an_ins_id bigint, p_an_upd_id bigint, p_an_documents smallint, p_an_last_date date, p_an_birthdate date, p_an_office_type_id smallint, p_an_searchname character varying, p_an_extra_ue_flag boolean, p_an_external_code character varying, p_an_vat_id smallint, p_an_personal_fiscal_code character varying, p_an_privacy_print smallint, p_an_sms boolean, p_an_encrypted_fiscal_code character varying, p_an_vat_purcentage smallint, p_an_status smallint, p_an_ownsite boolean, p_an_insurance_id bigint, p_an_anagraphs_anagraph_id integer, p_an_main_language_code character varying, p_an_main_culture_code character varying, p_an_fiscal_code character varying, p_an_main_group_id integer, p_an_image_id bigint, p_latitude double precision, p_longitude double precision, p_test double precision, p_search_index character varying, p_an_birthplace character varying, p_an_birthplace_code character varying, p_anagraph64 character varying, p_main_category_id smallint, p_osm_id bigint, p_an_description character varying, p_an_address_number character varying, p_anag_jguid character varying, p_anag_deleted boolean, p_insert_date timestamp without time zone, p_update_date timestamp without time zone, p_user_insert integer, p_jguid uuid, p_custom_field_1 character varying, p_custom_field_2 character varying, p_custom_field_3 character varying, p_custom_float_1 real, p_custom_float_2 real, p_custom_int_1 integer, p_custom_int_2 integer, p_supplier_id integer, p_vessel_id smallint, p_an_country_id integer, p_an_iso_country_code2 character)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; v_id integer; v_jguid uuid; v_vessel_id integer; 
BEGIN
  v_count := 0; 
  v_id := p_anagraph_id;
  
  if v_id is null or v_id = 0 then
    v_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
  v_jguid := p_jguid; 
  
  if v_jguid is null then
     v_jguid := '{' || public.uuid_generate_v1mc() || '}';
  end if; 
  
  if p_vessel_id = 0 then v_vessel_id := null; else v_vessel_id := p_vessel_id; end if; 
  
  
  INSERT INTO anagraph.anagraphs (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2
  )
  values( 
    p_db_schema_id,
    case when v_id = 0 then NULL else v_id end,
    p_an_title,
    p_an_name,
    p_an_second_name,
    p_an_last_name,
    p_an_notes,
    p_an_address,
    p_an_town,
    p_an_postal_code,
    p_an_iso_country_code,
    p_an_state_province,
    p_an_phone,
    p_an_phone2,
    p_an_fax,
    p_an_cellular,
    p_an_code,
    p_an_vat_numeric,
    p_an_email,
    p_an_web,
    case when p_an_contact_id = 0 then NULL else p_an_contact_id end,
    p_an_bank_account,
    p_an_payment_des,
    p_an_discount,
    p_an_distance,
    p_an_distance_mesunit,
    p_an_sex,
    p_an_cod_comune,
    p_an_cod_provincia,
    p_an_credit_line,
    case when p_an_currency_id = 0 then NULL else p_an_currency_id end,
    case when p_an_cat_id = 0 then NULL else p_an_cat_id end,
    p_an_notes2,
    p_an_notes3,
    p_an_edi,
    p_an_privacy,
    case when p_an_office_id = 0 then NULL else p_an_office_id end,
    p_an_cod_prov_rif,
    p_an_data_fido,
    p_an_user_insert,
    p_an_user_update,
    case when p_an_area_id = 0 then NULL else p_an_area_id end,
    case when p_an_agent_id = 0 then NULL else p_an_agent_id end,
    p_an_area_code,
    case when p_an_zone_id = '' then NULL else p_an_zone_id end,
    case when p_an_ins_id = 0 then NULL else p_an_ins_id end,
    case when p_an_upd_id = 0 then NULL else p_an_upd_id end,
    p_an_documents,
    p_an_last_date,
    p_an_birthdate,
    case when p_an_office_type_id = 0 then NULL else p_an_office_type_id end,
    p_an_searchname,
    p_an_extra_ue_flag,
    p_an_external_code,
    case when p_an_vat_id = 0 then NULL else p_an_vat_id end,
    p_an_personal_fiscal_code,
    p_an_privacy_print,
    p_an_sms,
    p_an_encrypted_fiscal_code,
    p_an_vat_purcentage,
    p_an_status,
    p_an_ownsite,
    case when p_an_insurance_id = 0 then NULL else p_an_insurance_id end,
    case when p_an_anagraphs_anagraph_id = 0 then NULL else p_an_anagraphs_anagraph_id end,
    p_an_main_language_code,
    p_an_main_culture_code,
    p_an_fiscal_code,
    p_an_main_group_id,
    case when p_an_image_id = 0 then NULL else p_an_image_id end,
    p_latitude,
    p_longitude,
    p_test,
    p_search_index,
    p_an_birthplace,
    p_an_birthplace_code,
    p_anagraph64,
    case when p_main_category_id = 0 then NULL else p_main_category_id end,
    case when p_osm_id = 0 then NULL else p_osm_id end,
    p_an_description,
    p_an_address_number,
    p_anag_jguid,
    p_anag_deleted,
    p_insert_date,
    p_update_date,
    p_user_insert,
    v_jguid,
    p_custom_field_1,
    p_custom_field_2,
    p_custom_field_3,
    p_custom_float_1,
    p_custom_float_2,
    p_custom_int_1,
    p_custom_int_2,
    case when p_supplier_id = 0 then NULL else p_supplier_id end,
    case when v_vessel_id = 0 then NULL else v_vessel_id end,
    case when p_an_country_id = 0 then NULL else p_an_country_id end,
    p_an_iso_country_code2
	)
  ;
  
  return v_id; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_title" jt="12" type="varchar" />
			<input_param name="p_an_name" jt="12" type="varchar" />
			<input_param name="p_an_second_name" jt="12" type="varchar" />
			<input_param name="p_an_last_name" jt="12" type="varchar" />
			<input_param name="p_an_notes" jt="12" type="varchar" />
			<input_param name="p_an_address" jt="12" type="varchar" />
			<input_param name="p_an_town" jt="12" type="varchar" />
			<input_param name="p_an_postal_code" jt="12" type="varchar" />
			<input_param name="p_an_iso_country_code" jt="12" type="varchar" />
			<input_param name="p_an_state_province" jt="12" type="varchar" />
			<input_param name="p_an_phone" jt="12" type="varchar" />
			<input_param name="p_an_phone2" jt="12" type="varchar" />
			<input_param name="p_an_fax" jt="12" type="varchar" />
			<input_param name="p_an_cellular" jt="12" type="varchar" />
			<input_param name="p_an_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_numeric" jt="12" type="varchar" />
			<input_param name="p_an_email" jt="12" type="varchar" />
			<input_param name="p_an_web" jt="12" type="varchar" />
			<input_param name="p_an_contact_id" jt="4" type="int4" />
			<input_param name="p_an_bank_account" jt="12" type="varchar" />
			<input_param name="p_an_payment_des" jt="12" type="varchar" />
			<input_param name="p_an_discount" jt="2" type="numeric" />
			<input_param name="p_an_distance" jt="4" type="int4" />
			<input_param name="p_an_distance_mesunit" jt="5" type="int2" />
			<input_param name="p_an_sex" jt="12" type="varchar" />
			<input_param name="p_an_cod_comune" jt="12" type="varchar" />
			<input_param name="p_an_cod_provincia" jt="12" type="varchar" />
			<input_param name="p_an_credit_line" jt="2" type="numeric" />
			<input_param name="p_an_currency_id" jt="5" type="int2" />
			<input_param name="p_an_cat_id" jt="5" type="int2" />
			<input_param name="p_an_notes2" jt="12" type="varchar" />
			<input_param name="p_an_notes3" jt="12" type="text" />
			<input_param name="p_an_edi" jt="-7" type="bool" />
			<input_param name="p_an_privacy" jt="-7" type="bool" />
			<input_param name="p_an_office_id" jt="5" type="int2" />
			<input_param name="p_an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="p_an_data_fido" jt="91" type="date" />
			<input_param name="p_an_user_insert" jt="12" type="varchar" />
			<input_param name="p_an_user_update" jt="12" type="varchar" />
			<input_param name="p_an_area_id" jt="5" type="int2" />
			<input_param name="p_an_agent_id" jt="5" type="int2" />
			<input_param name="p_an_area_code" jt="12" type="varchar" />
			<input_param name="p_an_zone_id" jt="12" type="varchar" />
			<input_param name="p_an_ins_id" jt="-5" type="int8" />
			<input_param name="p_an_upd_id" jt="-5" type="int8" />
			<input_param name="p_an_documents" jt="5" type="int2" />
			<input_param name="p_an_last_date" jt="91" type="date" />
			<input_param name="p_an_birthdate" jt="91" type="date" />
			<input_param name="p_an_office_type_id" jt="5" type="int2" />
			<input_param name="p_an_searchname" jt="12" type="varchar" />
			<input_param name="p_an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="p_an_external_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_id" jt="5" type="int2" />
			<input_param name="p_an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_privacy_print" jt="5" type="int2" />
			<input_param name="p_an_sms" jt="-7" type="bool" />
			<input_param name="p_an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_purcentage" jt="5" type="int2" />
			<input_param name="p_an_status" jt="5" type="int2" />
			<input_param name="p_an_ownsite" jt="-7" type="bool" />
			<input_param name="p_an_insurance_id" jt="-5" type="int8" />
			<input_param name="p_an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_main_language_code" jt="12" type="varchar" />
			<input_param name="p_an_main_culture_code" jt="12" type="varchar" />
			<input_param name="p_an_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_main_group_id" jt="4" type="int4" />
			<input_param name="p_an_image_id" jt="-5" type="int8" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_test" jt="8" type="float8" />
			<input_param name="p_search_index" jt="12" type="varchar" />
			<input_param name="p_an_birthplace" jt="12" type="varchar" />
			<input_param name="p_an_birthplace_code" jt="12" type="varchar" />
			<input_param name="p_anagraph64" jt="12" type="varchar" />
			<input_param name="p_main_category_id" jt="5" type="int2" />
			<input_param name="p_osm_id" jt="-5" type="int8" />
			<input_param name="p_an_description" jt="12" type="varchar" />
			<input_param name="p_an_address_number" jt="12" type="varchar" />
			<input_param name="p_anag_jguid" jt="12" type="varchar" />
			<input_param name="p_anag_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamp" />
			<input_param name="p_update_date" jt="93" type="timestamp" />
			<input_param name="p_user_insert" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_custom_field_1" jt="12" type="varchar" />
			<input_param name="p_custom_field_2" jt="12" type="varchar" />
			<input_param name="p_custom_field_3" jt="12" type="varchar" />
			<input_param name="p_custom_float_1" jt="7" type="float4" />
			<input_param name="p_custom_float_2" jt="7" type="float4" />
			<input_param name="p_custom_int_1" jt="4" type="int4" />
			<input_param name="p_custom_int_2" jt="4" type="int4" />
			<input_param name="p_supplier_id" jt="4" type="int4" />
			<input_param name="p_vessel_id" jt="5" type="int2" />
			<input_param name="p_an_country_id" jt="4" type="int4" />
			<input_param name="p_an_iso_country_code2" jt="1" type="bpchar" />
		</function>
		<function name="sp_ins_anagraphs" id="Function_2445" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_ins_anagraphs(p_db_schema_id integer, p_anagraph_id integer, p_an_title character varying, p_an_name character varying, p_an_second_name character varying, p_an_last_name character varying, p_an_notes character varying, p_an_address character varying, p_an_town character varying, p_an_postal_code character varying, p_an_iso_country_code character varying, p_an_state_province character varying, p_an_phone character varying, p_an_phone2 character varying, p_an_fax character varying, p_an_cellular character varying, p_an_code character varying, p_an_vat_numeric character varying, p_an_email character varying, p_an_web character varying, p_an_contact_id integer, p_an_bank_account character varying, p_an_payment_des character varying, p_an_discount numeric, p_an_distance integer, p_an_distance_mesunit smallint, p_an_sex character varying, p_an_cod_comune character varying, p_an_cod_provincia character varying, p_an_credit_line numeric, p_an_currency_id smallint, p_an_cat_id smallint, p_an_notes2 character varying, p_an_notes3 text, p_an_edi boolean, p_an_privacy boolean, p_an_office_id smallint, p_an_cod_prov_rif character varying, p_an_data_fido date, p_an_user_insert character varying, p_an_user_update character varying, p_an_area_id smallint, p_an_agent_id smallint, p_an_area_code character varying, p_an_zone_id character varying, p_an_ins_id bigint, p_an_upd_id bigint, p_an_documents smallint, p_an_last_date date, p_an_birthdate date, p_an_office_type_id smallint, p_an_searchname character varying, p_an_extra_ue_flag boolean, p_an_external_code character varying, p_an_vat_id smallint, p_an_personal_fiscal_code character varying, p_an_privacy_print smallint, p_an_sms boolean, p_an_encrypted_fiscal_code character varying, p_an_vat_purcentage smallint, p_an_status smallint, p_an_ownsite boolean, p_an_insurance_id bigint, p_an_anagraphs_anagraph_id integer, p_an_main_language_code character varying, p_an_main_culture_code character varying, p_an_fiscal_code character varying, p_an_main_group_id integer, p_an_image_id bigint, p_latitude double precision, p_longitude double precision, p_test double precision, p_search_index character varying, p_an_birthplace character varying, p_an_birthplace_code character varying, p_anagraph64 character varying, p_main_category_id smallint, p_osm_id bigint, p_an_description character varying, p_an_address_number character varying, p_anag_jguid character varying, p_anag_deleted boolean, p_insert_date timestamp without time zone, p_update_date timestamp without time zone, p_user_insert integer, p_jguid uuid, p_custom_field_1 character varying, p_custom_field_2 character varying, p_custom_field_3 character varying, p_custom_float_1 real, p_custom_float_2 real, p_custom_int_1 integer, p_custom_int_2 integer, p_supplier_id integer, p_vessel_id smallint, p_an_country_id integer, p_an_iso_country_code2 character, p_an_full_address character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; v_id integer; v_jguid uuid; v_vessel_id integer; 
BEGIN
  v_count := 0; 
  v_id := p_anagraph_id;
  
  if v_id is null or v_id = 0 then
    v_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
  v_jguid := p_jguid; 
  
  if v_jguid is null then
     v_jguid := '{' || public.uuid_generate_v1mc() || '}';
  end if; 
  
  if p_vessel_id = 0 then v_vessel_id := null; else v_vessel_id := p_vessel_id; end if; 
  
  
  INSERT INTO anagraph.anagraphs (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2,
	p_an_full_address
  )
  values( 
    p_db_schema_id,
    case when v_id = 0 then NULL else v_id end,
    p_an_title,
    p_an_name,
    p_an_second_name,
    p_an_last_name,
    p_an_notes,
    p_an_address,
    p_an_town,
    p_an_postal_code,
    p_an_iso_country_code,
    p_an_state_province,
    p_an_phone,
    p_an_phone2,
    p_an_fax,
    p_an_cellular,
    p_an_code,
    p_an_vat_numeric,
    p_an_email,
    p_an_web,
    case when p_an_contact_id = 0 then NULL else p_an_contact_id end,
    p_an_bank_account,
    p_an_payment_des,
    p_an_discount,
    p_an_distance,
    p_an_distance_mesunit,
    p_an_sex,
    p_an_cod_comune,
    p_an_cod_provincia,
    p_an_credit_line,
    case when p_an_currency_id = 0 then NULL else p_an_currency_id end,
    case when p_an_cat_id = 0 then NULL else p_an_cat_id end,
    p_an_notes2,
    p_an_notes3,
    p_an_edi,
    p_an_privacy,
    case when p_an_office_id = 0 then NULL else p_an_office_id end,
    p_an_cod_prov_rif,
    p_an_data_fido,
    p_an_user_insert,
    p_an_user_update,
    case when p_an_area_id = 0 then NULL else p_an_area_id end,
    case when p_an_agent_id = 0 then NULL else p_an_agent_id end,
    p_an_area_code,
    case when p_an_zone_id = '' then NULL else p_an_zone_id end,
    case when p_an_ins_id = 0 then NULL else p_an_ins_id end,
    case when p_an_upd_id = 0 then NULL else p_an_upd_id end,
    p_an_documents,
    p_an_last_date,
    p_an_birthdate,
    case when p_an_office_type_id = 0 then NULL else p_an_office_type_id end,
    p_an_searchname,
    p_an_extra_ue_flag,
    p_an_external_code,
    case when p_an_vat_id = 0 then NULL else p_an_vat_id end,
    p_an_personal_fiscal_code,
    p_an_privacy_print,
    p_an_sms,
    p_an_encrypted_fiscal_code,
    p_an_vat_purcentage,
    p_an_status,
    p_an_ownsite,
    case when p_an_insurance_id = 0 then NULL else p_an_insurance_id end,
    case when p_an_anagraphs_anagraph_id = 0 then NULL else p_an_anagraphs_anagraph_id end,
    p_an_main_language_code,
    p_an_main_culture_code,
    p_an_fiscal_code,
    p_an_main_group_id,
    case when p_an_image_id = 0 then NULL else p_an_image_id end,
    p_latitude,
    p_longitude,
    p_test,
    p_search_index,
    p_an_birthplace,
    p_an_birthplace_code,
    p_anagraph64,
    case when p_main_category_id = 0 then NULL else p_main_category_id end,
    case when p_osm_id = 0 then NULL else p_osm_id end,
    p_an_description,
    p_an_address_number,
    p_anag_jguid,
    p_anag_deleted,
    p_insert_date,
    p_update_date,
    p_user_insert,
    v_jguid,
    p_custom_field_1,
    p_custom_field_2,
    p_custom_field_3,
    p_custom_float_1,
    p_custom_float_2,
    p_custom_int_1,
    p_custom_int_2,
    case when p_supplier_id = 0 then NULL else p_supplier_id end,
    case when v_vessel_id = 0 then NULL else v_vessel_id end,
    case when p_an_country_id = 0 then NULL else p_an_country_id end,
    p_an_iso_country_code2,
	p_an_full_address
	)
  ;
  
  return v_id; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_title" jt="12" type="varchar" />
			<input_param name="p_an_name" jt="12" type="varchar" />
			<input_param name="p_an_second_name" jt="12" type="varchar" />
			<input_param name="p_an_last_name" jt="12" type="varchar" />
			<input_param name="p_an_notes" jt="12" type="varchar" />
			<input_param name="p_an_address" jt="12" type="varchar" />
			<input_param name="p_an_town" jt="12" type="varchar" />
			<input_param name="p_an_postal_code" jt="12" type="varchar" />
			<input_param name="p_an_iso_country_code" jt="12" type="varchar" />
			<input_param name="p_an_state_province" jt="12" type="varchar" />
			<input_param name="p_an_phone" jt="12" type="varchar" />
			<input_param name="p_an_phone2" jt="12" type="varchar" />
			<input_param name="p_an_fax" jt="12" type="varchar" />
			<input_param name="p_an_cellular" jt="12" type="varchar" />
			<input_param name="p_an_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_numeric" jt="12" type="varchar" />
			<input_param name="p_an_email" jt="12" type="varchar" />
			<input_param name="p_an_web" jt="12" type="varchar" />
			<input_param name="p_an_contact_id" jt="4" type="int4" />
			<input_param name="p_an_bank_account" jt="12" type="varchar" />
			<input_param name="p_an_payment_des" jt="12" type="varchar" />
			<input_param name="p_an_discount" jt="2" type="numeric" />
			<input_param name="p_an_distance" jt="4" type="int4" />
			<input_param name="p_an_distance_mesunit" jt="5" type="int2" />
			<input_param name="p_an_sex" jt="12" type="varchar" />
			<input_param name="p_an_cod_comune" jt="12" type="varchar" />
			<input_param name="p_an_cod_provincia" jt="12" type="varchar" />
			<input_param name="p_an_credit_line" jt="2" type="numeric" />
			<input_param name="p_an_currency_id" jt="5" type="int2" />
			<input_param name="p_an_cat_id" jt="5" type="int2" />
			<input_param name="p_an_notes2" jt="12" type="varchar" />
			<input_param name="p_an_notes3" jt="12" type="text" />
			<input_param name="p_an_edi" jt="-7" type="bool" />
			<input_param name="p_an_privacy" jt="-7" type="bool" />
			<input_param name="p_an_office_id" jt="5" type="int2" />
			<input_param name="p_an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="p_an_data_fido" jt="91" type="date" />
			<input_param name="p_an_user_insert" jt="12" type="varchar" />
			<input_param name="p_an_user_update" jt="12" type="varchar" />
			<input_param name="p_an_area_id" jt="5" type="int2" />
			<input_param name="p_an_agent_id" jt="5" type="int2" />
			<input_param name="p_an_area_code" jt="12" type="varchar" />
			<input_param name="p_an_zone_id" jt="12" type="varchar" />
			<input_param name="p_an_ins_id" jt="-5" type="int8" />
			<input_param name="p_an_upd_id" jt="-5" type="int8" />
			<input_param name="p_an_documents" jt="5" type="int2" />
			<input_param name="p_an_last_date" jt="91" type="date" />
			<input_param name="p_an_birthdate" jt="91" type="date" />
			<input_param name="p_an_office_type_id" jt="5" type="int2" />
			<input_param name="p_an_searchname" jt="12" type="varchar" />
			<input_param name="p_an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="p_an_external_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_id" jt="5" type="int2" />
			<input_param name="p_an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_privacy_print" jt="5" type="int2" />
			<input_param name="p_an_sms" jt="-7" type="bool" />
			<input_param name="p_an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_purcentage" jt="5" type="int2" />
			<input_param name="p_an_status" jt="5" type="int2" />
			<input_param name="p_an_ownsite" jt="-7" type="bool" />
			<input_param name="p_an_insurance_id" jt="-5" type="int8" />
			<input_param name="p_an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_main_language_code" jt="12" type="varchar" />
			<input_param name="p_an_main_culture_code" jt="12" type="varchar" />
			<input_param name="p_an_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_main_group_id" jt="4" type="int4" />
			<input_param name="p_an_image_id" jt="-5" type="int8" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_test" jt="8" type="float8" />
			<input_param name="p_search_index" jt="12" type="varchar" />
			<input_param name="p_an_birthplace" jt="12" type="varchar" />
			<input_param name="p_an_birthplace_code" jt="12" type="varchar" />
			<input_param name="p_anagraph64" jt="12" type="varchar" />
			<input_param name="p_main_category_id" jt="5" type="int2" />
			<input_param name="p_osm_id" jt="-5" type="int8" />
			<input_param name="p_an_description" jt="12" type="varchar" />
			<input_param name="p_an_address_number" jt="12" type="varchar" />
			<input_param name="p_anag_jguid" jt="12" type="varchar" />
			<input_param name="p_anag_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamp" />
			<input_param name="p_update_date" jt="93" type="timestamp" />
			<input_param name="p_user_insert" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_custom_field_1" jt="12" type="varchar" />
			<input_param name="p_custom_field_2" jt="12" type="varchar" />
			<input_param name="p_custom_field_3" jt="12" type="varchar" />
			<input_param name="p_custom_float_1" jt="7" type="float4" />
			<input_param name="p_custom_float_2" jt="7" type="float4" />
			<input_param name="p_custom_int_1" jt="4" type="int4" />
			<input_param name="p_custom_int_2" jt="4" type="int4" />
			<input_param name="p_supplier_id" jt="4" type="int4" />
			<input_param name="p_vessel_id" jt="5" type="int2" />
			<input_param name="p_an_country_id" jt="4" type="int4" />
			<input_param name="p_an_iso_country_code2" jt="1" type="bpchar" />
			<input_param name="p_an_full_address" jt="12" type="varchar" />
		</function>
		<function name="sp_insert_address_from_anagraph" id="Function_1c2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_insert_address_from_anagraph(p_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
begin
	INSERT INTO anagraph.an_addresses(
			address_name, 	postal_code, 	state_province, 	town_name, 	address, 			address_number, 
			phone, 	full_address,  									country_code,  anagraph_id, pos, 	latitude, 		longitude)
	SELECT
			an_last_name, 	an_postal_code, an_state_province, 	an_town, 	an_address, 		an_address_number, 			
			an_cellular, 	an_full_address, an_iso_country_code2, 		     anagraph_id, 		1, 		latitude, 	longitude
	FROM anagraph.anagraphs WHERE anagraph_id = p_id;
  
  
  return true; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_id" jt="4" type="int4" />
		</function>
		<function name="sp_sel_anagraphs" id="Function_2291" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_sel_anagraphs()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    db_schema_id,
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2
  FROM 
    anagraph.anagraphs;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_upd_anagraphs" id="Function_1fc2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_upd_anagraphs(p_db_schema_id integer, p_anagraph_id integer, p_an_title character varying, p_an_name character varying, p_an_second_name character varying, p_an_last_name character varying, p_an_notes character varying, p_an_address character varying, p_an_town character varying, p_an_postal_code character varying, p_an_iso_country_code character varying, p_an_state_province character varying, p_an_phone character varying, p_an_phone2 character varying, p_an_fax character varying, p_an_cellular character varying, p_an_code character varying, p_an_vat_numeric character varying, p_an_email character varying, p_an_web character varying, p_an_contact_id integer, p_an_bank_account character varying, p_an_payment_des character varying, p_an_discount numeric, p_an_distance integer, p_an_distance_mesunit smallint, p_an_sex character varying, p_an_cod_comune character varying, p_an_cod_provincia character varying, p_an_credit_line numeric, p_an_currency_id smallint, p_an_cat_id smallint, p_an_notes2 character varying, p_an_notes3 text, p_an_edi boolean, p_an_privacy boolean, p_an_office_id smallint, p_an_cod_prov_rif character varying, p_an_data_fido date, p_an_user_insert character varying, p_an_user_update character varying, p_an_area_id smallint, p_an_agent_id smallint, p_an_area_code character varying, p_an_zone_id character varying, p_an_ins_id bigint, p_an_upd_id bigint, p_an_documents smallint, p_an_last_date date, p_an_birthdate date, p_an_office_type_id smallint, p_an_searchname character varying, p_an_extra_ue_flag boolean, p_an_external_code character varying, p_an_vat_id smallint, p_an_personal_fiscal_code character varying, p_an_privacy_print smallint, p_an_sms boolean, p_an_encrypted_fiscal_code character varying, p_an_vat_purcentage smallint, p_an_status smallint, p_an_ownsite boolean, p_an_insurance_id bigint, p_an_anagraphs_anagraph_id integer, p_an_main_language_code character varying, p_an_main_culture_code character varying, p_an_fiscal_code character varying, p_an_main_group_id integer, p_an_image_id bigint, p_latitude double precision, p_longitude double precision, p_test double precision, p_search_index character varying, p_an_birthplace character varying, p_an_birthplace_code character varying, p_anagraph64 character varying, p_main_category_id smallint, p_osm_id bigint, p_an_description character varying, p_an_address_number character varying, p_anag_jguid character varying, p_anag_deleted boolean, p_insert_date timestamp without time zone, p_update_date timestamp without time zone, p_user_insert integer, p_jguid uuid, p_custom_field_1 character varying, p_custom_field_2 character varying, p_custom_field_3 character varying, p_custom_float_1 real, p_custom_float_2 real, p_custom_int_1 integer, p_custom_int_2 integer, p_supplier_id integer, p_vessel_id smallint, p_an_country_id integer, p_an_iso_country_code2 character, p_deleted boolean)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count bigint; v_id bigint; v_jguid uuid;
BEGIN
  v_id := p_anagraph_id; 
  v_jguid := p_jguid; 
  
  if (v_id is null or v_id = 0) and (p_jguid is not null) then  
	 select 
         count(1), id
     into 
         v_count, v_id
	   from 
          anagraph.anagraph where jguid = v_jguid 
       group by id;  
  end if; 
   
  UPDATE anagraph.anagraphs SET
    db_schema_id = p_db_schema_id,
    an_title = p_an_title,
    an_name = p_an_name,
    an_second_name = p_an_second_name,
    an_last_name = p_an_last_name,
    an_notes = p_an_notes,
    an_address = p_an_address,
    an_town = p_an_town,
    an_postal_code = p_an_postal_code,
    an_iso_country_code = p_an_iso_country_code,
    an_state_province = p_an_state_province,
    an_phone = p_an_phone,
    an_phone2 = p_an_phone2,
    an_fax = p_an_fax,
    an_cellular = p_an_cellular,
    an_code = p_an_code,
    an_vat_numeric = p_an_vat_numeric,
    an_email = p_an_email,
    an_web = p_an_web,
    an_contact_id = p_an_contact_id,
    an_bank_account = p_an_bank_account,
    an_payment_des = p_an_payment_des,
    an_discount = p_an_discount,
    an_distance = p_an_distance,
    an_distance_mesunit = p_an_distance_mesunit,
    an_sex = p_an_sex,
    an_cod_comune = p_an_cod_comune,
    an_cod_provincia = p_an_cod_provincia,
    an_credit_line = p_an_credit_line,
    an_currency_id = p_an_currency_id,
    an_cat_id = p_an_cat_id,
    an_notes2 = p_an_notes2,
    an_notes3 = p_an_notes3,
    an_edi = p_an_edi,
    an_privacy = p_an_privacy,
    an_office_id = p_an_office_id,
    an_cod_prov_rif = p_an_cod_prov_rif,
    an_data_fido = p_an_data_fido,
    an_user_insert = p_an_user_insert,
    an_user_update = p_an_user_update,
    an_area_id = p_an_area_id,
    an_agent_id = p_an_agent_id,
    an_area_code = p_an_area_code,
    an_zone_id = p_an_zone_id,
    an_ins_id = p_an_ins_id,
    an_upd_id = p_an_upd_id,
    an_documents = p_an_documents,
    an_last_date = p_an_last_date,
    an_birthdate = p_an_birthdate,
    an_office_type_id = p_an_office_type_id,
    an_searchname = p_an_searchname,
    an_extra_ue_flag = p_an_extra_ue_flag,
    an_external_code = p_an_external_code,
    an_vat_id = p_an_vat_id,
    an_personal_fiscal_code = p_an_personal_fiscal_code,
    an_privacy_print = p_an_privacy_print,
    an_sms = p_an_sms,
    an_encrypted_fiscal_code = p_an_encrypted_fiscal_code,
    an_vat_purcentage = p_an_vat_purcentage,
    an_status = p_an_status,
    an_ownsite = p_an_ownsite,
    an_insurance_id = p_an_insurance_id,
    an_anagraphs_anagraph_id = p_an_anagraphs_anagraph_id,
    an_main_language_code = p_an_main_language_code,
    an_main_culture_code = p_an_main_culture_code,
    an_fiscal_code = p_an_fiscal_code,
    an_main_group_id = p_an_main_group_id,
    an_image_id = p_an_image_id,
    latitude = p_latitude,
    longitude = p_longitude,
    test = p_test,
    search_index = p_search_index,
    an_birthplace = p_an_birthplace,
    an_birthplace_code = p_an_birthplace_code,
    anagraph64 = p_anagraph64,
    main_category_id = p_main_category_id,
    osm_id = p_osm_id,
    an_description = p_an_description,
    an_address_number = p_an_address_number,
    anag_jguid = p_anag_jguid,
    anag_deleted = p_anag_deleted,
    insert_date = p_insert_date,
    update_date = p_update_date,
    user_insert = p_user_insert,
    jguid = p_jguid,
    custom_field_1 = p_custom_field_1,
    custom_field_2 = p_custom_field_2,
    custom_field_3 = p_custom_field_3,
    custom_float_1 = p_custom_float_1,
    custom_float_2 = p_custom_float_2,
    custom_int_1 = p_custom_int_1,
    custom_int_2 = p_custom_int_2,
    supplier_id = p_supplier_id,
    vessel_id = p_vessel_id,
    an_country_id = p_an_country_id,
    an_iso_country_code2 = p_an_iso_country_code2,
	deleted = p_deleted
  WHERE 
    (anagraph_id = v_id) ;
	
   return p_anagraph_id; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_title" jt="12" type="varchar" />
			<input_param name="p_an_name" jt="12" type="varchar" />
			<input_param name="p_an_second_name" jt="12" type="varchar" />
			<input_param name="p_an_last_name" jt="12" type="varchar" />
			<input_param name="p_an_notes" jt="12" type="varchar" />
			<input_param name="p_an_address" jt="12" type="varchar" />
			<input_param name="p_an_town" jt="12" type="varchar" />
			<input_param name="p_an_postal_code" jt="12" type="varchar" />
			<input_param name="p_an_iso_country_code" jt="12" type="varchar" />
			<input_param name="p_an_state_province" jt="12" type="varchar" />
			<input_param name="p_an_phone" jt="12" type="varchar" />
			<input_param name="p_an_phone2" jt="12" type="varchar" />
			<input_param name="p_an_fax" jt="12" type="varchar" />
			<input_param name="p_an_cellular" jt="12" type="varchar" />
			<input_param name="p_an_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_numeric" jt="12" type="varchar" />
			<input_param name="p_an_email" jt="12" type="varchar" />
			<input_param name="p_an_web" jt="12" type="varchar" />
			<input_param name="p_an_contact_id" jt="4" type="int4" />
			<input_param name="p_an_bank_account" jt="12" type="varchar" />
			<input_param name="p_an_payment_des" jt="12" type="varchar" />
			<input_param name="p_an_discount" jt="2" type="numeric" />
			<input_param name="p_an_distance" jt="4" type="int4" />
			<input_param name="p_an_distance_mesunit" jt="5" type="int2" />
			<input_param name="p_an_sex" jt="12" type="varchar" />
			<input_param name="p_an_cod_comune" jt="12" type="varchar" />
			<input_param name="p_an_cod_provincia" jt="12" type="varchar" />
			<input_param name="p_an_credit_line" jt="2" type="numeric" />
			<input_param name="p_an_currency_id" jt="5" type="int2" />
			<input_param name="p_an_cat_id" jt="5" type="int2" />
			<input_param name="p_an_notes2" jt="12" type="varchar" />
			<input_param name="p_an_notes3" jt="12" type="text" />
			<input_param name="p_an_edi" jt="-7" type="bool" />
			<input_param name="p_an_privacy" jt="-7" type="bool" />
			<input_param name="p_an_office_id" jt="5" type="int2" />
			<input_param name="p_an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="p_an_data_fido" jt="91" type="date" />
			<input_param name="p_an_user_insert" jt="12" type="varchar" />
			<input_param name="p_an_user_update" jt="12" type="varchar" />
			<input_param name="p_an_area_id" jt="5" type="int2" />
			<input_param name="p_an_agent_id" jt="5" type="int2" />
			<input_param name="p_an_area_code" jt="12" type="varchar" />
			<input_param name="p_an_zone_id" jt="12" type="varchar" />
			<input_param name="p_an_ins_id" jt="-5" type="int8" />
			<input_param name="p_an_upd_id" jt="-5" type="int8" />
			<input_param name="p_an_documents" jt="5" type="int2" />
			<input_param name="p_an_last_date" jt="91" type="date" />
			<input_param name="p_an_birthdate" jt="91" type="date" />
			<input_param name="p_an_office_type_id" jt="5" type="int2" />
			<input_param name="p_an_searchname" jt="12" type="varchar" />
			<input_param name="p_an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="p_an_external_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_id" jt="5" type="int2" />
			<input_param name="p_an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_privacy_print" jt="5" type="int2" />
			<input_param name="p_an_sms" jt="-7" type="bool" />
			<input_param name="p_an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_purcentage" jt="5" type="int2" />
			<input_param name="p_an_status" jt="5" type="int2" />
			<input_param name="p_an_ownsite" jt="-7" type="bool" />
			<input_param name="p_an_insurance_id" jt="-5" type="int8" />
			<input_param name="p_an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_main_language_code" jt="12" type="varchar" />
			<input_param name="p_an_main_culture_code" jt="12" type="varchar" />
			<input_param name="p_an_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_main_group_id" jt="4" type="int4" />
			<input_param name="p_an_image_id" jt="-5" type="int8" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_test" jt="8" type="float8" />
			<input_param name="p_search_index" jt="12" type="varchar" />
			<input_param name="p_an_birthplace" jt="12" type="varchar" />
			<input_param name="p_an_birthplace_code" jt="12" type="varchar" />
			<input_param name="p_anagraph64" jt="12" type="varchar" />
			<input_param name="p_main_category_id" jt="5" type="int2" />
			<input_param name="p_osm_id" jt="-5" type="int8" />
			<input_param name="p_an_description" jt="12" type="varchar" />
			<input_param name="p_an_address_number" jt="12" type="varchar" />
			<input_param name="p_anag_jguid" jt="12" type="varchar" />
			<input_param name="p_anag_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamp" />
			<input_param name="p_update_date" jt="93" type="timestamp" />
			<input_param name="p_user_insert" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_custom_field_1" jt="12" type="varchar" />
			<input_param name="p_custom_field_2" jt="12" type="varchar" />
			<input_param name="p_custom_field_3" jt="12" type="varchar" />
			<input_param name="p_custom_float_1" jt="7" type="float4" />
			<input_param name="p_custom_float_2" jt="7" type="float4" />
			<input_param name="p_custom_int_1" jt="4" type="int4" />
			<input_param name="p_custom_int_2" jt="4" type="int4" />
			<input_param name="p_supplier_id" jt="4" type="int4" />
			<input_param name="p_vessel_id" jt="5" type="int2" />
			<input_param name="p_an_country_id" jt="4" type="int4" />
			<input_param name="p_an_iso_country_code2" jt="1" type="bpchar" />
			<input_param name="p_deleted" jt="-7" type="bool" />
		</function>
	</schema>
	<schema name="analytics" catalogname="ergomercator" />
	<schema name="assets" catalogname="ergomercator" />
	<schema name="attorneys" catalogname="ergomercator" />
	<schema name="books" catalogname="ergomercator" />
	<schema name="cloud" catalogname="ergomercator" >
		<comment><![CDATA[Tabelle cloud di immagini, dati, locazioni, paypal ....]]></comment>
	</schema>
	<schema name="cms" catalogname="ergomercator" />
	<schema name="confluence" catalogname="ergomercator" />
	<schema name="crm" catalogname="ergomercator" />
	<schema name="documents" catalogname="ergomercator" >
		<comment><![CDATA[Documents such as invoices, Bill of Lading, Receipts, Proof of Delivery, Packing Lists]]></comment>
	</schema>
	<schema name="football" catalogname="ergomercator" />
	<schema name="gis" catalogname="ergomercator" />
	<schema name="health" catalogname="ergomercator" >
		<comment><![CDATA[health is studied for companies and laboratories involved in health care systema and applications]]></comment>
	</schema>
	<schema name="information_schema" catalogname="ergomercator" />
	<schema name="items" catalogname="ergomercator" />
	<schema name="jira" catalogname="ergomercator" />
	<schema name="jpublic" catalogname="ergomercator" >
		<comment><![CDATA[this is the area of the public tables that contain common Datas for all the applications]]></comment>
		<table name="buildings" >
			<column name="building_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[This is the worldwide building unique id]]></comment>
			</column>
			<column name="lat" type="real" length="8" decimal="8" jt="7" >
				<comment><![CDATA[Latitude coordinates]]></comment>
			</column>
			<column name="long" type="real" length="8" decimal="8" jt="7" >
				<comment><![CDATA[longitude Coordinates]]></comment>
			</column>
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="street_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="number" type="varchar" length="20" decimal="0" jt="12" />
			<column name="specification" type="varchar" length="20" decimal="0" jt="12" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="sub_town_area_id" type="integer" jt="4" >
				<comment><![CDATA[direct key to Town Area ID]]></comment>
			</column>
			<index name="buildings_pk" unique="PRIMARY_KEY" >
				<column name="building_id" />
			</index>
			<fk name="buildings_towns_areas_fk" to_schema="ergomercator.jpublic" to_table="town_areas" >
				<fk_column name="town_area_id" pk="town_area_id" />
			</fk>
			<fk name="buildings_towns_fk" to_schema="ergomercator.jpublic" to_table="towns" >
				<fk_column name="town_id" pk="town_id" />
			</fk>
		</table>
		<table name="contiguous_regions" >
			<column name="origin_iso_region_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="dest_iso_region_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="distance_cost" type="smallint" length="5" decimal="0" jt="5" />
			<index name="pk_contiguous_regions" unique="UNIQUE_KEY" >
				<column name="origin_iso_region_id" />
			</index>
			<fk name="fk_contiguous_regions" to_schema="ergomercator.jpublic" to_table="regions" update_action="cascade" >
				<fk_column name="origin_iso_region_id" pk="region_id" />
			</fk>
		</table>
		<table name="countries" >
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_country_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_country_code2" type="char" length="2" decimal="0" jt="1" mandatory="y" />
			<column name="country_year" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="iso_currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_country_number" type="char" length="3" decimal="0" jt="1" >
				<defo><![CDATA['000'::bpchar]]></defo>
			</column>
			<column name="country_flag" type="bytea" decimal="0" jt="-2" >
				<comment><![CDATA[Immagine Bandierina Nazione]]></comment>
			</column>
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="country_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="countries_pk" unique="PRIMARY_KEY" >
				<column name="country_id" />
			</index>
			<index name="countries_iso2_uk" unique="UNIQUE_KEY" >
				<column name="iso_country_code2" />
			</index>
			<index name="countries_iso_uk" unique="UNIQUE_KEY" >
				<column name="iso_country_code" />
			</index>
		</table>
		<table name="countries_trans" >
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="country_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<index name="countries_trans_pk" unique="PRIMARY_KEY" >
				<column name="language_id" />
				<column name="country_id" />
			</index>
			<index name="idx_countries_trans" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_countries_trans_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="lang_countries_fk" to_schema="ergomercator.jpublic" to_table="countries" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
			<fk name="fk_countries_langs" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="country_currencies" >
			<comment><![CDATA[This is the list of the currencies in on country]]></comment>
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="countries_currencies_pk" unique="PRIMARY_KEY" >
				<column name="currency_id" />
				<column name="country_id" />
			</index>
			<index name="idx_country_currencies" unique="NORMAL" >
				<column name="currency_id" />
			</index>
			<index name="idx_country_currencies_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="fk_currencies_countries" to_schema="ergomercator.jpublic" to_table="countries" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
			<fk name="fk_country_currencies" to_schema="ergomercator.jpublic" to_table="currencies" >
				<fk_column name="currency_id" pk="currency_id" />
			</fk>
		</table>
		<table name="cultures" >
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_country_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_language_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_culture_code" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[The culture or locale full name like Italiano Italia]]></comment>
			</column>
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign Key To currencies]]></comment>
			</column>
			<column name="decimal_point" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA['.'::bpchar]]></defo>
				<comment><![CDATA[decimail point]]></comment>
			</column>
			<column name="thousands_separator" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[','::bpchar]]></defo>
				<comment><![CDATA[thousand separator]]></comment>
			</column>
			<column name="stopwords" type="varchar[]" decimal="0" jt="2003" >
				<comment><![CDATA[array of char]]></comment>
			</column>
			<index name="iso_cultures_pkey" unique="PRIMARY_KEY" >
				<column name="country_id" />
				<column name="language_id" />
			</index>
			<index name="cultures_uk" unique="UNIQUE_KEY" >
				<column name="iso_country_code" />
				<column name="iso_language_code" />
			</index>
			<index name="fki_cultures_currencies" unique="NORMAL" >
				<column name="currency_id" />
			</index>
			<index name="idx_cultures" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_cultures_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="fk_cultures_countries" to_schema="ergomercator.jpublic" to_table="countries" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
			<fk name="fk_cultures_currencies" to_schema="ergomercator.jpublic" to_table="currencies" >
				<fk_column name="currency_id" pk="currency_id" />
			</fk>
			<fk name="fk_cultures_languages" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="currencies" >
			<column name="currency_id" type="smallserial" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[nextval('jpublic.currencies_seq'::regclass)]]></defo>
			</column>
			<column name="currency_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="currency_name" type="varchar" length="60" decimal="0" jt="12" />
			<column name="main_country_iso_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="currency_symbol" type="varchar" length="3" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
				<comment><![CDATA[guid universal unique identifier]]></comment>
			</column>
			<index name="currencies_pk" unique="PRIMARY_KEY" >
				<column name="currency_id" />
			</index>
			<index name="currencies_uk" unique="UNIQUE_KEY" >
				<column name="currency_code" />
			</index>
		</table>
		<table name="currencies_trans" >
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="currency_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<index name="currencies_trans_pk" unique="PRIMARY_KEY" >
				<column name="language_id" />
				<column name="currency_id" />
			</index>
			<index name="idx_currencies_trans" unique="NORMAL" >
				<column name="currency_id" />
			</index>
			<index name="idx_currencies_trans_0" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_lang_currencies" to_schema="ergomercator.jpublic" to_table="currencies" >
				<fk_column name="currency_id" pk="currency_id" />
			</fk>
			<fk name="fk_currencies_trans" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="dimension_models" >
			<column name="p_dimension_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="p_dimension_des" type="varchar" length="128" decimal="0" jt="12" />
			<index name="pk_dimensions" unique="PRIMARY_KEY" >
				<column name="p_dimension_id" />
			</index>
		</table>
		<table name="district_trans" >
			<column name="district_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[L`id di una provincia è un numero indica una Provincia Italiana, ma può indicare una contea USA o un Lander Tedesco....]]></comment>
			</column>
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="idx_district_trans" unique="NORMAL" >
				<column name="district_id" />
			</index>
			<index name="idx_district_trans_0" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_district_trans_lang" to_schema="ergomercator.jpublic" to_table="districts" >
				<fk_column name="district_id" pk="district_id" />
			</fk>
			<fk name="fk_district_trans" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="districts" >
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[L'id di una provincia è un numero indica una Provincia Italiana, ma può indicare una contea USA o un Lander Tedesco....]]></comment>
			</column>
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign Key To iso_regions]]></comment>
			</column>
			<column name="iso_district_code" type="varchar" length="6" decimal="0" jt="12" >
				<comment><![CDATA[The unique iso code for the county]]></comment>
			</column>
			<column name="district_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="local_district_code" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[This can be used for local coding and even for numberplates]]></comment>
			</column>
			<column name="numberplate_code" type="varchar" length="4" decimal="0" jt="12" />
			<index name="districts_pk" unique="PRIMARY_KEY" >
				<column name="district_id" />
			</index>
			<index name="idx_districts" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<fk name="districts_regions_fk" to_schema="ergomercator.jpublic" to_table="regions" >
				<fk_column name="region_id" pk="region_id" />
			</fk>
		</table>
		<table name="gender" >
			<column name="gender_code" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="gender_name" type="varchar" length="10" decimal="0" jt="12" />
			<index name="gender_pk" unique="PRIMARY_KEY" >
				<column name="gender_code" />
			</index>
		</table>
		<table name="lang_translations" >
			<column name="trans_language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="translated_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="pk_lang_translations" unique="PRIMARY_KEY" >
				<column name="trans_language_id" />
				<column name="language_id" />
			</index>
			<index name="idx_lang_translations" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_lang_translations_0" unique="NORMAL" >
				<column name="trans_language_id" />
			</index>
			<fk name="fk_lang_translations_mainlangs" to_schema="ergomercator.jpublic" to_table="languages" update_action="cascade" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
			<fk name="fk_lang_translations_translang" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="trans_language_id" pk="language_id" />
			</fk>
		</table>
		<table name="languages" >
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_language_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_language_code2" type="char" length="2" decimal="0" jt="1" mandatory="y" />
			<column name="language_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="iso_languages_pkey" unique="PRIMARY_KEY" >
				<column name="language_id" />
			</index>
			<index name="languages_uk" unique="UNIQUE_KEY" >
				<column name="iso_language_code" />
			</index>
		</table>
		<table name="location_types" >
			<column name="type_code" prior="type_id" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="alias_code" prior="alias_id" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="type_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="id" type="smallint" jt="5" mandatory="y" />
			<column name="alias_id" type="smallint" jt="5" />
			<index name="pk_location_types" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_location_types_location_types" to_schema="ergomercator.jpublic" to_table="location_types" >
				<fk_column name="alias_id" pk="id" />
			</fk>
		</table>
		<table name="locations" >
			<column name="place_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="location_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="places_pk" unique="PRIMARY_KEY" >
				<column name="place_id" />
			</index>
			<fk name="fk_locations_location_types" to_schema="ergomercator.jpublic" to_table="location_types" >
				<fk_column name="location_type_id" pk="id" />
			</fk>
			<fk name="fk_locations_towns" to_schema="ergomercator.jpublic" to_table="towns" >
				<fk_column name="town_id" pk="town_id" />
			</fk>
		</table>
		<table name="mail_attach" >
			<column name="ms_send_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="mail_attach_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="mail_attach_filename" type="varchar" length="512" decimal="0" jt="12" />
			<column name="mail_attach_blob" type="bytea" decimal="0" jt="-2" />
		</table>
		<table name="measure_units" >
			<column name="munit_id" type="smallserial" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[nextval('jpublic.munits_seq'::regclass)]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="munit_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="munit_des" type="varchar" length="60" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
				<comment><![CDATA[guid universal unique identifier]]></comment>
			</column>
			<index name="measure_units_pk" unique="PRIMARY_KEY" >
				<column name="munit_id" />
			</index>
		</table>
		<table name="regions" >
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="region_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="iso_region_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="local_region_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="iso_regions_pk" unique="PRIMARY_KEY" >
				<column name="region_id" />
			</index>
			<index name="regions_countries_ndx" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="fk_regions_countries" to_schema="ergomercator.jpublic" to_table="countries" update_action="cascade" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
		</table>
		<table name="regions_trans" >
			<column name="region_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="idx_regions_trans" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_regions_trans_0" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<fk name="fk_regions_trans" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
			<fk name="fk_regions_trans_lang" to_schema="ergomercator.jpublic" to_table="regions" >
				<fk_column name="region_id" pk="region_id" />
			</fk>
		</table>
		<table name="routes" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="type_des" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="short_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="code" type="varchar" length="20" decimal="0" jt="12" />
			<index name="unq_routes_id" unique="UNIQUE_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="social_networks" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="64" decimal="0" jt="12" />
			<index name="socialnetwork_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="socialnetwork_uk" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
		</table>
		<table name="sub_town_areas" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="description" type="varchar" length="256" decimal="0" jt="12" />
			<column name="geojson" type="json" decimal="0" jt="2000" />
			<index name="sub_town_areas_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_sub_town_areas_town_areas" to_schema="ergomercator.jpublic" to_table="town_areas" update_action="cascade" >
				<fk_column name="town_area_id" pk="town_area_id" />
			</fk>
		</table>
		<table name="table_template" >
			<comment><![CDATA[These are the sports or ... well .. sport clubs :)]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[This is the table unique ID....]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="able_template_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="clubs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="town_areas" >
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="town_area_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<index name="town_areas_pk" unique="PRIMARY_KEY" >
				<column name="town_area_id" />
			</index>
			<index name="town_area_name_ndx" unique="NORMAL" >
				<column name="town_area_name" />
			</index>
			<fk name="townareas_towns_fk" to_schema="ergomercator.jpublic" to_table="towns" update_action="cascade" >
				<fk_column name="town_id" pk="town_id" />
			</fk>
		</table>
		<table name="town_areas_routes" >
			<column name="area_id" type="integer" jt="4" mandatory="y" />
			<column name="route_id" type="integer" jt="4" mandatory="y" />
			<index name="pk_town_areas_routes_area_id" unique="PRIMARY_KEY" >
				<column name="area_id" />
				<column name="route_id" />
			</index>
			<fk name="fk_town_areas_routes_town_areas" to_schema="ergomercator.jpublic" to_table="town_areas" >
				<fk_column name="area_id" pk="town_area_id" />
			</fk>
			<fk name="fk_town_areas_routes_routes" to_schema="ergomercator.jpublic" to_table="routes" >
				<fk_column name="route_id" pk="id" />
			</fk>
		</table>
		<table name="towns" >
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="town_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="town_iso_code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="town_local_code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="town_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="towns_pk" unique="PRIMARY_KEY" >
				<column name="town_id" />
			</index>
			<index name="fki_towns_districts_fk" unique="NORMAL" >
				<column name="district_id" />
			</index>
			<fk name="towns_districts_fk" to_schema="ergomercator.jpublic" to_table="districts" >
				<fk_column name="district_id" pk="district_id" />
			</fk>
		</table>
		<table name="vat_id_codes" >
			<comment><![CDATA[Vat Identification Codes]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[Vat id code guid]]></comment>
			</column>
			<column name="db_schema_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="pk_vat_id_codes_guid" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
		</table>
	</schema>
	<schema name="locale" catalogname="ergomercator" />
	<schema name="logistic" catalogname="ergomercator" />
	<schema name="pg_catalog" catalogname="ergomercator" />
	<schema name="public" catalogname="ergomercator" />
	<schema name="re" catalogname="ergomercator" />
	<schema name="repository" catalogname="ergomercator" >
		<comment><![CDATA[This is the repository Schema that holds all the updates to the server]]></comment>
	</schema>
	<schema name="school" catalogname="ergomercator" />
	<schema name="shipping" catalogname="ergomercator" />
	<schema name="social" catalogname="ergomercator" />
	<schema name="sportmedia" catalogname="ergomercator" />
	<schema name="swap" catalogname="ergomercator" />
	<schema name="system" catalogname="ergomercator" >
		<comment><![CDATA[Thi is the System Schema containing all connection Data and storing passwords and user sessions]]></comment>
		<table name="app_forms" >
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="form_url" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Foreign key to applications, every form is member of an application]]></comment>
			</column>
			<column name="form_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="form_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="model_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spfo_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spfo_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_forms_pk" unique="PRIMARY_KEY" >
				<column name="form_id" />
			</index>
			<index name="app_forms_uk" unique="UNIQUE_KEY" >
				<column name="form_name" />
			</index>
			<index name="spfo_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spfo_jguid" />
			</index>
			<fk name="fk_app_forms_models" to_schema="ergomercator.system" to_table="form_models" >
				<fk_column name="model_id" pk="model_id" />
			</fk>
		</table>
		<table name="app_forms_objects" >
			<column name="object_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="object_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="owner_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppo_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppo_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_objects_pk" unique="PRIMARY_KEY" >
				<column name="object_id" />
			</index>
			<index name="sppo_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppo_jguid" />
			</index>
			<index name="fki_app_form_objects_forms_fk" unique="NORMAL" >
				<column name="form_id" />
			</index>
			<index name="fki_app_objects_owners_fk" unique="NORMAL" >
				<column name="owner_id" />
			</index>
			<fk name="app_form_objects_forms_fk" to_schema="ergomercator.system" to_table="app_forms" >
				<fk_column name="form_id" pk="form_id" />
			</fk>
			<fk name="app_objects_owners_fk" to_schema="ergomercator.system" to_table="app_forms_objects" >
				<fk_column name="owner_id" pk="object_id" />
			</fk>
		</table>
		<table name="app_forms_objects_properties" >
			<column name="property_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="object_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="property_name" type="varchar" length="64" decimal="0" jt="12" />
			<column name="textvalue" type="text" decimal="0" jt="12" />
			<column name="intvalue" type="integer" length="10" decimal="0" jt="4" />
			<column name="datevalue" type="date" length="13" decimal="0" jt="91" />
			<column name="translate" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="stringvalue" type="varchar" length="256" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spop_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spop_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_formproperties_pk" unique="PRIMARY_KEY" >
				<column name="property_id" />
			</index>
			<index name="spop_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spop_jguid" />
			</index>
			<index name="fki_app_formobjectsproperties_objects_fk" unique="NORMAL" >
				<column name="object_id" />
			</index>
			<fk name="app_formobjectsproperties_objects_fk" to_schema="ergomercator.system" to_table="app_forms_objects" >
				<fk_column name="object_id" pk="object_id" />
			</fk>
		</table>
		<table name="app_forms_objects_translations" >
			<column name="property_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="stringvalue" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="textvalue" type="text" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spot_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spot_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_form_propertiestrans_pk" unique="PRIMARY_KEY" >
				<column name="property_id" />
				<column name="language_id" />
			</index>
			<index name="spot_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spot_jguid" />
			</index>
			<fk name="app_forms_translation_properties_fk" to_schema="ergomercator.system" to_table="app_forms_objects_properties" >
				<fk_column name="property_id" pk="property_id" />
			</fk>
		</table>
		<table name="app_forms_translations" >
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="laguage_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="form_title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="main_iso_language" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="trans_iso_language" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_forms_translations_pk" unique="PRIMARY_KEY" >
				<column name="form_id" />
				<column name="laguage_id" />
			</index>
			<index name="sppt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppt_jguid" />
			</index>
			<index name="fki_app_form_trans_forms_fk" unique="NORMAL" >
				<column name="form_id" />
			</index>
			<index name="fki_app_from_trans_languages_fk" unique="NORMAL" >
				<column name="laguage_id" />
			</index>
			<fk name="app_form_trans_forms_fk" to_schema="ergomercator.system" to_table="app_forms" >
				<fk_column name="form_id" pk="form_id" />
			</fk>
		</table>
		<table name="app_functions" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spaf_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spaf_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_functions_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="app_functions_index01" unique="UNIQUE_KEY" >
				<column name="title" />
			</index>
			<index name="spaf_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spaf_jguid" />
			</index>
		</table>
		<table name="app_grids" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="form_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="grid_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="json_table" type="json" decimal="0" jt="2000" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[should be '0' for standard table format]]></comment>
			</column>
		</table>
		<table name="app_licenses" >
			<comment><![CDATA[This is the App Licenses table]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="app_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="hash_code" type="varchar" length="64" decimal="0" jt="12" />
			<column name="code" type="varchar" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spal_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spal_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_licenses_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="spal_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spal_jguid" />
			</index>
			<fk name="app_licenes_apps_fk" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="app_id" pk="application_id" />
			</fk>
		</table>
		<table name="app_member_forms" >
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spmf_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spmf_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_member_forms_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="form_id" />
			</index>
			<index name="spmf_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spmf_jguid" />
			</index>
			<fk name="app_member_forms_fk" to_schema="ergomercator.system" to_table="app_forms" >
				<fk_column name="form_id" pk="form_id" />
			</fk>
			<fk name="app_members_applications_fk" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
		</table>
		<table name="app_messages" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="code" type="char" length="9" decimal="0" jt="1" mandatory="y" />
			<column name="error" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<column name="app_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="contest_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_messages_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="app_messages_codes_ndx" unique="UNIQUE_KEY" >
				<column name="code" />
			</index>
			<index name="sppm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppm_jguid" />
			</index>
			<fk name="app_messages_apps" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="app_id" pk="application_id" />
			</fk>
		</table>
		<table name="applications" >
			<comment><![CDATA[This is the Database of the Models of Applications, it includes the application Name and the app_application_params]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="application_des" type="varchar" length="1024" decimal="0" jt="12" mandatory="y" />
			<column name="application_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="application_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="code" type="char" length="2" decimal="0" jt="1" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppl_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppl_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ap_applications_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
			</index>
			<index name="apapp_application_name_uk" unique="UNIQUE_KEY" >
				<column name="application_name" />
			</index>
			<index name="sppl_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppl_jguid" />
			</index>
		</table>
		<table name="db_app_grp_param" >
			<column name="app_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="param_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_db_app_grp_param" unique="UNIQUE_KEY" >
				<column name="db_group_id" />
			</index>
			<index name="idx_db_app_grp_param" unique="NORMAL" >
				<column name="app_id" />
			</index>
			<fk name="fk_db_app_grp_param" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="app_id" pk="application_id" />
			</fk>
		</table>
		<table name="db_app_schemas" >
			<comment><![CDATA[This is the list of the apps contained in one Schema]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ap_key" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="ap_secret" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="spps_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spps_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_app_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="db_schema_id" />
			</index>
			<index name="apsch_ap_key_uk" unique="UNIQUE_KEY" >
				<column name="ap_key" />
			</index>
			<index name="apsch_ap_secret_uk" unique="UNIQUE_KEY" >
				<column name="ap_secret" />
			</index>
			<index name="pk_db_app_schemas" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="spps_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spps_jguid" />
			</index>
			<index name="idx_db_app_schemas" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<fk name="fk_db_schemas_apps" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_db_app_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_applications_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_applications_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="application_id" />
			</index>
			<index name="sppr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppr_jguid" />
			</index>
			<index name="idx_db_applications_roles" unique="NORMAL" >
				<column name="role_id" />
			</index>
			<index name="idx_db_applications_roles_0" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<fk name="fk_db_roles_applications" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_db_applications_roles_0" to_schema="ergomercator.system" to_table="db_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
			<fk name="fk_db_applications_roles" to_schema="ergomercator.system" to_table="sys_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
		</table>
		<table name="db_esr_sch_param" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="param_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="db_groups" >
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_group_des" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sgrp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sgrp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_groups_pk" unique="PRIMARY_KEY" >
				<column name="db_group_id" />
			</index>
			<index name="sgrp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sgrp_jguid" />
			</index>
			<fk name="fk_db_groups" to_schema="ergomercator.system" to_table="db_app_grp_param" >
				<fk_column name="db_group_id" pk="db_group_id" />
			</fk>
		</table>
		<table name="db_groups_schemas" >
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="db_grp_sch_param" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="param_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="db_packages_schemas" >
			<comment><![CDATA[This is the table that connect a schema with different packages]]></comment>
			<column name="app_package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="spcs_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spcs_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_packages_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="app_package_id" />
				<column name="db_schema_id" />
			</index>
			<index name="pk_db_packages_schemas" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="pk_db_packages_schemas_0" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
			</index>
			<index name="spcs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spcs_jguid" />
			</index>
			<index name="idx_db_packages_schemas" unique="NORMAL" >
				<column name="app_package_id" />
			</index>
			<fk name="fk_db_packages_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_roles" >
			<comment><![CDATA[Roles of the users. An user can belong to on or many user_groups and can have one or many roles connected to an application]]></comment>
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="srls_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="srls_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_db_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
			</index>
			<index name="srls_jguid_uk" unique="UNIQUE_KEY" >
				<column name="srls_jguid" />
			</index>
		</table>
		<table name="db_schema_config" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="key" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="conf" type="json" decimal="0" jt="2000" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="db_schema_config_pkey" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="key" />
			</index>
			<index name="fki_db_schema_config_schema_fk" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="db_schema_config_schema_fk" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_schema_params" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Foreign  schema id for reference ..................]]></comment>
			</column>
			<column name="key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The System Parameters' Key]]></comment>
			</column>
			<column name="param" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[the parameter]]></comment>
			</column>
			<column name="value" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The value of The parameter, Can Even be a Text File ora a Whole Html Page]]></comment>
			</column>
			<column name="has_translation" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Has Translation]]></comment>
			</column>
			<column name="sscp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sscp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_schema_params_pk" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="key" />
				<column name="param" />
			</index>
			<index name="sscp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sscp_jguid" />
			</index>
			<fk name="foreign_key01" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_schemas" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_name" type="varchar" length="60" decimal="0" jt="12" mandatory="y" />
			<column name="schema_des" type="varchar" length="512" decimal="0" jt="12" mandatory="y" />
			<column name="personal" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[This column tell us if this schema is linked to a person as a personal schema to store owner's data, password, and profiles]]></comment>
			</column>
			<column name="db_schema_key" type="varchar" length="256" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="default_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="url" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ssch_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ssch_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="ssch_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ssch_jguid" />
			</index>
			<index name="db_schema_url_ndx" unique="NORMAL" >
				<column name="url" />
			</index>
			<index name="db_schemas_key_ndx" unique="NORMAL" >
				<column name="db_schema_key" />
			</index>
		</table>
		<table name="db_schemas_roles" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="app_package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="sscr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sscr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_db_schemas_roles" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
				<column name="role_id" />
			</index>
			<index name="pk_db_schemas_roles_0" unique="UNIQUE_KEY" >
				<column name="app_package_id" />
			</index>
			<index name="pk_db_schemas_roles_1" unique="UNIQUE_KEY" >
				<column name="app_package_id" />
				<column name="role_id" />
				<column name="db_schema_id" />
			</index>
			<index name="pk_db_schemas_roles_2" unique="UNIQUE_KEY" >
				<column name="role_id" />
			</index>
			<index name="pk_db_schemas_roles_3" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="sscr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sscr_jguid" />
			</index>
			<index name="idx_db_schemas_roles" unique="NORMAL" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
			</index>
			<fk name="fk_db_schemas_roles" to_schema="ergomercator.system" to_table="db_packages_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
				<fk_column name="app_package_id" pk="app_package_id" />
			</fk>
			<fk name="fk_db_schemas_roles_2" to_schema="ergomercator.system" to_table="db_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
			<fk name="fk_db_schemas_roles_1" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_schemas_roles_3" to_schema="ergomercator.system" to_table="packages" >
				<fk_column name="app_package_id" pk="package_id" />
			</fk>
			<fk name="fk_db_schemas_roles_0" to_schema="ergomercator.system" to_table="sys_roles" update_action="cascade" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
		</table>
		<table name="db_table_params" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="table_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="fieldname" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="fieldtitle" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="ongrid" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pxwidth" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="gridgroup" type="varchar" length="128" decimal="0" jt="12" />
			<column name="exportfield" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="exporttype" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="32" decimal="0" jt="12" />
			<column name="gridtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlabel" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlength" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fieldprecisoin" type="smallint" length="5" decimal="0" jt="5" />
			<column name="gridpos" type="smallint" length="5" decimal="0" jt="5" />
			<fk name="fk_db_table_params_db_tables" to_schema="ergomercator.system" to_table="db_tables" update_action="cascade" >
				<fk_column name="table_guid" pk="jguid" />
			</fk>
		</table>
		<table name="db_tables" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="schema" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="isvirtual" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[If A table is 'Virtual' then its name is a 'logical' name made by a DataModule or Model Identifier and an Object Name (as Anagraphs.qryAnagraphs). A virtual Table can be a View or a Select of many Tables from which it inherits fields features]]></comment>
			</column>
			<column name="model_uid" type="uuid" decimal="0" jt="1111" >
				<comment><![CDATA[Foreign Key to db_models table, usually Models belong to a particula Schema in the db.]]></comment>
			</column>
			<column name="isquery" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[If a RecorSet decends from a Query then it does have all features (name fields) of a table but is defined by a Query]]></comment>
			</column>
			<column name="query_text" type="text" decimal="0" jt="12" >
				<comment><![CDATA[This is The Query Text.]]></comment>
			</column>
			<index name="DB_TABLES_PK" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="DB_TABLES_UK" unique="UNIQUE_KEY" >
				<column name="schema" />
				<column name="name" />
			</index>
		</table>
		<table name="db_tables_fields" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[This UID is an important link to the interface structure and localization of all applications according to this field]]></comment>
			</column>
			<column name="table_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="fieldname" type="varchar" length="64" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Field Name as registered in Database and in Jorm Structure]]></comment>
			</column>
			<column name="fieldtitle" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The on-screen Field Title this field can be localized using its GUID. Appears both on Grid Title and on LabelTitle a different GridTitle should be implemented]]></comment>
			</column>
			<column name="ongrid" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<comment><![CDATA[this exactly reports if by default the field is on grid or not]]></comment>
			</column>
			<column name="pxwidth" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Pixel Width uses for Grids (not dinamic adapts to hdpi screen)]]></comment>
			</column>
			<column name="fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[This is the 'Delphi' DataType not exactly the Native DB DataType]]></comment>
			</column>
			<column name="gridgroup" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[many fields can be grouped in some kind of Grids this example 'groups' the field types together]]></comment>
			</column>
			<column name="exportfield" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="exporttype" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[if different from -1 sets a different type conversion for export]]></comment>
			</column>
			<column name="mask" type="varchar" length="32" decimal="0" jt="12" >
				<comment><![CDATA[if set is used to show the field with a 'mask' format on screen or grid]]></comment>
			</column>
			<column name="gridtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlabel" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlength" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fieldprecisoin" type="smallint" length="5" decimal="0" jt="5" />
			<column name="gridpos" type="smallint" length="5" decimal="0" jt="5" />
			<index name="db_table_fields_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="db_table_fields_uk" unique="UNIQUE_KEY" >
				<column name="fieldname" />
				<column name="table_guid" />
			</index>
			<fk name="db_fields_tables_fk" to_schema="ergomercator.system" to_table="db_tables" >
				<fk_column name="table_guid" pk="jguid" />
			</fk>
		</table>
		<table name="db_user_groups" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="susg_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="susg_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_user_groups_pk" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
				<column name="db_group_id" />
			</index>
			<index name="susg_jguid_uk" unique="UNIQUE_KEY" >
				<column name="susg_jguid" />
			</index>
			<index name="idx_db_user_groups" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_user_groups_0" unique="NORMAL" >
				<column name="db_group_id" />
			</index>
			<fk name="fk_db_user_groups_0" to_schema="ergomercator.system" to_table="db_groups" >
				<fk_column name="db_group_id" pk="db_group_id" />
			</fk>
			<fk name="fk_db_user_groups" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_user_schema_params" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Foreign  schema id for reference ..................]]></comment>
			</column>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The System Parameters' Key]]></comment>
			</column>
			<column name="param" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[the parameter]]></comment>
			</column>
			<column name="value" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The value of The parameter, Can Even be a Text File ora a Whole Html Page]]></comment>
			</column>
			<column name="has_translation" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Has Translation]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_user_schema_params_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="ssup_jguid_uk" unique="UNIQUE_KEY" >
				<column name="db_user_id" />
				<column name="db_schema_id" />
				<column name="key" />
				<column name="param" />
			</index>
			<fk name="db_user_schema_params_db_schema_fk" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_user_sessions" >
			<comment><![CDATA[This is the user Sessions Table]]></comment>
			<column name="db_session_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[This is the Session Key]]></comment>
			</column>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key To Users]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[This is the link to schema id]]></comment>
			</column>
			<column name="db_session_key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="start_time" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="ispublic" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="usse_jguid" type="varchar" length="40" decimal="0" jt="12" >
				<comment><![CDATA[guid unique identifier across DB's]]></comment>
			</column>
			<column name="surs_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="surs_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_user_sessions_pk" unique="PRIMARY_KEY" >
				<column name="db_session_id" />
			</index>
			<index name="surs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="surs_jguid" />
			</index>
			<index name="db_user_sessions_key" unique="NORMAL" >
				<column name="db_session_key" />
			</index>
			<index name="idx_db_user_sessions" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_user_sessions_0" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="idx_db_user_sessions_1" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_db_user_sessions" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_user_sessions_db_users" to_schema="ergomercator.system" to_table="db_users" update_action="cascade" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="active" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="email" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="password" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="username" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="isactive" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="verify_token" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="verified" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="default_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[This is the Default Schema of the User]]></comment>
			</column>
			<column name="ispublic" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[This columns tell us if this user is just made to create a public connection]]></comment>
			</column>
			<column name="internal_key" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[this is the autogenerated internal id that is the base of the verify_token]]></comment>
			</column>
			<column name="default_role_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="search_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="reverse_search" type="varchar" length="256" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="main_profile_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="main_profile_id" type="varchar" length="64" decimal="0" jt="12" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="image_url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="iso_language_code" type="char" length="2" decimal="0" jt="1" />
			<column name="iso_culture_code" type="char" length="5" decimal="0" jt="1" />
			<column name="user_first_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="user_family_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="emailsent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="emailconfirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="emaildate" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="payment" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[payment received]]></comment>
			</column>
			<column name="payment_expiration_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[payment expiration date. Usually a date with an alarm that is 365 Days for yearly abonement]]></comment>
			</column>
			<column name="user_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="suse_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="suse_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="social_id" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[Main Social ID -]]></comment>
			</column>
			<column name="social_type" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Social Identifier for user logged in with oAuth from Social.]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="db_users_pkey" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
			</index>
			<index name="dbusr_mail_uk_ndx" unique="UNIQUE_INDEX" >
				<column name="email" />
			</index>
			<index name="dbusr_username_uk_ndx" unique="UNIQUE_INDEX" >
				<column name="username" />
			</index>
			<index name="suse_jguid_uk" unique="UNIQUE_KEY" >
				<column name="suse_jguid" />
			</index>
			<fk name="dbusr_sysroles_fk" to_schema="ergomercator.system" to_table="sys_roles" >
				<fk_column name="default_role_id" pk="role_id" />
			</fk>
		</table>
		<table name="db_users_payments" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="payment_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="amount" type="money" decimal="0" jt="3" mandatory="y" />
			<column name="payment_expiration_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="surp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="surp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_users_payments_pk" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
				<column name="db_schema_id" />
				<column name="payment_date" />
			</index>
			<index name="surp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="surp_jguid" />
			</index>
			<fk name="db_users_payments_schemas_fk" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="db_users_payments_users_fk" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users_profiles" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="first_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="last_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="address_street" type="varchar" length="128" decimal="0" jt="12" />
			<column name="address_number" type="varchar" length="12" decimal="0" jt="12" />
			<column name="address_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cellular_phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="work_phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax_number" type="varchar" length="20" decimal="0" jt="12" />
			<column name="gender_code" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="birth_date" type="date" length="13" decimal="0" jt="91" />
			<column name="birth_country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="birth_region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="birth_district_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="birth_town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="public_email" type="varchar" length="256" decimal="0" jt="12" />
			<column name="title" type="varchar" length="30" decimal="0" jt="12" />
			<column name="search_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="reverse_search" type="varchar" length="256" decimal="0" jt="12" />
			<column name="address_full" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="fiscal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="smssent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="smsconfirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="smsdate" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="smschecknumber" type="varchar" length="4" decimal="0" jt="12" />
			<column name="address_town" type="varchar" length="256" decimal="0" jt="12" />
			<column name="p_facebook_json" type="json" decimal="0" jt="2000" />
			<column name="facebook_json" type="json" decimal="0" jt="2000" />
			<column name="address_state_province" type="varchar" length="20" decimal="0" jt="12" >
				<defo><![CDATA[''::character varying]]></defo>
			</column>
			<column name="uspr_jguid" type="varchar" length="40" decimal="0" jt="12" >
				<comment><![CDATA[guid unique identifier across DB's]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="supr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="supr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="db_users_profiles_pk" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
			</index>
			<index name="supr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="supr_jguid" />
			</index>
			<index name="idx_db_users_profiles" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<index name="idx_db_users_profiles_0" unique="NORMAL" >
				<column name="district_id" />
			</index>
			<index name="idx_db_users_profiles_1" unique="NORMAL" >
				<column name="town_id" />
			</index>
			<index name="idx_db_users_profiles_2" unique="NORMAL" >
				<column name="gender_code" />
			</index>
			<index name="searc_name_ndx" unique="NORMAL" >
				<column name="reverse_search" />
				<column name="search_name" />
			</index>
			<fk name="fk_dbprofiles_users" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="srr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="srr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_db_users_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="db_user_id" />
			</index>
			<index name="idx_db_users_roles" unique="UNIQUE_KEY" >
				<column name="role_id" />
			</index>
			<index name="srr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="srr_jguid" />
			</index>
			<index name="idx_db_users_roles_0" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<fk name="fk_db_users_roles_0" to_schema="ergomercator.system" to_table="db_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
			<fk name="fk_db_roles_users" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
			<fk name="fk_db_users_roles" to_schema="ergomercator.system" to_table="sys_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
		</table>
		<table name="db_users_schemas" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="isadmin" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="isdefault" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="isowner" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="readwrite" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="suss_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="suss_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_users_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="db_user_id" />
			</index>
			<index name="suss_jguid_uk" unique="UNIQUE_KEY" >
				<column name="suss_jguid" />
			</index>
			<index name="fki_dbusrschemas_dbusers_fk" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_users_schemas" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="fk_db_users_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="dbusrschemas_dbusers_fk" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users_schemas_apps" >
			<comment><![CDATA[Tell us which apps can a user reach for each schema]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sura_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sura_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_users_schemas_apps_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="db_schema_id" />
				<column name="db_user_id" />
			</index>
			<index name="pk_db_users_schemas_apps" unique="UNIQUE_KEY" >
				<column name="db_user_id" />
			</index>
			<index name="sura_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sura_jguid" />
			</index>
			<index name="idx_db_users_schemas_apps" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<index name="idx_db_users_schemas_apps_0" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="fk_db_users_schemas_apps_0" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_db_users_schemas_apps_1" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_users_schemas_apps" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users_schemas_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="app_package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="suro_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="suro_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_db_users_schemas_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="db_user_id" />
				<column name="db_schema_id" />
				<column name="app_package_id" />
			</index>
			<index name="suro_jguid_uk" unique="UNIQUE_KEY" >
				<column name="suro_jguid" />
			</index>
			<index name="db_users_schemas_roles_u" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_users_schemas_roles" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="idx_db_users_schemas_roles_0" unique="NORMAL" >
				<column name="role_id" />
			</index>
			<index name="idx_db_users_schemas_roles_1" unique="NORMAL" >
				<column name="app_package_id" />
			</index>
			<index name="idx_db_users_schemas_roles_2" unique="NORMAL" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
				<column name="role_id" />
			</index>
			<fk name="fk_db_users_schemas_roles" to_schema="ergomercator.system" to_table="db_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
			<fk name="fk_db_users_schemas_roles_0" to_schema="ergomercator.system" to_table="db_schemas_roles" >
				<fk_column name="app_package_id" pk="app_package_id" />
				<fk_column name="role_id" pk="role_id" />
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_roles_schemas_users" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="financial_years" >
			<column name="financial_year_des" type="varchar" length="10" decimal="0" jt="12" />
			<column name="financial_year_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="date_from" type="date" length="13" decimal="0" jt="91" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="date_to" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="date" length="13" decimal="0" jt="91" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
		</table>
		<table name="form_models" >
			<column name="model_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="form_def_name" type="varchar" length="100" decimal="0" jt="12" />
			<column name="parent_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sfrm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sfrm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_form_definitions" unique="PRIMARY_KEY" >
				<column name="model_id" />
			</index>
			<index name="sfrm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sfrm_jguid" />
			</index>
			<index name="idx_form_models" unique="NORMAL" >
				<column name="parent_id" />
			</index>
			<fk name="fk_form_models_parents" to_schema="ergomercator.system" to_table="form_models" >
				<fk_column name="parent_id" pk="model_id" />
			</fk>
		</table>
		<table name="form_objects_trans" >
			<column name="app_application_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="app_form_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="main_language_code" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="trans_language_code" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="object_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="object_property" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="object_text" type="varchar" length="1024" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sfrt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sfrt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_form_objects_trans" unique="PRIMARY_KEY" >
				<column name="app_application_name" />
				<column name="app_form_name" />
				<column name="main_language_code" />
				<column name="trans_language_code" />
				<column name="object_name" />
				<column name="object_property" />
			</index>
			<index name="sfrt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sfrt_jguid" />
			</index>
		</table>
		<table name="json_objects" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="object" type="json" decimal="0" jt="2000" mandatory="y" />
			<index name="json_objects_pkey" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="packages" >
			<comment><![CDATA[Application Packages that contain the mix of many applications]]></comment>
			<column name="package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="package_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="package_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spck_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spck_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ap_app_packages_pkey" unique="PRIMARY_KEY" >
				<column name="package_id" />
			</index>
			<index name="pk_packages" unique="UNIQUE_KEY" >
				<column name="package_name" />
			</index>
			<index name="spck_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spck_jguid" />
			</index>
		</table>
		<table name="packages_applications" >
			<comment><![CDATA[This is the list of applications taking part of a Package]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spca_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spca_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ap_packages_applications_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="package_id" />
			</index>
			<index name="spca_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spca_jguid" />
			</index>
			<index name="idx_ap_packages_applications" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<index name="idx_packages_applications" unique="NORMAL" >
				<column name="package_id" />
			</index>
			<fk name="fk_ap_packages_applications" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_packages_applications" to_schema="ergomercator.system" to_table="packages" >
				<fk_column name="package_id" pk="package_id" />
			</fk>
		</table>
		<table name="schemalog" >
			<column name="schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="session_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="logtime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="log" type="text" decimal="0" jt="12" />
		</table>
		<table name="sys_params" >
			<column name="key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The System Parameters' Key]]></comment>
			</column>
			<column name="param" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[the parameter]]></comment>
			</column>
			<column name="value" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The value of The parameter, Can Even be a Text File ora a Whole Html Page]]></comment>
			</column>
			<column name="has_translation" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Has Translation]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sssp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sssp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="sysparams_pk" unique="PRIMARY_KEY" >
				<column name="key" />
				<column name="param" />
			</index>
			<index name="sssp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sssp_jguid" />
			</index>
		</table>
		<table name="sys_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="role_code" type="char" length="3" decimal="0" jt="1" />
			<column name="role_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="role_des" type="text" decimal="0" jt="12" />
			<column name="issysadmin" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="isguest" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="isuser" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="isadmin" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sssr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sssr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
			</index>
			<index name="sssr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sssr_jguid" />
			</index>
		</table>
		<table name="syslog" >
			<column name="logtime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="log" type="text" decimal="0" jt="12" />
			<column name="session_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="syslgdate" unique="NORMAL" >
				<column name="logtime" options="DESC" />
			</index>
		</table>
		<table name="temp_session" >
			<comment><![CDATA[Temporary Session Table]]></comment>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_session_key" type="varchar" decimal="0" jt="12" />
			<column name="db_session_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="start_time" type="timestamptz" length="12" decimal="6" jt="93" />
		</table>
		<table name="tmp_grids" >
			<column name="fieldname" type="varchar" length="128" decimal="0" jt="12" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="bgcolor" type="integer" length="10" decimal="0" jt="4" />
			<column name="width" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="128" decimal="0" jt="12" />
			<column name="excel" type="smallint" length="5" decimal="0" jt="5" />
			<column name="chart" type="boolean" length="1" decimal="0" jt="-7" />
		</table>
		<view name="db_schema_config_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT db_schema_config.db_schema_id,
    db_schema_config.key,
    db_schema_config.conf,
    db_schema_config.jguid,
    db_schema_config.deleted
   FROM system.db_schema_config
  WHERE (db_schema_config.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="key" type="varchar" />
			<column name="conf" type="json" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
		</view>
		<view name="db_user_sessions_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT s.db_user_id,
    s.db_schema_id,
    s.db_session_key,
    s.db_session_id,
    s.language_id,
    s.start_time,
    s.insert_date,
    s.usse_jguid,
    s.surs_jguid,
    s.surs_deleted,
    u.country_id,
    p.region_id,
    p.district_id,
    p.town_id,
    p.first_name,
    p.last_name,
    p.address_street,
    p.address_number,
    p.address_postal_code,
    p.phone,
    p.cellular_phone,
    p.work_phone,
    p.fax_number,
    p.gender_code,
    p.birth_date,
    p.birth_country_id,
    p.birth_region_id,
    p.birth_district_id,
    p.birth_town_id,
    p.public_email,
    p.title,
    p.address_full,
    a.latitude,
    a.longitude,
    p.fiscal_code,
    p.smssent,
    p.smsconfirmed,
    p.smsdate,
    p.smschecknumber,
    p.address_town,
    p.p_facebook_json,
    p.facebook_json,
    p.address_state_province,
    p.uspr_jguid,
    p.supr_jguid,
    p.supr_deleted,
    u.active,
    u.email,
    u.password,
    u.username,
    u.isactive,
    u.verify_token,
    u.verified,
    u.default_schema_id,
    u.internal_key,
    u.default_role_id,
    u.main_profile_type_id,
    u.main_profile_id,
    u.image_id,
    u.image_url,
    u.iso_language_code,
    u.iso_culture_code,
    u.user_first_name,
    u.user_family_name,
    u.emailsent,
    u.emailconfirmed,
    u.emaildate,
    u.payment,
    u.payment_expiration_date,
    u.user_deleted,
    u.suse_jguid,
    u.suse_deleted,
    u.social_id,
    u.social_type,
    a.anagraph_id,
    a.an_title,
    a.an_name,
    a.an_second_name,
    a.an_last_name,
    a.an_notes,
    a.an_address,
    a.an_town,
    a.an_postal_code,
    a.an_iso_country_code,
    a.an_state_province,
    a.an_phone,
    a.an_phone2,
    a.an_fax,
    a.an_cellular,
    a.an_code,
    a.an_vat_numeric,
    a.an_email,
    a.an_web,
    a.an_contact_id,
    a.an_bank_account,
    a.an_payment_des,
    a.an_discount,
    a.an_distance,
    a.an_distance_mesunit,
    a.an_sex,
    a.an_cod_comune,
    a.an_cod_provincia,
    a.an_credit_line,
    a.an_currency_id,
    a.an_cat_id,
    a.an_notes2,
    a.an_notes3,
    a.an_edi,
    a.an_privacy,
    a.an_office_id,
    a.an_cod_prov_rif,
    a.an_data_fido,
    a.an_user_insert,
    a.an_user_update,
    a.an_area_id,
    a.an_agent_id,
    a.an_area_code,
    a.an_zone_id,
    a.an_ins_id,
    a.an_upd_id,
    a.an_documents,
    a.an_last_date,
    a.an_birthdate,
    a.an_office_type_id,
    a.an_searchname,
    a.an_extra_ue_flag,
    a.an_external_code,
    a.an_vat_id,
    a.an_personal_fiscal_code,
    a.an_privacy_print,
    a.an_sms,
    a.an_encrypted_fiscal_code,
    a.an_vat_purcentage,
    a.an_status,
    a.an_ownsite,
    a.an_insurance_id,
    a.an_anagraphs_anagraph_id,
    a.an_main_language_code,
    a.an_main_culture_code,
    a.an_fiscal_code,
    a.an_main_group_id,
    a.an_image_id,
    a.search_index,
    a.an_birthplace,
    a.an_birthplace_code,
    a.anagraph64,
    a.main_category_id,
    a.osm_id,
    a.an_description,
    a.an_address_number,
    a.anag_jguid,
    a.anag_deleted,
    a.jguid,
    a.custom_field_1,
    a.custom_field_2,
    a.custom_field_3,
    a.custom_float_1,
    a.custom_float_2,
    a.custom_int_1,
    a.custom_int_2,
    a.supplier_id,
    a.vessel_id,
    a.an_country_id,
    a.an_iso_country_code2,
    a.deleted
   FROM (((system.db_user_sessions s
     JOIN system.db_users u ON ((s.db_user_id = u.db_user_id)))
     JOIN system.db_users_profiles p ON ((s.db_user_id = p.db_user_id)))
     LEFT JOIN anagraph.anagraphs_view a ON ((p.anagraph_id = a.anagraph_id)));]]></view_script>
			<column name="db_user_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="db_session_key" type="varchar" />
			<column name="db_session_id" type="bigint" />
			<column name="language_id" type="smallint" />
			<column name="start_time" type="timestamptz" />
			<column name="insert_date" type="timestamptz" />
			<column name="usse_jguid" type="varchar" />
			<column name="surs_jguid" type="varchar" />
			<column name="surs_deleted" type="boolean" />
			<column name="country_id" type="smallint" />
			<column name="region_id" type="smallint" />
			<column name="district_id" type="smallint" />
			<column name="town_id" type="integer" />
			<column name="first_name" type="varchar" />
			<column name="last_name" type="varchar" />
			<column name="address_street" type="varchar" />
			<column name="address_number" type="varchar" />
			<column name="address_postal_code" type="varchar" />
			<column name="phone" type="varchar" />
			<column name="cellular_phone" type="varchar" />
			<column name="work_phone" type="varchar" />
			<column name="fax_number" type="varchar" />
			<column name="gender_code" type="char" />
			<column name="birth_date" type="date" />
			<column name="birth_country_id" type="smallint" />
			<column name="birth_region_id" type="smallint" />
			<column name="birth_district_id" type="smallint" />
			<column name="birth_town_id" type="integer" />
			<column name="public_email" type="varchar" />
			<column name="title" type="varchar" />
			<column name="address_full" type="varchar" />
			<column name="latitude" type="float8" />
			<column name="longitude" type="float8" />
			<column name="fiscal_code" type="varchar" />
			<column name="smssent" type="boolean" />
			<column name="smsconfirmed" type="boolean" />
			<column name="smsdate" type="timestamptz" />
			<column name="smschecknumber" type="varchar" />
			<column name="address_town" type="varchar" />
			<column name="p_facebook_json" type="json" />
			<column name="facebook_json" type="json" />
			<column name="address_state_province" type="varchar" />
			<column name="uspr_jguid" type="varchar" />
			<column name="supr_jguid" type="varchar" />
			<column name="supr_deleted" type="boolean" />
			<column name="active" type="boolean" />
			<column name="email" type="varchar" />
			<column name="password" type="varchar" />
			<column name="username" type="varchar" />
			<column name="isactive" type="boolean" />
			<column name="verify_token" type="varchar" />
			<column name="verified" type="boolean" />
			<column name="default_schema_id" type="integer" />
			<column name="internal_key" type="varchar" />
			<column name="default_role_id" type="smallint" />
			<column name="main_profile_type_id" type="smallint" />
			<column name="main_profile_id" type="varchar" />
			<column name="image_id" type="bigint" />
			<column name="image_url" type="varchar" />
			<column name="iso_language_code" type="char" />
			<column name="iso_culture_code" type="char" />
			<column name="user_first_name" type="varchar" />
			<column name="user_family_name" type="varchar" />
			<column name="emailsent" type="boolean" />
			<column name="emailconfirmed" type="boolean" />
			<column name="emaildate" type="timestamptz" />
			<column name="payment" type="boolean" />
			<column name="payment_expiration_date" type="date" />
			<column name="user_deleted" type="boolean" />
			<column name="suse_jguid" type="varchar" />
			<column name="suse_deleted" type="boolean" />
			<column name="social_id" type="varchar" />
			<column name="social_type" type="varchar" />
			<column name="anagraph_id" type="integer" />
			<column name="an_title" type="varchar" />
			<column name="an_name" type="varchar" />
			<column name="an_second_name" type="varchar" />
			<column name="an_last_name" type="varchar" />
			<column name="an_notes" type="varchar" />
			<column name="an_address" type="varchar" />
			<column name="an_town" type="varchar" />
			<column name="an_postal_code" type="varchar" />
			<column name="an_iso_country_code" type="varchar" />
			<column name="an_state_province" type="varchar" />
			<column name="an_phone" type="varchar" />
			<column name="an_phone2" type="varchar" />
			<column name="an_fax" type="varchar" />
			<column name="an_cellular" type="varchar" />
			<column name="an_code" type="varchar" />
			<column name="an_vat_numeric" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_web" type="varchar" />
			<column name="an_contact_id" type="integer" />
			<column name="an_bank_account" type="varchar" />
			<column name="an_payment_des" type="varchar" />
			<column name="an_discount" type="numeric" />
			<column name="an_distance" type="integer" />
			<column name="an_distance_mesunit" type="smallint" />
			<column name="an_sex" type="varchar" />
			<column name="an_cod_comune" type="varchar" />
			<column name="an_cod_provincia" type="varchar" />
			<column name="an_credit_line" type="numeric" />
			<column name="an_currency_id" type="smallint" />
			<column name="an_cat_id" type="smallint" />
			<column name="an_notes2" type="varchar" />
			<column name="an_notes3" type="text" />
			<column name="an_edi" type="boolean" />
			<column name="an_privacy" type="boolean" />
			<column name="an_office_id" type="integer" />
			<column name="an_cod_prov_rif" type="varchar" />
			<column name="an_data_fido" type="date" />
			<column name="an_user_insert" type="varchar" />
			<column name="an_user_update" type="varchar" />
			<column name="an_area_id" type="smallint" />
			<column name="an_agent_id" type="smallint" />
			<column name="an_area_code" type="varchar" />
			<column name="an_zone_id" type="varchar" />
			<column name="an_ins_id" type="bigint" />
			<column name="an_upd_id" type="bigint" />
			<column name="an_documents" type="smallint" />
			<column name="an_last_date" type="date" />
			<column name="an_birthdate" type="date" />
			<column name="an_office_type_id" type="smallint" />
			<column name="an_searchname" type="varchar" />
			<column name="an_extra_ue_flag" type="boolean" />
			<column name="an_external_code" type="varchar" />
			<column name="an_vat_id" type="smallint" />
			<column name="an_personal_fiscal_code" type="varchar" />
			<column name="an_privacy_print" type="smallint" />
			<column name="an_sms" type="boolean" />
			<column name="an_encrypted_fiscal_code" type="varchar" />
			<column name="an_vat_purcentage" type="smallint" />
			<column name="an_status" type="smallint" />
			<column name="an_ownsite" type="boolean" />
			<column name="an_insurance_id" type="bigint" />
			<column name="an_anagraphs_anagraph_id" type="integer" />
			<column name="an_main_language_code" type="varchar" />
			<column name="an_main_culture_code" type="varchar" />
			<column name="an_fiscal_code" type="varchar" />
			<column name="an_main_group_id" type="integer" />
			<column name="an_image_id" type="bigint" />
			<column name="search_index" type="varchar" />
			<column name="an_birthplace" type="varchar" />
			<column name="an_birthplace_code" type="varchar" />
			<column name="anagraph64" type="varchar" />
			<column name="main_category_id" type="smallint" />
			<column name="osm_id" type="bigint" />
			<column name="an_description" type="varchar" />
			<column name="an_address_number" type="varchar" />
			<column name="anag_jguid" type="varchar" />
			<column name="anag_deleted" type="boolean" />
			<column name="jguid" type="uuid" />
			<column name="custom_field_1" type="varchar" />
			<column name="custom_field_2" type="varchar" />
			<column name="custom_field_3" type="varchar" />
			<column name="custom_float_1" type="real" />
			<column name="custom_float_2" type="real" />
			<column name="custom_int_1" type="integer" />
			<column name="custom_int_2" type="integer" />
			<column name="supplier_id" type="integer" />
			<column name="vessel_id" type="smallint" />
			<column name="an_country_id" type="integer" />
			<column name="an_iso_country_code2" type="char" />
			<column name="deleted" type="boolean" />
		</view>
		<sequence name="app_forms_seq" options="START WITH 1" />
		<sequence name="app_licenses_seq" options="START WITH 1" />
		<sequence name="app_objects_seq" options="START WITH 1" />
		<sequence name="app_properties_seq" options="START WITH 1" />
		<sequence name="applications_seq" options="START WITH 1" />
		<sequence name="db_schema_seq" options="START WITH 12" />
		<sequence name="db_sessions_seq" options="START WITH 7" />
		<sequence name="db_users_seq" options="START WITH 1" />
		<sequence name="packages_seq" options="START WITH 1" />
		<sequence name="sys_roles_seq" options="START WITH 1" />
		<trigger name="check_country_trg" table="db_users" id="Trigger_15ca" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER check_country_trg BEFORE INSERT OR UPDATE OF country_id ON system.db_users FOR EACH ROW EXECUTE PROCEDURE jpublic.check_country_id()]]></string>
		</trigger>
		<trigger name="check_insert_date_trg" table="db_users" id="Trigger_f9f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER check_insert_date_trg BEFORE INSERT OR UPDATE OF insert_date ON system.db_users FOR EACH ROW EXECUTE PROCEDURE jpublic.check_insert_date()]]></string>
		</trigger>
		<trigger name="db_user_sessions_insert_date_bi_trg" table="db_user_sessions" id="Trigger_1bb3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_user_sessions_insert_date_bi_trg BEFORE INSERT OR UPDATE ON system.db_user_sessions FOR EACH ROW EXECUTE PROCEDURE jpublic.check_insert_date()]]></string>
		</trigger>
		<trigger name="db_user_update_trg" table="db_users" id="Trigger_575" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_user_update_trg AFTER UPDATE ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.user_update_trg()]]></string>
		</trigger>
		<trigger name="db_users_after_insert_trg" table="db_users" id="Trigger_1b95" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_after_insert_trg AFTER INSERT ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.user_after_insert()]]></string>
		</trigger>
		<trigger name="db_users_bi_trg" table="db_users" id="Trigger_543" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_bi_trg BEFORE INSERT ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.get_new_user()]]></string>
		</trigger>
		<trigger name="db_users_profile_users_biu_trg" table="db_users_profiles" id="Trigger_1bcf" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_profile_users_biu_trg AFTER INSERT OR UPDATE ON system.db_users_profiles FOR EACH ROW EXECUTE PROCEDURE system.db_users_profiles_biu()]]></string>
		</trigger>
		<trigger name="db_users_profiles_biu_trg" table="db_users_profiles" id="Trigger_3d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_profiles_biu_trg BEFORE INSERT OR UPDATE ON system.db_users_profiles FOR EACH ROW EXECUTE PROCEDURE system.db_users_profile_biu()]]></string>
		</trigger>
		<trigger name="form_dates_biu" table="app_forms" id="Trigger_13cc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER form_dates_biu BEFORE INSERT OR UPDATE ON system.app_forms FOR EACH ROW EXECUTE PROCEDURE system.record_date_biu()]]></string>
		</trigger>
		<trigger name="form_id_bi_trg" table="app_forms" id="Trigger_130f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER form_id_bi_trg BEFORE INSERT ON system.app_forms FOR EACH ROW EXECUTE PROCEDURE system.app_forms_biu()]]></string>
		</trigger>
		<trigger name="packages_before_insert_trg" table="packages" id="Trigger_22ac" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER packages_before_insert_trg BEFORE INSERT ON system.packages FOR EACH ROW EXECUTE PROCEDURE system.get_new_package()]]></string>
		</trigger>
		<trigger name="sfrm_bi_trg" table="form_models" id="Trigger_1d6f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sfrm_bi_trg BEFORE INSERT OR UPDATE ON system.form_models FOR EACH ROW EXECUTE PROCEDURE system.sfrm_trg()]]></string>
		</trigger>
		<trigger name="sfrt_bi_trg" table="form_objects_trans" id="Trigger_5b0" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sfrt_bi_trg BEFORE INSERT OR UPDATE ON system.form_objects_trans FOR EACH ROW EXECUTE PROCEDURE system.sfrt_trg()]]></string>
		</trigger>
		<trigger name="sgrp_bi_trg" table="db_groups" id="Trigger_172" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sgrp_bi_trg BEFORE INSERT OR UPDATE ON system.db_groups FOR EACH ROW EXECUTE PROCEDURE system.sgrp_trg()]]></string>
		</trigger>
		<trigger name="spaf_bi_trg" table="app_functions" id="Trigger_1dbc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spaf_bi_trg BEFORE INSERT OR UPDATE ON system.app_functions FOR EACH ROW EXECUTE PROCEDURE system.spaf_trg()]]></string>
		</trigger>
		<trigger name="spal_bi_trg" table="app_licenses" id="Trigger_a65" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spal_bi_trg BEFORE INSERT OR UPDATE ON system.app_licenses FOR EACH ROW EXECUTE PROCEDURE system.spal_trg()]]></string>
		</trigger>
		<trigger name="spca_bi_trg" table="packages_applications" id="Trigger_1e69" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spca_bi_trg BEFORE INSERT OR UPDATE ON system.packages_applications FOR EACH ROW EXECUTE PROCEDURE system.spca_trg()]]></string>
		</trigger>
		<trigger name="spck_bi_trg" table="packages" id="Trigger_19aa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spck_bi_trg BEFORE INSERT OR UPDATE ON system.packages FOR EACH ROW EXECUTE PROCEDURE system.spck_trg()]]></string>
		</trigger>
		<trigger name="spcs_bi_trg" table="db_packages_schemas" id="Trigger_1e97" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spcs_bi_trg BEFORE INSERT OR UPDATE ON system.db_packages_schemas FOR EACH ROW EXECUTE PROCEDURE system.spcs_trg()]]></string>
		</trigger>
		<trigger name="spfo_bi_trg" table="app_forms" id="Trigger_104f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spfo_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms FOR EACH ROW EXECUTE PROCEDURE system.spfo_trg()]]></string>
		</trigger>
		<trigger name="spmf_bi_trg" table="app_member_forms" id="Trigger_a62" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spmf_bi_trg BEFORE INSERT OR UPDATE ON system.app_member_forms FOR EACH ROW EXECUTE PROCEDURE system.spmf_trg()]]></string>
		</trigger>
		<trigger name="spop_bi_trg" table="app_forms_objects_properties" id="Trigger_115d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spop_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_objects_properties FOR EACH ROW EXECUTE PROCEDURE system.spop_trg()]]></string>
		</trigger>
		<trigger name="spot_bi_trg" table="app_forms_objects_translations" id="Trigger_213f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spot_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_objects_translations FOR EACH ROW EXECUTE PROCEDURE system.spot_trg()]]></string>
		</trigger>
		<trigger name="sppl_bi_trg" table="applications" id="Trigger_18eb" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppl_bi_trg BEFORE INSERT OR UPDATE ON system.applications FOR EACH ROW EXECUTE PROCEDURE system.sppl_trg()]]></string>
		</trigger>
		<trigger name="sppm_bi_trg" table="app_messages" id="Trigger_1171" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppm_bi_trg BEFORE INSERT OR UPDATE ON system.app_messages FOR EACH ROW EXECUTE PROCEDURE system.sppm_trg()]]></string>
		</trigger>
		<trigger name="sppo_bi_trg" table="app_forms_objects" id="Trigger_1ee3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppo_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_objects FOR EACH ROW EXECUTE PROCEDURE system.sppo_trg()]]></string>
		</trigger>
		<trigger name="sppr_bi_trg" table="db_applications_roles" id="Trigger_15cc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppr_bi_trg BEFORE INSERT OR UPDATE ON system.db_applications_roles FOR EACH ROW EXECUTE PROCEDURE system.sppr_trg()]]></string>
		</trigger>
		<trigger name="spps_bi_trg" table="db_app_schemas" id="Trigger_2510" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spps_bi_trg BEFORE INSERT OR UPDATE ON system.db_app_schemas FOR EACH ROW EXECUTE PROCEDURE system.spps_trg()]]></string>
		</trigger>
		<trigger name="sppt_bi_trg" table="app_forms_translations" id="Trigger_18ab" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppt_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_translations FOR EACH ROW EXECUTE PROCEDURE system.sppt_trg()]]></string>
		</trigger>
		<trigger name="srls_bi_trg" table="db_roles" id="Trigger_b9e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER srls_bi_trg BEFORE INSERT OR UPDATE ON system.db_roles FOR EACH ROW EXECUTE PROCEDURE system.srls_trg()]]></string>
		</trigger>
		<trigger name="srr_bi_trg" table="db_users_roles" id="Trigger_d27" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER srr_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_roles FOR EACH ROW EXECUTE PROCEDURE system.srr_trg()]]></string>
		</trigger>
		<trigger name="ssch_bi_trg" table="db_schemas" id="Trigger_1569" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ssch_bi_trg BEFORE INSERT OR UPDATE ON system.db_schemas FOR EACH ROW EXECUTE PROCEDURE system.ssch_trg()]]></string>
		</trigger>
		<trigger name="sscp_bi_trg" table="db_schema_params" id="Trigger_1f64" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sscp_bi_trg BEFORE INSERT OR UPDATE ON system.db_schema_params FOR EACH ROW EXECUTE PROCEDURE system.sscp_trg()]]></string>
		</trigger>
		<trigger name="sscr_bi_trg" table="db_schemas_roles" id="Trigger_53c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sscr_bi_trg BEFORE INSERT OR UPDATE ON system.db_schemas_roles FOR EACH ROW EXECUTE PROCEDURE system.sscr_trg()]]></string>
		</trigger>
		<trigger name="sssp_bi_trg" table="sys_params" id="Trigger_9f3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sssp_bi_trg BEFORE INSERT OR UPDATE ON system.sys_params FOR EACH ROW EXECUTE PROCEDURE system.sssp_trg()]]></string>
		</trigger>
		<trigger name="sssr_bi_trg" table="sys_roles" id="Trigger_cdc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sssr_bi_trg BEFORE INSERT OR UPDATE ON system.sys_roles FOR EACH ROW EXECUTE PROCEDURE system.sssr_trg()]]></string>
		</trigger>
		<trigger name="supr_bi_trg" table="db_users_profiles" id="Trigger_17c4" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER supr_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_profiles FOR EACH ROW EXECUTE PROCEDURE system.supr_trg()]]></string>
		</trigger>
		<trigger name="sura_bi_trg" table="db_users_schemas_apps" id="Trigger_f4c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sura_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_schemas_apps FOR EACH ROW EXECUTE PROCEDURE system.sura_trg()]]></string>
		</trigger>
		<trigger name="suro_bi_trg" table="db_users_schemas_roles" id="Trigger_2c5" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER suro_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_schemas_roles FOR EACH ROW EXECUTE PROCEDURE system.suro_trg()]]></string>
		</trigger>
		<trigger name="surp_bi_trg" table="db_users_payments" id="Trigger_15d6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER surp_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_payments FOR EACH ROW EXECUTE PROCEDURE system.surp_trg()]]></string>
		</trigger>
		<trigger name="surs_bi_trg" table="db_user_sessions" id="Trigger_1758" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER surs_bi_trg BEFORE INSERT OR UPDATE ON system.db_user_sessions FOR EACH ROW EXECUTE PROCEDURE system.surs_trg()]]></string>
		</trigger>
		<trigger name="suse_bi_trg" table="db_users" id="Trigger_256d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER suse_bi_trg BEFORE INSERT OR UPDATE ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.suse_trg()]]></string>
		</trigger>
		<trigger name="susg_bi_trg" table="db_user_groups" id="Trigger_bfa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER susg_bi_trg BEFORE INSERT OR UPDATE ON system.db_user_groups FOR EACH ROW EXECUTE PROCEDURE system.susg_trg()]]></string>
		</trigger>
		<trigger name="suss_bi_trg" table="db_users_schemas" id="Trigger_bd7" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER suss_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_schemas FOR EACH ROW EXECUTE PROCEDURE system.suss_trg()]]></string>
		</trigger>
		<trigger name="swap_profiles_ai_trg" table="db_users" id="Trigger_d4c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER swap_profiles_ai_trg AFTER INSERT ON system.db_users FOR EACH ROW EXECUTE PROCEDURE swap.user_insert_swap_profile()]]></string>
		</trigger>
		<function name="app_forms_biu" id="Function_566" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.app_forms_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.form_id is null then
          New.form_id := nextval('system.app_forms_seq');
      end if;
     if New.form_key is null then
          select system.get_key ( currval('system.app_forms_seq'), 16) into New.form_key;
     end if;

 
     Return NEW;    
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="assign_anagraphid_to_user" id="Function_247e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.assign_anagraphid_to_user(p_anagraph_id integer, p_db_user_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare 
  Result Boolean; 
begin
  update system.db_users_profiles
    set anagraph_id = p_anagraph_id
  where
     db_user_id = p_db_user_id; 
  Result := p_anagraph_id > 0 and p_db_user_id > 0; 
  
  Return Result; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_db_user_id" jt="4" type="int4" />
		</function>
		<function name="createkey" id="Function_1239" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createkey()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
  x system.db_users%ROWTYPE; 
  i integer; 
begin
     i := 0; 	
     for x in select * from system.db_users 
     loop
         update system.db_users set verify_token = system.get_key(x.db_user_id, 32) where db_user_id = x.db_user_id; 
        PERFORM system.setlog('aggiornato ricerca utente: ' || x.db_user_id|| ' key ' || system.get_key(x.db_user_id, 32) );
        PERFORM pg_sleep(1.545); 
        i := i +1; 
     end loop; 

     return i; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="createpersonalschema" id="Function_10ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createpersonalschema(p_session_key character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
  
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_key );
   select count(*) into n_record from system.db_user_sessions where db_session_key = p_session_key; 
   PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_key || ' trovato record: ' || n_record);
   if n_record = 0 then s_token := 'Error'; end if; 
   if n_record = 1 then
        select * into a_record from system.db_user_sessions where db_session_key = p_session_key; 
        select * into u_record from system.db_users where db_user_id = a_record.db_user_id; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key)
                  values (i_schema_id, u_record.username, u_record.username || ' personal schema', true,  s_token); 
      -- insert into system.db_schemas(db_schema_id, db_schema_name, personal, db_owner_id, db_schema_key) 
      --     values (i_schema_id, u_record.username, true, u_record.db_user_id, s_token); 
       update system.db_users_schemas set isdefault = false where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);
     end if; 
     return s_token; 
  exception when others then PERFORM system.setlog('system.createpersonalschema  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.createpersonalschema   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.createpersonalschema   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.createpersonalschema   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
		</function>
		<function name="createpublicschema" id="Function_18fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createpublicschema(p_user_key character varying, p_session_key character varying, p_schema_name character varying, p_schema_des character varying, p_isportal boolean, p_package_key character varying, p_country_id smallint, p_default_language_id smallint)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
  
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key );
   select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key || ' trovato record: ' || n_record);
   if n_record = 0 then s_token := 'Error'; end if; 
   if n_record = 1 then 
	select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   end if; 
   if n_record = 1 then
        select * into a_record from system.db_user_sessions where db_session_key = p_session_key; 
        -- selezionata la sessione di amministraori ... 
        select * into u_record from system.db_users where verify_token = p_user_key; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key,
                                     language_id, country_id, default_user_id)
                  values (i_schema_id, p_schema_name, p_schema_name, false,  s_token, p_default_language_id, 
                          p_country_id, u_record.db_user_id);
       update system.db_users_schemas set isdefault = false where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);

     end if; 
     return s_token; 
  exception when others then PERFORM system.setlog('system.createpublicschema  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.createpublicschema   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_user_key" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_schema_name" jt="12" type="varchar" />
			<input_param name="p_schema_des" jt="12" type="varchar" />
			<input_param name="p_isportal" jt="-7" type="bool" />
			<input_param name="p_package_key" jt="12" type="varchar" />
			<input_param name="p_country_id" jt="5" type="int2" />
			<input_param name="p_default_language_id" jt="5" type="int2" />
		</function>
		<function name="createpublicschema" id="Function_1e3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createpublicschema(p_user_key character varying, p_session_key character varying, p_schema_name character varying, p_schema_des character varying, p_isportal boolean, p_package_key character varying, p_country_id integer, p_default_language_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
  
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key );
   select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key || ' trovato record: ' || n_record);
   if n_record = 0 then s_token := 'Error'; end if; 
   if n_record = 1 then 
	select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   end if; 
   if n_record = 1 then
        select * into a_record from system.db_user_sessions where db_session_key = p_session_key; 
        -- selezionata la sessione di amministraori ... 
        select * into u_record from system.db_users where verify_token = p_user_key; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key)
                  values (i_schema_id, p_schema_name, p_schema_name, false,  s_token); 

       update system.db_users_schemas set isdefault = false where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);
     end if; 
     return s_token; 
  exception when others then PERFORM system.setlog('system.createpublicschema  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.createpublicschema   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_user_key" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_schema_name" jt="12" type="varchar" />
			<input_param name="p_schema_des" jt="12" type="varchar" />
			<input_param name="p_isportal" jt="-7" type="bool" />
			<input_param name="p_package_key" jt="12" type="varchar" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_default_language_id" jt="4" type="int4" />
		</function>
		<function name="createuserschema" id="Function_17bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createuserschema(p_user_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpersonalschema ricerca utente: ' || p_user_id );
   --RAISE NOTICE 'createpersonalschema ricerca sessione: ' || TO_CHAR(p_session_id) ;
   select count(*) into n_record from system.db_users WHERE db_user_id = p_user_id; 
   PERFORM system.setlog('createpersonalschema ricerca utente: ' || p_user_id || ' trovato record: ' || n_record);
   if n_record = 1 then

        select * into u_record from system.db_users where db_user_id = p_user_id; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key, default_user_id)
                  values (i_schema_id, u_record.username, u_record.username || ' personal schema', true,  s_token, p_user_id); 
      -- insert into system.db_schemas(db_schema_id, db_schema_name, personal, db_owner_id, db_schema_key) 
      --     values (i_schema_id, u_record.username, true, u_record.db_user_id, s_token); 
       update system.db_users_schemas set isdefault = true where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);
       update system.db_users set default_schema_id = i_schema_id where db_user_id = p_user_id; 
     end if; 
     return i_schema_id; 
end;$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="db_user_email" id="Function_19fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_user_email(p_email character varying)
 RETURNS TABLE(db_user_id bigint, username character varying, isactive boolean, password character varying, payment boolean, payment_expiration_date date)
 LANGUAGE plpgsql
AS $function$
BEGIN
 RETURN QUERY SELECT
 db_user_id ,
 username ,
 isactive ,  
 password , 
 payment , 
 payment_expiration_date 
 FROM
 system.db_users
 WHERE
 email LIKE '%' || lower(p_email) || '%' ;
END; 
$function$
;]]></string>
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="db_user_id" jt="-5" type="int8" />
			<input_param name="username" jt="12" type="varchar" />
			<input_param name="isactive" jt="-7" type="bool" />
			<input_param name="password" jt="12" type="varchar" />
			<input_param name="payment" jt="-7" type="bool" />
			<input_param name="payment_expiration_date" jt="91" type="date" />
		</function>
		<function name="db_user_update_password" id="Function_1baf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_user_update_password(p_email character varying, p_password character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  i integer; 
BEGIN
 SELECT count(1) from 
 system.db_users
 WHERE
 email LIKE '%' || lower(p_email) || '%'
 into i;
 
 if i = 1 then 
 	UPDATE
 		system.db_users
 	SET 
 		password = p_password 
	WHERE
 		email LIKE '%' || lower(p_email) || '%';
 end if; 
 
 return i; 
END; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
		</function>
		<function name="db_users_check" id="Function_a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_users_check(p_user_id integer, OUT result boolean, OUT errormessage character varying, OUT errorcode character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  vtest smallint; 
begin
  /* Insert real code here */
  
   select count(1) into vtest from system.db_users e where
       e.db_user_id = p_user_id;
       
   Result := vtest = 1;
   
   if not Result then
   
     errormessage := 'User does not Exist';
     errorcode := 'SY-US-001';
     
   else
       
     errormessage := 'User Exists';
     errorcode := 'SY-US-000';
        
   end if; 
       
end
$function$
;]]></string>
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="result" jt="-7" type="bool" />
			<input_param name="errormessage" jt="12" type="varchar" />
			<input_param name="errorcode" jt="12" type="varchar" />
		</function>
		<function name="db_users_profile_biu" id="Function_1c36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_users_profile_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     New.search_name := system.stripstringsearch(New.last_name, New.first_name );
     New.reverse_search := system.stripstringsearch(New.first_name, New.last_name );
     New.first_name := trim(initcap(New.first_name)); 
     New.last_name := trim(initcap(New.last_name)); 
     if New.latitude < 0.0000000001 then New.latitude := 0; End If; 
     if New.longitude < 0.0000000001 then New.longitude := 0; End If;   
	 
	 if New.Anagraph_id is null then New.anagraph_id = 0; end if; 
     
     -- New.latitude := round(New.latitude, 7); 
     -- New.latitude := round(New.longitude, 7); 
      
     Return NEW;    
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="db_users_profiles_biu" id="Function_23ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_users_profiles_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  /* Insert real code here */
  
update system.db_users  u 
set user_first_name = New.first_name
where New.db_user_id = u.db_user_id;
update system.db_users  u 
set user_family_name = New.last_name 
where New.db_user_id = u.db_user_id;
Return New; 
end
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_key" id="Function_20b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_key(p_id integer, p_digits integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
   s_token character varying; 
begin
select system.get_key ( cast(p_id as bigint), cast(p_digits as smallint)) into s_token; 
return s_token; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
			<input_param name="p_digits" jt="4" type="int4" />
		</function>
		<function name="get_key" id="Function_18cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_key(p_id bigint, p_digits smallint)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
   s_token character varying; 
   result character varying; 
begin
select md5(Cast(p_id as character(32))) into s_token; 
result := s_token; 
s_token := ''; 
select md5(to_char(now(), 'YYYYMMDDHH24MISSMS')) into s_token; 
result := result || s_token; 
s_token := ''; 
return result; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_digits" jt="5" type="int2" />
		</function>
		<function name="get_key" id="Function_1f1c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_key(p_id bigint, p_digits integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
   s_token character varying; 
begin
---select md5(lpad( Cast(p_id as character)  || to_char(now(), 'YYYYMMDDHH24MISSMS'), p_digits, '0')) into s_token; 
select system.get_key ( cast(p_id as bigint), cast(p_digits as smallint)) into s_token; 
return s_token; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_digits" jt="4" type="int4" />
		</function>
		<function name="get_new_package" id="Function_609" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_new_package()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.package_id is null then
          New.package_id:=nextval('system.packages_seq');
      end if;
     if New.package_key is null then
          select system.get_key ( currval('system.packages_seq'), 16) into New.package_key;
     end if;
     if New.creation_date is null then
          New.creation_date := Now();
     end if;  
     Return NEW;    
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_new_user" id="Function_976" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if new.db_user_id is null or new.db_user_id = 0 then
	select nextval('system.db_users_seq') into new.db_user_id; 
        select system.get_key( new.db_user_id, 12) into new.verify_token; 
   end if; 
  
   return NEW; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_schema_id" id="Function_ec4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_schema_id()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
begin
  return current_setting('system.db_schema_id')::integer; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="get_session_id" id="Function_1226" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_session_id(p_session_key character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  sessione bigint; 
begin
  PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_key );
  select db_session_id into sessione  from system.db_user_sessions where db_session_key = p_session_key; 
  if sessione is null then return 0;  else return sessione; end if; 
  
  exception when others then return -1; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
		</function>
		<function name="getschemadef" id="Function_119d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.getschemadef(p_schema_key character varying)
 RETURNS TABLE(db_schema_id integer, db_schema_name character varying, schema_des character varying, personal boolean, url character varying, guid uuid, user_id integer, useremail character varying)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT
	  s.db_schema_id, s.db_schema_name, s.schema_des,
	  s.personal, s.url, s.ssch_jguid::uuid, s.default_user_id, u.email
	  FROM system.db_schemas s 
	    left outer join system.db_users u
	      on s.default_user_id = u.db_user_id 
     WHERE
        db_schema_key = p_schema_key ;
END; $function$
;]]></string>
			<input_param name="p_schema_key" jt="12" type="varchar" />
			<input_param name="db_schema_id" jt="4" type="int4" />
			<input_param name="db_schema_name" jt="12" type="varchar" />
			<input_param name="schema_des" jt="12" type="varchar" />
			<input_param name="personal" jt="-7" type="bool" />
			<input_param name="url" jt="12" type="varchar" />
			<input_param name="guid" jt="1111" type="uuid" />
			<input_param name="user_id" jt="4" type="int4" />
			<input_param name="useremail" jt="12" type="varchar" />
		</function>
		<function name="insert_application" id="Function_1f3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_application(p_application_name character varying)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$declare
  p_id integer; 
  p_key character varying; 
  p_date timestamp with time zone; 
begin
     
     p_id := nextval('system.applications_seq');
     p_date := Now(); 
     select system.get_key ( currval('system.applications_seq'), 16) into p_key;
     INSERT INTO system.applications(
            application_id, application_des, application_name, creation_date, 
            description, application_key)
     VALUES (p_id, '', p_application_name, p_date,  '', p_key);
    
     
     Return p_id;
        
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_application_name" jt="12" type="varchar" />
		</function>
		<function name="insert_date_new" id="Function_1890" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_date_new()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if New.insert_date is null then New.insert_date := now(); end if;
  Return New;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_package" id="Function_15a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_package(p_name character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  p_package_id integer; 
  p_key character varying; 
  p_date timestamp with time zone; 
begin
     
     p_package_id := nextval('system.packages_seq');
     p_date := Now(); 
     select system.get_key ( currval('system.packages_seq'), 16) into p_key;
     INSERT INTO system.packages(
            package_id, package_name, package_key, creation_date)
      VALUES (p_package_id, p_name, p_key, p_date); 
     
     Return p_package_id;
        
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_name" jt="12" type="varchar" />
		</function>
		<function name="insert_role" id="Function_5b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_role(p_name character varying, p_code character varying, p_admin boolean, p_user boolean, p_guest boolean)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$declare
  p_id integer; 
  p_key character varying; 
  p_date timestamp with time zone; 
begin
     
     p_id := nextval('system.sys_roles_seq');
     p_date := Now(); 
     select system.get_key ( currval('system.sys_roles_seq'), 16) into p_key;
     INSERT INTO system.sys_roles(
            role_id, role_name, role_code, role_key, creation_date, role_des, 
            issysadmin, isguest, isuser, isadmin)
     VALUES (p_id, p_name, p_code, p_key, p_date, '', false, p_guest, p_user, p_admin);
     Return p_id;
        
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_name" jt="12" type="varchar" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_admin" jt="-7" type="bool" />
			<input_param name="p_user" jt="-7" type="bool" />
			<input_param name="p_guest" jt="-7" type="bool" />
		</function>
		<function name="likes_update_ai_trg" id="Function_7b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.likes_update_ai_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   update swap.profiles set likes = likes + 1 where user_id = New.user_id; 
   Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="nvl" id="Function_1947" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.nvl(value integer, replace integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$begin
   if value is null then 
	return (replace);
    else
	return(value);
    end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="value" jt="4" type="int4" />
			<input_param name="replace" jt="4" type="int4" />
		</function>
		<function name="nvl" id="Function_1b99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.nvl(p_string character varying, p_null character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
begin
  if p_string is null then
     return p_null; 
  else
      return p_string; 
  end if; 
  
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_string" jt="12" type="varchar" />
			<input_param name="p_null" jt="12" type="varchar" />
		</function>
		<function name="record_date_biu" id="Function_1f3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.record_date_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.insert_date is null then
          New.insert_date := Now();
     end if; 
     New.update_date := Now();

     Return New; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="schemasetdefaultuser" id="Function_8e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.schemasetdefaultuser(p_user_id integer, p_schema_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  i integer; 	
  j integer; 	 
begin
  select count(1) into i from system.db_users where db_user_id = p_user_id; 
  if i > 0 then
    select count(1) into j from system.db_users_schemas s 
        where     s.db_user_id = p_user_id 
              and db_schema_id = p_schema_id; 
    if j = 0 then 
        insert into system.db_users_schemas(db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
	   values(p_schema_id, p_user_id, false, true, false, false); 
     end if; 
    update system.db_users set default_schema_id = p_schema_id where db_user_id = p_user_id; 
    update system.db_schemas set default_user_id = p_user_id where db_schema_id = p_schema_id; 
  end if; 

   if i > 0 then 
	return true; 
   else 
	return false; 
   end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="set_schema_id" id="Function_96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.set_schema_id(v_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
	dyn_sql text; 
begin
 dyn_sql := '"SET SESSION "system.db_schema_id" = ' || v_id;
 EXECUTE dyn_sql; 
  return current_setting('system.db_schema_id')::integer;  
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="v_id" jt="4" type="int4" />
		</function>
		<function name="setlog" id="Function_1aff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.setlog(log text)
 RETURNS date
 LANGUAGE plpgsql
AS $function$
begin
   insert into system.syslog (logtime, log) values (now(), log);
   RAISE NOTICE 'log is --%', log;
   return now(); 
EXCEPTION WHEN OTHERS THEN 
  RAISE 'Errore system.setlog: %', SQLERRM;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="log" jt="12" type="text" />
		</function>
		<function name="setlog" id="Function_1f2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.setlog(log text, p_session_id bigint)
 RETURNS date
 LANGUAGE plpgsql
AS $function$
begin
   insert into system.syslog (logtime, log, session_id) values (now(), log, session_id);
   RAISE NOTICE 'log is --%', log;
   return now(); 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="log" jt="12" type="text" />
			<input_param name="p_session_id" jt="-5" type="int8" />
		</function>
		<function name="setuserdefaultschema" id="Function_1619" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.setuserdefaultschema(p_session_key character varying, p_user_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  x record; 
  i integer; 	
  j integer; 	
begin
  SELECT db_user_id, db_schema_id, db_session_key, db_session_id, language_id into x 
	FROM system.db_user_sessions where db_session_key = p_session_key; 
   
  select count(1) into i from system.db_users where db_user_id = p_user_id; 
  if i > 0 then
 
     select count(1) into j from system.db_users_schemas s where s.db_user_id = p_user_id and db_schema_id = x.db_schema_id; 
  
	
     if j = 0 then 
        insert into system.db_users_schemas(db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
	   values(x.db_schema_id, p_user_id, false, true, false, true); 
     end if; 
	update system.db_users set default_schema_id = x.db_schema_id where db_user_id = p_user_id; 
   end if; 
   if i > 0 then 
	return true; 
   else 
	return false; 
   end if; 
	
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="sfrm_trg" id="Function_1747" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sfrm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sfrm_jguid is null then
     New.sfrm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sfrm_deleted is null then
     New.sfrm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sfrt_trg" id="Function_a2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sfrt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sfrt_jguid is null then
     New.sfrt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sfrt_deleted is null then
     New.sfrt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sgrp_trg" id="Function_a0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sgrp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sgrp_jguid is null then
     New.sgrp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sgrp_deleted is null then
     New.sgrp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spaf_trg" id="Function_1e35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spaf_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spaf_jguid is null then
     New.spaf_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spaf_deleted is null then
     New.spaf_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spal_trg" id="Function_16f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spal_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spal_jguid is null then
     New.spal_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spal_deleted is null then
     New.spal_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spca_trg" id="Function_16e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spca_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spca_jguid is null then
     New.spca_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spca_deleted is null then
     New.spca_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spck_trg" id="Function_2678" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spck_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spck_jguid is null then
     New.spck_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spck_deleted is null then
     New.spck_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spcs_trg" id="Function_67b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spcs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spcs_jguid is null then
     New.spcs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spcs_deleted is null then
     New.spcs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spfo_trg" id="Function_260b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spfo_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spfo_jguid is null then
     New.spfo_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spfo_deleted is null then
     New.spfo_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spmf_trg" id="Function_1cb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spmf_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spmf_jguid is null then
     New.spmf_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spmf_deleted is null then
     New.spmf_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spop_trg" id="Function_261f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spop_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spop_jguid is null then
     New.spop_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spop_deleted is null then
     New.spop_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spot_trg" id="Function_5e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spot_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spot_jguid is null then
     New.spot_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spot_deleted is null then
     New.spot_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppl_trg" id="Function_1d8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppl_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppl_jguid is null then
     New.sppl_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppl_deleted is null then
     New.sppl_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppm_trg" id="Function_23f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppm_jguid is null then
     New.sppm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppm_deleted is null then
     New.sppm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppo_trg" id="Function_17ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppo_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppo_jguid is null then
     New.sppo_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppo_deleted is null then
     New.sppo_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppr_trg" id="Function_10ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppr_jguid is null then
     New.sppr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppr_deleted is null then
     New.sppr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spps_trg" id="Function_6f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spps_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spps_jguid is null then
     New.spps_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spps_deleted is null then
     New.spps_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppt_trg" id="Function_1327" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppt_jguid is null then
     New.sppt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppt_deleted is null then
     New.sppt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="srls_trg" id="Function_116b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.srls_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.srls_jguid is null then
     New.srls_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.srls_deleted is null then
     New.srls_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="srr_trg" id="Function_2544" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.srr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.srr_jguid is null then
     New.srr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.srr_deleted is null then
     New.srr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ssch_trg" id="Function_16c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.ssch_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ssch_jguid is null then
     New.ssch_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ssch_deleted is null then
     New.ssch_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sscp_trg" id="Function_523" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sscp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sscp_jguid is null then
     New.sscp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sscp_deleted is null then
     New.sscp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sscr_trg" id="Function_21a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sscr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sscr_jguid is null then
     New.sscr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sscr_deleted is null then
     New.sscr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sssp_trg" id="Function_2335" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sssp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sssp_jguid is null then
     New.sssp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sssp_deleted is null then
     New.sssp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sssr_trg" id="Function_24b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sssr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sssr_jguid is null then
     New.sssr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sssr_deleted is null then
     New.sssr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="startsessionbyurl" id="Function_10d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.startsessionbyurl(p_url character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  n_record integer; 
  a_record record; 
  i_user integer; 
  i_sequence bigint; 
  s_token character varying; 
begin
  i_sequence := -1; 
  s_token := ''; 
  select count(1) count, public.nvl(min(default_user_id),0) id into n_record, i_user  
         from system.db_schemas s, system.db_users  u 
         where url = lower(p_url)  and s.default_user_id = u.db_user_id; 
  if n_record = 1 and i_user > 0 then
    begin
       
       select * into a_record from system.db_users 
            WHERE db_user_id = i_user; 
       select nextval('system.db_sessions_seq') into i_sequence; 
       select system.get_key(i_sequence, 32) into s_token;   
    if i_sequence > 0 then
    
	INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id, ispublic)
		VALUES 
	   (a_record.db_user_id, a_record.default_schema_id, s_token, i_sequence, true);
	   PERFORM system.setlog('Impostata Sessione schema: ' || a_record.default_schema_id || ' sessione: ' || i_sequence); 
    end if;      
            
    end;
  end if; 
  return s_token; 
end;$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_url" jt="12" type="varchar" />
		</function>
		<function name="stripstringsearch" id="Function_16af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.stripstringsearch(p_firstname character varying, p_lastname character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$DECLARE   
   TEMP_NAME                 character varying(2048);
    v_firstname character varying (1024);
    v_lastname character varying (1024);
   -- Declare program variables as shown above
BEGIN 
-- Start of DDL Script for Trigger TTTLINES_PUBLIC.ANAG_NOMERICERCA_TRG
-- Generated 17-dic-2007 7.17.39 from TTTLINES_PUBLIC@JANUA
       if p_firstname is null then v_firstname := ' '; else v_firstname := p_firstname; end if;  
       if p_lastname is null then v_lastname := ' '; else v_lastname := p_lastname; end if; 
       
       TEMP_NAME := TRIM(v_firstname) || TRIM(v_lastname);
       TEMP_NAME := replace (TEMP_NAME, '.', '');
       TEMP_NAME := replace (TEMP_NAME, '-', '');
       TEMP_NAME := replace (TEMP_NAME, ',', '');
       TEMP_NAME := replace (TEMP_NAME, '@', '');
       TEMP_NAME := replace (TEMP_NAME, '_', '');
       TEMP_NAME := replace (TEMP_NAME, '/', '');
       TEMP_NAME := replace (TEMP_NAME, '(', '');
       TEMP_NAME := replace (TEMP_NAME, ')', '');
       TEMP_NAME := replace (TEMP_NAME, '&', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, ' ', '');
       TEMP_NAME := replace (TEMP_NAME, ':', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, '#', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, ';', '');
       return upper(TEMP_NAME); 
 end; 
  $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
		</function>
		<function name="supr_trg" id="Function_243a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.supr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.supr_jguid is null then
     New.supr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.supr_deleted is null then
     New.supr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sura_trg" id="Function_21b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sura_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sura_jguid is null then
     New.sura_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sura_deleted is null then
     New.sura_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="suro_trg" id="Function_16ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.suro_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.suro_jguid is null then
     New.suro_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.suro_deleted is null then
     New.suro_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="surp_trg" id="Function_1e20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.surp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.surp_jguid is null then
     New.surp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.surp_deleted is null then
     New.surp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="surs_trg" id="Function_2504" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.surs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.surs_jguid is null then
     New.surs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.surs_deleted is null then
     New.surs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="suse_trg" id="Function_1d1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.suse_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.suse_jguid is null then
     New.suse_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.suse_deleted is null then
     New.suse_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="susg_trg" id="Function_fd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.susg_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.susg_jguid is null then
     New.susg_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.susg_deleted is null then
     New.susg_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="suss_trg" id="Function_394" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.suss_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.suss_jguid is null then
     New.suss_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.suss_deleted is null then
     New.suss_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="test_new_user" id="Function_a61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.test_new_user(p_username character varying, p_email character varying, p_password character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare 
  v_test character varying; 
  v_session_id character varying; 
  i_test integer; 

 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
begin

  PERFORM system.setlog('***********************************' || now()); 
  PERFORM system.setlog('system.test_new_user verifico  utente test: ' || p_username || ' email: ' || p_email || ' password: ' || p_password);
  select system.usertest(p_username, p_email) into i_test; 
  if i_test = 1 then 
         PERFORM system.setlog('system.test_new_user utente già esistente: ' || p_username || ' email: ' || p_email);
  end if; 

  PERFORM system.setlog('system.test_new_user creo utente test: ' || p_username || ' email: ' || p_email || ' password: ' || p_password || ' country: ' || 'ITA' || 'public false');
  select system.useradd(p_email, p_username, p_password , 1, false) into v_test;
  PERFORM system.setlog('system.test_new_user  creazione utente test, risultato id univoco utente: ' || v_test); 
   PERFORM system.setlog('system.test_new_user login utente test: ' || p_username || ' email: ' || p_email || ' password: ' || p_password || ' risultato: ' || v_test); 
  select system.userlogin( p_username, p_password , p_email) into v_test;
  --ystem.userlogin(p_username character varying, p_password character varying, p_email character varying)
  PERFORM system.setlog('system.test_new_user Login utente test, risultato id sessione: ' || v_test); 

  SELECT 'userid ' ||  db_user_id  || ', schemaid: ' ||  db_schema_id ||  ', session_id: ' ||  db_session_id into v_session_id
        FROM system.db_user_sessions v where v.db_session_key = v_test; 
  
  PERFORM system.setlog('system.test_new_user creata sessione: ' || v_session_id); 
  select system.createpersonalschema(v_test) into v_test; 
  PERFORM system.setlog('system.test_new_user creazione schema sulla base di id sessione, risultato chiave di schema: ' || v_test); 
  Return v_test; 
  
  exception when others then 
    PERFORM system.setlog('system.test_new_user  Errore di sessione'); 
    GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
  PERFORM system.setlog('system.test_new_user   MESSAGE_TEXT: ' || text_var1); 
  PERFORM system.setlog('system.test_new_user   PG_EXCEPTION_DETAIL: ' || text_var2); 
  PERFORM system.setlog('system.test_new_user   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
		</function>
		<function name="user_after_insert" id="Function_b0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_after_insert()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  insert into system.db_users_profiles  (db_user_id, first_name, last_name, public_email, gender_code)
  values(  new.db_user_id, new.user_first_name, new.user_family_name, new.email, 'M');
  return new;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="user_payment" id="Function_1cd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_payment(p_user_id integer, p_schema_id integer DEFAULT 0, p_amount money DEFAULT 0.0, p_interval_type character DEFAULT 'Y'::bpchar, p_interval_duration smallint DEFAULT 1, p_payment_date date DEFAULT CURRENT_DATE)
 RETURNS date
 LANGUAGE plpgsql
AS $function$
declare 
  v_date date; 
  v_interval character varying; 
  v_test integer; 
begin
   if p_payment_date is null then p_payment_date := current_date; end if; 
   if p_schema_id is null then p_schema_id := 0; end if; 
   if p_amount is null then p_amount := 0.0::money; end if; 
   if p_interval_type is null then p_interval_type := 'Y';end if; 
   if p_interval_duration is null then p_interval_duration := 1; end if;    
   select case p_interval_type 
   		when 'Y' then p_interval_duration || ' Year'
		when 'M' then p_interval_duration || ' Months'
		when 'D' then p_interval_duration || ' Days' 
		end
		into v_interval; 
		
   
   SELECT p_payment_date + v_interval::interval into v_date;
   
   select count(1) into v_test from system.db_users_payments
      where db_user_id = p_user_id and p_schema_id = db_schema_id and p_payment_date = payment_date; 
   
   if v_test = 0 then 
   	INSERT INTO system.db_users_payments(
	  	db_user_id, db_schema_id, payment_date, amount, payment_expiration_date)
	    	VALUES (p_user_id, p_schema_id, p_payment_date, p_amount, v_date);
		
		update system.db_users set payment = true, payment_expiration_date = v_date where db_user_id = p_user_id; 
	end if; 
   return v_date; 
  
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
			<input_param name="p_amount" jt="8" type="money" />
			<input_param name="p_interval_type" jt="1" type="bpchar" />
			<input_param name="p_interval_duration" jt="5" type="int2" />
			<input_param name="p_payment_date" jt="91" type="date" />
		</function>
		<function name="user_update_image_url" id="Function_1653" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_update_image_url(p_user_id integer, p_image_url character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$begin
   update swap.notifications 
       set user_avatar_img = p_image_url
       where
       other_user_id = p_user_id;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_image_url" jt="12" type="varchar" />
		</function>
		<function name="user_update_trg" id="Function_dbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if New.image_url <> Old.image_url then
   update swap.notifications 
       set user_avatar_img = New.image_url
       where
       other_user_id = New.db_user_id;
   end if; 
   Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="useradd" id="Function_24c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useradd(p_email character varying, p_username character varying, p_password character varying, p_country_id integer, p_ispublic boolean)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  i_user_id integer; 
  n_record integer; 
  s_token character varying;
  r_country record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   i_user_id := -1; 
   PERFORM system.setlog('system.usertest(p_username, p_email)'); 
   if p_username is null then p_username := p_email; end if; 
   select system.usertest(p_username, p_email) into n_record; 
   PERFORM system.setlog('Terminato system.usertest(p_username, p_email) trovat = ' || n_record); 
   if n_record = 0 then
   
	select nextval('system.db_users_seq') into i_user_id; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || i_user_id); 
        select system.get_key(i_user_id, 32) into s_token; 
        --select * into r_country from jpublic.countries where country_id = p_country_id; 
        --PERFORM system.setlog('system.useradd system.r_country ' || r_country; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token)
	values (false, p_email, i_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token );
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (0, i_user_id, false, true, false, false);
     end if; 
     return s_token; 
     
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
		</function>
		<function name="useradd_with_profile" id="Function_2467" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useradd_with_profile(p_email character varying, p_username character varying, p_firstname character varying, p_lastname character varying, p_address character varying, p_town character varying, p_postal_code character varying, p_password character varying, p_phone character varying DEFAULT NULL::character varying, p_an_group_id integer DEFAULT 27, INOUT p_anagraph_id integer DEFAULT '-1'::integer, INOUT p_default_schema_id integer DEFAULT 0, INOUT p_country_id integer DEFAULT 1, INOUT p_ispublic boolean DEFAULT false, OUT p_guid uuid, OUT p_user_id integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  v_test boolean; 
  s_token character varying;
  r record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   P_GUID := uuid_generate_v4();
   PERFORM system.setlog('system.usertest(p_username, p_email)'); 
   if p_username is null then p_username := p_email; end if; 
  
   v_test := EXISTS (SELECT 1 FROM system.db_users WHERE email = TRIM(LOWER(p_email)))
		     OR EXISTS (SELECT 1 FROM system.db_users WHERE username = TRIM(LOWER(p_username)));
 
   IF v_test THEN
	 PERFORM system.setlog('USER: ' || p_email || ' ALREADY EXISTS EXITING'); 
   ELSE
	IF COALESCE(p_default_schema_id, 0) = 0 THEN p_default_schema_id := system.get_schema_id(); END IF; 
        
	p_user_id := nextval('system.db_users_seq') ; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || p_user_id); 
    select system.get_key(p_user_id, 32) into s_token; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token, jguid)
	values (false, p_email, p_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token, P_GUID);
	
    INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (p_default_schema_id, p_user_id, false, true, false, false);
	  
	p_anagraph_id := nextval('anagraph.an_anagraph_seq');
	
	INSERT INTO anagraph.anagraphs_view (db_schema_id, anagraph_id, an_name, an_last_name, an_cellular, an_email,
										jguid, an_main_group_id)
			VALUES (p_default_schema_id, p_anagraph_id, p_firstname, p_lastname, p_phone, p_email,
										P_GUID, p_an_group_id );
    
	IF NOT EXISTS (SELECT 1 FROM system.db_users_profiles where db_user_id = p_user_id ) THEN
	  BEGIN
	    PERFORM system.setlog('User profile not exists ' || p_user_id); 
		INSERT INTO system.db_users_profiles
			(db_user_id, country_id, first_name, last_name, address_full, address_postal_code, cellular_phone, gender_code,
		 	 uspr_jguid, supr_jguid, anagraph_id, public_email)
		VALUES (
			p_user_id, 
			p_country_id, 
			p_firstname, 
			p_lastname, 
		    p_address || ', ' || p_postal_code || ', ' || p_town,
		    p_postal_code, 
		    p_phone, --cellular_phone
		    'M',  --gender_code
		    P_GUID, --uspr_jguid
		    P_GUID, ---supr_jguid
		    p_anagraph_id, -- anagraph_id
		    p_email -- public_email		
		);
	  END;
	  ELSE 
	  BEGIN
	    PERFORM system.setlog('Update User Profile: ' || p_user_id); 
	    UPDATE system.db_users_profiles SET
	  		country_id = p_country_id,
			first_name = p_firstname,
			last_name = p_lastname, 
			address_full = p_address || ', ' || p_postal_code || ', ' || p_town,
			address_postal_code = p_postal_code,
			cellular_phone = p_phone,
			gender_code = 'M',--gender_code
			anagraph_id = p_anagraph_id,
			public_email = p_email ;
	  END; 
	END IF; 
   END IF; 
  /*   
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
*/
end; 
$function$
;]]></string>
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
			<input_param name="p_address" jt="12" type="varchar" />
			<input_param name="p_town" jt="12" type="varchar" />
			<input_param name="p_postal_code" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_phone" jt="12" type="varchar" />
			<input_param name="p_an_group_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_default_schema_id" jt="4" type="int4" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
			<input_param name="p_guid" jt="1111" type="uuid" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="useradd_with_profile_json" id="Function_3bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useradd_with_profile_json(p_email character varying, p_username character varying, p_firstname character varying, p_lastname character varying, p_address character varying, p_town character varying, p_postal_code character varying, p_password character varying, p_phone character varying DEFAULT NULL::character varying, p_an_group_id integer DEFAULT 27, p_anagraph_id integer DEFAULT '-1'::integer, p_default_schema_id integer DEFAULT 0, p_country_id integer DEFAULT 1, p_ispublic boolean DEFAULT false)
 RETURNS json
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_json json; 
BEGIN
  SELECT to_json(R) INTO v_json FROM  
  (
	SELECT * FROM 
		system.useradd_with_profile_json(
			p_email,
			p_username ,
			p_firstname ,
			p_lastname,
			p_address ,
			p_town,
			p_postal_code ,
			p_password,
			p_phone ,
			p_an_group_id ,
			p_anagraph_id,
			p_default_schema_id,
			p_country_id,
			p_ispublic)  
  ) AS R; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="json" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
			<input_param name="p_address" jt="12" type="varchar" />
			<input_param name="p_town" jt="12" type="varchar" />
			<input_param name="p_postal_code" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_phone" jt="12" type="varchar" />
			<input_param name="p_an_group_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_default_schema_id" jt="4" type="int4" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
		</function>
		<function name="useraddsocial" id="Function_3ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useraddsocial(p_email character varying, p_socialid character varying, p_social_kind character varying, p_country_code character varying, p_ispublic boolean)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  i_user_id integer; 
  n_record integer; 
  s_token character varying;
  p_username character varying;
  p_password character varying;
  r_country record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   i_user_id := -1; 
   PERFORM system.setlog('system.usertest(p_socialid)'); 
   p_username := lower(p_social_kind || '-' || p_socialid ); 
   p_password := lower(p_social_kind || '-' || p_socialid ); 
   if p_email is null then p_email := 'p_username' || '@ergomercator.com'; end if;
   select system.usertest(p_username, p_email) into n_record; 
   PERFORM system.setlog('Terminato system.usertest(p_username, p_email) trovati = ' || n_record); 
   s_token := 'Error';
   if n_record = 0 then
   
	select nextval('system.db_users_seq') into i_user_id; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || i_user_id); 
        select system.get_key(i_user_id, 32) into s_token; 
        --select * into r_country from jpublic.countries where country_id = p_country_id; 
        --PERFORM system.setlog('system.useradd system.r_country ' || r_country; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token)
	values (false, p_email, i_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token );
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (0, i_user_id, false, true, false, false);
     end if; 
     return s_token; 
     
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Error'; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
			<input_param name="p_country_code" jt="12" type="varchar" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
		</function>
		<function name="useraddsocial" id="Function_1e51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useraddsocial(p_email character varying, p_socialid character varying, p_social_kind character varying, p_country_code character varying, p_ispublic boolean, p_firstname character varying, p_lastname character varying, p_address_town character varying, p_address_street character varying, p_address_number character varying, p_address_postal_code character varying, p_address_full character varying, p_public_email character varying, p_latitude double precision, p_longitude double precision, p_birth_date date, p_fiscal_code character varying, p_gender_code character, p_cellular_phone character varying, p_phone character varying, p_image_url character varying, p_facebook_json json)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  i_user_id integer; 
  n_record integer; 
  s_token character varying;
  p_username character varying;
  p_password character varying;
  v_email character varying;
  r_country record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   i_user_id := -1; 
   PERFORM system.setlog('system.usertest(' || p_socialid ||  ')' ); 
   p_username := lower(p_social_kind || '-' || p_socialid ); 
   p_password := lower(p_social_kind || '-' || p_socialid );  
   v_email := p_email; 
   if v_email is null then v_email := 'p_username' || '@ergomercator.com'; end if;
   select system.usertest(p_username, v_email) into n_record; 
   PERFORM system.setlog('Terminato system.usertest(' || p_username || ', ' || v_email  || ') trovati = ' || n_record); 
   s_token := 'Error';
   if n_record = 0 and v_email is not null then
   
	select nextval('system.db_users_seq') into i_user_id; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || i_user_id); 
    select system.get_key(i_user_id, 32) into s_token; 
    --select * into r_country from jpublic.countries where country_id = p_country_id; 
    --PERFORM system.setlog('system.useradd system.r_country ' || r_country; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token, 
	 user_first_name, user_family_name)
	values (false, v_email, i_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token, 
			p_firstname, p_lastname );
			
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (0, i_user_id, false, true, false, false);
	/*
	p_address_town character varying,
	p_address_street character varying,
	p_address_number character varying,
	p_address_postal_code character varying,
	p_address_full character varying,
	p_public_email character varying,
	p_latitude double precision,
	p_longitude double precision,
	p_birth_date date
	*/
	
	INSERT INTO system.db_users_profiles(
	     db_user_id, country_id, region_id, district_id, town_id, first_name,  last_name, 
		 address_street,   address_number, address_postal_code, phone, cellular_phone, work_phone, fax_number, 
		 gender_code, birth_date, birth_country_id, birth_region_id, birth_district_id, birth_town_id, 
		 public_email, title, search_name, reverse_search, address_full, latitude, longitude, fiscal_code, 
		 smssent, smsconfirmed, smsdate, smschecknumber, address_town, facebook_json)
	VALUES (
	     i_user_id,  null,       null,      null,        null,    p_firstname, p_lastname, 
		 p_address_street, p_address_number, p_address_postal_code, p_phone, p_cellular_phone, null, null, 
		 p_gender_code, p_birth_date, null, null, null, null, 
		 p_public_email, '', '', '', p_address_full, p_latitude, p_longitude, p_fiscal_code,  
		 null   , null          , null   , null          , null,      p_facebook_json );
    end if; 
    return s_token; 
     
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Error ' || text_var1 || text_var2 || text_var3; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
			<input_param name="p_country_code" jt="12" type="varchar" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
			<input_param name="p_address_town" jt="12" type="varchar" />
			<input_param name="p_address_street" jt="12" type="varchar" />
			<input_param name="p_address_number" jt="12" type="varchar" />
			<input_param name="p_address_postal_code" jt="12" type="varchar" />
			<input_param name="p_address_full" jt="12" type="varchar" />
			<input_param name="p_public_email" jt="12" type="varchar" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_birth_date" jt="91" type="date" />
			<input_param name="p_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_gender_code" jt="1" type="bpchar" />
			<input_param name="p_cellular_phone" jt="12" type="varchar" />
			<input_param name="p_phone" jt="12" type="varchar" />
			<input_param name="p_image_url" jt="12" type="varchar" />
			<input_param name="p_facebook_json" jt="1111" type="json" />
		</function>
		<function name="userbykey" id="Function_307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userbykey(p_user_key character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare 
  p_user_id integer; 
  p_count integer; 
begin
  select count(1),  min(db_user_id) into p_count, p_user_id
    from system.db_users where verify_token = p_user_key; 
  if p_count = 1 then
     return p_user_id; 
   else
      return -1; 
   end if; 
     

end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_key" jt="12" type="varchar" />
		</function>
		<function name="userdel" id="Function_22f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userdel(uuid)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
l_user_id integer; 
BEGIN
  SELECT db_user_id INTO l_user_id 
     FROM system.db_users WHERE jguid = p_guid; 
	 
  RETURN system.userdel(l_user_id); 
  
  EXCEPTION WHEN OTHERS THEN
     RETURN false; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="$1" jt="1111" type="uuid" />
		</function>
		<function name="userdel" id="Function_1fd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userdel(p_user_email character varying)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
  V_ID integer;
BEGIN
   -- 
   IF EXISTS (SELECT 1 from system.db_users where email = lower(p_user_email) ) THEN
   	BEGIN
	  SELECT db_user_id INTO V_ID from system.db_users where email = lower(p_user_email);
      return system.userdel(V_ID); 
   	END;
   ELSE
   	BEGIN
      PERFORM system.setlog('db_user NOT FOUND: ' || p_user_email);
	  return False;    
   	END; 
   END IF; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_email" jt="12" type="varchar" />
		</function>
		<function name="userdel" id="Function_1c9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userdel(p_user_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
begin
   -- 
   delete from cloud.external_files where db_user_id = p_user_id;  
   delete from cloud.blob_files where db_user_id = p_user_id;    
   -- cloud.computers
   delete from cloud.computers where db_owner_id = p_user_id;  
   -- 
   delete from health.health_profile where db_user_id = p_user_id;    
   delete from social.messages where from_id = p_user_id;  
   delete from social.messages where to_id = p_user_id;   
       
   delete from swap.profiles where user_id = p_user_id; 
   delete from system.db_users_profiles where db_user_id = p_user_id; 
   DELETE FROM system.db_user_sessions where db_user_id = p_user_id; 
   delete from system.db_users_schemas where db_user_id = p_user_id; 
   delete from system.db_users_roles where db_user_id = p_user_id; 
   delete from system.db_users where db_user_id = p_user_id; 
   -- cloud.external_files
   
   return True; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="usergrantschema" id="Function_1bae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.usergrantschema(p_user_key character varying, p_schema_key character varying, p_isadmin boolean, p_isdefault boolean, p_isowner boolean, p_readwrite boolean)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$begin
INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
    select s.db_schema_id, u.db_user_id , p_isadmin, p_isdefault, p_isowner, p_readwrite
       from system.db_users u, system.db_schemas s
       where 
       u.verify_token = p_user_key
       and
       s.db_schema_key = p_schema_key;
       return 1; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_key" jt="12" type="varchar" />
			<input_param name="p_schema_key" jt="12" type="varchar" />
			<input_param name="p_isadmin" jt="-7" type="bool" />
			<input_param name="p_isdefault" jt="-7" type="bool" />
			<input_param name="p_isowner" jt="-7" type="bool" />
			<input_param name="p_readwrite" jt="-7" type="bool" />
		</function>
		<function name="userlogin" id="Function_5c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userlogin(p_username character varying, p_password character varying, p_email character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
  s_token character varying; 

 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
BEGIN
    --SELECT INTO n_record * FROM system.db_users WHERE (email) = lower(p_email); 
    i_sequence := -1; 
    
    select count(*) into n_record from system.db_users WHERE (email) = lower(p_email); 
    --RAISE NOTICE 'Eseguita Ricerca di Mail % con risultato %', p_email, n_record; 
    RAISE NOTICE 'Calling ricerca mail(%) risultato(%)', p_email, n_record;
    PERFORM system.setlog('Ricerca mail ' || p_email || ' risultato: ' || n_record); 
    IF n_record = 1 THEN
        select * into a_record from system.db_users WHERE (email) = lower(p_email); 
        PERFORM system.setlog('Confronto pwd ' || p_password || ' risultato: ' || a_record.password || 'sessione =  ' || i_sequence); 
        if a_record.password = p_password  then  
            select nextval('system.db_sessions_seq') into i_sequence; 
            select system.get_key(i_sequence, 32) into s_token; 
        end if; 
    END IF;
    if n_record = 0 then
	select count(*) into n_record from system.db_users WHERE lower(username) = lower(p_username); 
	PERFORM system.setlog('Ricerca username ' || p_username || ' risultato: ' || n_record); 
	--RAISE NOTICE "Eseguita Ricerca di Username % con risultato %", p_username, n_record; 
	IF n_record = 1 THEN
		select * into a_record from system.db_users WHERE lower(username) = lower(p_username); 
		if a_record.password = p_password  then  
		   select nextval('system.db_sessions_seq') into i_sequence; 
		   select system.get_key(i_sequence, 32) into s_token; 
		   PERFORM system.setlog('Confronto pwd ' || p_password || ' risultato: ' || a_record.password || 'sessione =  ' || i_sequence || 'key = ' || s_token); 
		end if; 
	END IF;
    end if; 
    if i_sequence > 0 then
	INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id)
		VALUES 
	   (a_record.db_user_id, a_record.default_schema_id, s_token, i_sequence);
	   PERFORM system.setlog('Impostata Sessione schema: ' || a_record.default_schema_id || ' sessione: ' || i_sequence); 

    end if;
    RETURN s_token;
  exception when others then 
	PERFORM system.setlog('system.userlogin  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.userlogin   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
		</function>
		<function name="userloginpublic" id="Function_66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userloginpublic(p_schema_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  p_user_id integer; 
  s_token character varying; 
  i_sequence bigint; 
begin
   select default_user_id from system.db_schemas into p_user_id where db_schema_id = p_schema_id; 
   s_token := ''; 
   if p_user_id > 0 and p_user_id is not null then
   
      select nextval('system.db_sessions_seq') into i_sequence; 
      select system.get_key(i_sequence, 32) into s_token; 
   INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id)
		VALUES 
	   (p_user_id, p_schema_id, s_token, i_sequence);
   end if; 

   return s_token; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="userloginsocial" id="Function_10ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userloginsocial(p_socialid character varying, p_social_kind character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
  s_token character varying; 
  p_password character varying;
  p_username character varying;

 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
BEGIN
    --SELECT INTO n_record * FROM system.db_users WHERE (email) = lower(p_email); 
    i_sequence := -1; 
    p_username :=  lower(p_social_kind || '-' || p_socialid ); 
    
    select count(*) into n_record from system.db_users WHERE (username) = lower(p_username); 
    --RAISE NOTICE 'Eseguita Ricerca di Mail % con risultato %', p_email, n_record; 
    RAISE NOTICE 'Calling ricerca username(%) risultato(%)', p_username, n_record;
    PERFORM system.setlog('Ricerca social user ' || p_username || ' risultato: ' || n_record); 
    IF n_record = 1 THEN
        select * into a_record from system.db_users WHERE (username) = lower(p_username); 
        
        p_password := lower(p_username); 
        
        PERFORM system.setlog('Confronto pwd ' || p_password || ' risultato: ' || a_record.password || 'sessione =  ' || i_sequence); 
        
        if a_record.password = p_password  then  
            select nextval('system.db_sessions_seq') into i_sequence; 
            select system.get_key(i_sequence, 32) into s_token; 
        end if; 
    END IF;

    if i_sequence > 0 then
	INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id)
		VALUES 
	   (a_record.db_user_id, a_record.default_schema_id, s_token, i_sequence);
	   PERFORM system.setlog('Impostata Sessione schema: ' || a_record.default_schema_id || ' sessione: ' || i_sequence); 

    end if;
    RETURN s_token;
  exception when others then 
	PERFORM system.setlog('system.userlogin  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.userlogin   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
		</function>
		<function name="usertest" id="Function_17ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.usertest(p_username character varying, p_email character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
BEGIN

    if p_email is not null then select count(1) into n_record from system.db_users WHERE lower(email) = lower(p_email); 
       else n_record = 0;
    end if; 
    IF n_record = 0 and p_email is null THEN select count(1) into n_record from system.db_users WHERE lower(username) = lower(p_username); 
    END IF;
    RETURN n_record;
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
		</function>
		<function name="usertestsocial" id="Function_217f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.usertestsocial(p_socialid character varying, p_social_kind character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
  p_username character varying;
  p_email character varying;
BEGIN
    p_username :=  lower(p_social_kind || '-' || p_socialid ); 
    if p_username is not null then select count(1) into n_record from system.db_users WHERE lower(username) = lower(p_username); 
       else n_record = 0;
    end if; 
    --IF n_record = 0 THEN select count(1) into n_record from system.db_users WHERE lower(username) = lower(p_username); END IF;
    RETURN n_record;
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
		</function>
	</schema>
	<schema name="topology" catalogname="ergomercator" >
		<comment><![CDATA[PostGIS Topology schema]]></comment>
	</schema>
	<schema name="uni" catalogname="ergomercator" />
	<schema name="workflow" catalogname="ergomercator" />
	<schema name="maillist" />
	<schema name="oracle" />
	<schema name="phoenix" >
		<comment><![CDATA[Temporary schema for Phoenix DB Tables]]></comment>
	</schema>
	<schema name="planner" >
		<table name="activities" >
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="categories_pk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="activities_groups" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="activities_groups_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="timetable" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key To Anagraph]]></comment>
			</column>
			<column name="starttime" type="timestamp" decimal="6" jt="93" />
			<column name="endtime" type="timestamp" decimal="6" jt="93" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="subject" type="varchar" length="50" decimal="0" jt="12" />
			<column name="image" type="integer" length="10" decimal="0" jt="4" />
			<column name="color" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="activity_group_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="activity_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tmt_jguid" type="varchar" length="40" decimal="0" jt="12" />
			<column name="caption" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<index name="timetable_pkey" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
	</schema>
	<schema name="plunit" />
	<schema name="plvchr" />
	<schema name="plvdate" />
	<schema name="plvlex" />
	<schema name="plvstr" />
	<schema name="plvsubst" />
	<schema name="sports" >
		<comment><![CDATA[This is the sports management platform sharing structures between sports]]></comment>
		<table name="calendar" >
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="match_day_date" type="date" length="13" decimal="0" jt="91" />
			<column name="match_day_played" type="date" length="13" decimal="0" jt="91" />
			<column name="rest_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[32]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="idx_calendar" unique="NORMAL" >
				<column name="season_id" />
				<column name="league_id" />
			</index>
			<index name="calendar_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="calendar_days_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="match_day_number" />
			</index>
			<fk name="fk_calendar_championship" to_schema="sports" to_table="championships" >
				<fk_column name="league_id" pk="league_id" />
				<fk_column name="season_id" pk="season_id" />
			</fk>
		</table>
		<table name="championships" >
			<comment><![CDATA[This is the table of all the Championships]]></comment>
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Unique id for season id]]></comment>
			</column>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[The unique id of the league in this championship]]></comment>
			</column>
			<column name="promoted" type="smallint" length="5" decimal="0" jt="5" />
			<column name="playoff" type="smallint" length="5" decimal="0" jt="5" />
			<column name="relegation" type="smallint" length="5" decimal="0" jt="5" />
			<column name="champions" type="smallint" length="5" decimal="0" jt="5" />
			<column name="playout" type="smallint" length="5" decimal="0" jt="5" />
			<column name="teams" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[32]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="fki_campionships_leagues_fk" unique="NORMAL" >
				<column name="league_id" />
			</index>
			<index name="jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="championships_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
			</index>
			<fk name="campionships_leagues_fk" to_schema="sports" to_table="leagues" >
				<fk_column name="league_id" pk="id" />
			</fk>
			<fk name="championships_seasons_fk" to_schema="sports" to_table="seasons" >
				<fk_column name="season_id" pk="id" />
			</fk>
		</table>
		<table name="clubs" >
			<comment><![CDATA[These are the sports or ... well .. sport clubs :)]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('sports.clubs_seq'::regclass)]]></defo>
				<comment><![CDATA[This is the sports club unique ID....]]></comment>
			</column>
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[The sports Club Name]]></comment>
			</column>
			<column name="foundation_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Date of 'birth' of the sports club :)]]></comment>
			</column>
			<column name="president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="stadium_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="vice_president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="team_manager" type="varchar" length="128" decimal="0" jt="12" />
			<column name="athletic_manager" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[direttore sportivo]]></comment>
			</column>
			<column name="colors" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[colori sociali]]></comment>
			</column>
			<column name="website" type="varchar" length="128" decimal="0" jt="12" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="club_image" type="bytea" decimal="0" jt="-2" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="clubs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="clubs_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="fields" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="district_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="telephone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="img_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="fields_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="fields_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="leagues" >
			<comment><![CDATA[These are all the leagues you can find in all seasons in a Country or Federation or Region]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[This is the unique id of a League]]></comment>
			</column>
			<column name="league_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[This is the name of the league]]></comment>
			</column>
			<column name="country_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[external iso country code on iso table default 'ITA']]></comment>
			</column>
			<column name="league_position" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[position]]></comment>
			</column>
			<column name="league_code" type="varchar" length="6" decimal="0" jt="12" >
				<comment><![CDATA[The shortcode for the league]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="remote_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="promotedcss" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA['promotion'::character varying]]></defo>
			</column>
			<column name="playoffcss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['playoff'::character varying]]></defo>
			</column>
			<column name="championscss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['champions'::character varying]]></defo>
			</column>
			<column name="playoutcss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['playout'::character varying]]></defo>
			</column>
			<column name="relegationcss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['retrocession'::character varying]]></defo>
			</column>
			<column name="all_players" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[If all players can enter in the match (like on 5 player's or 7 player's sports teams) is true else (on 11 player's leagues is set to false)]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="league_name_ndx" unique="NORMAL" >
				<column name="league_name" />
			</index>
			<index name="leagues_name_uk" unique="UNIQUE_KEY" >
				<column name="league_name" />
				<column name="country_id" />
			</index>
			<index name="leagues_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="leagues_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="matches" >
			<comment><![CDATA[This is the sports Matches Calendar, it should be used for other sports but must be revised]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Unique id for a calendar match and primary Key]]></comment>
			</column>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_time" type="timestamp" decimal="6" jt="93" />
			<column name="match_date" type="date" length="13" decimal="0" jt="91" />
			<column name="home_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="visitors_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="score_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="score_visitor" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_visitors" type="smallint" length="5" decimal="0" jt="5" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="confirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="home_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="visitors_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="suspended" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="postponed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="forfeit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="article_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="video_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="idx_matches" unique="NORMAL" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="match_day_number" />
			</index>
			<index name="matches_season_league_cluster" unique="NORMAL" >
				<column name="league_id" />
				<column name="season_id" />
			</index>
			<index name="matches_match_id_ndx" unique="UNIQUE_INDEX" >
				<column name="id" />
			</index>
			<index name="matches_home_team_id_ndx" unique="NORMAL" >
				<column name="home_team_id" />
			</index>
			<index name="matches_visitor_uk" unique="UNIQUE_KEY" >
				<column name="league_id" />
				<column name="match_day_number" />
				<column name="season_id" />
				<column name="visitors_team_id" />
			</index>
			<index name="matches_home_uk" unique="UNIQUE_KEY" >
				<column name="league_id" />
				<column name="season_id" />
				<column name="match_day_number" />
				<column name="home_team_id" />
			</index>
			<index name="matches_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="matches_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_matches_calendar" to_schema="sports" to_table="calendar" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
				<fk_column name="match_day_number" pk="match_day_number" />
			</fk>
			<fk name="matches_champ_fk" to_schema="sports" to_table="championships" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
			</fk>
			<fk name="fk_matches_fields" to_schema="sports" to_table="fields" update_action="cascade" options="" >
				<fk_column name="field_id" pk="id" />
			</fk>
			<fk name="fk_matches_leagues" to_schema="sports" to_table="leagues" >
				<fk_column name="league_id" pk="id" />
			</fk>
			<fk name="fk_matches_seasons" to_schema="sports" to_table="seasons" update_action="cascade" >
				<fk_column name="season_id" pk="id" />
			</fk>
			<fk name="fk_matches_home_teams" to_schema="sports" to_table="teams" >
				<fk_column name="home_team_id" pk="id" />
			</fk>
			<fk name="fk_matches_visitor_teams" to_schema="sports" to_table="teams" update_action="cascade" >
				<fk_column name="visitors_team_id" pk="id" />
			</fk>
		</table>
		<table name="seasons" >
			<comment><![CDATA[This is the sports seasons database]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('sports.seasons_seq'::regclass)]]></defo>
				<comment><![CDATA[This is the Season ID unique identifier. Every Season can have a 'starting date' and 'ending date' but they are quite optional.]]></comment>
			</column>
			<column name="season_des" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[This is the real Description of the season]]></comment>
			</column>
			<column name="season_code" type="char" length="5" decimal="0" jt="1" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[11]]></defo>
			</column>
			<column name="order_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="remote_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="seasons_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="seasons_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="sets" >
			<comment><![CDATA[Sets Played in Matches]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="score_home" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="score_visitors" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="remote_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="sets_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="sets_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="sets_matches_fk" to_schema="sports" to_table="matches" >
				<fk_column name="match_id" pk="id" />
			</fk>
		</table>
		<table name="teams" >
			<comment><![CDATA[one of the teams of the club that partecipate in a championship]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Unique id for the team]]></comment>
			</column>
			<column name="club_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="team_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="trainer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[numero id anagrafica allenatore]]></comment>
			</column>
			<column name="image" type="bytea" decimal="0" jt="-2" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="fki_teams_clubs_fk" unique="NORMAL" >
				<column name="club_id" />
			</index>
			<index name="teams_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="teams_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="teams_clubs_fk" to_schema="sports" to_table="clubs" delete_action="cascade" update_action="cascade" >
				<fk_column name="club_id" pk="id" />
			</fk>
		</table>
		<sequence name="clubs_seq" options="START WITH 1 INCREMENT BY 1" />
		<sequence name="fields_seq" options="START WITH 1 INCREMENT BY 1" />
		<sequence name="leagues_seq" options="START WITH 1 INCREMENT BY 1" />
		<sequence name="matches_seq" options="START WITH 1 INCREMENT BY 1" />
		<sequence name="seasons_seq" options="START WITH 1 INCREMENT BY 1" />
		<sequence name="sets_seq" options="START WITH 1 INCREMENT BY 1" />
		<sequence name="teams_seq" options="START WITH 1 INCREMENT BY 1" />
		<trigger name="calendar_bi_trg" table="calendar" id="Trigger-1d61" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER calendar_bi_trg BEFORE INSERT ON sports.calendar FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="championships_bi_trg" table="championships" id="Trigger-17a8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER championships_bi_trg BEFORE INSERT OR UPDATE ON sports.championships FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="clubs_bi_trg" table="clubs" id="Trigger-eda" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER clubs_bi_trg BEFORE INSERT OR UPDATE ON sports.clubs FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="fields_bi_trg" table="fields" id="Trigger-2677" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fields_bi_trg BEFORE INSERT OR UPDATE ON sports.fields FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="leagues_bi_trg" table="leagues" id="Trigger-1b0c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER leagues_bi_trg BEFORE INSERT OR UPDATE ON sports.leagues FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="matches_bi_trg" table="matches" id="Trigger-21bf" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER matches_bi_trg BEFORE INSERT ON sports.matches FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="season_default_biu_trg" table="seasons" id="Trigger-1a84" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER season_default_biu_trg BEFORE INSERT OR UPDATE ON sports.seasons FOR EACH ROW EXECUTE PROCEDURE sports.defaults_trg();]]></string>
		</trigger>
		<trigger name="teams_bi_trg" table="teams" id="Trigger-efa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER teams_bi_trg BEFORE INSERT OR UPDATE ON sports.teams FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<function name="defaults_trg" id="Function-26b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$

begin
  if New.jguid is null then
     New.jguid:= uuid_generate_v1();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  
  Return NEW;
end;
$function$
;]]></string>
		</function>
		<function name="insert_defaults_trg" id="Function-1bb8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.insert_defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_count integer;
 v_sequence character varying; 
begin
	v_sequence := TG_TABLE_NAME || '_' || 'seq'; 
	
	  SELECT COUNT(*) INTO v_count
		FROM information_schema.sequences 
		WHERE sequence_schema=TG_TABLE_SCHEMA AND sequence_name=TG_TABLE_NAME || v_sequence;
		
	 IF New.id IS NULL AND v_count = 1 THEN
	 	New.id := nextval(TG_TABLE_SCHEMA || '.' || v_sequence); 	 
	 END IF; 
	  if New.jguid is null then
		 New.jguid:= uuid_generate_v1();
	  end if;
	  if New.deleted is null then
		 New.deleted := false;
	  end if;
	  if New.db_schema_id is null then
		 New.db_schema_id:=0;
	  end if;
	  if New.insert_date is null then 
		 New.insert_date := now(); 
	  end if; 
	  Return NEW;
end;
$function$
;]]></string>
		</function>
		<function name="seasons_id_trg" id="Function-861" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.seasons_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.ID is null then
          New.ID :=nextval('sports.seasons_seq');
      end if; 
      Return NEW;
end;
$function$
;]]></string>
		</function>
	</schema>
	<schema name="temp" />
	<schema name="utl_file" />
	<connector name="ErgoMercator_Baltun" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.16.jar" driver_desc="Standard" host="pg.januaservers.com" port="5432" instance="ergomercator" user="ergo" passwd="M3JnMG0zcmM0dDBy" />
	<connector name="Local Ergomercator" database="PostgreSQL" host="localhost" port="5432" instance="ergomercator" user="ergo" passwd="M3JnMG0zcmM0dDBy" />
	<connector name="Manage..." database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.16.jar" driver_desc="Standard" host="192.168.182.1" port="5433" instance="ergomercator" user="ergo" passwd="M3JnMG0zcmM0dDBy" />
	<layout name="Anagraph" id="Layout_1b2b53c" confirmed="y" show_column_type="y" show_schema_name="y" show_page_borders="y" show_relation="columns" >
		<entity schema="ergomercator.anagraph" name="addresses" color="BED3F4" x="48" y="1168" />
		<entity schema="ergomercator.anagraph" name="an_addresses_view" color="BED3F4" x="880" y="64" />
		<entity schema="ergomercator.anagraph" name="an_locations" color="F4DDBE" x="464" y="1920" />
		<entity schema="ergomercator.anagraph" name="anag_categories" color="F4DDBE" x="640" y="1568" />
		<entity schema="ergomercator.anagraph" name="anagraphs" color="F4DDBE" x="400" y="1488" >
			<column name="anagraph_id" />
			<column name="db_schema_id" />
			<column name="an_title" />
			<column name="an_name" />
			<column name="an_second_name" />
			<column name="an_last_name" />
			<column name="an_notes" />
			<column name="an_address" />
			<column name="an_town" />
			<column name="an_postal_code" />
			<column name="an_iso_country_code" />
			<column name="an_main_group_id" />
			<column name="main_category_id" />
		</entity>
		<entity schema="ergomercator.anagraph" name="anagraphs_view" color="F4DDBE" x="480" y="2112" >
			<column name="db_schema_id" />
			<column name="anagraph_id" />
			<column name="an_title" />
			<column name="an_name" />
			<column name="an_second_name" />
			<column name="an_last_name" />
			<column name="an_notes" />
			<column name="an_address" />
			<column name="an_town" />
			<column name="an_postal_code" />
			<column name="an_iso_country_code" />
		</entity>
		<entity schema="ergomercator.anagraph" name="branches" color="F4DDBE" x="64" y="1792" />
		<entity schema="ergomercator.anagraph" name="categories" color="F4DDBE" x="864" y="1488" />
		<entity schema="ergomercator.anagraph" name="categories_translations" color="F4DDBE" x="1152" y="1488" />
		<entity schema="ergomercator.anagraph" name="groups" color="BED3F4" x="1120" y="1632" />
		<entity schema="ergomercator.anagraph" name="groups_view" color="BED3F4" x="800" y="2128" />
		<entity schema="ergomercator.anagraph" name="identities" color="BED3F4" x="768" y="1712" />
		<entity schema="ergomercator.anagraph" name="osm_anagraphs" color="BED3F4" x="1200" y="48" />
		<entity schema="ergomercator.anagraph" name="schema_groups" color="BED3F4" x="1360" y="1744" />
		<script name="groups" id="Editor_977" language="SQL" >
			<string><![CDATA[SELECT an_group_id, db_schema_id, group_des, contact_group, sub_group, sub_group_des, settings, "position", accounting, cod_account, 
	"local", group_cod, ledger_cod, subledger_cod, "grouping", description, angr_jguid, angr_deleted, icon_id, jguid
FROM
	anagraph.groups s;]]></string>
		</script>
	</layout>
	<layout name="Car Service" id="Layout-25b1" show_column_type="y" show_schema_name="y" show_relation="columns" >
		<entity schema="ergomercator.anagraph" name="anagraphs" color="3986C1" x="800" y="576" >
			<column name="anagraph_id" />
			<column name="db_schema_id" />
			<column name="an_title" />
			<column name="an_name" />
			<column name="an_second_name" />
			<column name="an_last_name" />
			<column name="an_notes" />
			<column name="an_address" />
			<column name="an_town" />
			<column name="an_postal_code" />
			<column name="an_iso_country_code" />
			<column name="an_main_group_id" />
			<column name="main_category_id" />
		</entity>
		<entity schema="carservice" name="booking_addresses" color="3986C1" x="1168" y="48" />
		<entity schema="carservice" name="booking_heads" color="3986C1" x="816" y="80" />
		<entity schema="carservice" name="drivers" color="3986C1" x="48" y="384" />
		<entity schema="carservice" name="messages" color="3986C1" x="48" y="48" />
		<entity schema="carservice" name="owners_vehicles" color="3986C1" x="1184" y="688" />
		<entity schema="carservice" name="timetable" color="3986C1" x="464" y="304" />
		<script name="SQL_Editor" id="Editor_fb8" language="SQL" >
			<string><![CDATA[CREATE UNIQUE INDEX booking_heads_uid_uk ON carservice.booking_heads ( jguid ) ;

ALTER TABLE carservice.booking_heads ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_booking_heads_uid FOREIGN KEY ( booking_jguid ) REFERENCES carservice.booking_heads( jguid )   ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_timetable_uid FOREIGN KEY ( timetable_jguid ) REFERENCES carservice.timetable( jguid )   ;

CREATE UNIQUE INDEX timetable_uid_uk ON carservice.timetable ( jguid ) ;

ALTER TABLE carservice.timetable ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.timetable ADD CONSTRAINT fk_timetable_timetable_slots FOREIGN KEY ( slot_id ) REFERENCES carservice.timetable_slots( slot_id )   ;]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor_16a8" language="SQL" >
			<string><![CDATA[CREATE UNIQUE INDEX booking_heads_uid_uk ON carservice.booking_heads ( jguid ) ;

ALTER TABLE carservice.booking_heads ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_booking_heads_uid FOREIGN KEY ( booking_jguid ) REFERENCES carservice.booking_heads( jguid )   ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_timetable_uid FOREIGN KEY ( timetable_jguid ) REFERENCES carservice.timetable( jguid )   ;

CREATE UNIQUE INDEX timetable_uid_uk ON carservice.timetable ( jguid ) ;

ALTER TABLE carservice.timetable ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.timetable ADD CONSTRAINT fk_timetable_timetable_slots FOREIGN KEY ( slot_id ) REFERENCES carservice.timetable_slots( slot_id )   ;]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor_1a89" language="SQL" >
			<string><![CDATA[ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;]]></string>
		</script>
		<script name="SQL_Editor_003" id="Editor_18db" language="SQL" >
			<string><![CDATA[ALTER TABLE carservice.booking_addresses ADD CONSTRAINT fk_booking_addresses_anagraphs FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )   ;]]></string>
		</script>
		<script name="SQL_Editor_004" id="Editor_5a2" language="SQL" >
			<string><![CDATA[ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.owners_vehicles ADD CONSTRAINT fk_owners_vehicles_anagraphs FOREIGN KEY ( owner_id ) REFERENCES anagraph.anagraphs( anagraph_id )   ;

ALTER TABLE carservice.timetable ADD CONSTRAINT fk_timetable_anagraphs FOREIGN KEY ( driver_anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;]]></string>
		</script>
	</layout>
	<layout name="Logistic Workflows" id="Layout_5e7" confirmed="y" show_relation="columns" >
		<script name="levels_001" id="Editor_10fd" language="SQL" >
			<string><![CDATA[SELECT id, description, icon, color
FROM
	workflow.levels s;]]></string>
		</script>
		<script name="type_of_goods" id="Editor_1090" language="SQL" >
			<string><![CDATA[SELECT jguid, db_schema_id, code, description
FROM
	logistic.type_of_goods s;]]></string>
		</script>
	</layout>
	<layout name="Logistic_AWB" id="Layout_50e767b" confirmed="y" show_schema_name="y" show_relation="columns" >
		<comment><![CDATA[Logistic AWB]]></comment>
		<script name="anagraphs" id="Editor_cc" language="SQL" >
			<string><![CDATA[UPDATE anagraph.anagraphs SET jguid = uuid_generate_v1mc()
where
jguid is null ;]]></string>
		</script>
		<script name="locations" id="Editor_1324" language="SQL" >
			<string><![CDATA[UPDATE logistic.locations SET search_index = Upper(iata_code) || ' ' || Upper(name) || ' ' || country  ;]]></string>
		</script>
		<script name="locations_001" id="Editor_95a" language="SQL" >
			<string><![CDATA[SELECT id, jguid, db_schema_id, deleted, insert_date, update_date, user_insert, user_update, code, name, state_province, 
	country, area_code, iso_code, flgairport, iata_code, group_id, search_index
FROM
	logistic.locations s
WHERE
	s.flgairport]]></string>
		</script>
		<script name="locations_002" id="Editor_12ad" language="SQL" >
			<string><![CDATA[UPDATE logistic.locations 
SET ... = ... 
	logistic.locations s
WHERE
	s.flgairport]]></string>
		</script>
	</layout>
	<layout name="Pretty Cash" id="Layout_984ea" confirmed="y" show_schema_name="y" show_relation="columns" >
		<script name="SQL_Editor" id="Editor_2f08071" language="SQL" >
			<string><![CDATA[CREATE SCHEMA accounting;

CREATE  TABLE accounting.pcash_groups ( 
	db_schema_id         integer DEFAULT 0 NOT NULL 
 );

COMMENT ON TABLE accounting.pcash_groups IS 'Petty cash booking groups';

COMMENT ON COLUMN accounting.pcash_groups.db_schema_id IS 'Connection to db_Schema';]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor_4d27c4b" language="SQL" >
			<string><![CDATA[CREATE SCHEMA accounting;

CREATE SEQUENCE accounting.accounts_seq;

CREATE  TABLE accounting.pcash_account ( 
	id                   integer  NOT NULL ,
	master_id            integer  NOT NULL ,
	code                 varchar(10)   ,
	name                 varchar(128)  NOT NULL ,
	db_schema_id         integer DEFAULT 0 NOT NULL ,
	CONSTRAINT pk_pcash_account_id PRIMARY KEY ( id ),
	CONSTRAINT unq_pcash_account_master_id UNIQUE ( master_id ) 
 );

COMMENT ON TABLE accounting.pcash_account IS 'Account Definition and Code (eventually) for pretty Cash';

COMMENT ON COLUMN accounting.pcash_account.id IS 'group id Foreign Key';

COMMENT ON COLUMN accounting.pcash_account.master_id IS 'Master Account ID';

COMMENT ON COLUMN accounting.pcash_account.code IS 'Unique ID Code (Should be part of the General Ledger Chart of Accounting Codes).';

COMMENT ON COLUMN accounting.pcash_account.name IS 'Accounting Ledger Name';

COMMENT ON COLUMN accounting.pcash_account.db_schema_id IS 'Foreign Key to db_schema';

ALTER TABLE accounting.pcash_account ADD CONSTRAINT fk_pcash_account_pcash_account FOREIGN KEY ( id ) REFERENCES accounting.pcash_account( master_id );]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor_3afd9c" language="SQL" >
			<string><![CDATA[CREATE SCHEMA accounting;

CREATE SEQUENCE accounting.accounts_seq;

CREATE  TABLE accounting.pcash_account ( 
	id                   integer  NOT NULL ,
	master_id            integer  NOT NULL ,
	code                 varchar(10)   ,
	name                 varchar(128)  NOT NULL ,
	db_schema_id         integer DEFAULT 0 NOT NULL ,
	CONSTRAINT pk_pcash_account_id PRIMARY KEY ( id ),
	CONSTRAINT unq_pcash_account_master_id UNIQUE ( master_id ) 
 );

COMMENT ON TABLE accounting.pcash_account IS 'Account Definition and Code (eventually) for pretty Cash';

COMMENT ON COLUMN accounting.pcash_account.id IS 'group id Foreign Key';

COMMENT ON COLUMN accounting.pcash_account.master_id IS 'Master Account ID';

COMMENT ON COLUMN accounting.pcash_account.code IS 'Unique ID Code (Should be part of the General Ledger Chart of Accounting Codes).';

COMMENT ON COLUMN accounting.pcash_account.name IS 'Accounting Ledger Name';

COMMENT ON COLUMN accounting.pcash_account.db_schema_id IS 'Foreign Key to db_schema';

CREATE  TABLE accounting.pcash_journal_row ( 
	id                   bigint  NOT NULL ,
	journal_date         date DEFAULT current_date NOT NULL ,
	CONSTRAINT pk_pcash_journal_row_id PRIMARY KEY ( id )
 );

COMMENT ON TABLE accounting.pcash_journal_row IS 'Journal Row';

COMMENT ON COLUMN accounting.pcash_journal_row.id IS 'Unique row identifier';

COMMENT ON COLUMN accounting.pcash_journal_row.journal_date IS 'pretty cash journal date';

CREATE  TABLE accounting.pretty_cash_journal ( 
	id                   integer   ,
	pcash_name           varchar(128)  NOT NULL ,
	db_schema_id         integer DEFAULT 0 NOT NULL 
 );

COMMENT ON TABLE accounting.pretty_cash_journal IS 'Pretty cash journals';

COMMENT ON COLUMN accounting.pretty_cash_journal.id IS 'Unique id';

COMMENT ON COLUMN accounting.pretty_cash_journal.pcash_name IS 'Pretty cash name field';

ALTER TABLE accounting.pcash_account ADD CONSTRAINT fk_pcash_account_pcash_account FOREIGN KEY ( id ) REFERENCES accounting.pcash_account( master_id );]]></string>
		</script>
		<script name="pcash_accounting_rows_ledgers" id="Editor_3234e87" language="SQL" >
			<string><![CDATA[CREATE  TABLE accounting.pcash_accounting_vat_rows ( 
	ledger_guid          uuid  NOT NULL ,
	row_guid             uuid  NOT NULL ,
	debit                money DEFAULT 0 NOT NULL ,
	credit               money DEFAULT 0 NOT NULL ,
	CONSTRAINT pk_cash_accounting_vat_rows_guid PRIMARY KEY ( ledger_guid, row_guid )
 );

COMMENT ON COLUMN accounting.pcash_accounting_vat_rows.debit IS 'Debit';

COMMENT ON COLUMN accounting.pcash_accounting_vat_rows.credit IS 'Credit field';]]></string>
		</script>
	</layout>
	<layout name="Sports" id="Layout-fcf" show_relation="columns" >
		<entity schema="sports" name="calendar" color="BED3F4" x="512" y="48" >
			<column name="season_id" />
			<column name="league_id" />
			<column name="match_day_number" />
			<column name="match_day_date" />
			<column name="match_day_played" />
			<column name="rest_team_id" />
		</entity>
		<entity schema="sports" name="championships" color="BED3F4" x="288" y="48" >
			<column name="season_id" />
			<column name="league_id" />
			<column name="promoted" />
			<column name="playoff" />
			<column name="relegation" />
			<column name="champions" />
			<column name="playout" />
			<column name="teams" />
		</entity>
		<entity schema="sports" name="clubs" color="3986C1" x="1008" y="240" >
			<column name="id" />
			<column name="club_name" />
			<column name="foundation_date" />
			<column name="president" />
			<column name="stadium_id" />
			<column name="town" />
			<column name="vice_president" />
			<column name="team_manager" />
			<column name="athletic_manager" />
			<column name="colors" />
			<column name="website" />
			<column name="anagraph_id" />
			<column name="club_image" />
		</entity>
		<entity schema="sports" name="fields" color="3986C1" x="1008" y="592" >
			<column name="id" />
			<column name="db_schema_id" />
			<column name="field_name" />
			<column name="address" />
			<column name="country_id" />
			<column name="region_id" />
			<column name="district_id" />
			<column name="town_id" />
			<column name="remote_id" />
			<column name="town_name" />
			<column name="postal_code" />
			<column name="telephone" />
			<column name="fax" />
			<column name="notes" />
			<column name="img_url" />
		</entity>
		<entity schema="sports" name="leagues" color="BED3F4" x="48" y="528" >
			<column name="id" />
			<column name="league_name" />
			<column name="country_id" />
			<column name="league_position" />
			<column name="league_code" />
			<column name="remote_id" />
			<column name="promotedcss" />
			<column name="playoffcss" />
			<column name="championscss" />
			<column name="playoutcss" />
			<column name="relegationcss" />
			<column name="all_players" />
		</entity>
		<entity schema="sports" name="matches" color="BED3F4" x="496" y="416" >
			<column name="id" />
			<column name="league_id" />
			<column name="season_id" />
			<column name="match_day_number" />
			<column name="match_time" />
			<column name="match_date" />
			<column name="home_team_id" />
			<column name="visitors_team_id" />
			<column name="score_home" />
			<column name="score_visitor" />
			<column name="points_home" />
			<column name="points_visitors" />
			<column name="notes" />
			<column name="confirmed" />
			<column name="home_notes" />
			<column name="visitors_notes" />
			<column name="suspended" />
			<column name="postponed" />
			<column name="forfeit" />
			<column name="remote_id" />
			<column name="field_id" />
			<column name="article_url" />
			<column name="video_url" />
		</entity>
		<entity schema="sports" name="seasons" color="BED3F4" x="256" y="464" >
			<column name="id" />
			<column name="season_des" />
			<column name="season_code" />
			<column name="order_number" />
			<column name="remote_id" />
		</entity>
		<entity schema="sports" name="sets" color="3986C1" x="784" y="528" />
		<entity schema="sports" name="teams" color="3986C1" x="800" y="336" >
			<column name="id" />
			<column name="club_id" />
			<column name="team_name" />
			<column name="trainer_id" />
			<column name="image" />
		</entity>
	</layout>
	<layout name="Update 2023-08" id="Layout_177d" show_relation="columns" >
		<entity schema="planner" name="activities" color="BED3F4" x="304" y="48" />
		<entity schema="planner" name="activities_groups" color="BED3F4" x="80" y="64" />
		<entity schema="ergomercator.anagraph" name="cars" color="BED3F4" x="528" y="48" />
		<entity schema="carservice" name="messages" color="BED3F4" x="304" y="256" />
		<entity schema="planner" name="timetable" color="BED3F4" x="48" y="256" />
		<entity schema="carservice" name="timetable_booking_driver" color="BED3F4" x="544" y="400" />
	</layout>
	<layout name="jpublic" id="Layout_37b20fd" confirmed="y" show_schema_name="y" show_relation="columns" >
		<comment><![CDATA[PostgreSQL]]></comment>
		<entity schema="ergomercator.jpublic" name="buildings" color="BEBEF4" x="544" y="720" />
		<entity schema="ergomercator.jpublic" name="contiguous_regions" color="F4DDBE" x="48" y="80" />
		<entity schema="ergomercator.jpublic" name="countries" color="D1BEF4" x="1360" y="80" />
		<entity schema="ergomercator.jpublic" name="countries_trans" color="D1BEF4" x="1104" y="208" />
		<entity schema="ergomercator.jpublic" name="country_currencies" color="D1BEF4" x="1344" y="400" />
		<entity schema="ergomercator.jpublic" name="cultures" color="D1BEF4" x="1616" y="400" />
		<entity schema="ergomercator.jpublic" name="currencies" color="D1BEF4" x="1616" y="80" />
		<entity schema="ergomercator.jpublic" name="currencies_trans" color="D1BEF4" x="1904" y="80" />
		<entity schema="ergomercator.jpublic" name="district_trans" color="F4DDBE" x="832" y="272" />
		<entity schema="ergomercator.jpublic" name="districts" color="F4DDBE" x="576" y="272" />
		<entity schema="ergomercator.jpublic" name="lang_translations" color="F4DDBE" x="64" y="480" />
		<entity schema="ergomercator.jpublic" name="languages" color="F4DDBE" x="64" y="272" />
		<entity schema="ergomercator.jpublic" name="location_types" color="C7F4BE" x="1008" y="768" />
		<entity schema="ergomercator.jpublic" name="locations" color="C7F4BE" x="768" y="720" />
		<entity schema="ergomercator.jpublic" name="regions" color="F4DDBE" x="320" y="272" />
		<entity schema="ergomercator.jpublic" name="regions_trans" color="F4DDBE" x="320" y="496" />
		<entity schema="ergomercator.jpublic" name="routes" color="BED3F4" x="576" y="1088" />
		<entity schema="ergomercator.jpublic" name="sub_town_areas" color="BED3F4" x="288" y="1136" />
		<entity schema="ergomercator.jpublic" name="town_areas" color="BEBEF4" x="48" y="976" />
		<entity schema="ergomercator.jpublic" name="town_areas_routes" color="C1D8EE" x="368" y="992" />
		<entity schema="ergomercator.jpublic" name="towns" color="BEBEF4" x="48" y="736" />
		<group name="Group_Towns" color="C4E0F9" >
			<entity schema="ergomercator.jpublic" name="sub_town_areas" />
			<entity schema="ergomercator.jpublic" name="towns" />
			<entity schema="ergomercator.jpublic" name="buildings" />
			<entity schema="ergomercator.jpublic" name="town_areas_routes" />
			<entity schema="ergomercator.jpublic" name="routes" />
		</group>
		<group name="Group_Locations" color="CCFFCC" >
			<entity schema="ergomercator.jpublic" name="locations" />
			<entity schema="ergomercator.jpublic" name="location_types" />
		</group>
	</layout>
	<layout name="system" id="Layout_31680f" confirmed="y" show_relation="columns" />
</project>