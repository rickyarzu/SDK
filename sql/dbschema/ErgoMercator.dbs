<?xml version="1.0" encoding="UTF-8" ?>
<project name="Ergo Mercator" id="Project_2f9a77f" database="PostgreSQL" >
	<schema name="accounting" >
		<comment><![CDATA[Accounting Related procedures from petty Cash to General Ledger]]></comment>
		<table name="current_accounts" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="description" type="varchar" length="256" decimal="0" jt="12" />
			<column name="accounting_date" type="date" length="13" decimal="0" jt="91" />
			<column name="value_date" type="date" length="13" decimal="0" jt="91" />
			<column name="debit" type="money" decimal="0" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="credit" type="money" decimal="0" jt="3" mandatory="y" />
			<index name="current_account_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="current_account_uid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="financial_year" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="starts" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="ends" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="months" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[12]]></defo>
			</column>
			<column name="offset" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="code" type="varchar" length="12" decimal="0" jt="12" mandatory="y" />
			<column name="shortcode" type="varchar" length="12" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[32]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="debit_credit_account_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="debit_credit_account_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="ledger_accounts" >
			<comment><![CDATA[Account Definition and Code (eventually) for Chart of Accounts]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<column name="code" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[Unique ID Code (Should be part of the General Ledger Chart of Accounting Codes).]]></comment>
			</column>
			<column name="name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Accounting Ledger Name]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Foreign Key to db_schema]]></comment>
			</column>
			<column name="master_guid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_pcash_account_guid" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
			<fk name="fk_pcash_account_pcash_account" to_schema="accounting" to_table="ledger_accounts" >
				<fk_column name="master_guid" pk="guid" />
			</fk>
		</table>
		<table name="payment_terms" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="code" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="endmonth" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="months" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="days" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="installment" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="description" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[brief payment term description]]></comment>
			</column>
			<column name="edi_code" type="varchar" length="12" decimal="0" jt="12" />
			<column name="master_term_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Master Key for Installments payment]]></comment>
			</column>
			<column name="installment_rate" type="numeric" length="5" decimal="2" jt="2" >
				<comment><![CDATA[The % rate for an installment row payment.]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="payment_terms_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="code_schema_udx" unique="UNIQUE_INDEX" >
				<column name="code" />
				<column name="db_schema_id" />
			</index>
			<fk name="fk_payment_installment_master_terms" to_schema="accounting" to_table="payment_terms" delete_action="cascade" update_action="cascade" >
				<fk_column name="master_term_id" pk="id" />
			</fk>
		</table>
		<table name="pcash_accounting_books" >
			<comment><![CDATA[Accouting Books for schema]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<column name="title" type="varchar" decimal="0" jt="12" />
			<index name="pk_pcash_accounting_books_guid" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
		</table>
		<table name="pcash_accounting_periods" >
			<comment><![CDATA[List of Pretty Cash Accounting Periods]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<column name="period" type="varchar" length="10" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Period Unique Key - For the Accounting Journal]]></comment>
			</column>
			<column name="from_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="to_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="book_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="pk_pcash_accounting_periods" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
		</table>
		<table name="pcash_accounting_row" >
			<comment><![CDATA[Journal Row]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<column name="journal_date" type="date" length="13" decimal="0" jt="91" mandatory="y" >
				<defo><![CDATA[CURRENT_DATE]]></defo>
				<comment><![CDATA[pretty cash journal date]]></comment>
			</column>
			<column name="books_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="periods_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="debit" type="money" decimal="0" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Debit field fo the Entry.]]></comment>
			</column>
			<column name="credit" type="money" decimal="0" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="account_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="pk_pcash_accounting_row_guid" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
			<fk name="fk_pcash_accounting_row_pcash_account" to_schema="accounting" to_table="ledger_accounts" >
				<fk_column name="account_guid" pk="guid" />
			</fk>
			<fk name="fk_pcash_accounting_row" to_schema="accounting" to_table="pcash_accounting_books" >
				<fk_column name="books_guid" pk="guid" />
			</fk>
			<fk name="fk_pcash_accounting_rows_periods" to_schema="accounting" to_table="pcash_accounting_periods" >
				<fk_column name="periods_guid" pk="guid" />
			</fk>
		</table>
		<table name="pcash_accounting_rows_ledgers" >
			<column name="ledger_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="row_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="debit" type="money" decimal="0" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Debit]]></comment>
			</column>
			<column name="credit" type="money" decimal="0" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Credit field]]></comment>
			</column>
			<index name="pk_pcash_accounting_rows_ledgers_ledger_guid" unique="PRIMARY_KEY" >
				<column name="ledger_guid" />
				<column name="row_guid" />
			</index>
			<fk name="fk_pcash_accounting_rows_ledgers_pcash_accounting_row" to_schema="accounting" to_table="pcash_accounting_row" >
				<fk_column name="row_guid" pk="guid" />
			</fk>
			<fk name="fk_pcash_accounting_rows_ledgers_pretty_cash_ledger" to_schema="accounting" to_table="pretty_cash_ledgers" >
				<fk_column name="ledger_guid" pk="guid" />
			</fk>
		</table>
		<table name="pcash_books_ledgers" >
			<comment><![CDATA[Journals Registered to the books]]></comment>
			<column name="ledger_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="book_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="is_cash" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
				<comment><![CDATA[Boolean field for Cash fields]]></comment>
			</column>
			<index name="pk_pcash_books_ledgers_ledger_guid" unique="PRIMARY_KEY" >
				<column name="ledger_guid" />
				<column name="book_guid" />
			</index>
			<fk name="fk_pcash_books_ledgers_pcash_accounting_books" to_schema="accounting" to_table="pcash_accounting_books" >
				<fk_column name="book_guid" pk="guid" />
			</fk>
			<fk name="fk_pcash_books_ledgers_pretty_cash_ledger" to_schema="accounting" to_table="pretty_cash_ledgers" >
				<fk_column name="ledger_guid" pk="guid" />
			</fk>
		</table>
		<table name="pcash_ledger_types" >
			<comment><![CDATA[Diffrent Types of ledgers, this is usually a public Table]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="name" type="varchar" length="100" decimal="0" jt="12" />
			<column name="is_cash" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Check if this is a cash Record]]></comment>
			</column>
			<index name="pk_pcash_ledger_types_guid" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
		</table>
		<table name="pretty_cash_ledgers" >
			<comment><![CDATA[Pretty cash journals]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="pcash_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Pretty cash name field]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="type_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="account_guid" type="uuid" decimal="0" jt="1111" >
				<comment><![CDATA[Foreign Key to Account (if a Chart of Account is active).]]></comment>
			</column>
			<index name="pk_pretty_cash_ledger_guid" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
			<fk name="fk_pretty_cash_ledgers" to_schema="accounting" to_table="ledger_accounts" update_action="cascade" >
				<fk_column name="account_guid" pk="guid" />
			</fk>
			<fk name="fk_pretty_cash_ledgers_pcash_ledger_types" to_schema="accounting" to_table="pcash_ledger_types" update_action="cascade" >
				<fk_column name="type_guid" pk="guid" />
			</fk>
		</table>
		<table name="vat_codes" >
			<column name="id" type="smallserial" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[nextval('accounting.vat_seq'::regclass)]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="description" type="varchar" length="25" decimal="0" jt="12" />
			<column name="vat_rate" type="numeric" length="5" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="non_deductible_rate" type="numeric" length="5" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="vat_group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="vat_separation" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="vat_separtion_rate" type="numeric" length="5" decimal="2" jt="2" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="vat_translation_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="vat_enabled" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="group_cod" type="varchar" length="2" decimal="0" jt="12" />
			<column name="ledger_cod" type="varchar" length="3" decimal="0" jt="12" />
			<column name="subledger_cod" type="varchar" length="9" decimal="0" jt="12" />
			<index name="vat_codes_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="vat_codes_schema_uk" unique="UNIQUE_KEY" >
				<column name="code" />
				<column name="db_schema_id" />
			</index>
		</table>
		<sequence name="accounts_seq" options="START WITH 1" />
		<sequence name="vat_seq" options="START WITH 1" />
		<trigger name="financial_year_default_biu_trg" table="financial_year" id="Trigger_b4" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER financial_year_default_biu_trg BEFORE INSERT OR UPDATE ON accounting.financial_year FOR EACH ROW EXECUTE PROCEDURE jpublic.defaults_trg()]]></string>
		</trigger>
		<function name="get_payment_code_by_id" id="Function_3d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION accounting.get_payment_code_by_id(p_id integer, p_schema_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R character varying; 
begin
  R := null; 
  
  if p_id is not null then 
  select into I count(1)
     from accounting.payment_terms a
	 where
	    a.id = p_id 
		and db_schema_id = p_schema_id;
		
	if I = 1 then
    select into R  code
      from accounting.payment_terms a
	 where
	    a.id = p_id  
		and db_schema_id = p_schema_id; 
	end if; 
	
   end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="get_payment_id_by_code" id="Function_1ebc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION accounting.get_payment_id_by_code(p_code character varying, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
begin
  R := null; 
  
  if p_code is not null then 
  select into I count(1)
     from accounting.payment_terms a
	 where
	    a.code = Upper(p_code) 
		and db_schema_id = p_schema_id;
		
	if I = 1 then
    select into R id 
      from accounting.payment_terms a
	 where
	    a.code = Upper(p_code) 
		and db_schema_id = p_schema_id; 
	end if; 
	
   end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="get_payment_term_by_code" id="Function_1be6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION accounting.get_payment_term_by_code(p_code character varying, p_schema_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R character varying; 
begin
  R := null; 
  
  if p_code is not null then 
  select into I count(1)
     from accounting.payment_terms a
	 where
	    a.code = Upper(p_code) 
		and db_schema_id = p_schema_id;
		
	if I = 1 then
    select into R  description
      from accounting.payment_terms a
	 where
	    a.code = Upper(p_code) 
		and db_schema_id = p_schema_id; 
	end if; 
	
   end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="vat_insert_id" id="Function_1085" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION accounting.vat_insert_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
/*
  vat_rate, 
  non_deductible_rate, 
  vat_group_id, 
  vat_separation, 
  vat_separtion_rate, 
  insert_date, 
  update_date, 
  vat_translation_id, 
  user_insert, 
  user_update, 
  vat_enabled
*/
     if New.id is null then
          New.id:=nextval('accounting.vat_seq');
      end if;
	  
     if New.insert_date is null then
          New.insert_date:=now();
      end if;
	  
  Return New; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="carservice" >
		<comment><![CDATA[Car Service Schema]]></comment>
		<table name="booking_addresses" >
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[Foreign key to Booking]]></comment>
			</column>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="address_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="postal_code" length="34" decimal="0" jt="12" />
			<column name="state_province" type="state_province" length="34" decimal="0" jt="12" />
			<column name="town_name" type="town_name" length="132" decimal="0" jt="12" />
			<column name="town_code" type="town_code" length="24" decimal="0" jt="12" />
			<column name="address" type="address" length="260" decimal="0" jt="12" mandatory="y" />
			<column name="address_number" type="address_number" length="24" decimal="0" jt="12" />
			<column name="phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="full_address" type="varchar" length="512" decimal="0" jt="12" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ad_type" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['P'::"char"]]></defo>
			</column>
			<column name="booking_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[Foreign Key to Booking Table using jguid instead of bigint ID]]></comment>
			</column>
			<column name="maps_json" type="json" decimal="0" jt="2000" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="booking_addresses_pk" unique="PRIMARY_KEY" >
				<column name="booking_id" />
				<column name="id" />
			</index>
			<index name="fki_booking_addresses_booking_heads_fk" unique="NORMAL" >
				<column name="booking_id" />
			</index>
			<constraint name="anagraph_id_check" >
				<string><![CDATA[CHECK ((anagraph_id > 0))]]></string>
			</constraint>
			<fk name="booking_addresses_booking_heads_fk" to_schema="carservice" to_table="booking_heads" >
				<fk_column name="booking_id" pk="id" />
			</fk>
			<fk name="fk_booking_addresses_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="booking_heads" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[Unique Identifier]]></comment>
			</column>
			<column name="office_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Car Service identifier (or branch identifier)]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="customer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Car Service's customer anagraph_id]]></comment>
			</column>
			<column name="state_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="branch_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="vehicle_numberplate" type="varchar" length="24" decimal="0" jt="12" >
				<comment><![CDATA[Car or Vehicle Numberplate for this Booking mandatory]]></comment>
			</column>
			<column name="vehicle_model" type="varchar" length="128" decimal="0" jt="12" />
			<column name="vehicle_color" type="varchar" length="64" decimal="0" jt="12" >
				<comment><![CDATA[Color of the vehicle should be a complex definition color and metal just to say]]></comment>
			</column>
			<column name="driver_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key to Drivers anagraph record]]></comment>
			</column>
			<column name="pickup_day" type="date" length="13" decimal="0" jt="91" />
			<column name="pickup_slot_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="return_day" type="date" length="13" decimal="0" jt="91" />
			<column name="return_slot_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="booking_heads_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="booking_heads_uid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
			<fk name="timetable_booking_states_fk" to_schema="carservice" to_table="booking_states" update_action="cascade" >
				<fk_column name="state_id" pk="id" />
			</fk>
		</table>
		<table name="booking_states" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="description" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<index name="booking_states_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="booking_states_jk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="booking_status" >
			<comment><![CDATA[Connected to Booking Status]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Status ID]]></comment>
			</column>
			<column name="description" type="varchar" length="32" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[State description]]></comment>
			</column>
			<index name="pk_booking_status" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="current_accounts" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="description" type="varchar" length="256" decimal="0" jt="12" />
			<column name="accounting_date" type="date" length="13" decimal="0" jt="91" />
			<column name="value_date" type="date" length="13" decimal="0" jt="91" />
			<column name="debit" type="money" decimal="0" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="credit" type="money" decimal="0" jt="3" mandatory="y" />
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" />
			<fk name="current_accounts_bookings_fk" to_schema="carservice" to_table="booking_heads" update_action="cascade" >
				<fk_column name="booking_id" pk="id" />
			</fk>
		</table>
		<table name="drivers" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="drive_license_number" type="varchar" length="40" decimal="0" jt="12" mandatory="y" />
			<column name="drive_license_expiry" type="date" length="13" decimal="0" jt="91" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="drivers_pkey" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
			</index>
			<fk name="drivers_anagraph_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" update_action="cascade" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="messages" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="msgtype" type="integer" length="10" decimal="0" jt="4" />
			<column name="msgtext" type="text" decimal="0" jt="12" />
			<column name="json" type="json" decimal="0" jt="2000" />
			<column name="booking_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="timetable_jguid" type="uuid" decimal="0" jt="1111" />
			<index name="message_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="timetable_jguid_ndx" unique="NORMAL" >
				<column name="timetable_jguid" />
			</index>
			<fk name="fk_messages_booking_heads_uid" to_schema="carservice" to_table="booking_heads" >
				<fk_column name="booking_jguid" pk="jguid" />
			</fk>
			<fk name="fk_messages_timetable_uid" to_schema="carservice" to_table="timetable" >
				<fk_column name="timetable_jguid" pk="jguid" />
			</fk>
		</table>
		<table name="owners_vehicles" >
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="numberplate" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="model" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="owners_vehicles_pkey" unique="PRIMARY_KEY" >
				<column name="owner_id" />
				<column name="numberplate" />
			</index>
			<fk name="fk_owners_vehicles_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="owner_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="timetable" >
			<column name="workingday" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="slot_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="driver_anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="from_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="state_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v4()]]></defo>
			</column>
			<column name="from_latitude" type="float8" length="17" decimal="17" jt="6" >
				<comment><![CDATA[Latitude of Starting Address]]></comment>
			</column>
			<column name="from_longitude" type="float8" length="17" decimal="17" jt="6" >
				<comment><![CDATA[From Longitude]]></comment>
			</column>
			<column name="from_full_address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="to_latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="to_longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="to_full_address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="images_pickup" type="json" decimal="0" jt="2000" />
			<column name="images_delivery" type="json" decimal="0" jt="2000" />
			<index name="timetable_pkey" unique="PRIMARY_KEY" >
				<column name="workingday" />
				<column name="slot_id" />
				<column name="driver_anagraph_id" />
			</index>
			<index name="day_slot_id" unique="NORMAL" >
				<column name="workingday" />
				<column name="slot_id" />
			</index>
			<index name="fki_timetable_booking_states_fk" unique="NORMAL" >
				<column name="state_id" />
			</index>
			<index name="timetable_workingday_ndx" unique="NORMAL" >
				<column name="workingday" />
			</index>
			<index name="timetable_slot_id_ndx" unique="NORMAL" >
				<column name="slot_id" />
			</index>
			<index name="timetable_uid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
			<index name="driver_anagraph_ndx" unique="NORMAL" >
				<column name="driver_anagraph_id" />
			</index>
			<index name="timetable_booking_ndx" unique="NORMAL" >
				<column name="booking_id" />
			</index>
			<index name="to_id_ndx" unique="NORMAL" >
				<column name="to_id" />
			</index>
			<fk name="timetable_booking_states_fk" to_schema="carservice" to_table="booking_states" update_action="cascade" >
				<fk_column name="state_id" pk="id" />
			</fk>
			<fk name="fk_timetable_timetable_slots" to_schema="carservice" to_table="timetable_slots" >
				<fk_column name="slot_id" pk="slot_id" />
			</fk>
			<fk name="fk_timetable_booking_heads" to_schema="carservice" to_table="booking_heads" delete_action="setNull" update_action="cascade" >
				<fk_column name="booking_id" pk="id" />
			</fk>
			<fk name="fk_timetable_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" update_action="cascade" >
				<fk_column name="driver_anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="timetable_files" >
			<comment><![CDATA[A List of Files (Images, PDF, Signatures Attached to a Timetable Workflow).]]></comment>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[UUID primary Key and Filename]]></comment>
			</column>
			<column name="timetable_guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[Unique Foreign Key to TimeTable]]></comment>
			</column>
			<column name="insert_date" type="timetz" length="21" decimal="6" jt="92" mandatory="y" />
			<column name="file_extension" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Blob_id has a value only if a file is stored internally.]]></comment>
			</column>
			<index name="timetable_files_pkey" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="timetable_slots" >
			<column name="slot_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="slot_des" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="slot_time" type="time" length="15" decimal="6" jt="92" />
			<column name="delivery_time" type="time" length="15" decimal="6" jt="92" />
			<column name="slot_delivery" type="varchar" length="12" decimal="0" jt="12" />
			<column name="booking_time" type="time" length="15" decimal="6" jt="92" />
			<index name="timetable_slots_pk" unique="PRIMARY_KEY" >
				<column name="slot_id" />
				<column name="slot_des" />
			</index>
			<index name="unq_timetable_slots_slot_id" unique="UNIQUE_KEY" >
				<column name="slot_id" />
			</index>
		</table>
		<view name="booking_head_view" >
			<comment><![CDATA[This view contains All booking informations about Customer, Service and Service Office along with Drivers and Pickup-Delivery-Return Routes info]]></comment>
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT bh.id,
    bh.office_id,
    bh.jguid,
    bh.db_schema_id,
    bh.user_insert,
    bh.insert_date,
    bh.customer_id,
    bh.state_id,
    bh.branch_id,
    bh.vehicle_model,
    bh.vehicle_color,
    bh.vehicle_numberplate,
    bh.pickup_day,
    bh.pickup_slot_id,
    bh.return_day,
    bh.return_slot_id,
    se.an_last_name,
    se.an_vat_id,
    se.an_address,
    se.an_postal_code,
    se.an_fiscal_code,
    se.an_town,
    se.an_last_name AS service_name,
    COALESCE((se.an_full_address)::text, ((((((se.an_address)::text || ', '::text) || (se.an_postal_code)::text) || ', '::text) || (se.an_town)::text) ||
        CASE
            WHEN (se.an_state_province IS NULL) THEN ''::text
            ELSE ((' ('::text || (se.an_state_province)::text) || ')'::text)
        END)) AS service_address,
    se.an_phone,
    se.an_email,
    se.an_cellular,
    br.an_address AS branch_address,
    br.an_postal_code AS branch_postal_code,
    br.an_town AS branch_town,
    br.an_phone AS branch_phone,
    cu.an_name AS cust_first_name,
    cu.an_last_name AS cust_last_name,
    cu.an_address AS full_address,
    cu.an_cellular AS cust_cellular,
    cu.an_email AS cust_email,
    (tp.from_full_address)::text AS pickup_address,
    (tp.to_full_address)::text AS return_address,
    tp.slot_des AS pickup_time,
    tr.slot_des AS return_time,
    tp.workingday AS pickup_date,
    tr.workingday AS return_date,
    tp.driver_anagraph_id AS driver1_id,
    tr.driver_anagraph_id AS driver2_id,
    dp.an_email AS driver1_email,
    dr.an_email AS driver2_email,
    dp.an_cellular AS driver1_cellular,
    dr.an_cellular AS driver2_cellular,
    tp.jguid AS pickup_jguid,
    tr.jguid AS return_jguid,
    (tr.from_full_address)::text AS pickup2_address,
    (tr.to_full_address)::text AS return2_address,
    tp.slot_delivery AS pickup_slot_delivery,
    tr.slot_delivery AS return_slot_delivery
   FROM (((((((carservice.booking_heads bh
     JOIN anagraph.anagraphs se ON ((bh.office_id = se.anagraph_id)))
     JOIN anagraph.anagraphs br ON ((bh.branch_id = br.anagraph_id)))
     JOIN anagraph.anagraphs cu ON ((bh.customer_id = cu.anagraph_id)))
     JOIN carservice.timetable_view tp ON (((bh.pickup_day = tp.workingday) AND (bh.pickup_slot_id = tp.slot_id) AND (bh.id = tp.booking_id))))
     JOIN anagraph.anagraphs dp ON ((tp.driver_anagraph_id = dp.anagraph_id)))
     LEFT JOIN carservice.timetable_view tr ON (((bh.return_day = tr.workingday) AND (bh.return_slot_id = tr.slot_id) AND (bh.id = tr.booking_id))))
     LEFT JOIN anagraph.anagraphs dr ON ((tr.driver_anagraph_id = dr.anagraph_id)));]]></view_script>
			<column name="id" type="bigint" />
			<column name="office_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="db_schema_id" type="integer" />
			<column name="user_insert" type="integer" />
			<column name="insert_date" type="timestamptz" />
			<column name="customer_id" type="integer" />
			<column name="state_id" type="smallint" />
			<column name="branch_id" type="integer" />
			<column name="vehicle_model" type="varchar" />
			<column name="vehicle_color" type="varchar" />
			<column name="vehicle_numberplate" type="varchar" />
			<column name="pickup_day" type="date" />
			<column name="pickup_slot_id" type="smallint" />
			<column name="return_day" type="date" />
			<column name="return_slot_id" type="smallint" />
			<column name="an_last_name" type="varchar" />
			<column name="an_vat_id" type="smallint" />
			<column name="an_address" type="varchar" />
			<column name="an_postal_code" type="varchar" />
			<column name="an_fiscal_code" type="varchar" />
			<column name="an_town" type="varchar" />
			<column name="service_name" type="varchar" />
			<column name="service_address" type="text" />
			<column name="an_phone" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_cellular" type="varchar" />
			<column name="branch_address" type="varchar" />
			<column name="branch_postal_code" type="varchar" />
			<column name="branch_town" type="varchar" />
			<column name="branch_phone" type="varchar" />
			<column name="cust_first_name" type="varchar" />
			<column name="cust_last_name" type="varchar" />
			<column name="full_address" type="varchar" />
			<column name="cust_cellular" type="varchar" />
			<column name="cust_email" type="varchar" />
			<column name="pickup_address" type="text" />
			<column name="return_address" type="text" />
			<column name="pickup_time" type="varchar" />
			<column name="return_time" type="varchar" />
			<column name="pickup_date" type="date" />
			<column name="return_date" type="date" />
			<column name="driver1_id" type="integer" />
			<column name="driver2_id" type="integer" />
			<column name="driver1_email" type="varchar" />
			<column name="driver2_email" type="varchar" />
			<column name="driver1_cellular" type="varchar" />
			<column name="driver2_cellular" type="varchar" />
			<column name="pickup_jguid" type="uuid" />
			<column name="return_jguid" type="uuid" />
			<column name="pickup2_address" type="text" />
			<column name="return2_address" type="text" />
			<column name="pickup_slot_delivery" type="varchar" />
			<column name="return_slot_delivery" type="varchar" />
		</view>
		<view name="timetable_booking_driver" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT v.jguid,
    v.workingday,
    v.slot_id,
    v.booking_id,
    v.from_id,
    v.to_id,
    v.state_id,
    v.slot_des,
    v.booked,
    v.driver_anagraph_id,
    v.an_cellular,
    v."?column?" AS driver_name,
    v.an_email,
    v.from_latitude,
    v.from_longitude,
    v.from_full_address,
    v.to_latitude,
    v.to_longitude,
    v.to_full_address,
    f.an_cellular AS from_cellular,
    f.an_email AS from_email,
    btrim((((f.an_name)::text || ' '::text) || (f.an_last_name)::text)) AS from_name,
    t.an_cellular AS to_cellular,
    t.an_email AS to_email,
    btrim((((t.an_name)::text || ' '::text) || (t.an_last_name)::text)) AS to_name,
    h.vehicle_numberplate,
    h.vehicle_model,
    h.vehicle_color
   FROM (((((carservice.timetable_view v
     JOIN anagraph.an_addresses fa ON ((fa.id = v.from_id)))
     JOIN anagraph.anagraphs f ON ((fa.anagraph_id = f.anagraph_id)))
     JOIN anagraph.an_addresses ta ON ((ta.id = v.to_id)))
     JOIN anagraph.anagraphs t ON ((fa.anagraph_id = t.anagraph_id)))
     JOIN carservice.booking_heads h ON ((v.booking_id = h.id)))
  WHERE (v.booking_id IS NOT NULL)
  ORDER BY v.booking_id DESC;]]></view_script>
			<column name="jguid" type="uuid" />
			<column name="workingday" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="booking_id" type="bigint" />
			<column name="from_id" type="integer" />
			<column name="to_id" type="integer" />
			<column name="state_id" type="smallint" />
			<column name="slot_des" type="varchar" />
			<column name="booked" type="boolean" />
			<column name="driver_anagraph_id" type="integer" />
			<column name="an_cellular" type="varchar" />
			<column name="driver_name" type="text" />
			<column name="an_email" type="varchar" />
			<column name="from_latitude" type="float8" />
			<column name="from_longitude" type="float8" />
			<column name="from_full_address" type="varchar" />
			<column name="to_latitude" type="float8" />
			<column name="to_longitude" type="float8" />
			<column name="to_full_address" type="varchar" />
			<column name="from_cellular" type="varchar" />
			<column name="from_email" type="varchar" />
			<column name="from_name" type="text" />
			<column name="to_cellular" type="varchar" />
			<column name="to_email" type="varchar" />
			<column name="to_name" type="text" />
			<column name="vehicle_numberplate" type="varchar" />
			<column name="vehicle_model" type="varchar" />
			<column name="vehicle_color" type="varchar" />
		</view>
		<view name="timetable_booking_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.pickup_an_id,
    t.pickup_first_name,
    t.pickup_vat_id,
    t.pickup_address,
    t.pickup_postal_code,
    t.pickup_fiscal_code,
    t.pickup_town,
    t.pickup_last_name,
    t.pickup_full_address,
    t.pickup_phone,
    t.pickup_email,
    t.pickup_cellular,
    t.delivery_an_id,
    t.delivery_first_name,
    t.delivery_vat_id,
    t.delivery_address,
    t.delivery_postal_code,
    t.delivery_fiscal_code,
    t.delivery_town,
    t.delivery_last_name,
    t.delivery_full_address,
    t.delivery_phone,
    t.delivery_email,
    t.delivery_cellular,
    t.jguid,
    t.pickup_time,
    t.pickup_date,
    t.driver_id,
    t.booking_id,
    t.driver_email,
    t.driver1_cellular,
    t.driver_jguid,
    t.slot_id,
    h.vehicle_numberplate,
    h.vehicle_model,
    h.vehicle_color,
    h.pickup_day,
    h.pickup_slot_id,
    h.return_day
   FROM (carservice.timetable_summary_view t
     JOIN carservice.booking_heads h ON ((h.id = t.booking_id)));]]></view_script>
			<column name="pickup_an_id" type="integer" />
			<column name="pickup_first_name" type="varchar" />
			<column name="pickup_address" type="address" />
			<column name="pickup_postal_code" type="postal_code" />
			<column name="pickup_town" type="town_name" />
			<column name="pickup_full_address" type="varchar" />
			<column name="pickup_phone" type="phone" />
			<column name="pickup_email" type="varchar" />
			<column name="delivery_first_name" type="varchar" />
			<column name="delivery_address" type="address" />
			<column name="delivery_postal_code" type="postal_code" />
			<column name="delivery_town" type="town_name" />
			<column name="delivery_full_address" type="varchar" />
			<column name="delivery_phone" type="phone" />
			<column name="delivery_email" type="varchar" />
			<column name="jguid" type="uuid" />
			<column name="pickup_time" type="varchar" />
			<column name="pickup_date" type="date" />
			<column name="driver_id" type="integer" />
			<column name="booking_id" type="bigint" />
			<column name="driver_email" type="varchar" />
			<column name="driver1_cellular" type="varchar" />
			<column name="driver_jguid" type="uuid" />
			<column name="slot_id" type="smallint" />
			<column name="vehicle_numberplate" type="varchar" />
			<column name="vehicle_model" type="varchar" />
			<column name="vehicle_color" type="varchar" />
			<column name="pickup_day" type="date" />
			<column name="pickup_slot_id" type="smallint" />
			<column name="return_day" type="date" />
			<column name="pickup_vat_id" type="smallint" />
			<column name="pickup_fiscal_code" type="varchar" />
			<column name="pickup_last_name" type="varchar" />
			<column name="pickup_cellular" type="varchar" />
			<column name="delivery_an_id" type="integer" />
			<column name="delivery_vat_id" type="smallint" />
			<column name="delivery_fiscal_code" type="varchar" />
			<column name="delivery_last_name" type="varchar" />
			<column name="delivery_cellular" type="varchar" />
		</view>
		<view name="timetable_files_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.timetable_guid,
    t.jguid,
    t.file_extension,
    t.blob_id,
    b.blob_file,
    b.blob_size,
    b.db_schema_id,
    b.blob_key,
    b.db_user_id,
    b.ispublic,
    b.file_ext,
    b.filename,
    b.isresource,
    b.is_external,
    b.ex_location,
    b.insert_date,
    b.description,
    b.flg_stored,
    b.directory_id
   FROM (carservice.timetable_files t
     JOIN cloud.blob_files b ON ((t.blob_id = b.blob_id)));]]></view_script>
			<column name="timetable_guid" type="uuid" />
			<column name="jguid" type="uuid" />
			<column name="file_extension" type="varchar" />
			<column name="blob_id" type="bigint" />
			<column name="blob_file" type="bytea" />
			<column name="blob_size" type="bigint" />
			<column name="db_schema_id" type="integer" />
			<column name="blob_key" type="varchar" />
			<column name="db_user_id" type="integer" />
			<column name="ispublic" type="boolean" />
			<column name="file_ext" type="varchar" />
			<column name="filename" type="varchar" />
			<column name="isresource" type="boolean" />
			<column name="is_external" type="boolean" />
			<column name="ex_location" type="char" />
			<column name="insert_date" type="timestamp" />
			<column name="description" type="varchar" />
			<column name="flg_stored" type="boolean" />
			<column name="directory_id" type="bigint" />
		</view>
		<view name="timetable_free_places" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT p.workingday,
    p.slot_id,
    s.slot_des,
    p.places,
    p.booked,
    s.delivery_time,
    s.booking_time,
    s.slot_delivery,
    s.slot_time,
        CASE
            WHEN (CURRENT_DATE < p.workingday) THEN p.free_places
            WHEN (CURRENT_DATE > p.workingday) THEN (0)::bigint
            WHEN (CURRENT_DATE = p.workingday) THEN
            CASE
                WHEN ((now())::time without time zone < s.booking_time) THEN p.free_places
                WHEN ((now())::time without time zone >= s.booking_time) THEN (0)::bigint
                ELSE NULL::bigint
            END
            ELSE NULL::bigint
        END AS free_places,
        CASE
            WHEN (CURRENT_DATE < p.workingday) THEN p.free
            WHEN (CURRENT_DATE > p.workingday) THEN false
            WHEN (CURRENT_DATE = p.workingday) THEN
            CASE
                WHEN ((now())::time without time zone < s.booking_time) THEN p.free
                WHEN ((now())::time without time zone >= s.booking_time) THEN false
                ELSE NULL::boolean
            END
            ELSE NULL::boolean
        END AS free
   FROM (carservice.timetable_places p
     JOIN carservice.timetable_slots s ON ((p.slot_id = s.slot_id)))
  ORDER BY p.workingday, p.slot_id;]]></view_script>
			<column name="workingday" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="slot_des" type="varchar" />
			<column name="places" type="bigint" />
			<column name="booked" type="bigint" />
			<column name="delivery_time" type="time" />
			<column name="booking_time" type="time" />
			<column name="slot_delivery" type="varchar" />
			<column name="slot_time" type="time" />
			<column name="free_places" type="bigint" />
			<column name="free" type="boolean" />
		</view>
		<view name="timetable_places" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT timetable.workingday,
    timetable.slot_id,
    count(1) AS places,
    count(timetable.booking_id) AS booked,
    (count(1) - count(timetable.booking_id)) AS free_places,
    (count(1) > count(timetable.booking_id)) AS free
   FROM carservice.timetable
  GROUP BY timetable.workingday, timetable.slot_id;]]></view_script>
			<column name="workingday" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="places" type="bigint" />
			<column name="booked" type="bigint" />
			<column name="free_places" type="bigint" />
			<column name="free" type="boolean" />
		</view>
		<view name="timetable_summary_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT pickup.anagraph_id AS pickup_an_id,
    pa.an_name AS pickup_first_name,
    pickup.address AS pickup_address,
    pickup.postal_code AS pickup_postal_code,
    pickup.town_name AS pickup_town,
    COALESCE(pickup.full_address, ((((((pickup.address)::text ||
        CASE
            WHEN (pickup.address_number IS NULL) THEN ''::text
            ELSE (' '::text || (pickup.address_number)::text)
        END) ||
        CASE
            WHEN (pickup.postal_code IS NULL) THEN ''::text
            ELSE (', '::text || (pickup.postal_code)::text)
        END) ||
        CASE
            WHEN (pickup.town_name IS NULL) THEN ''::text
            ELSE (', '::text || (pickup.town_name)::text)
        END) ||
        CASE
            WHEN (pickup.state_province IS NULL) THEN ''::text
            ELSE ((' ('::text || (pickup.state_province)::text) || ')'::text)
        END))::character varying, pickup.full_address) AS pickup_full_address,
    pickup.phone AS pickup_phone,
    pickup.email AS pickup_email,
    pickup.longitude AS pickup_longitude,
    pickup.latitude AS pickup_latitude,
    da.an_name AS delivery_first_name,
    delivery.address AS delivery_address,
    delivery.postal_code AS delivery_postal_code,
    delivery.town_name AS delivery_town,
    COALESCE(delivery.full_address, ((((((delivery.address)::text ||
        CASE
            WHEN (delivery.address_number IS NULL) THEN ''::text
            ELSE (' '::text || (delivery.address_number)::text)
        END) ||
        CASE
            WHEN (delivery.postal_code IS NULL) THEN ''::text
            ELSE (', '::text || (delivery.postal_code)::text)
        END) ||
        CASE
            WHEN (delivery.town_name IS NULL) THEN ''::text
            ELSE (', '::text || (delivery.town_name)::text)
        END) ||
        CASE
            WHEN (delivery.state_province IS NULL) THEN ''::text
            ELSE ((' ('::text || (delivery.state_province)::text) || ')'::text)
        END))::character varying, delivery.full_address) AS delivery_full_address,
    delivery.phone AS delivery_phone,
    delivery.email AS delivery_email,
    delivery.longitude AS delivery_longitude,
    delivery.latitude AS delivery_latitude,
    tv.jguid,
    tv.slot_des AS pickup_time,
    tv.workingday AS pickup_date,
    tv.slot_id,
    tv.driver_anagraph_id AS driver_id,
    tv.booking_id,
    drv.an_email AS driver_email,
    drv.an_cellular AS driver1_cellular,
    drv.jguid AS driver_jguid,
    pa.an_vat_id AS pickup_vat_id,
    pa.an_fiscal_code AS pickup_fiscal_code,
    pa.an_last_name AS pickup_last_name,
    pa.an_cellular AS pickup_cellular,
    da.anagraph_id AS delivery_an_id,
    da.an_vat_id AS delivery_vat_id,
    da.an_fiscal_code AS delivery_fiscal_code,
    da.an_last_name AS delivery_last_name,
    da.an_cellular AS delivery_cellular
   FROM (((((carservice.timetable_view tv
     JOIN anagraph.an_addresses pickup ON ((tv.from_id = pickup.id)))
     JOIN anagraph.anagraphs pa ON ((pickup.anagraph_id = pa.anagraph_id)))
     JOIN anagraph.an_addresses delivery ON ((tv.to_id = delivery.id)))
     JOIN anagraph.anagraphs da ON ((delivery.anagraph_id = da.anagraph_id)))
     JOIN anagraph.anagraphs drv ON ((tv.driver_anagraph_id = drv.anagraph_id)));]]></view_script>
			<column name="pickup_an_id" type="integer" />
			<column name="pickup_first_name" type="varchar" />
			<column name="pickup_address" type="address" />
			<column name="pickup_postal_code" type="postal_code" />
			<column name="pickup_town" type="town_name" />
			<column name="pickup_full_address" type="varchar" />
			<column name="pickup_phone" type="phone" />
			<column name="pickup_email" type="varchar" />
			<column name="delivery_first_name" type="varchar" />
			<column name="delivery_address" type="address" />
			<column name="delivery_postal_code" type="postal_code" />
			<column name="delivery_town" type="town_name" />
			<column name="delivery_full_address" type="varchar" />
			<column name="delivery_phone" type="phone" />
			<column name="delivery_email" type="varchar" />
			<column name="jguid" type="uuid" />
			<column name="pickup_time" type="varchar" />
			<column name="pickup_date" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="driver_id" type="integer" />
			<column name="booking_id" type="bigint" />
			<column name="driver_email" type="varchar" />
			<column name="driver1_cellular" type="varchar" />
			<column name="driver_jguid" type="uuid" />
			<column name="pickup_longitude" type="float8" />
			<column name="pickup_latitude" type="float8" />
			<column name="delivery_longitude" type="float8" />
			<column name="delivery_latitude" type="float8" />
			<column name="pickup_vat_id" type="smallint" />
			<column name="pickup_fiscal_code" type="varchar" />
			<column name="pickup_last_name" type="varchar" />
			<column name="pickup_cellular" type="varchar" />
			<column name="delivery_an_id" type="integer" />
			<column name="delivery_vat_id" type="smallint" />
			<column name="delivery_fiscal_code" type="varchar" />
			<column name="delivery_last_name" type="varchar" />
			<column name="delivery_cellular" type="varchar" />
		</view>
		<view name="timetable_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT timetable.jguid,
    timetable.workingday,
    timetable.slot_id,
    timetable.booking_id,
    timetable.from_id,
    timetable.to_id,
    timetable.state_id,
    timetable_slots.slot_des,
        CASE
            WHEN (timetable.state_id > 0) THEN true
            ELSE false
        END AS booked,
    timetable.driver_anagraph_id,
    anagraphs.an_cellular,
    (((anagraphs.an_name)::text || ' '::text) || (anagraphs.an_last_name)::text) AS "?column?",
    anagraphs.an_email,
    timetable.from_latitude,
    timetable.from_longitude,
    timetable.from_full_address,
    timetable.to_latitude,
    timetable.to_longitude,
    timetable.to_full_address,
    timetable_slots.slot_delivery
   FROM ((carservice.timetable
     JOIN carservice.timetable_slots ON ((timetable.slot_id = timetable_slots.slot_id)))
     LEFT JOIN anagraph.anagraphs ON ((timetable.driver_anagraph_id = anagraphs.anagraph_id)));]]></view_script>
			<column name="jguid" type="uuid" />
			<column name="workingday" type="date" />
			<column name="slot_id" type="smallint" />
			<column name="booking_id" type="bigint" />
			<column name="from_id" type="integer" />
			<column name="to_id" type="integer" />
			<column name="state_id" type="smallint" />
			<column name="slot_des" type="varchar" />
			<column name="booked" type="boolean" />
			<column name="driver_anagraph_id" type="integer" />
			<column name="an_cellular" type="varchar" />
			<column name="?column?" type="text" />
			<column name="an_email" type="varchar" />
			<column name="from_latitude" type="float8" />
			<column name="from_longitude" type="float8" />
			<column name="from_full_address" type="varchar" />
			<column name="to_latitude" type="float8" />
			<column name="to_longitude" type="float8" />
			<column name="to_full_address" type="varchar" />
			<column name="slot_delivery" type="varchar" />
		</view>
		<sequence name="accounts_sequence" options="START WITH 1" />
		<sequence name="booking_heads_sequence" options="START WITH 1" />
		<sequence name="message_seq" options="START WITH 1" />
		<sequence name="messages_seq" options="START WITH 1" />
		<trigger name="anagraph_defaults_biu_trg" table="messages" id="Trigger_242f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anagraph_defaults_biu_trg BEFORE INSERT OR UPDATE ON carservice.messages FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="booking_heads_view_ioi_trg" id="Trigger_1016" isSystem="false" />
		<trigger name="booking_heads_view_iou_trg" id="Trigger_1cb7" isSystem="false" />
		<trigger name="messages_defaults_biu_trg" table="messages" id="Trigger_916" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER messages_defaults_biu_trg BEFORE INSERT OR UPDATE ON carservice.messages FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="timetable_bi_trg" table="timetable" id="Trigger_10f9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER timetable_bi_trg BEFORE INSERT ON carservice.timetable FOR EACH ROW EXECUTE PROCEDURE carservice.timetable_insert_trg()]]></string>
		</trigger>
		<trigger name="timetable_bu_trg" table="timetable" id="Trigger_13e2" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER timetable_bu_trg BEFORE UPDATE ON carservice.timetable FOR EACH ROW EXECUTE PROCEDURE carservice.timetable_update_trg()]]></string>
		</trigger>
		<trigger name="timetable_view_iou_trg" id="Trigger_c4b" isSystem="false" />
		<function name="account_balance" id="Function_b8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.account_balance(p_customer_id integer)
 RETURNS money
 LANGUAGE plpgsql
AS $function$
declare 
  ac_balance money; 
begin
  
   select coalesce(sum(credit)) - coalesce (sum(debit)) into ac_balance 
    from carservice.current_accounts 
	where anagraph_id = p_customer_id;
	
	Return ac_balance; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="money" />
			<input_param name="p_customer_id" jt="4" type="int4" />
		</function>
		<function name="account_funding" id="Function_688" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.account_funding(p_customer_id integer, p_amount money)
 RETURNS money
 LANGUAGE plpgsql
AS $function$
declare 
  ac_balance money; 
begin
  insert into carservice.current_accounts 
     (jguid, id, anagraph_id, description, accounting_date, value_date, credit)
  values
  (
    public.uuid_generate_v1mc(), --jguid
    nextval('carservice.booking_heads_sequence'), --id
	p_customer_id, -- anagraph_id
	'Versamento sul conto', --description
	CURRENT_DATE, -- accounting_date
	CURRENT_DATE, -- value_date
	p_amount -- credit
   ); 
   
  RETURN carservice.account_balance(office_id); 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="money" />
			<input_param name="p_customer_id" jt="4" type="int4" />
			<input_param name="p_amount" jt="8" type="money" />
		</function>
		<function name="book_confirmation" id="Function_25ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.book_confirmation(p_guid uuid)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$DECLARE
  v_result boolean; 
BEGIN
  	v_result := EXISTS 
  		(SELECT 1 FROM carservice.timetable WHERE jguid = p_guid AND
		 state_id = 1);
	
	IF v_result THEN
	  UPDATE carservice.timetable SET state_id = 2 WHERE jguid = p_guid;	
	END IF; 
	 
	RETURN v_result;    
END;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_guid" jt="1111" type="uuid" />
		</function>
		<function name="booking_amount" id="Function_201d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_amount(p_booking_id bigint, OUT q integer, OUT net_amount money, OUT tax_amount money, OUT full_amount money)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
begin
  
	select a.q,  a.q*main_price as net_amount, a.q*main_price*0.22 as tax_amount,  (a.q*main_price*1.22) as full_amount 
	     into q, net_amount, tax_amount, full_amount 
	from 
	(
		select count(1) as q 
		from carservice.timetable t 
		where t.booking_id = 166
	) a, items.definitions d
	where d.db_schema_id = 36 and d.code = 'PK';
end; 
$function$
;]]></string>
			<input_param name="p_booking_id" jt="-5" type="int8" />
			<input_param name="q" jt="4" type="int4" />
			<input_param name="net_amount" jt="8" type="money" />
			<input_param name="tax_amount" jt="8" type="money" />
			<input_param name="full_amount" jt="8" type="money" />
		</function>
		<function name="booking_heads_insert_trg" id="Function_12c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_heads_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if new.id is null or new.id = 0 then    
    new.id := nextval('carservice.booking_heads_sequence');   
   end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="booking_heads_view_insert_trg" id="Function_182c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_heads_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  -- un nuovo record ha id nullo o 0 quindi 'stacco' una sequence
   if new.id is null or new.id = 0 then    
       new.id := nextval('carservice.booking_heads_sequence');   
   end if; 
   
   -- lo stato inizialmente vale '0' stato di inserimento ma non ancora confermato
   if new.state_id is null  then    
       new.id := 0;   
   end if; 
   
   new.insert_date := now(); 
   
   PERFORM system.setlog('inserting booking head using id:' || new.id::character varying  );
   
  	if new.customer_id is null or new.customer_id = 0 then  
    BEGIN
      	new.customer_id := nextval('anagraph.an_anagraph_seq'); 
		PERFORM system.setlog('inserting anagraph using id:' || new.customer_id::TEXT );
		if NEW.cust_last_name IS NULL THEN RAISE 'Custoemer last name is NULL cust_last_name'; END IF; 
		if NEW.full_address IS NULL THEN RAISE 'Customer Address is NULL full_address'; END IF; 
		if NEW.cust_email IS NULL THEN RAISE 'Customer last name is NULL cust_email'; END IF; 
		
 	INSERT INTO anagraph.anagraphs 
	     (db_schema_id, 
		  jguid, 
		  anagraph_id, 
		  an_name, 
		  an_last_name, 
		  an_address, 
		  an_cellular, 
		  an_email,  
		  an_main_group_id, 
		  an_office_id)
	VALUES
	     (new.db_schema_id, -- db_schema_id
		  new.jguid, -- jguid
		  NEW.customer_id, -- anagraph_id
		  NEW.cust_first_name, -- an_name
		  NEW.cust_last_name, -- an_last_name
		  NEW.full_address,  -- an_address
		  NEW.cust_cellular, -- an_cellular
		  NEW.cust_email, -- an_email
		  28, -- an_main_group_id
		  new.office_id); 
	 EXCEPTION WHEN OTHERS THEN 
	   RAISE 'Errore inserimento anagrafica cliente: %', SQLERRM;
     END; 
   ELSIF EXISTS (SELECT 1 FROM anagraph.anagraphs WHERE anagraph_id = new.customer_id) THEN
     BEGIN
     PERFORM system.setlog('updating anagraph using id:' || new.customer_id::TEXT );
     UPDATE anagraph.anagraphs SET
     	an_name      	 = COALESCE(NEW.cust_first_name, an_name), 
        an_last_name 	 = COALESCE(NEW.cust_last_name, an_name), 
        an_address		 = COALESCE(NEW.full_address, an_address), 	
        an_cellular		 = COALESCE(NEW.cust_cellular, an_cellular), 
        an_email		 = COALESCE(NEW.cust_email, an_email), 
        an_office_id	 = COALESCE(NEW.office_id, an_office_id)
     WHERE anagraph_id = new.customer_id;  
  	 EXCEPTION WHEN OTHERS THEN 
	   RAISE 'Errore inserimento anagrafica cliente: %', SQLERRM;
     END; 
  end if; 
BEGIN
	INSERT INTO carservice.booking_heads(
			id, office_id, branch_id , 
            jguid, db_schema_id, user_insert, insert_date, 
            customer_id, state_id, 
        	vehicle_numberplate, vehicle_model, vehicle_color)
	VALUES (new.id, new.office_id /*ufficio o sede contabile*/, new.branch_id /*location di riferimento service*/,  
            new.jguid, new.db_schema_id, new.user_insert,  Now() /* data inseriment ora */,
			new.customer_id /*identificativo dell'utente del servizio */, NEW.state_id,
		    new.vehicle_numberplate, new.vehicle_model, new.vehicle_color /* dati del veicolo */);
	IF new.state_id = -1 then 
   		update timetable set booking_id = null where booking_id = new.id;
	END IF; 
EXCEPTION WHEN OTHERS THEN 
	   RAISE 'Errore inserimento carservice.booking_heads: %', SQLERRM;
END; 
return new; 
	
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="booking_heads_view_update_trg" id="Function_e32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_heads_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  vGUID uuid;                                      
begin
/* NOTE NOTE NOTE: if Customer IS REPLACED by a 'New' one (that is customer_id = 0) we should do a new customer creation */
--- magari in un secondo momento :) -- 
 if new.customer_id = 0 then 
 BEGIN
   vGUID := uuid_generate_v4 ();
 new.customer_id := nextval('anagraph.an_anagraph_seq');  
  
 INSERT INTO anagraph.anagraphs 
	(db_schema_id, jguid, anagraph_id, an_name, an_last_name, an_address, an_cellular, an_email,  an_main_group_id, an_office_id)
 VALUES
     (new.db_schema_id, vGUID, NEW.customer_id, NEW.cust_first_name, NEW.cust_last_name, NEW.full_address,  NEW.cust_cellular, NEW.cust_email, 28, new.office_id); 
 END; 
 ELSIF EXISTS (SELECT 1 FROM anagraph.anagraphs WHERE anagraph_id = new.customer_id) THEN
 BEGIN
     UPDATE anagraph.anagraphs SET
     	an_name      	 = COALESCE(NEW.cust_first_name, an_name), 
        an_last_name 	 = COALESCE(NEW.cust_last_name, an_name), 
        an_address		 = COALESCE(NEW.full_address, an_address), 	
        an_cellular		 = COALESCE(NEW.cust_cellular, an_cellular), 
        an_email		 = COALESCE(NEW.cust_email, an_email), 
        an_office_id	 = COALESCE(NEW.office_id, an_office_id)
     WHERE anagraph_id = new.customer_id;   
 END;  
 END IF; 
UPDATE carservice.booking_heads
	SET id=new.id, office_id=new.office_id,  branch_id=new.branch_id,   db_schema_id=new.db_schema_id, customer_id=new.customer_id, 
	vehicle_model=new.vehicle_model, vehicle_color=new.vehicle_color, vehicle_numberplate=new.vehicle_numberplate
	WHERE jguid = old.jguid;
	  
	
   return new; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="booking_payment" id="Function_18cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.booking_payment(p_booking_id bigint)
 RETURNS money
 LANGUAGE plpgsql
AS $function$
declare
    q integer;
	customer_id integer; 
	net_amount MONEY; 
	tax_amount MONEY;
	full_amount money;
begin
   customer_id := 0; 
   
  IF EXISTS (SELECT 1 FROM carservice.booking_heads h where h.id = p_booking_id ) THEN
	   SELECT office_id into customer_id FROM carservice.booking_heads h where h.id = p_booking_id;   
  END IF; 
   
   IF customer_id != 0
      AND NOT EXISTS (SELECT 1 FROM carservice.current_accounts where booking_id = p_booking_id) THEN 
	   BEGIN
			select  a.q,  
			        a.q*main_price as net_amount, 
					a.q*main_price*0.22 as tax_amount,  
					a.q*main_price*1.22 as full_amount 
				 into q, net_amount, tax_amount, full_amount 
			from 
			(
				select count(1) as q 
				from carservice.timetable t 
				where t.booking_id = p_booking_id
			) a, items.definitions d
			where d.db_schema_id = 36 and d.code = 'PK';
		END;
		
		
	  insert into carservice.current_accounts 
		 (jguid, id, anagraph_id, description, accounting_date, value_date, debit, credit, booking_id)
	  values
	  (
		public.uuid_generate_v1mc(), --jguid
		nextval('carservice.booking_heads_sequence'), --id
		customer_id, -- anagraph_id
		'Pagamento prenotazione ' || p_booking_id || ', Imponibile: ' || net_amount || ', Imposte: ' || tax_amount, --description
		CURRENT_DATE, -- accounting_date
		CURRENT_DATE, -- value_date
		full_amount, -- credit
		0,
		p_booking_id  
	   ); 		
	
	END IF; 
  RETURN carservice.account_balance(customer_id); 	
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="money" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="carservice_book" id="Function_23c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book(p_day date, p_slot_id smallint, p_booking_id bigint)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  v_Free boolean; 
BEGIN
   IF EXISTS (SELECT 1 FROM carservice.timetable_places t
   		WHERE  workingday = p_day AND slot_id = p_slot_id ) 
   THEN
		--SELECT * FROM carservice.timetable_places t
	   	--	WHERE  workingday = p_day AND slot_id = p_slot_id FOR UPDATE NOWAIT;  
		
		PERFORM system.setlog('found carservice.timetable_places'); 
	 
	   	SELECT t.free INTO v_Free FROM carservice.timetable_places t
	   		WHERE  workingday = p_day AND slot_id = p_slot_id; 
			
		PERFORM system.setlog('is free carservice.timetable_places: ' || v_Free::character varying); 
			
	   	IF v_Free THEN
	     select min(driver_anagraph_id) INTO Result FROM
		 	carservice.timetable 
			 WHERE workingday = p_day AND slot_id = p_slot_id 
			 	AND booking_id IS NULL;  
				
		  UPDATE carservice.timetable SET booking_id = p_booking_id
		    WHERE  workingday = p_day AND slot_id = p_slot_id 
			   AND driver_anagraph_id = Result; 
	   	END IF; 
   END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="carservice_book" id="Function_20fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book(p_day date, p_slot_id smallint, p_pickup boolean, p_booking_id bigint)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  r_head record; 
  v_Free boolean; 
BEGIN
   PERFORM system.setlog('carservice.carservice_book: slot_id=' || p_slot_id::character varying  || ', booking_id=' || p_booking_id::character varying || ', p_pickup=' || p_pickup::character varying); 
   IF NOT EXISTS (SELECT 1 FROM carservice.booking_heads t where id = p_booking_id  )
		THEN RAISE EXCEPTION 'Booking id % not found', p_booking_id;
	END IF; 
		
   IF EXISTS (SELECT 1 FROM carservice.timetable_places t
   		WHERE  workingday = p_day AND slot_id = p_slot_id ) 
   THEN
		SELECT * into r_head from carservice.booking_heads t where id = p_booking_id;  
		Result := 1; 
		
		
		PERFORM system.setlog('found carservice.timetable_places'); 
	 
	   	SELECT t.free INTO v_Free FROM carservice.timetable_places t
	   		WHERE  workingday = p_day AND slot_id = p_slot_id; 
			
		PERFORM system.setlog('is free carservice.timetable_places: ' || v_Free::character varying); 
			
	   	IF v_Free THEN
	     select min(driver_anagraph_id) INTO Result FROM
		 	carservice.timetable 
			 WHERE workingday = p_day AND slot_id = p_slot_id 
			 	AND booking_id IS NULL;  
			IF p_pickup THEN
		  		UPDATE carservice.timetable SET booking_id = p_booking_id,
				    from_id = r_head.customer_id, to_id = r_head.branch_id 
		    		WHERE  workingday = p_day AND slot_id = p_slot_id 
			   		AND driver_anagraph_id = Result; 
				UPDATE carservice.booking_heads set 
				   pickup_day = p_day , pickup_slot_id = p_slot_id 
				WHERE 
				  id = p_booking_id; 
			ELSE
		  		UPDATE carservice.timetable SET booking_id = p_booking_id,
				    to_id = r_head.customer_id, from_id = r_head.branch_id 
		    		WHERE  workingday = p_day AND slot_id = p_slot_id 
			   		AND driver_anagraph_id = Result; 
					
				UPDATE carservice.booking_heads set 
				   return_day = p_day , return_slot_id = p_slot_id 
				WHERE 
				  id = p_booking_id;
				  
			END IF; 
		   
	   	END IF; 
   END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="carservice_book_jguid" id="Function_120f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book_jguid(p_day date, p_slot_id smallint, p_pickup boolean, p_jguid uuid)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  p_booking_id bigint; 
BEGIN
	Result := -1;
   PERFORM system.setlog('carservice.carservice_book_jguid: slot_id=' || p_slot_id::character varying  
          || ', booking_id=' || p_booking_id::character varying || ', p_pickup=' || p_pickup::character varying
		  || ', p_jguid=' || p_jguid::character varying); 

   	IF EXISTS (SELECT 1 FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid ) 
   	THEN
	   
		SELECT t.id INTO p_booking_id 
		FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid;
		   
	    PERFORM system.setlog('carservice.carservice_book_jguid: found booking: ' || p_booking_id::character varying);
	
		Result := carservice.carservice_book(
					p_day,
					p_slot_id,
			        p_pickup, 
					p_booking_id);
   	END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="carservice_book_jguid_address" id="Function_1cb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book_jguid_address(p_day date, p_slot_id smallint, p_pickup boolean, p_jguid uuid, p_from_latitude double precision, p_from_longitude double precision, p_from_full_address character varying, p_to_latitude double precision, p_to_longitude double precision, p_to_full_address character varying, p_from_id integer, p_to_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  p_booking_id bigint; 
BEGIN
   PERFORM system.setlog('carservice.carservice_book_jguid_address1: slot_id=' || p_slot_id::character varying  
          || ', day=' || p_day::character varying || ', p_pickup=' || p_pickup::character varying
		  || ', jguid=' || p_jguid::character varying  || ', from_id=' || p_from_id::character varying || ', to_id=' || p_to_id::character varying
		  || ', from_address=' || p_from_full_address::character varying || ', to_address=' || p_to_full_address::character varying); 
	Result := -1;
   	IF EXISTS (SELECT 1 FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid ) 
   	THEN
	   
		SELECT t.id INTO p_booking_id 
		FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid;
	    PERFORM system.setlog('carservice.carservice_book_jguid_address1: found booking: ' || p_booking_id::character varying);
		Result := carservice.carservice_book(
					p_day,
					p_slot_id,
			        p_pickup, 
					p_booking_id);
		PERFORM system.setlog('carservice_book result: ' || Result::character varying);
   	END IF; 
	
	IF Result > 0 THEN
		UPDATE carservice.timetable SET 
			from_latitude = p_from_latitude ,
			from_longitude = p_from_longitude ,
			from_full_address = p_from_full_address ,
			to_latitude = p_to_latitude ,
			to_longitude = p_to_longitude ,
			to_full_address = p_to_full_address,
			from_id = p_from_id, 
			to_id = p_to_id
		 WHERE 
		   driver_anagraph_id = Result AND workingday = p_day AND slot_id = p_slot_id and booking_id = p_booking_id;
	END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_from_latitude" jt="8" type="float8" />
			<input_param name="p_from_longitude" jt="8" type="float8" />
			<input_param name="p_from_full_address" jt="12" type="varchar" />
			<input_param name="p_to_latitude" jt="8" type="float8" />
			<input_param name="p_to_longitude" jt="8" type="float8" />
			<input_param name="p_to_full_address" jt="12" type="varchar" />
			<input_param name="p_from_id" jt="4" type="int4" />
			<input_param name="p_to_id" jt="4" type="int4" />
		</function>
		<function name="carservice_book_jguid_upd_address" id="Function_d6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.carservice_book_jguid_upd_address(p_day date, p_slot_id smallint, p_pickup boolean, p_jguid uuid, p_from_latitude double precision, p_from_longitude double precision, p_from_full_address character varying, p_to_latitude double precision, p_to_longitude double precision, p_to_full_address character varying, p_from_id integer, p_to_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  p_booking_id bigint; 
BEGIN
	Result := EXISTS (SELECT 1 FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid );
		
   	IF Result THEN
	   
		SELECT t.id INTO p_booking_id 
		FROM carservice.booking_heads t
   		WHERE  jguid = p_jguid;
	
		UPDATE carservice.timetable SET 
			from_latitude = p_from_latitude ,
			from_longitude = p_from_longitude ,
			from_full_address = p_from_full_address ,
			to_latitude = p_to_latitude ,
			to_longitude = p_to_longitude ,
			to_full_address = p_to_full_address,
			from_id = p_from_id, 
			to_id = p_to_id
		 WHERE 
		   workingday = p_day AND slot_id = p_slot_id and booking_id = p_booking_id;
	END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_pickup" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_from_latitude" jt="8" type="float8" />
			<input_param name="p_from_longitude" jt="8" type="float8" />
			<input_param name="p_from_full_address" jt="12" type="varchar" />
			<input_param name="p_to_latitude" jt="8" type="float8" />
			<input_param name="p_to_longitude" jt="8" type="float8" />
			<input_param name="p_to_full_address" jt="12" type="varchar" />
			<input_param name="p_from_id" jt="4" type="int4" />
			<input_param name="p_to_id" jt="4" type="int4" />
		</function>
		<function name="change_book_driver" id="Function_2330" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.change_book_driver(p_day date, p_slot_id smallint, p_booking_id bigint, p_driver_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result integer default -1; 
  v_Free boolean; 
BEGIN
   UPDATE carservice.timetable_places t SET booking_id = null where 
      workingday = p_day AND slot_id = p_slot_id and driver_anagraph_id = p_driver_id; 
	  
   IF EXISTS (SELECT 1 FROM carservice.timetable_places t
   		WHERE  workingday = p_day AND slot_id = p_slot_id and driver_anagraph_id != p_driver_id) 
   THEN
		--SELECT * FROM carservice.timetable_places t
	   	--	WHERE  workingday = p_day AND slot_id = p_slot_id FOR UPDATE NOWAIT;  
		
		PERFORM system.setlog('found carservice.timetable_places'); 
	 
	   	SELECT t.free INTO v_Free FROM carservice.timetable_places t
	   		WHERE  workingday = p_day AND slot_id = p_slot_id; 
			
		PERFORM system.setlog('is free carservice.timetable_places: ' || v_Free::character varying); 
			
	   	IF v_Free THEN
	     select min(driver_anagraph_id) INTO Result FROM
		 	carservice.timetable 
			 WHERE workingday = p_day AND slot_id = p_slot_id 
			 	AND booking_id IS NULL;  
				
		  UPDATE carservice.timetable SET booking_id = p_booking_id
		    WHERE  workingday = p_day AND slot_id = p_slot_id 
			   AND driver_anagraph_id = Result; 
	   	END IF; 
   END IF; 
   
   RETURN Result; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_day" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
			<input_param name="p_driver_id" jt="4" type="int4" />
		</function>
		<function name="change_book_timetable_date" id="Function_17e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.change_book_timetable_date(p_jguid uuid, p_date date, p_slot smallint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$DECLARE
  R record; 
begin 

  return True; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_date" jt="91" type="date" />
			<input_param name="p_slot" jt="5" type="int2" />
		</function>
		<function name="change_booking_date" id="Function_105e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.change_booking_date(p_jguid uuid, p_date date, p_slot_id smallint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
  r RECORD;
  v_result BOOLEAN; 
BEGIN
	v_result := EXISTS (SELECT 1 FROM carservice.timetable t WHERE jguid = p_jguid) ;
	if v_result THEN
		SELECT INTO R t.* FROM carservice.timetable t WHERE jguid = p_jguid;
	
	
	END IF; 
		
	RETURN v_result;
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_date" jt="91" type="date" />
			<input_param name="p_slot_id" jt="5" type="int2" />
		</function>
		<function name="drivers_view_insert_trg" id="Function_42a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.drivers_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; 
  v_vessel_id integer; 
  v_db_schema  integer; 
BEGIN
  v_count := 0; 
  
  if New.anagraph_id is null or New.anagraph_id = 0 then
    New.anagraph_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
  /* db Schema management using global variable */
  if New.db_schema_id is null or New.db_schema_id = 0 then
    New.db_schema_id := system.get_schema_id();
  end if; 
  
  if New.jguid is null then
     New.jguid :=  public.uuid_generate_v1mc();
  end if; 
  
  New.an_main_group_id := 29; 
 
 
  IF New.drive_license_number IS NULL THEN New.drive_license_number := 'n.a.'; END IF; 
  
  INSERT INTO anagraph.anagraphs_view (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2
  )
  values( 
    New.db_schema_id,
    case when New.anagraph_id = 0 then NULL else New.anagraph_id end,
    new.an_title,
    new.an_name,
    new.an_second_name,
    new.an_last_name,
    new.an_notes,
    new.an_address,
    new.an_town,
    new.an_postal_code,
    new.an_iso_country_code,
    new.an_state_province,
    new.an_phone,
    new.an_phone2,
    new.an_fax,
    new.an_cellular,
    new.an_code,
    new.an_vat_numeric,
    new.an_email,
    new.an_web,
    case when new.an_contact_id = 0 then NULL else new.an_contact_id end,
    new.an_bank_account,
    new.an_payment_des,
    new.an_discount,
    new.an_distance,
    new.an_distance_mesunit,
    new.an_sex,
    new.an_cod_comune,
    new.an_cod_provincia,
    new.an_credit_line,
    case when new.an_currency_id = 0 then NULL else new.an_currency_id end,
    case when new.an_cat_id = 0 then NULL else new.an_cat_id end,
    new.an_notes2,
    new.an_notes3,
    new.an_edi,
    new.an_privacy,
    case when new.an_office_id = 0 then NULL else new.an_office_id end,
    new.an_cod_prov_rif,
    new.an_data_fido,
    new.an_user_insert,
    new.an_user_update,
    case when new.an_area_id = 0 then NULL else new.an_area_id end,
    case when new.an_agent_id = 0 then NULL else new.an_agent_id end,
    new.an_area_code,
    case when new.an_zone_id = '' then NULL else new.an_zone_id end,
    case when new.an_ins_id = 0 then NULL else new.an_ins_id end,
    case when new.an_upd_id = 0 then NULL else new.an_upd_id end,
    new.an_documents,
    new.an_last_date,
    new.an_birthdate,
    case when new.an_office_type_id = 0 then NULL else new.an_office_type_id end,
    new.an_searchname,
    new.an_extra_ue_flag,
    new.an_external_code,
    case when new.an_vat_id = 0 then NULL else new.an_vat_id end,
    new.an_personal_fiscal_code,
    new.an_privacy_print,
    new.an_sms,
    new.an_encrypted_fiscal_code,
    new.an_vat_purcentage,
    new.an_status,
    new.an_ownsite,
    case when new.an_insurance_id = 0 then NULL else new.an_insurance_id end,
    case when new.an_anagraphs_anagraph_id = 0 then NULL else new.an_anagraphs_anagraph_id end,
    new.an_main_language_code,
    new.an_main_culture_code,
    new.an_fiscal_code,
    new.an_main_group_id,
    case when new.an_image_id = 0 then NULL else new.an_image_id end,
    new.latitude,
    new.longitude,
    new.test,
    new.search_index,
    new.an_birthplace,
    new.an_birthplace_code,
    new.anagraph64,
    case when new.main_category_id = 0 then NULL else new.main_category_id end,
    case when new.osm_id = 0 then NULL else new.osm_id end,
    new.an_description,
    new.an_address_number,
    new.anag_jguid,
    new.anag_deleted,
    new.insert_date,
    new.update_date,
    new.user_insert,
    New.jguid,
    new.custom_field_1,
    new.custom_field_2,
    new.custom_field_3,
    new.custom_float_1,
    new.custom_float_2,
    new.custom_int_1,
    new.custom_int_2,
    case when new.supplier_id = 0 then NULL else new.supplier_id end,
    case when New.vessel_id = 0 then NULL else New.vessel_id end,
    case when new.an_country_id = 0 then NULL else new.an_country_id end,
    new.an_iso_country_code2
	)
  ;
  
  INSERT INTO carservice.drivers (anagraph_id, drive_license_number, drive_license__expiry, db_schema_id)
  	VALUES (New.anagraph_id, New.drive_license_number, New.drive_license__expiry, New.db_schema_id);
	
  RETURN New; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="generate_timetable" id="Function_18ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.generate_timetable()
 RETURNS void
 LANGUAGE plpgsql
AS $function$  begin
     null;
  end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="generate_timetable" id="Function_11ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.generate_timetable(p_days integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
  declare
    v_day date; 
	i integer; 
  begin
    v_day := (select max(workingday) from  carservice.timetable); 
	raise notice 'First Day: %', v_day;
	
	for i in 1..p_days loop
	  INSERT INTO carservice.timetable(workingday, slot_id)
	  	SELECT v_day + i, slot_id
	    FROM carservice.timetable_slots;	
	end loop; 
  end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_days" jt="4" type="int4" />
		</function>
		<function name="generate_timetable_driver" id="Function_104" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.generate_timetable_driver(p_days integer, p_driver_id integer, p_hiring_date date)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
  declare
    v_day date; 
	r record; 
  begin
    IF EXISTS (SELECT 1 FROM carservice.timetable WHERE driver_anagraph_id = p_driver_id) THEN
    	v_day := (select max(workingday) from  carservice.timetable);
	ELSE
	  v_day := p_hiring_date; 
	END IF; 
	  
	RAISE NOTICE 'First Day: %', v_day;
	
	for r in 
	(
		with days as
		(
    	select dd, extract(DOW from dd) dw
    	from generate_series(now()::Date, now()::Date + 365, '1 day'::interval) dd
		)
		select * from days where  dw not in (6,0)
	)
	LOOP 
	  INSERT INTO carservice.timetable(workingday, slot_id, driver_anagraph_id)
	  	SELECT r.dd, slot_id, p_driver_id
	    FROM carservice.timetable_slots;	
	END LOOP; 
  end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_days" jt="4" type="int4" />
			<input_param name="p_driver_id" jt="4" type="int4" />
			<input_param name="p_hiring_date" jt="91" type="date" />
		</function>
		<function name="insert_message" id="Function_19fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.insert_message(p_json json, p_message text, p_anagraph_id integer, p_booking_jguid uuid, p_timetable_jguid uuid, p_user_id integer, p_msgtype integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
-- IN p_json json, IN p_message text, IN p_anagraph_id integer, IN p_booking_jguid uuid, 
-- IN p_timetable_jguid uuid, IN p_user_id integer, IN p_msgtype integer
INSERT INTO 
  carservice.messages(
	anagraph_id,   db_user_id, msgtype,   msgtext,   json,   booking_jguid,   timetable_jguid)
	VALUES 
   (p_anagraph_id, p_user_id,  p_msgtype, p_message, p_json, p_booking_jguid, p_timetable_jguid);
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_json" jt="1111" type="json" />
			<input_param name="p_message" jt="12" type="text" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_booking_jguid" jt="1111" type="uuid" />
			<input_param name="p_timetable_jguid" jt="1111" type="uuid" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_msgtype" jt="4" type="int4" />
		</function>
		<function name="set_booking_address" id="Function_1ac9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.set_booking_address(p_jguid uuid, p_type "char", p_booking_id bigint, INOUT p_id bigint, INOUT p_booking_jguid uuid)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
BEGIN
  IF (p_id IS NULL OR p_id = 0) AND p_jguid IS NOT NULL
    AND EXISTS (SELECT 1 FROM anagraph.addresses a WHERE a.jguid = p_jguid)
  THEN
    SELECT id into p_id from anagraph.an_addresses where
	  jguid = p_jguid; 
  END IF; 
  
  IF (p_booking_id IS NULL OR p_booking_id = 0) AND p_booking_jguid IS NOT NULL
    AND EXISTS (SELECT 1 FROM carservice.booking_heads A WHERE A.jguid = p_booking_jguid)
  THEN
    SELECT id into p_booking_id from carservice.booking_heads where
	  jguid = p_booking_jguid; 
  END IF; 
 
  IF (p_id IS NOT NULL AND p_id > 0) THEN 
	  BEGIN
		INSERT INTO carservice.booking_addresses(
			db_schema_id, id, address_name, postal_code, state_province, town_name, town_code, address, address_number, phone, 
			full_address, insert_date, update_date, upd_id, ins_id, user_insert, user_update, local, deleted, 
			jguid, country_code, email, anagraph_id, ad_type, booking_id, booking_jguid, maps_json)
		SELECT  
			db_schema_id, id, address_name, postal_code, state_province, town_name, town_code, address, address_number, phone, 
			full_address, insert_date, update_date, upd_id, ins_id, user_insert, user_update, local, deleted, 
			jguid, country_code, email, anagraph_id, ad_type, booking_id, booking_jguid, maps_json
		FROM 
		  anagraph.an_addresses a where a.ID = p_id;  
	  EXCEPTION WHEN OTHERS THEN
		RAISE; 
	  END; 
   END IF; 
 
END; 
$function$
;]]></string>
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_type" jt="1" type="char" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_booking_jguid" jt="1111" type="uuid" />
		</function>
		<function name="timetable_insert_trg" id="Function_20a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.timetable_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.jguid is null 
     then new.jguid = uuid_generate_v4();
  end if; 
  
  if new.state_id is null 
     then new.state_id = 0;
  end if; 
  
  RETURN New; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="timetable_update_trg" id="Function_117d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.timetable_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.jguid is null 
     then new.jguid = old.jguid;
  end if; 
  
  if new.state_id is null 
     then new.state_id = old.state_id;
  end if; 
  
  RETURN New; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="timetable_view_update_trg" id="Function_26fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.timetable_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
declare
  id_driver bigint; 
begin
  -- nota booked = true or booked = false ... 
  
  if coalesce(new.booked, old.booked) and new.booking_id is not null then
  
  
    /* Se ci sono prenotazioni (booking_id) nella medesima direzione  */
    update carservice.timetable SET booking_id=null, from_id=null, to_id=null, state_id = 0
	  WHERE (workingday = old.workingday and slot_id <> old.slot_id) and booking_id = new.booking_id and from_id = new.from_id;  
  
    select min(driver_anagraph_id) into id_driver from carservice.timetable where
	  workingday = old.workingday and slot_id = old.slot_id and state_id = 0;
	  
  UPDATE carservice.timetable
	SET booking_id=new.booking_id, from_id=new.from_id, to_id=new.to_id, 
	state_id = CASE WHEN  new.booked then new.state_id else 0 end
	WHERE workingday = old.workingday and slot_id = old.slot_id and driver_anagraph_id = id_driver;
	
  else
  UPDATE carservice.timetable
	SET booking_id=null, from_id=null, to_id=null, state_id = 0
	WHERE workingday = old.workingday and slot_id = old.slot_id and booking_id = new.booking_id; 
  end if ; 
  
   return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="update_timetable_state" id="Function_3d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION carservice.update_timetable_state(p_state_id bigint, p_guid uuid)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare 
  Result Boolean; 
begin
	Result := Exists (Select 1 from carservice.timetable where
					 jguid = p_guid);
	if Result THEN
		UPDATE carservice.timetable
		SET
		  state_id = p_state_id
		WHERE
		  jguid = p_guid;
	END IF; 
	RETURN Result;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_state_id" jt="-5" type="int8" />
			<input_param name="p_guid" jt="1111" type="uuid" />
		</function>
	</schema>
	<schema name="championship" >
		<comment><![CDATA[This is the schema to manage 'any' championship]]></comment>
	</schema>
	<schema name="custom_tm_logistic" >
		<table name="aerealtahouse" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="progressivolta" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="campo1a" type="varchar" length="3" decimal="0" jt="12" />
			<column name="campo1b" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo1c" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cin" type="numeric" length="1" decimal="0" jt="2" />
			<column name="campo2" type="varchar" length="50" decimal="0" jt="12" />
			<column name="campo21" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo22" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo23" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo3" type="varchar" length="50" decimal="0" jt="12" />
			<column name="campo31" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo32" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo33" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo4a" type="varchar" length="50" decimal="0" jt="12" />
			<column name="campo4b" type="varchar" length="15" decimal="0" jt="12" />
			<column name="campo4c" type="varchar" length="20" decimal="0" jt="12" />
			<column name="campo4c2" type="varchar" length="200" decimal="0" jt="12" />
			<column name="campo4c3" type="varchar" length="20" decimal="0" jt="12" />
			<column name="campo5" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo6" type="text" decimal="0" jt="12" />
			<column name="campo7" type="text" decimal="0" jt="12" />
			<column name="campo8" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8a" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8b" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8c" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8d" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8c1" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8d1" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8e" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8f" type="varchar" length="20" decimal="0" jt="12" />
			<column name="campo8f1" type="timestamp" decimal="6" jt="93" />
			<column name="campo9" type="varchar" length="16" decimal="0" jt="12" />
			<column name="campo10" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo11" type="varchar" length="3" decimal="0" jt="12" />
			<column name="campo12" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo13" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo14" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo15" type="varchar" length="3" decimal="0" jt="12" />
			<column name="campo16" type="varchar" length="3" decimal="0" jt="12" />
			<column name="campo17" type="varchar" length="10" decimal="0" jt="12" />
			<column name="campo28a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo28b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo29a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo29b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo30a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo30b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo31a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo31b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo32a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo32b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo33a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo33b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo34" type="varchar" length="30" decimal="0" jt="12" />
			<column name="campo35" type="varchar" length="30" decimal="0" jt="12" />
			<column name="campo36" type="varchar" length="36" decimal="0" jt="12" />
			<column name="campo37" type="varchar" length="255" decimal="0" jt="12" />
			<column name="campo38" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi1" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi2" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi3" type="varchar" length="255" decimal="0" jt="12" />
			<column name="codother1" type="char" length="3" decimal="0" jt="1" />
			<column name="codother2" type="char" length="3" decimal="0" jt="1" />
			<column name="codother3" type="char" length="3" decimal="0" jt="1" />
			<column name="codother4" type="char" length="3" decimal="0" jt="1" />
			<column name="codother5" type="char" length="3" decimal="0" jt="1" />
			<column name="codother6" type="char" length="3" decimal="0" jt="1" />
			<column name="codother7" type="char" length="3" decimal="0" jt="1" />
			<column name="codother8" type="char" length="3" decimal="0" jt="1" />
			<column name="codother9" type="char" length="3" decimal="0" jt="1" />
			<column name="importoother9" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother8" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother7" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother6" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother5" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother4" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother3" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother2" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother1" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campohead" type="varchar" length="50" decimal="0" jt="12" />
			<column name="masterparziale" type="integer" length="10" decimal="0" jt="4" />
			<column name="annomasterparziale" type="char" length="4" decimal="0" jt="1" />
			<column name="valuta" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tipo" type="varchar" length="10" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_aerealtahouse" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="codfiliale" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
			</index>
		</table>
		<table name="aerealtamaster" >
			<column name="campo1c" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="campo1a" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="cin" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo1b" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo2" type="varchar" length="50" decimal="0" jt="12" />
			<column name="campo3" type="varchar" length="50" decimal="0" jt="12" />
			<column name="campo4a" type="varchar" length="50" decimal="0" jt="12" />
			<column name="campo4b" type="varchar" length="15" decimal="0" jt="12" />
			<column name="campo4c" type="varchar" length="20" decimal="0" jt="12" />
			<column name="campo5" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo6" type="text" decimal="0" jt="12" />
			<column name="campo7" type="text" decimal="0" jt="12" />
			<column name="campo8" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8a" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8b" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8c" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8d" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8c1" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8d1" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8e" type="varchar" length="6" decimal="0" jt="12" />
			<column name="campo8f" type="varchar" length="20" decimal="0" jt="12" />
			<column name="campo8f1" type="timestamp" decimal="6" jt="93" />
			<column name="campo9" type="varchar" length="16" decimal="0" jt="12" />
			<column name="campo10" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo11" type="varchar" length="3" decimal="0" jt="12" />
			<column name="campo12" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo13" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo14" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo15" type="varchar" length="3" decimal="0" jt="12" />
			<column name="campo16" type="varchar" length="3" decimal="0" jt="12" />
			<column name="campo17" type="varchar" length="10" decimal="0" jt="12" />
			<column name="campo28a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo28b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo29a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo29b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo30a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo30b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo31a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo31b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo32a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo32b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo33a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo33b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo34" type="varchar" length="30" decimal="0" jt="12" />
			<column name="campo35" type="varchar" length="30" decimal="0" jt="12" />
			<column name="campo36" type="varchar" length="36" decimal="0" jt="12" />
			<column name="campo37" type="varchar" length="255" decimal="0" jt="12" />
			<column name="campo38" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi1" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi2" type="varchar" length="255" decimal="0" jt="12" />
			<column name="codother1" type="char" length="3" decimal="0" jt="1" />
			<column name="codother2" type="char" length="3" decimal="0" jt="1" />
			<column name="codother3" type="char" length="3" decimal="0" jt="1" />
			<column name="codother4" type="char" length="3" decimal="0" jt="1" />
			<column name="importoother1" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother2" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother3" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother4" type="numeric" length="9" decimal="2" jt="2" />
			<column name="codother5" type="char" length="3" decimal="0" jt="1" />
			<column name="codother6" type="char" length="3" decimal="0" jt="1" />
			<column name="codother7" type="char" length="3" decimal="0" jt="1" />
			<column name="codother8" type="char" length="3" decimal="0" jt="1" />
			<column name="importoother5" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother6" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother7" type="numeric" length="9" decimal="2" jt="2" />
			<column name="importoother8" type="numeric" length="9" decimal="2" jt="2" />
			<column name="codother9" type="char" length="3" decimal="0" jt="1" />
			<column name="importoother9" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo21" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo22" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo23" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo31" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo32" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo33" type="varchar" length="35" decimal="0" jt="12" />
			<column name="campo4c3" type="varchar" length="20" decimal="0" jt="12" />
			<column name="campohead" type="varchar" length="50" decimal="0" jt="12" />
			<column name="ratanetta" type="numeric" length="18" decimal="2" jt="2" />
			<column name="progressivo" type="float8" length="17" decimal="17" jt="6" />
			<column name="anno" type="char" length="4" decimal="0" jt="1" />
			<column name="mawbcosts" type="numeric" length="18" decimal="2" jt="2" />
			<column name="mawbothcosts" type="numeric" length="18" decimal="2" jt="2" />
			<column name="pesotassabile" type="numeric" length="18" decimal="2" jt="2" />
			<column name="datamaster" type="timestamp" decimal="6" jt="93" />
			<column name="utente" type="varchar" length="10" decimal="0" jt="12" />
			<column name="hi3" type="varchar" length="255" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="10" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="voloprevisto" type="varchar" length="50" decimal="0" jt="12" />
			<column name="voloeffettivo" type="varchar" length="50" decimal="0" jt="12" />
			<column name="etdprevisto" type="timestamp" decimal="6" jt="93" />
			<column name="etdeffettivo" type="timestamp" decimal="6" jt="93" />
			<column name="etaprevisto" type="timestamp" decimal="6" jt="93" />
			<column name="etaeffettivo" type="timestamp" decimal="6" jt="93" />
			<column name="filialeeolog" type="char" length="3" decimal="0" jt="1" />
			<column name="costopallet" type="numeric" length="18" decimal="2" jt="2" />
			<column name="costotrasporto" type="numeric" length="18" decimal="2" jt="2" />
			<column name="sigillo" type="varchar" length="50" decimal="0" jt="12" />
			<column name="notemaster" type="varchar" length="250" decimal="0" jt="12" />
			<column name="tipo" type="varchar" length="10" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_aerealtamaster" unique="PRIMARY_KEY" >
				<column name="campo1c" />
			</index>
			<index name="annoprotocollo" unique="UNIQUE_KEY" >
				<column name="anno" />
				<column name="progressivo" />
			</index>
		</table>
		<table name="aereaprenotazioni" >
			<column name="numawb" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="codcompagnia" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="destinazione" type="varchar" length="5" decimal="0" jt="12" />
			<column name="data" type="timestamp" decimal="6" jt="93" />
			<column name="note" type="text" decimal="0" jt="12" />
			<column name="flgchiusa" type="varchar" length="1" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="viaggio" type="varchar" length="20" decimal="0" jt="12" />
			<column name="dataviaggio" type="timestamp" decimal="6" jt="93" />
			<column name="codiceaerea1" type="varchar" length="3" decimal="0" jt="12" />
			<column name="eta" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
		</table>
		<table name="aerearigheltahouse" >
			<column name="progressivolta" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="prriga" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="campo19a" type="integer" length="10" decimal="0" jt="4" />
			<column name="campo20a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo21" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo22" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo23" type="varchar" length="10" decimal="0" jt="12" />
			<column name="campo24" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo25" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo26a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo27" type="varchar" length="30" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_aerearigheltahouse" unique="PRIMARY_KEY" >
				<column name="progressivolta" />
				<column name="anno" />
				<column name="codfiliale" />
				<column name="prriga" />
			</index>
			<index name="uid_aerearigheltahouse" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="aerearigheltamaster" >
			<column name="campo1c" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="prriga" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="campo19a" type="integer" length="10" decimal="0" jt="4" />
			<column name="campo20a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo21" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo22" type="varchar" length="1" decimal="0" jt="12" />
			<column name="campo23" type="varchar" length="10" decimal="0" jt="12" />
			<column name="campo24" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo25" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo26a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="campo27" type="varchar" length="30" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_aerearigheltamaster" unique="PRIMARY_KEY" >
				<column name="campo1c" />
				<column name="prriga" />
			</index>
		</table>
		<table name="aereavociother" >
			<column name="sigla" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="tipo" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="importo" type="numeric" length="9" decimal="2" jt="2" />
			<column name="descrizione" type="varchar" length="20" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_aereavociother" unique="PRIMARY_KEY" >
				<column name="sigla" />
			</index>
		</table>
		<table name="aereavociotherhouse" >
			<column name="sigla" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="tipo" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="importo" type="numeric" length="9" decimal="2" jt="2" />
			<column name="descrizione" type="varchar" length="20" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_aereavociotherhouse" unique="PRIMARY_KEY" >
				<column name="sigla" />
			</index>
		</table>
		<table name="agentiiata" >
			<column name="codiceiata" type="varchar" length="15" decimal="0" jt="12" mandatory="y" />
			<column name="agente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="indirizzoagente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="indirizzo1agente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="numaccount" type="varchar" length="20" decimal="0" jt="12" />
			<column name="compagniaaerea" type="varchar" length="6" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_agentiiata" unique="PRIMARY_KEY" >
				<column name="codiceiata" />
			</index>
		</table>
		<table name="agenzie" >
			<column name="codagenzia" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="ragsocialeagenzia" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzo1" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzo2" type="varchar" length="35" decimal="0" jt="12" />
			<column name="piva" type="varchar" length="13" decimal="0" jt="12" />
			<column name="telefono" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="telex" type="varchar" length="20" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="sqlpropk_custom_tm_logisticagenzie" unique="PRIMARY_KEY" >
				<column name="codagenzia" />
			</index>
		</table>
		<table name="attivitapratica" >
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="desattivita" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_attivitapratica" unique="PRIMARY_KEY" >
				<column name="codattivita" />
			</index>
		</table>
		<table name="azienda" >
			<column name="codazienda" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="ragionesociale1" type="varchar" length="100" decimal="0" jt="12" />
			<column name="ragionesociale2" type="varchar" length="255" decimal="0" jt="12" />
			<column name="pathcontab" type="varchar" length="60" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_azienda" unique="PRIMARY_KEY" >
				<column name="codazienda" />
			</index>
		</table>
		<table name="banche" >
			<column name="codbanca" type="varchar" length="11" decimal="0" jt="12" mandatory="y" />
			<column name="sottoconto" type="varchar" length="10" decimal="0" jt="12" />
			<column name="tipo_cc" type="varchar" length="1" decimal="0" jt="12" />
			<column name="numero_cc" type="varchar" length="15" decimal="0" jt="12" />
			<column name="fido" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="intsupfido" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="ggbancafp" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="ggbancasp" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="speseeffet" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="speseconto" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="speseinsol" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="spesechius" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="commaxscop" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="limmaxscop" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="spesescrit" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="limesclus" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="ggxintpas" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="ggxintatt" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="stato" type="varchar" length="1" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="ult_agg" type="varchar" length="8" decimal="0" jt="12" />
			<column name="sigla" type="varchar" length="50" decimal="0" jt="12" />
			<column name="abi" type="varchar" length="50" decimal="0" jt="12" />
			<column name="cab" type="varchar" length="50" decimal="0" jt="12" />
			<column name="denominaz" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_banche" unique="PRIMARY_KEY" >
				<column name="codbanca" />
			</index>
		</table>
		<table name="clifo" >
			<column name="codice" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="ragionesoc" type="varchar" length="50" decimal="0" jt="12" />
			<column name="ragionesoc2" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tipo" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['D'::character varying]]></defo>
			</column>
			<column name="indirizzo" type="varchar" length="100" decimal="0" jt="12" />
			<column name="cap" type="varchar" length="15" decimal="0" jt="12" />
			<column name="localita" type="varchar" length="50" decimal="0" jt="12" />
			<column name="provincia" type="varchar" length="2" decimal="0" jt="12" />
			<column name="paiv" type="varchar" length="12" decimal="0" jt="12" />
			<column name="tel" type="varchar" length="30" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="30" decimal="0" jt="12" />
			<column name="email" type="varchar" length="500" decimal="0" jt="12" />
			<column name="mincnt20" type="numeric" length="9" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="mincnt40" type="numeric" length="9" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codcliente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="flgnoassicurazione" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="nazione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tipoimportazione" type="char" length="1" decimal="0" jt="1" />
			<column name="importot1" type="numeric" length="12" decimal="2" jt="2" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_clifo" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
			<index name="ix_ragionesoc" unique="NORMAL" >
				<column name="ragionesoc" />
			</index>
		</table>
		<table name="cntr_type" >
			<column name="cod_cntr" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="des_cntr" type="varchar" length="40" decimal="0" jt="12" />
			<column name="siz_cntr" type="varchar" length="2" decimal="0" jt="12" />
			<column name="gg_franchigia" type="integer" length="10" decimal="0" jt="4" />
			<column name="tariffa" type="integer" length="10" decimal="0" jt="4" />
			<column name="thcimp" type="float8" length="17" decimal="17" jt="6" />
			<column name="thcval" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tarifpri" type="integer" length="10" decimal="0" jt="4" />
			<column name="gg_prirata" type="integer" length="10" decimal="0" jt="4" />
			<column name="max_weight" type="float8" length="17" decimal="17" jt="6" />
			<column name="max_volume" type="float8" length="17" decimal="17" jt="6" />
			<column name="lunghezza" type="float8" length="17" decimal="17" jt="6" />
			<column name="larghezza" type="float8" length="17" decimal="17" jt="6" />
			<column name="altezza" type="float8" length="17" decimal="17" jt="6" />
			<column name="lunghezza_interna" type="float8" length="17" decimal="17" jt="6" />
			<column name="lunghezza_allaporta" type="float8" length="17" decimal="17" jt="6" />
			<column name="larghezza_interna" type="float8" length="17" decimal="17" jt="6" />
			<column name="larghezza_allaporta" type="float8" length="17" decimal="17" jt="6" />
			<column name="altezza_interna" type="float8" length="17" decimal="17" jt="6" />
			<column name="altezza_allaporta" type="float8" length="17" decimal="17" jt="6" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_cntr_type" unique="PRIMARY_KEY" >
				<column name="cod_cntr" />
			</index>
			<index name="ix_cntr_type" unique="NORMAL" >
				<column name="des_cntr" />
			</index>
		</table>
		<table name="cod_pagamento" >
			<column name="codice" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="descrizion" type="varchar" length="50" decimal="0" jt="12" />
			<column name="iniziocal" type="varchar" length="4" decimal="0" jt="12" />
			<column name="tprata" type="varchar" length="1" decimal="0" jt="12" />
			<column name="mesecomm" type="varchar" length="1" decimal="0" jt="12" />
			<column name="scontovalu" type="float8" length="17" decimal="17" jt="6" />
			<column name="codlingua" type="varchar" length="1" decimal="0" jt="12" />
			<column name="stato" type="varchar" length="1" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="ult_agg" type="varchar" length="8" decimal="0" jt="12" />
			<column name="ratecostan" type="varchar" length="1" decimal="0" jt="12" />
			<column name="sdicode" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tiposcadenza" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="cod_pagamento_pkey" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
		</table>
		<table name="compagnie" >
			<column name="codcompagnia" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="compagnia" type="varchar" length="50" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="importofue" type="numeric" length="18" decimal="2" jt="2" />
			<column name="importosec" type="numeric" length="18" decimal="2" jt="2" />
			<column name="importofueusd" type="numeric" length="18" decimal="2" jt="2" />
			<column name="importosecusd" type="numeric" length="18" decimal="2" jt="2" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_compagnie" unique="PRIMARY_KEY" >
				<column name="codcompagnia" />
			</index>
		</table>
		<table name="condizioni" >
			<column name="tipocondizione" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="descondizione" type="varchar" length="30" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_condizioni" unique="PRIMARY_KEY" >
				<column name="tipocondizione" />
			</index>
		</table>
		<table name="corpofatt" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="contatore" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="progrriga" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="40" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="qta" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="prezzo" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importo" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="tipocalcolo" type="varchar" length="1" decimal="0" jt="12" />
			<column name="percmoltiplicatorenoli" type="numeric" length="12" decimal="4" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importocalcperc" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva" type="varchar" length="5" decimal="0" jt="12" />
			<column name="contropartita" type="varchar" length="16" decimal="0" jt="12" />
			<column name="perciva" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="numerogiorni" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codvoceanaliticatp" type="varchar" length="4" decimal="0" jt="12" />
			<column name="percadd" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="gruppovoci" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importo5" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codivanoli5" type="varchar" length="4" decimal="0" jt="12" />
			<column name="numconto" type="varchar" length="10" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="descrizioneaggnoli" type="varchar" length="50" decimal="0" jt="12" />
			<column name="qtanoli" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgnoli95" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgnoli62" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="centroricavo" type="varchar" length="50" decimal="0" jt="12" />
			<column name="utenteinserimento" type="varchar" length="10" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<index name="pk_corpofattold" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="contatore" />
				<column name="progrriga" />
				<column name="codfiliale" />
			</index>
			<index name="corpofatt_uid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="corpofatt_testafatt_fk_ndx" unique="NORMAL" >
				<column name="anno" />
				<column name="contatore" />
				<column name="codfiliale" />
			</index>
			<index name="corpofatt_tipocalcolo_ndx" unique="NORMAL" >
				<column name="tipocalcolo" />
			</index>
			<fk name="corpofatt_testafatt_fk" to_schema="custom_tm_logistic" to_table="testafatt" >
				<fk_column name="anno" pk="annofattura" />
				<fk_column name="codfiliale" pk="codfiliale" />
				<fk_column name="contatore" pk="contatore" />
			</fk>
		</table>
		<table name="corpofatt_campioni" >
			<column name="annofattura" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="numrif" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="progrriga" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgtipopreffatt" type="varchar" length="1" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="codutente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="40" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="qta" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="prezzo" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importo" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="tipocalcolo" type="varchar" length="1" decimal="0" jt="12" />
			<column name="percmoltiplicatorenoli" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importocalcperc" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva" type="varchar" length="5" decimal="0" jt="12" />
			<column name="contropartita" type="varchar" length="16" decimal="0" jt="12" />
			<column name="perciva" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="numerogiorni" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codvoceanaliticatp" type="varchar" length="4" decimal="0" jt="12" />
			<column name="percadd" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="gruppovoci" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importo5" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codivanoli5" type="varchar" length="4" decimal="0" jt="12" />
			<column name="numconto" type="varchar" length="10" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="descrizioneaggnoli" type="varchar" length="50" decimal="0" jt="12" />
			<column name="qtanoli" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgnoli95" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgnoli62" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_corpofatt_campioni" unique="PRIMARY_KEY" >
				<column name="annofattura" />
				<column name="numrif" />
				<column name="progrriga" />
				<column name="flgtipopreffatt" />
				<column name="codfiliale" />
			</index>
		</table>
		<table name="corrieri" >
			<column name="corriere" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="flgenac" type="char" length="1" decimal="0" jt="1" />
			<column name="indir1" type="varchar" length="50" decimal="0" jt="12" />
			<column name="indir2" type="varchar" length="50" decimal="0" jt="12" />
			<column name="cap" type="varchar" length="5" decimal="0" jt="12" />
			<column name="localita" type="varchar" length="50" decimal="0" jt="12" />
			<column name="comune" type="varchar" length="50" decimal="0" jt="12" />
			<column name="provincia" type="varchar" length="2" decimal="0" jt="12" />
			<column name="nazione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tel" type="varchar" length="40" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="40" decimal="0" jt="12" />
			<column name="e_mailaddress" type="varchar" length="200" decimal="0" jt="12" />
			<column name="paiv" type="varchar" length="12" decimal="0" jt="12" />
			<column name="tariffa" type="integer" length="10" decimal="0" jt="4" />
			<column name="tariffaae" type="integer" length="10" decimal="0" jt="4" />
			<column name="tariffaai" type="integer" length="10" decimal="0" jt="4" />
			<column name="tariffaoe" type="integer" length="10" decimal="0" jt="4" />
			<column name="tariffaoi" type="integer" length="10" decimal="0" jt="4" />
			<column name="personariferimento" type="varchar" length="200" decimal="0" jt="12" />
			<column name="cellriferimento" type="varchar" length="100" decimal="0" jt="12" />
			<column name="emailriferimento" type="varchar" length="100" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="sqlpropk_custom_tm_logisticcorrieri" unique="PRIMARY_KEY" >
				<column name="corriere" />
			</index>
			<index name="corrieri_uid_udx" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
		</table>
		<table name="costi" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="numerorigacosto" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tipocalcolo" type="varchar" length="2" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importo" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importobase" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="quantita" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importobasepresunto" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="quantitapresunta" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="15" decimal="0" jt="12" />
			<column name="ragsocialefornitore" type="varchar" length="250" decimal="0" jt="12" />
			<column name="numprotocollo" type="varchar" length="15" decimal="0" jt="12" />
			<column name="flginprefattura" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgprefattura" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="numerol" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="datadoc" type="timestamp" decimal="6" jt="93" />
			<column name="nreg" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flginviato" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="rigacostimaster" type="integer" length="10" decimal="0" jt="4" />
			<column name="nfattura" type="varchar" length="20" decimal="0" jt="12" />
			<column name="datafattura" type="timestamp" decimal="6" jt="93" />
			<column name="flgpervenuta" type="char" length="2" decimal="0" jt="1" >
				<defo><![CDATA['NO'::bpchar]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_costi" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
				<column name="codfiliale" />
				<column name="numerorigacosto" />
			</index>
		</table>
		<table name="costi_log" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tipo" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="numerorigacosto" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tipocalcolo" type="varchar" length="2" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importo" type="float8" length="17" decimal="17" jt="6" />
			<column name="importobase" type="float8" length="17" decimal="17" jt="6" />
			<column name="quantita" type="float8" length="17" decimal="17" jt="6" />
			<column name="importobasepresunto" type="float8" length="17" decimal="17" jt="6" />
			<column name="quantitapresunta" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="15" decimal="0" jt="12" />
			<column name="ragsocialefornitore" type="varchar" length="50" decimal="0" jt="12" />
			<column name="numprotocollo" type="varchar" length="15" decimal="0" jt="12" />
			<column name="flginprefattura" type="varchar" length="1" decimal="0" jt="12" />
			<column name="flgprefattura" type="varchar" length="1" decimal="0" jt="12" />
			<column name="numerol" type="float8" length="17" decimal="17" jt="6" />
			<column name="datadoc" type="timestamp" decimal="6" jt="93" />
			<column name="nreg" type="integer" length="10" decimal="0" jt="4" />
			<column name="flginviato" type="varchar" length="1" decimal="0" jt="12" />
			<column name="rigacostimaster" type="integer" length="10" decimal="0" jt="4" />
			<column name="nfattura" type="varchar" length="20" decimal="0" jt="12" />
			<column name="datafattura" type="timestamp" decimal="6" jt="93" />
			<column name="flgpervenuta" type="char" length="2" decimal="0" jt="1" />
			<column name="costoreale" type="numeric" length="18" decimal="2" jt="2" />
			<column name="quantitareale" type="float8" length="17" decimal="17" jt="6" />
			<column name="valutareale" type="varchar" length="3" decimal="0" jt="12" />
			<column name="cambioreale" type="float8" length="17" decimal="17" jt="6" />
			<column name="valorereale" type="float8" length="17" decimal="17" jt="6" />
			<column name="flgmanuale" type="char" length="1" decimal="0" jt="1" />
			<column name="utenteinserimento" type="varchar" length="40" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_costi_log" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="costipredefiniti" >
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="numerorigacosto" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="40" decimal="0" jt="12" />
			<column name="tipocalcolo" type="varchar" length="2" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importo" type="float8" length="17" decimal="17" jt="6" />
			<column name="importobase" type="float8" length="17" decimal="17" jt="6" />
			<column name="quantita" type="float8" length="17" decimal="17" jt="6" />
			<column name="importobasepresunto" type="float8" length="17" decimal="17" jt="6" />
			<column name="quantitapresunta" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialefornitore" type="varchar" length="250" decimal="0" jt="12" />
			<column name="numprotocollo" type="varchar" length="15" decimal="0" jt="12" />
			<column name="flginprefattura" type="varchar" length="1" decimal="0" jt="12" />
			<column name="flgprefattura" type="varchar" length="1" decimal="0" jt="12" />
			<column name="numerol" type="float8" length="17" decimal="17" jt="6" />
			<column name="datadoc" type="timestamp" decimal="6" jt="93" />
			<column name="nreg" type="integer" length="10" decimal="0" jt="4" />
			<column name="flginviato" type="varchar" length="1" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="sqlpropk_custom_tm_logisticcostipredefiniti" unique="PRIMARY_KEY" >
				<column name="codattivita" />
				<column name="numerorigacosto" />
			</index>
			<index name="costipredefiniti_uid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
		</table>
		<table name="datimerce" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="progressivoriga" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="numerocolli" type="integer" length="10" decimal="0" jt="4" />
			<column name="peso" type="numeric" length="18" decimal="2" jt="2" />
			<column name="volume" type="numeric" length="18" decimal="3" jt="2" />
			<column name="booking" type="varchar" length="20" decimal="0" jt="12" />
			<column name="tipocntr" type="varchar" length="5" decimal="0" jt="12" />
			<column name="siglacntr" type="varchar" length="13" decimal="0" jt="12" />
			<column name="sigillo" type="varchar" length="30" decimal="0" jt="12" />
			<column name="imballo" type="varchar" length="3" decimal="0" jt="12" />
			<column name="po1" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po2" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po3" type="varchar" length="20" decimal="0" jt="12" />
			<column name="importonolo" type="float8" length="17" decimal="17" jt="6" />
			<column name="marche" type="varchar" length="20" decimal="0" jt="12" />
			<column name="descrizionemerce1" type="varchar" length="75" decimal="0" jt="12" />
			<column name="descrizionemerce2" type="varchar" length="75" decimal="0" jt="12" />
			<column name="bl" type="varchar" length="20" decimal="0" jt="12" />
			<column name="blhouse" type="varchar" length="20" decimal="0" jt="12" />
			<column name="flgrichiestaposizionamenti" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="flgconfermaposizionamenti" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="note" type="varchar" length="70" decimal="0" jt="12" />
			<column name="flgassegna" type="varchar" length="1" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="10" decimal="0" jt="12" />
			<column name="descrizionemerceologica" type="varchar" length="50" decimal="0" jt="12" />
			<column name="temperatura" type="float8" length="17" decimal="17" jt="6" />
			<column name="fornitore" type="varchar" length="50" decimal="0" jt="12" />
			<column name="notefornitore" type="text" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="6" decimal="0" jt="12" />
			<column name="dataarrivomagazzino" type="timestamp" decimal="6" jt="93" />
			<column name="levelcode" type="smallint" length="5" decimal="0" jt="5" />
			<column name="cartoni" type="integer" length="10" decimal="0" jt="4" />
			<column name="codmerce" type="varchar" length="10" decimal="0" jt="12" />
			<column name="flgbooking" type="varchar" length="1" decimal="0" jt="12" />
			<column name="annobooking" type="varchar" length="4" decimal="0" jt="12" />
			<column name="counterbooking" type="integer" length="10" decimal="0" jt="4" />
			<column name="fatturan" type="varchar" length="50" decimal="0" jt="12" />
			<column name="datafattura" type="timestamp" decimal="6" jt="93" />
			<column name="pesotassabile" type="numeric" length="9" decimal="0" jt="2" />
			<column name="tiporata" type="varchar" length="1" decimal="0" jt="12" />
			<column name="um" type="varchar" length="1" decimal="0" jt="12" />
			<column name="valoremerce" type="numeric" length="18" decimal="2" jt="2" />
			<column name="codvalutafattura" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importofattura" type="numeric" length="18" decimal="2" jt="2" />
			<column name="cambio" type="float8" length="17" decimal="17" jt="6" />
			<column name="dimentions" type="varchar" length="50" decimal="0" jt="12" />
			<column name="remarks" type="varchar" length="50" decimal="0" jt="12" />
			<column name="rapppesovolume" type="numeric" length="18" decimal="2" jt="2" />
			<column name="flgmp2" type="char" length="1" decimal="0" jt="1" />
			<column name="flgnotaxw" type="char" length="1" decimal="0" jt="1" />
			<column name="pesovero" type="numeric" length="18" decimal="3" jt="2" />
			<column name="volumevero" type="numeric" length="18" decimal="3" jt="2" />
			<column name="bookingnumber" type="integer" length="10" decimal="0" jt="4" />
			<column name="rigabookingnumber" type="integer" length="10" decimal="0" jt="4" />
			<column name="bookingnumberc" type="integer" length="10" decimal="0" jt="4" />
			<column name="rigabookingnumberc" type="integer" length="10" decimal="0" jt="4" />
			<column name="tariffadoganale" type="varchar" length="50" decimal="0" jt="12" />
			<column name="pezzi" type="integer" length="10" decimal="0" jt="4" />
			<column name="valorepezzo" type="numeric" length="18" decimal="2" jt="2" />
			<column name="misurew" type="numeric" length="18" decimal="3" jt="2" />
			<column name="misurel" type="numeric" length="18" decimal="3" jt="2" />
			<column name="misureh" type="numeric" length="18" decimal="3" jt="2" />
			<column name="misuraw" type="numeric" length="18" decimal="3" jt="2" />
			<column name="misural" type="numeric" length="18" decimal="3" jt="2" />
			<column name="misurah" type="numeric" length="18" decimal="3" jt="2" />
			<column name="codfornitoremagazzino" type="varchar" length="10" decimal="0" jt="12" />
			<column name="po4" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po5" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po6" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po7" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po8" type="varchar" length="20" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="datimerce_pk" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
				<column name="codfiliale" />
				<column name="progressivoriga" />
			</index>
			<index name="datimerce_uid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
		</table>
		<table name="datispedizione" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="codshipper" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialeshipper" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo1shipper" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo2shipper" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo3shipper" type="varchar" length="75" decimal="0" jt="12" />
			<column name="coddestinatario" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialedestinatario" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo1destinatario" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo2destinatario" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo3destinatario" type="varchar" length="75" decimal="0" jt="12" />
			<column name="codconsignee" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialeconsignee" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo1consignee" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo2consignee" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo3consignee" type="varchar" length="75" decimal="0" jt="12" />
			<column name="codnotify" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialenotify" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo1notify" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo2notify" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo3notify" type="varchar" length="75" decimal="0" jt="12" />
			<column name="codnotify1" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialenotify1" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo1notify1" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo2notify1" type="varchar" length="75" decimal="0" jt="12" />
			<column name="indirizzo3notify1" type="varchar" length="75" decimal="0" jt="12" />
			<column name="tipocondizione" type="varchar" length="3" decimal="0" jt="12" />
			<column name="noloprepaid" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['1'::character varying]]></defo>
			</column>
			<column name="codvaluta" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importocambio" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgoriginalexpress" type="char" length="10" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="noloother" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['1'::character varying]]></defo>
			</column>
			<column name="codvalutacollectmare" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importocollectmare" type="numeric" length="10" decimal="2" jt="2" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_datispedizione" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
				<column name="codfiliale" />
			</index>
		</table>
		<table name="docarchiviatientrate" >
			<column name="anno" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="num_entrata" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pg" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contatore" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="dataacquisizione" type="timestamp" decimal="6" jt="93" />
			<column name="numero" type="integer" length="10" decimal="0" jt="4" />
			<column name="tipodoc" type="varchar" length="2" decimal="0" jt="12" />
			<column name="codcompagnia" type="varchar" length="2" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="6" decimal="0" jt="12" />
			<column name="codaltro" type="integer" length="10" decimal="0" jt="4" />
			<column name="codcliente" type="varchar" length="20" decimal="0" jt="12" />
			<column name="note" type="text" decimal="0" jt="12" />
			<column name="path" type="varchar" length="150" decimal="0" jt="12" />
			<column name="nomefile" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dataarchiviazione" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="10" decimal="0" jt="12" />
			<column name="tipo" type="varchar" length="1" decimal="0" jt="12" />
			<column name="nomefileoriginale" type="varchar" length="50" decimal="0" jt="12" />
			<column name="pathfile" type="varchar" length="250" decimal="0" jt="12" />
			<column name="nomefilearchiviato" type="varchar" length="50" decimal="0" jt="12" />
			<column name="flgvisibile" type="char" length="1" decimal="0" jt="1" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="docarchiviatientrate_pk" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="num_entrata" />
				<column name="pg" />
				<column name="contatore" />
			</index>
		</table>
		<table name="documenti" >
			<column name="tipodichiarazione" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="descrizione" type="varchar" length="20" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_documenti" unique="PRIMARY_KEY" >
				<column name="tipodichiarazione" />
			</index>
			<index name="ix_descrizione" unique="UNIQUE_KEY" >
				<column name="descrizione" />
			</index>
		</table>
		<table name="documentiarchiviati" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="contatore" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="dataacquisizione" type="timestamp" decimal="6" jt="93" />
			<column name="tipodoc" type="varchar" length="2" decimal="0" jt="12" />
			<column name="codcompagnia" type="varchar" length="6" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="6" decimal="0" jt="12" />
			<column name="codaltro" type="integer" length="10" decimal="0" jt="4" />
			<column name="codcliente" type="varchar" length="20" decimal="0" jt="12" />
			<column name="note" type="text" decimal="0" jt="12" />
			<column name="path" type="varchar" length="150" decimal="0" jt="12" />
			<column name="nomefile" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codutente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="flgvisibile" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA['N'::bpchar]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_documentiarchiviati" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
				<column name="codfiliale" />
				<column name="contatore" />
			</index>
		</table>
		<table name="entrate" >
			<column name="anno" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="num_entrata" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pg" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="flgdefinitiva" type="char" length="1" decimal="0" jt="1" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="typeexport" type="char" length="1" decimal="0" jt="1" />
			<column name="tipotrasporto" type="char" length="1" decimal="0" jt="1" />
			<column name="flgfull" type="char" length="1" decimal="0" jt="1" />
			<column name="flgitaest" type="char" length="1" decimal="0" jt="1" />
			<column name="flgcoind" type="char" length="1" decimal="0" jt="1" />
			<column name="data_entrata" type="timestamp" decimal="6" jt="93" />
			<column name="cod_nave" type="varchar" length="5" decimal="0" jt="12" />
			<column name="dataviaggio" type="timestamp" decimal="6" jt="93" />
			<column name="n_viaggio" type="varchar" length="15" decimal="0" jt="12" />
			<column name="codcompagnia" type="integer" length="10" decimal="0" jt="4" />
			<column name="cod_pol" type="varchar" length="5" decimal="0" jt="12" />
			<column name="cod_pod" type="varchar" length="5" decimal="0" jt="12" />
			<column name="codorigine" type="varchar" length="3" decimal="0" jt="12" />
			<column name="booking" type="varchar" length="20" decimal="0" jt="12" />
			<column name="terminalritiro" type="varchar" length="50" decimal="0" jt="12" />
			<column name="terminalconsegna" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dataconsegna" type="timestamp" decimal="6" jt="93" />
			<column name="noteposizionamento" type="varchar" length="255" decimal="0" jt="12" />
			<column name="codmagazzino" type="varchar" length="5" decimal="0" jt="12" />
			<column name="ggfranchigia" type="smallint" length="5" decimal="0" jt="5" />
			<column name="data_scad_franch" type="timestamp" decimal="6" jt="93" />
			<column name="coddepositante" type="varchar" length="10" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="10" decimal="0" jt="12" />
			<column name="coddestinatario" type="varchar" length="10" decimal="0" jt="12" />
			<column name="codvettore" type="varchar" length="10" decimal="0" jt="12" />
			<column name="tipodichiarazione" type="varchar" length="4" decimal="0" jt="12" />
			<column name="numdocumento" type="varchar" length="50" decimal="0" jt="12" />
			<column name="seriedocumento" type="varchar" length="1" decimal="0" jt="12" />
			<column name="datadocumento" type="timestamp" decimal="6" jt="93" />
			<column name="codufficioemissione" type="varchar" length="6" decimal="0" jt="12" />
			<column name="tipomezzoentrata" type="varchar" length="2" decimal="0" jt="12" />
			<column name="numeroa1" type="integer" length="10" decimal="0" jt="4" />
			<column name="cina1" type="varchar" length="1" decimal="0" jt="12" />
			<column name="dataa1" type="timestamp" decimal="6" jt="93" />
			<column name="bldeposito" type="integer" length="10" decimal="0" jt="4" />
			<column name="tipomerce" type="char" length="1" decimal="0" jt="1" />
			<column name="tipodocalli" type="varchar" length="4" decimal="0" jt="12" />
			<column name="datascadenza" type="timestamp" decimal="6" jt="93" />
			<column name="vocedoganale" type="varchar" length="20" decimal="0" jt="12" />
			<column name="regime" type="varchar" length="20" decimal="0" jt="12" />
			<column name="valore" type="numeric" length="18" decimal="2" jt="2" />
			<column name="fd" type="varchar" length="50" decimal="0" jt="12" />
			<column name="nfattura" type="integer" length="10" decimal="0" jt="4" />
			<column name="importofattura" type="numeric" length="18" decimal="2" jt="2" />
			<column name="note" type="varchar" length="100" decimal="0" jt="12" />
			<column name="note2" type="varchar" length="100" decimal="0" jt="12" />
			<column name="note3" type="varchar" length="100" decimal="0" jt="12" />
			<column name="potesta" type="varchar" length="200" decimal="0" jt="12" />
			<column name="progressivopratica" type="integer" length="10" decimal="0" jt="4" />
			<column name="annopratica" type="varchar" length="4" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="flgmetal" type="char" length="1" decimal="0" jt="1" />
			<column name="numfattura" type="varchar" length="50" decimal="0" jt="12" />
			<column name="datafattura" type="timestamp" decimal="6" jt="93" />
			<column name="tipoentrata" type="char" length="1" decimal="0" jt="1" />
			<column name="annotp" type="varchar" length="4" decimal="0" jt="12" />
			<column name="progressivotp" type="integer" length="10" decimal="0" jt="4" />
			<column name="ppgtp" type="smallint" length="5" decimal="0" jt="5" />
			<column name="codattivitatp" type="varchar" length="4" decimal="0" jt="12" />
			<column name="codfilialetp" type="varchar" length="2" decimal="0" jt="12" />
			<column name="ntrackingvettore" type="varchar" length="50" decimal="0" jt="12" />
			<column name="valutafattura" type="varchar" length="3" decimal="0" jt="12" />
			<column name="valorefattura" type="numeric" length="18" decimal="2" jt="2" />
			<column name="cambiofattura" type="numeric" length="18" decimal="5" jt="2" />
			<column name="tipocondizione" type="varchar" length="3" decimal="0" jt="12" />
			<column name="mrn" type="varchar" length="17" decimal="0" jt="12" />
			<column name="flgvisibileinternet" type="char" length="1" decimal="0" jt="1" />
			<column name="codfornitoregpm" type="varchar" length="10" decimal="0" jt="12" />
			<column name="immaginegpm" type="varchar" length="250" decimal="0" jt="12" />
			<column name="fornitoregpm" type="varchar" length="250" decimal="0" jt="12" />
			<column name="flgnazionale" type="char" length="1" decimal="0" jt="1" />
			<column name="flgportoassegnato" type="char" length="1" decimal="0" jt="1" />
			<column name="importovettore" type="numeric" length="18" decimal="2" jt="2" />
			<column name="prioritancl" type="varchar" length="100" decimal="0" jt="12" />
			<column name="annofatturapo" type="varchar" length="4" decimal="0" jt="12" />
			<column name="contatorefatturapo" type="integer" length="10" decimal="0" jt="4" />
			<column name="codfilialefatturapo" type="varchar" length="2" decimal="0" jt="12" />
			<column name="shipperncl" type="varchar" length="200" decimal="0" jt="12" />
			<column name="consigneencl" type="varchar" length="200" decimal="0" jt="12" />
			<column name="flgportale" type="char" length="1" decimal="0" jt="1" />
			<column name="dataordine" type="timestamp" decimal="6" jt="93" />
			<column name="rifnave" type="varchar" length="50" decimal="0" jt="12" />
			<column name="prontezza" type="timestamp" decimal="6" jt="93" />
			<column name="hubid" type="varchar" length="50" decimal="0" jt="12" />
			<column name="datpickup" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="entrate_pkey" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="num_entrata" />
				<column name="pg" />
			</index>
			<index name="entrate_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<fk name="fk_entrate_clifo" to_schema="custom_tm_logistic" to_table="clifo" >
				<fk_column name="coddepositante" pk="codice" />
			</fk>
			<fk name="fk_entrate_clifo1" to_schema="custom_tm_logistic" to_table="clifo" >
				<fk_column name="codfornitore" pk="codice" />
			</fk>
			<fk name="fk_entrate_clifo2" to_schema="custom_tm_logistic" to_table="clifo" >
				<fk_column name="coddestinatario" pk="codice" />
			</fk>
			<fk name="fk_entrate_clifo3" to_schema="custom_tm_logistic" to_table="clifo" >
				<fk_column name="codvettore" pk="codice" />
			</fk>
			<fk name="fk_entrate_documenti" to_schema="custom_tm_logistic" to_table="documenti" >
				<fk_column name="tipodichiarazione" pk="tipodichiarazione" />
			</fk>
			<fk name="fk_entrate_fd" to_schema="custom_tm_logistic" to_table="fd" >
				<fk_column name="fd" pk="fd" />
			</fk>
			<fk name="fk_entrate_magazzini" to_schema="custom_tm_logistic" to_table="magazzini" >
				<fk_column name="codmagazzino" pk="codice" />
			</fk>
			<fk name="fk_entrate_tipi_documento" to_schema="custom_tm_logistic" to_table="tipi_documento" >
				<fk_column name="tipodocalli" pk="tipodocumento" />
			</fk>
			<fk name="fk_entrate_uffici" to_schema="custom_tm_logistic" to_table="uffici" >
				<fk_column name="codufficioemissione" pk="codufficio" />
			</fk>
		</table>
		<table name="entrate_righe" >
			<column name="anno" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="num_entrata" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="pg" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="riga" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="container" type="varchar" length="13" decimal="0" jt="12" />
			<column name="cod_cntr" type="varchar" length="4" decimal="0" jt="12" />
			<column name="sigillo1" type="varchar" length="15" decimal="0" jt="12" />
			<column name="sigillo2" type="varchar" length="15" decimal="0" jt="12" />
			<column name="sigillo3" type="varchar" length="15" decimal="0" jt="12" />
			<column name="sigillo4" type="varchar" length="15" decimal="0" jt="12" />
			<column name="sigillo5" type="varchar" length="15" decimal="0" jt="12" />
			<column name="codmarca" type="integer" length="10" decimal="0" jt="4" />
			<column name="codmerce" type="integer" length="10" decimal="0" jt="4" />
			<column name="collientrate" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="collientrateorig" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codimballo" type="varchar" length="3" decimal="0" jt="12" />
			<column name="plts" type="integer" length="10" decimal="0" jt="4" />
			<column name="pesoentrate" type="numeric" length="12" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="pesoentrateorig" type="numeric" length="12" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="pesoriscontrato" type="numeric" length="12" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="volume" type="numeric" length="12" decimal="4" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="registro" type="varchar" length="10" decimal="0" jt="12" />
			<column name="numerobl" type="varchar" length="15" decimal="0" jt="12" />
			<column name="colliesistenza" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="pesoesistenza" type="numeric" length="12" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="containerstatus" type="char" length="1" decimal="0" jt="1" />
			<column name="datapieno" type="timestamp" decimal="6" jt="93" />
			<column name="datasvuotato" type="timestamp" decimal="6" jt="93" />
			<column name="datauscito" type="timestamp" decimal="6" jt="93" />
			<column name="tipodocumento" type="varchar" length="4" decimal="0" jt="12" />
			<column name="numerodocumentodog" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="cindocumentodog" type="varchar" length="1" decimal="0" jt="12" />
			<column name="datadocumentodog" type="timestamp" decimal="6" jt="93" />
			<column name="flgscarico" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="datascadenzarighe" type="timestamp" decimal="6" jt="93" />
			<column name="tagliaannata" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cordinate1" type="varchar" length="5" decimal="0" jt="12" />
			<column name="cordinate2" type="varchar" length="5" decimal="0" jt="12" />
			<column name="cordinate3" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="cordinate4" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="note" type="varchar" length="255" decimal="0" jt="12" />
			<column name="valore" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="diritti" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgcomunicazione" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importoresiduoa" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importoresiduop" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="po" type="varchar" length="30" decimal="0" jt="12" />
			<column name="numlotto" type="varchar" length="15" decimal="0" jt="12" />
			<column name="datascadenzalotto" type="timestamp" decimal="6" jt="93" />
			<column name="flgmanipolato" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="rigaprovenienza" type="integer" length="10" decimal="0" jt="4" />
			<column name="datamanipolazione" type="timestamp" decimal="6" jt="93" />
			<column name="collimanipolati" type="integer" length="10" decimal="0" jt="4" />
			<column name="pesomanipolato" type="numeric" length="12" decimal="3" jt="2" />
			<column name="flgborsa" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="misuraw" type="numeric" length="12" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="misural" type="numeric" length="12" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="misurah" type="numeric" length="12" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="numddt" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dataddt" type="timestamp" decimal="6" jt="93" />
			<column name="npackinglist" type="integer" length="10" decimal="0" jt="4" />
			<column name="pezzi" type="integer" length="10" decimal="0" jt="4" />
			<column name="mrnrighe" type="varchar" length="17" decimal="0" jt="12" />
			<column name="codfornitorerigo" type="varchar" length="10" decimal="0" jt="12" />
			<column name="valutafatturaf" type="varchar" length="3" decimal="0" jt="12" />
			<column name="valorefatturaf" type="numeric" length="18" decimal="2" jt="2" />
			<column name="cambiofatturaf" type="numeric" length="18" decimal="5" jt="2" />
			<column name="numddtf" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dataddtf" type="timestamp" decimal="6" jt="93" />
			<column name="importofatturaf" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="numfatturaf" type="varchar" length="50" decimal="0" jt="12" />
			<column name="datafatturaf" type="timestamp" decimal="6" jt="93" />
			<column name="flgxml" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="codimballoncl" type="varchar" length="50" decimal="0" jt="12" />
			<column name="commessapk" type="varchar" length="10" decimal="0" jt="12" />
			<column name="tipodichiarazionerichiesta" type="varchar" length="50" decimal="0" jt="12" />
			<column name="flgstatointegrato" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="annobolla" type="varchar" length="4" decimal="0" jt="12" />
			<column name="codfilialebolla" type="varchar" length="2" decimal="0" jt="12" />
			<column name="progressivobolla" type="integer" length="10" decimal="0" jt="4" />
			<column name="flgportale" type="char" length="1" decimal="0" jt="1" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<comment><![CDATA[Januaproject Unique Identifier]]></comment>
			</column>
			<index name="pk_entrate_r" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="num_entrata" />
				<column name="pg" />
				<column name="riga" />
			</index>
			<fk name="fk_entrate_righe_cntr_type" to_schema="custom_tm_logistic" to_table="cntr_type" >
				<fk_column name="cod_cntr" pk="cod_cntr" />
			</fk>
			<fk name="fk_entrate_righe_entrate" to_schema="custom_tm_logistic" to_table="entrate" update_action="cascade" >
				<fk_column name="anno" pk="anno" />
				<fk_column name="num_entrata" pk="num_entrata" />
				<fk_column name="pg" pk="pg" />
			</fk>
			<fk name="fk_entrate_righe_imballi" to_schema="custom_tm_logistic" to_table="imballi" >
				<fk_column name="codimballo" pk="codimballo" />
			</fk>
			<fk name="fk_entrate_righe_marche" to_schema="custom_tm_logistic" to_table="marche" >
				<fk_column name="codmarca" pk="codmarca" />
			</fk>
			<fk name="fk_entrate_righe_merci" to_schema="custom_tm_logistic" to_table="merci" >
				<fk_column name="codmerce" pk="codice" />
			</fk>
			<fk name="fk_entrate_righe_tipi_documento" to_schema="custom_tm_logistic" to_table="tipi_documento" >
				<fk_column name="tipodocumento" pk="tipodocumento" />
			</fk>
		</table>
		<table name="fd" >
			<column name="codice" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fd" type="varchar" length="50" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_fd" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
			<index name="ix_fd" unique="UNIQUE_KEY" >
				<column name="fd" />
			</index>
		</table>
		<table name="fornitori" >
			<column name="codfornitore" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="fornitore" type="varchar" length="50" decimal="0" jt="12" />
			<column name="indirizzo1" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzo2" type="varchar" length="35" decimal="0" jt="12" />
			<column name="piva" type="varchar" length="13" decimal="0" jt="12" />
			<column name="telefono" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_fornitori" unique="PRIMARY_KEY" >
				<column name="codfornitore" />
			</index>
		</table>
		<table name="fvocifatt" >
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" mandatory="y" />
			<column name="tipovoce" type="varchar" length="1" decimal="0" jt="12" />
			<column name="gruppovoci" type="varchar" length="3" decimal="0" jt="12" />
			<column name="desvocestat" type="varchar" length="12" decimal="0" jt="12" />
			<column name="desvoceit" type="varchar" length="40" decimal="0" jt="12" />
			<column name="desvocele" type="varchar" length="40" decimal="0" jt="12" />
			<column name="tipocalcolo" type="varchar" length="2" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="percentuale" type="float8" length="17" decimal="17" jt="6" />
			<column name="percentuale2" type="float8" length="17" decimal="17" jt="6" />
			<column name="coefficentetr" type="float8" length="17" decimal="17" jt="6" />
			<column name="importobase" type="float8" length="17" decimal="17" jt="6" />
			<column name="importominimo" type="float8" length="17" decimal="17" jt="6" />
			<column name="codiva" type="varchar" length="5" decimal="0" jt="12" />
			<column name="contropartita" type="varchar" length="15" decimal="0" jt="12" />
			<column name="flgmaggioraz" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="flgnscarico" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="codanalitica" type="varchar" length="4" decimal="0" jt="12" />
			<column name="flgvociascaglioni" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="desaddizionale" type="varchar" length="40" decimal="0" jt="12" />
			<column name="codraggpref" type="varchar" length="13" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="flgvisibile" type="varchar" length="1" decimal="0" jt="12" />
			<column name="importomassimo" type="numeric" length="18" decimal="0" jt="2" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="sqlpropk_custom_tm_logisticfvocifatt" unique="PRIMARY_KEY" >
				<column name="codvoce" />
			</index>
			<index name="fvocifatt_uid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
		</table>
		<table name="imballi" >
			<column name="codimballo" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="desimballo" type="varchar" length="25" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_imballi" unique="PRIMARY_KEY" >
				<column name="codimballo" />
			</index>
			<index name="ix_desimballi" unique="UNIQUE_KEY" >
				<column name="desimballo" />
			</index>
		</table>
		<table name="livelli" >
			<column name="codice" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="descrizione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_livelli" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
		</table>
		<table name="localita" >
			<column name="deslocalita" type="varchar" length="200" decimal="0" jt="12" mandatory="y" />
			<column name="provincia" type="varchar" length="2" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="codnazione" type="varchar" length="3" decimal="0" jt="12" />
			<column name="codstato" type="varchar" length="3" decimal="0" jt="12" />
			<column name="cap" type="varchar" length="6" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_localita" unique="PRIMARY_KEY" >
				<column name="deslocalita" />
			</index>
		</table>
		<table name="magazzini" >
			<column name="codice" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="descrizione" type="varchar" length="30" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="localita" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="magazzini_pk" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
			<index name="magazzini_descrizione_uk" unique="UNIQUE_KEY" >
				<column name="descrizione" />
			</index>
		</table>
		<table name="marche" >
			<column name="codmarca" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="marca" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codicemerce" type="integer" length="10" decimal="0" jt="4" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_marche" unique="PRIMARY_KEY" >
				<column name="codmarca" />
			</index>
			<index name="ix_marche" unique="UNIQUE_KEY" >
				<column name="marca" />
			</index>
		</table>
		<table name="merci" >
			<column name="codice" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="merce" type="varchar" length="255" decimal="0" jt="12" />
			<column name="codcategoria" type="integer" length="10" decimal="0" jt="4" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="flgportale" type="char" length="1" decimal="0" jt="1" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_merci" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
			<index name="uk_merci" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="naveagenzia" >
			<column name="codnave" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="codagenzia" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_naveagenzia" unique="PRIMARY_KEY" >
				<column name="codnave" />
				<column name="codagenzia" />
			</index>
		</table>
		<table name="navecompagnia" >
			<column name="codnave" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="codcompagnia" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_navecompagnia" unique="PRIMARY_KEY" >
				<column name="codnave" />
				<column name="codcompagnia" />
			</index>
		</table>
		<table name="navi" >
			<column name="codnave" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="desnave" type="varchar" length="60" decimal="0" jt="12" />
			<column name="viaggionave" type="varchar" length="20" decimal="0" jt="12" />
			<column name="dataviaggio" type="timestamp" decimal="6" jt="93" />
			<column name="flgdefinitiva" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="pol" type="varchar" length="5" decimal="0" jt="12" />
			<column name="pod" type="varchar" length="5" decimal="0" jt="12" />
			<column name="codcompagnia" type="varchar" length="6" decimal="0" jt="12" />
			<column name="codlinea" type="varchar" length="5" decimal="0" jt="12" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" />
			<column name="lastdateassigned" type="timestamp" decimal="6" jt="93" />
			<column name="teus" type="smallint" length="5" decimal="0" jt="5" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="codclientecontabile" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codgruppo" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_navi" unique="PRIMARY_KEY" >
				<column name="codnave" />
			</index>
			<index name="ix_navi" unique="NORMAL" >
				<column name="desnave" />
			</index>
		</table>
		<table name="porti" >
			<column name="codporto" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="desporto" type="varchar" length="255" decimal="0" jt="12" />
			<column name="state" type="varchar" length="25" decimal="0" jt="12" />
			<column name="country" type="varchar" length="25" decimal="0" jt="12" />
			<column name="codzona" type="varchar" length="6" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="flgaerea" type="varchar" length="1" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="codiso" type="varchar" length="3" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_porti_1" unique="PRIMARY_KEY" >
				<column name="codporto" />
			</index>
			<index name="ix_porti" unique="NORMAL" >
				<column name="desporto" />
			</index>
		</table>
		<table name="pr_agentiiata" >
			<column name="codiceiata" type="varchar" length="15" decimal="0" jt="12" mandatory="y" />
			<column name="agente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="indirizzoagente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="indirizzo1agente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="numaccount" type="varchar" length="20" decimal="0" jt="12" />
			<column name="compagniaaerea" type="varchar" length="6" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="sqlpropk_custom_tm_logisticpr_agentiiata" unique="PRIMARY_KEY" >
				<column name="codiceiata" />
			</index>
		</table>
		<table name="pr_clifo" >
			<column name="codice" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" />
			<column name="ragionesoc" type="varchar" length="55" decimal="0" jt="12" />
			<column name="fatturarea" type="varchar" length="10" decimal="0" jt="12" />
			<column name="indir1" type="varchar" length="50" decimal="0" jt="12" />
			<column name="indir2" type="varchar" length="50" decimal="0" jt="12" />
			<column name="cap" type="varchar" length="6" decimal="0" jt="12" />
			<column name="localita" type="varchar" length="50" decimal="0" jt="12" />
			<column name="comune" type="varchar" length="50" decimal="0" jt="12" />
			<column name="provincia" type="varchar" length="2" decimal="0" jt="12" />
			<column name="nazione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="statointra" type="varchar" length="1" decimal="0" jt="12" />
			<column name="cofi" type="varchar" length="16" decimal="0" jt="12" />
			<column name="paiv" type="varchar" length="12" decimal="0" jt="12" />
			<column name="tel" type="varchar" length="40" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="40" decimal="0" jt="12" />
			<column name="codpag" type="varchar" length="4" decimal="0" jt="12" />
			<column name="lingua" type="varchar" length="1" decimal="0" jt="12" />
			<column name="codval" type="varchar" length="3" decimal="0" jt="12" />
			<column name="stato" type="varchar" length="1" decimal="0" jt="12" />
			<column name="codicecontabile" type="varchar" length="15" decimal="0" jt="12" />
			<column name="flgesente" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="condizione" type="varchar" length="3" decimal="0" jt="12" />
			<column name="coddichiarante" type="varchar" length="11" decimal="0" jt="12" />
			<column name="codicezona" type="varchar" length="2" decimal="0" jt="12" />
			<column name="flgfax" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="destfax" type="varchar" length="50" decimal="0" jt="12" />
			<column name="orafax" type="varchar" length="2" decimal="0" jt="12" />
			<column name="minfax" type="varchar" length="2" decimal="0" jt="12" />
			<column name="prioritafax" type="varchar" length="10" decimal="0" jt="12" />
			<column name="datifax" type="varchar" length="255" decimal="0" jt="12" />
			<column name="e_mailaddress" type="varchar" length="200" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="flgestero" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgdoc" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flgxra" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flgmail" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="codtariffaimpmarefob" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[65]]></defo>
			</column>
			<column name="codtariffaexpmarefob" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[56]]></defo>
			</column>
			<column name="codtariffaimpaereofob" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[58]]></defo>
			</column>
			<column name="codtariffaexpaereofob" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[10]]></defo>
			</column>
			<column name="flgpreferenziale" type="char" length="1" decimal="0" jt="1" />
			<column name="codtariffaimpmarecif" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[65]]></defo>
			</column>
			<column name="codtariffaexpmarecif" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[56]]></defo>
			</column>
			<column name="codtariffaimpaereocif" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[58]]></defo>
			</column>
			<column name="codtariffaexpaereocif" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[10]]></defo>
			</column>
			<column name="flgss" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['1'::bpchar]]></defo>
			</column>
			<column name="flgff" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['1'::bpchar]]></defo>
			</column>
			<column name="flgbloccocliente" type="char" length="1" decimal="0" jt="1" />
			<column name="datablocco" type="timestamp" decimal="6" jt="93" />
			<column name="flgbaf" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['1'::bpchar]]></defo>
			</column>
			<column name="flgcaf" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['1'::bpchar]]></defo>
			</column>
			<column name="responsabilecommerciale" type="varchar" length="200" decimal="0" jt="12" />
			<column name="codtariffaexwmare" type="integer" length="10" decimal="0" jt="4" />
			<column name="codtariffaexwaereo" type="integer" length="10" decimal="0" jt="4" />
			<column name="contattooperativo" type="varchar" length="50" decimal="0" jt="12" />
			<column name="teloperativo" type="varchar" length="30" decimal="0" jt="12" />
			<column name="percaumentovolume" type="numeric" length="18" decimal="2" jt="2" />
			<column name="flgcodinibito" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgenac" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="warehouseopentime1" type="varchar" length="5" decimal="0" jt="12" />
			<column name="warehouseopentime2" type="varchar" length="5" decimal="0" jt="12" />
			<column name="warehouseopentime3" type="varchar" length="5" decimal="0" jt="12" />
			<column name="warehouseopentime4" type="varchar" length="5" decimal="0" jt="12" />
			<column name="emailinviodocumenti" type="varchar" length="200" decimal="0" jt="12" />
			<column name="flgssimport" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flgffimport" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flgpssimport" type="char" length="1" decimal="0" jt="1" />
			<column name="flgcambiodoganale" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="dataallegatob" type="timestamp" decimal="6" jt="93" />
			<column name="codcorrispondente" type="varchar" length="5" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_pr_clifo" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
		</table>
		<table name="pr_compagnie" >
			<column name="codcompagnia" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="ragsocialecompagnia" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzo1" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzo2" type="varchar" length="35" decimal="0" jt="12" />
			<column name="piva" type="varchar" length="13" decimal="0" jt="12" />
			<column name="telefono" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="telex" type="varchar" length="20" decimal="0" jt="12" />
			<column name="numteus" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgbooking" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="senseria" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codclientecontabile" type="varchar" length="10" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="flgaerea" type="varchar" length="1" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="codiceaerea1" type="varchar" length="3" decimal="0" jt="12" />
			<column name="codiceaerea2" type="varchar" length="3" decimal="0" jt="12" />
			<column name="scortaminawb" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codtariffamasteraereoflr" type="integer" length="10" decimal="0" jt="4" />
			<column name="codtariffamasteraereomil" type="integer" length="10" decimal="0" jt="4" />
			<column name="personariferimento" type="varchar" length="200" decimal="0" jt="12" />
			<column name="cellriferimento" type="varchar" length="100" decimal="0" jt="12" />
			<column name="emailriferimento" type="varchar" length="100" decimal="0" jt="12" />
			<column name="importofue" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importosec" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importofueusd" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importosecusd" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_pr_compagnie" unique="PRIMARY_KEY" >
				<column name="codcompagnia" />
			</index>
			<index name="ix_compagnie" unique="NORMAL" >
				<column name="ragsocialecompagnia" />
			</index>
		</table>
		<table name="pr_tipodoc" >
			<column name="tipodoc" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="desdoc" type="varchar" length="35" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_pr_tipodoc" unique="PRIMARY_KEY" >
				<column name="tipodoc" />
			</index>
		</table>
		<table name="precorpofatt" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="contatore" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progrriga" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="40" decimal="0" jt="12" />
			<column name="tipocalcolo" type="varchar" length="1" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="qta" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="prezzo" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="percmoltiplicatorenoli" type="numeric" length="12" decimal="4" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importo" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva" type="varchar" length="5" decimal="0" jt="12" />
			<column name="contropartita" type="varchar" length="16" decimal="0" jt="12" />
			<column name="codvoceanaliticatp" type="varchar" length="4" decimal="0" jt="12" />
			<column name="importocalcperc" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="percadd" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="gruppovoci" type="varchar" length="3" decimal="0" jt="12" />
			<column name="descrizioneaggnoli" type="varchar" length="50" decimal="0" jt="12" />
			<column name="qtanoli" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgnoli95" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="perciva" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="numconto" type="varchar" length="10" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgnoli62" type="varchar" length="1" decimal="0" jt="12" />
			<column name="utenteinserimento" type="varchar" length="10" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_precorpofatt" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="contatore" />
				<column name="progrriga" />
				<column name="codfiliale" />
			</index>
		</table>
		<table name="pretestafatt" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="contatore" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="codutente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="annofattura" type="varchar" length="4" decimal="0" jt="12" />
			<column name="cod_causale" type="varchar" length="4" decimal="0" jt="12" />
			<column name="tipodoc" type="varchar" length="2" decimal="0" jt="12" />
			<column name="numrif" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="ragionesoc" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codcliente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="cod_anag" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importofatt" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="datacompetenzafattura" type="timestamp" decimal="6" jt="93" />
			<column name="flglinguavoce" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="oggetto" type="text" decimal="0" jt="12" />
			<column name="numriferimentoesterno" type="varchar" length="250" decimal="0" jt="12" />
			<column name="coddestinazione" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialedestinazione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzodestinazione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzodestinazione2" type="varchar" length="35" decimal="0" jt="12" />
			<column name="capdestinazione" type="varchar" length="5" decimal="0" jt="12" />
			<column name="localitadestinazione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="pvdestinazione" type="varchar" length="2" decimal="0" jt="12" />
			<column name="numerocopie" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codpagamento" type="varchar" length="4" decimal="0" jt="12" />
			<column name="codvaluta" type="varchar" length="3" decimal="0" jt="12" />
			<column name="codbanca" type="varchar" length="40" decimal="0" jt="12" />
			<column name="abi" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="cab" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importocambio" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="descrizionepiede" type="text" decimal="0" jt="12" />
			<column name="flgfattura" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="prog_destin" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importobollo" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgerrata" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgstampata" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgclientenotabolla" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgassegna" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="desbanca" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tipofatt" type="char" length="1" decimal="0" jt="1" />
			<column name="ndettaglio" type="integer" length="10" decimal="0" jt="4" />
			<column name="totdettagli" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_pretestafatt" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
				<column name="codfiliale" />
				<column name="contatore" />
			</index>
		</table>
		<table name="progressivi" >
			<column name="tipo" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="numero" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_progressivi" unique="PRIMARY_KEY" >
				<column name="tipo" />
				<column name="codfiliale" />
				<column name="codattivita" />
				<column name="anno" />
			</index>
		</table>
		<table name="prospettiquotazioni" >
			<column name="nprospetto" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="nomeprospetto" type="varchar" length="50" decimal="0" jt="12" />
			<column name="prospetto" type="varchar" length="8000" decimal="0" jt="12" />
			<column name="codutente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_prospettiquotazioni" unique="PRIMARY_KEY" >
				<column name="nprospetto" />
			</index>
		</table>
		<table name="ricavi" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="numerorigaricavo" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codcliente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="40" decimal="0" jt="12" />
			<column name="importobase" type="float8" length="17" decimal="17" jt="6" />
			<column name="annofattura" type="varchar" length="4" decimal="0" jt="12" />
			<column name="tipodoc" type="varchar" length="2" decimal="0" jt="12" />
			<column name="numrif" type="integer" length="10" decimal="0" jt="4" />
			<column name="numdocumento" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="datafatturadefinitiva" type="timestamp" decimal="6" jt="93" />
			<column name="JGUID" type="uuid" decimal="0" jt="1111" />
			<index name="pk_ricavi" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
				<column name="codfiliale" />
				<column name="numerorigaricavo" />
			</index>
		</table>
		<table name="tabiva" >
			<column name="codice" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="descrizion" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tipocodice" type="varchar" length="1" decimal="0" jt="12" />
			<column name="codivavent" type="varchar" length="4" decimal="0" jt="12" />
			<column name="percentiva" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="impclienti" type="varchar" length="1" decimal="0" jt="12" />
			<column name="impfornito" type="varchar" length="1" decimal="0" jt="12" />
			<column name="clienti101" type="varchar" length="1" decimal="0" jt="12" />
			<column name="fornito101" type="varchar" length="1" decimal="0" jt="12" />
			<column name="rigavenese" type="varchar" length="1" decimal="0" jt="12" />
			<column name="rigaacqese" type="varchar" length="1" decimal="0" jt="12" />
			<column name="plafond" type="varchar" length="1" decimal="0" jt="12" />
			<column name="agricolo" type="varchar" length="1" decimal="0" jt="12" />
			<column name="agenviaggi" type="varchar" length="1" decimal="0" jt="12" />
			<column name="calrimbann" type="varchar" length="1" decimal="0" jt="12" />
			<column name="detraibile" type="varchar" length="1" decimal="0" jt="12" />
			<column name="allegat_sn" type="varchar" length="1" decimal="0" jt="12" />
			<column name="stato" type="varchar" length="1" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="ult_agg" type="varchar" length="8" decimal="0" jt="12" />
			<column name="intra_sn" type="varchar" length="1" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tabiva" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
		</table>
		<table name="tblview_clifo" >
			<column name="codice" type="varchar" length="10" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['C'::character varying]]></defo>
			</column>
			<column name="i_codpro" type="varchar" length="1" decimal="0" jt="12" />
			<column name="tipo" type="varchar" length="1" decimal="0" jt="12" />
			<column name="ragionesoc" type="varchar" length="100" decimal="0" jt="12" />
			<column name="ragionesoctotale" type="varchar" length="50" decimal="0" jt="12" />
			<column name="ind_anag" type="varchar" length="100" decimal="0" jt="12" />
			<column name="anindir2" type="varchar" length="100" decimal="0" jt="12" />
			<column name="cap_anag" type="varchar" length="15" decimal="0" jt="12" />
			<column name="loc_anag" type="varchar" length="100" decimal="0" jt="12" />
			<column name="prov_anag" type="varchar" length="2" decimal="0" jt="12" />
			<column name="cod_naz" type="varchar" length="2" decimal="0" jt="12" />
			<column name="nacodiso" type="varchar" length="2" decimal="0" jt="12" />
			<column name="descr_naz" type="varchar" length="50" decimal="0" jt="12" />
			<column name="nadesnaz" type="varchar" length="50" decimal="0" jt="12" />
			<column name="nazionalita" type="varchar" length="50" decimal="0" jt="12" />
			<column name="nazionalita2" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tel_anag1" type="varchar" length="40" decimal="0" jt="12" />
			<column name="fax_anag" type="varchar" length="40" decimal="0" jt="12" />
			<column name="email" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="cod_fisc" type="varchar" length="20" decimal="0" jt="12" />
			<column name="p_iva" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cod_pagam" type="varchar" length="10" decimal="0" jt="12" />
			<column name="descr_banca" type="varchar" length="50" decimal="0" jt="12" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="ancodval" type="varchar" length="4" decimal="0" jt="12" />
			<column name="ancatcon" type="varchar" length="4" decimal="0" jt="12" />
			<column name="cod_iva" type="varchar" length="4" decimal="0" jt="12" />
			<column name="denominaz_2" type="varchar" length="50" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgsconto" type="varchar" length="1" decimal="0" jt="12" />
			<column name="cl_cauiva" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cl_numdic" type="integer" length="10" decimal="0" jt="4" />
			<column name="cl_annodic" type="varchar" length="10" decimal="0" jt="12" />
			<column name="pivastampafattura" type="varchar" length="20" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="banca" type="varchar" length="50" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="cl_iso" type="varchar" length="20" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="codutente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="flgmoroso" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgivagarantitadafresco" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgaeo" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="dataultimamodifica2" type="timestamp" decimal="6" jt="93" />
			<column name="userultimamodifica2" type="varchar" length="128" decimal="0" jt="12" />
			<column name="isfattsupallet" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgrapfiscali" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codintercompany" type="varchar" length="8" decimal="0" jt="12" />
			<column name="annoultimaquotazione" type="integer" length="10" decimal="0" jt="4" />
			<column name="flgesentepagamento" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="campo48a_default" type="varchar" length="7" decimal="0" jt="12" />
			<column name="num_iscriz_albo_trasp" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an__note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="anconsup" type="varchar" length="7" decimal="0" jt="12" />
			<column name="antipcon" type="varchar" length="7" decimal="0" jt="12" />
			<column name="codclientecollegato" type="varchar" length="10" decimal="0" jt="12" />
			<column name="tipofatt" type="varchar" length="1" decimal="0" jt="12" />
			<column name="cod_cliente" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_view_clifo" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
		</table>
		<table name="testafatt" >
			<column name="annofattura" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="contatore" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="tipodoc" type="varchar" length="2" decimal="0" jt="12" />
			<column name="codutente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="contatorepref" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codcliente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="ragionesoc" type="varchar" length="100" decimal="0" jt="12" />
			<column name="cod_anag" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codpagamento" type="varchar" length="4" decimal="0" jt="12" />
			<column name="numriferimentoesterno" type="varchar" length="250" decimal="0" jt="12" />
			<column name="coddestinazione" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialedestinazione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzodestinazione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzodestinazione2" type="varchar" length="35" decimal="0" jt="12" />
			<column name="capdestinazione" type="varchar" length="6" decimal="0" jt="12" />
			<column name="localitadestinazione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="pvdestinazione" type="varchar" length="2" decimal="0" jt="12" />
			<column name="flglinguavoce" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="codvaluta" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importobollo" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codbanca" type="varchar" length="10" decimal="0" jt="12" />
			<column name="abi" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="cab" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importocambio" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="oggetto" type="text" decimal="0" jt="12" />
			<column name="descrizionepiede" type="text" decimal="0" jt="12" />
			<column name="seriedocumento" type="varchar" length="4" decimal="0" jt="12" >
				<defo><![CDATA['C'::character varying]]></defo>
			</column>
			<column name="numdocumento" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="datafatturadefinitiva" type="timestamp" decimal="6" jt="93" />
			<column name="flgstampata" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgcontabilizzata" type="varchar" length="50" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="importofatt" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codregistroiva" type="varchar" length="2" decimal="0" jt="12" />
			<column name="datacompetenzafattura" type="timestamp" decimal="6" jt="93" />
			<column name="cod_causale" type="varchar" length="4" decimal="0" jt="12" />
			<column name="flgerrata" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgesportata" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="numerocopie" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codvalutacontabilita" type="varchar" length="2" decimal="0" jt="12" />
			<column name="note1" type="varchar" length="45" decimal="0" jt="12" />
			<column name="note2" type="varchar" length="45" decimal="0" jt="12" />
			<column name="commessa" type="varchar" length="20" decimal="0" jt="12" />
			<column name="codiva1" type="varchar" length="5" decimal="0" jt="12" />
			<column name="imponibile1" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="imposta1" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva2" type="varchar" length="5" decimal="0" jt="12" />
			<column name="imponibile2" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="imposta2" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva3" type="varchar" length="5" decimal="0" jt="12" />
			<column name="imponibile3" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="imposta3" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva4" type="varchar" length="5" decimal="0" jt="12" />
			<column name="imponibile4" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="imposta4" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva5" type="varchar" length="5" decimal="0" jt="12" />
			<column name="imponibile5" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="imposta5" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codiva6" type="varchar" length="5" decimal="0" jt="12" />
			<column name="imponibile6" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="imposta6" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="numpn" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgclientenotabolla" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="prog_destin" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgricontabilizza" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="desbanca" type="varchar" length="50" decimal="0" jt="12" />
			<column name="filialeeolog" type="varchar" length="3" decimal="0" jt="12" >
				<defo><![CDATA['MIL'::character varying]]></defo>
			</column>
			<column name="typeexport" type="varchar" length="1" decimal="0" jt="12" />
			<column name="po" type="varchar" length="100" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="flgassegna" type="varchar" length="2" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dataincasso" type="timestamp" decimal="6" jt="93" />
			<column name="idstatoinviofe" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_testafattold" unique="PRIMARY_KEY" >
				<column name="annofattura" />
				<column name="contatore" />
				<column name="codfiliale" />
			</index>
		</table>
		<table name="testafatt_campioni" >
			<column name="annofattura" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="numrif" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="flgtipopreffatt" type="varchar" length="1" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="descrizionecampione" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tipodoc" type="varchar" length="2" decimal="0" jt="12" />
			<column name="codutente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="codcliente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="cod_anag" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="ragionesoc" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codpagamento" type="varchar" length="4" decimal="0" jt="12" />
			<column name="numriferimentoesterno" type="varchar" length="250" decimal="0" jt="12" />
			<column name="coddestinazione" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialedestinazione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzodestinazione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzodestinazione2" type="varchar" length="35" decimal="0" jt="12" />
			<column name="capdestinazione" type="varchar" length="5" decimal="0" jt="12" />
			<column name="localitadestinazione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="pvdestinazione" type="varchar" length="2" decimal="0" jt="12" />
			<column name="flglinguavoce" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="codvaluta" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importobollo" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codbanca" type="varchar" length="10" decimal="0" jt="12" />
			<column name="abi" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="cab" type="varchar" length="5" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="importocambio" type="numeric" length="18" decimal="5" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="oggetto" type="text" decimal="0" jt="12" />
			<column name="descrizionepiede" type="text" decimal="0" jt="12" />
			<column name="importofatt" type="numeric" length="18" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codregistroiva" type="varchar" length="2" decimal="0" jt="12" />
			<column name="datacompetenzafattura" type="timestamp" decimal="6" jt="93" />
			<column name="cod_causale" type="varchar" length="4" decimal="0" jt="12" />
			<column name="numerocopie" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codvalutacontabilita" type="varchar" length="2" decimal="0" jt="12" />
			<column name="note1" type="varchar" length="45" decimal="0" jt="12" />
			<column name="note2" type="varchar" length="45" decimal="0" jt="12" />
			<column name="flgclientenotabolla" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="prog_destin" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="desbanca" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_testafatt_campioni" unique="PRIMARY_KEY" >
				<column name="annofattura" />
				<column name="numrif" />
				<column name="codfiliale" />
				<column name="flgtipopreffatt" />
			</index>
			<index name="ix_testafatt_campioni" unique="UNIQUE_KEY" >
				<column name="descrizionecampione" />
			</index>
		</table>
		<table name="testaft" >
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codcliente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="ragionesoc" type="varchar" length="50" decimal="0" jt="12" />
			<column name="cod_anag" type="integer" length="10" decimal="0" jt="4" />
			<column name="codpagamento" type="varchar" length="4" decimal="0" jt="12" />
			<column name="codvaluta" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importobollo" type="numeric" length="18" decimal="5" jt="2" />
			<column name="codbanca" type="varchar" length="10" decimal="0" jt="12" />
			<column name="abi" type="varchar" length="5" decimal="0" jt="12" />
			<column name="cab" type="varchar" length="5" decimal="0" jt="12" />
			<column name="importocambio" type="numeric" length="18" decimal="5" jt="2" />
			<column name="oggetto" type="text" decimal="0" jt="12" />
			<column name="flgesportata" type="varchar" length="1" decimal="0" jt="12" />
			<column name="desbanca" type="varchar" length="50" decimal="0" jt="12" />
			<column name="commessa" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dataaperturapratica" type="timestamp" decimal="6" jt="93" />
			<column name="tipofatt" type="char" length="1" decimal="0" jt="1" />
			<column name="tipocondizione" type="varchar" length="3" decimal="0" jt="12" />
			<column name="numawb" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_testaft" unique="PRIMARY_KEY" >
				<column name="codfiliale" />
				<column name="anno" />
				<column name="codattivita" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
			</index>
		</table>
		<table name="testatapratiche" >
			<column name="anno" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="progressivo" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="progressivopraticagroupage" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="dataaperturapratica" type="timestamp" decimal="6" jt="93" />
			<column name="typeexport" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['1'::character varying]]></defo>
			</column>
			<column name="tipocompleto" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['1'::character varying]]></defo>
			</column>
			<column name="codnavegruppo" type="varchar" length="5" decimal="0" jt="12" />
			<column name="codnave" type="varchar" length="5" decimal="0" jt="12" />
			<column name="viaggionave" type="varchar" length="20" decimal="0" jt="12" />
			<column name="codnaveii" type="varchar" length="5" decimal="0" jt="12" />
			<column name="datanave" type="timestamp" decimal="6" jt="93" />
			<column name="datanavearrivo" type="timestamp" decimal="6" jt="93" />
			<column name="codcompagnia" type="varchar" length="6" decimal="0" jt="12" />
			<column name="codagenzia" type="varchar" length="6" decimal="0" jt="12" />
			<column name="pol" type="varchar" length="5" decimal="0" jt="12" />
			<column name="pod" type="varchar" length="5" decimal="0" jt="12" />
			<column name="codclientecontabile" type="varchar" length="15" decimal="0" jt="12" />
			<column name="cod_anag" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="note" type="text" decimal="0" jt="12" />
			<column name="fd" type="varchar" length="40" decimal="0" jt="12" />
			<column name="flgpraticadefinitiva" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['2'::character varying]]></defo>
			</column>
			<column name="flgnavesalpata" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="utente" type="varchar" length="20" decimal="0" jt="12" />
			<column name="totcntr20" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="totcntr40" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="filialecompetenza" type="varchar" length="5" decimal="0" jt="12" />
			<column name="documento1" type="text" decimal="0" jt="12" />
			<column name="documento2" type="text" decimal="0" jt="12" />
			<column name="flgdocumento1" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgdocumento2" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="dataaperturapraticadautente" type="timestamp" decimal="6" jt="93" />
			<column name="utenteultimamodifica" type="varchar" length="20" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="annoofferta" type="varchar" length="4" decimal="0" jt="12" />
			<column name="progressivoofferta" type="integer" length="10" decimal="0" jt="4" />
			<column name="commessa" type="varchar" length="20" decimal="0" jt="12" />
			<column name="noteinternet" type="text" decimal="0" jt="12" />
			<column name="noteinland" type="text" decimal="0" jt="12" />
			<column name="servicecontract" type="varchar" length="25" decimal="0" jt="12" />
			<column name="levelcode" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="dataspedizionerichiesta" type="timestamp" decimal="6" jt="93" />
			<column name="datatran" type="timestamp" decimal="6" jt="93" />
			<column name="datanavedefinitiva" type="timestamp" decimal="6" jt="93" />
			<column name="annoquotazione" type="varchar" length="4" decimal="0" jt="12" />
			<column name="progressivoquotazione" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgimportacosti" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgimportaprefattura" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgassegna" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="utenteassegna" type="varchar" length="20" decimal="0" jt="12" />
			<column name="codair2" type="varchar" length="5" decimal="0" jt="12" />
			<column name="numawb" type="varchar" length="20" decimal="0" jt="12" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgcod" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="importocod" type="numeric" length="9" decimal="2" jt="2" />
			<column name="flgincassatocod" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="codvalutacod" type="varchar" length="3" decimal="0" jt="12" />
			<column name="flggeneratahouse" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flggeneratamaster" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="dataconsegna" type="timestamp" decimal="6" jt="93" />
			<column name="oraconsegna" type="varchar" length="20" decimal="0" jt="12" />
			<column name="personaconsegna" type="varchar" length="100" decimal="0" jt="12" />
			<column name="noteconsegna" type="text" decimal="0" jt="12" />
			<column name="agente" type="varchar" length="50" decimal="0" jt="12" />
			<column name="flgdelivery" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="commessaimport" type="varchar" length="50" decimal="0" jt="12" />
			<column name="flgassicurazione" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="flgcreatafattura" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgmagazzino" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="flg2classe" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flgcities" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgfumi" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgfatturabile" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="utentecontrollo" type="varchar" length="20" decimal="0" jt="12" />
			<column name="flgtriangolazione" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="filialeeolog" type="char" length="3" decimal="0" jt="1" />
			<column name="noteinterne" type="varchar" length="255" decimal="0" jt="12" />
			<column name="giornimagazzinaggio" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="numerolicenzescaricate" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgsec" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="coddichiarantedoganale" type="varchar" length="30" decimal="0" jt="12" />
			<column name="flgdichiarazionemercesicura" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flgtriangolazione2" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgseaair" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="codnaveseaair" type="varchar" length="5" decimal="0" jt="12" />
			<column name="polseaair" type="varchar" length="5" decimal="0" jt="12" />
			<column name="podseaair" type="varchar" length="5" decimal="0" jt="12" />
			<column name="dataarrivoseaair" type="timestamp" decimal="6" jt="93" />
			<column name="datapartenzaseaair" type="timestamp" decimal="6" jt="93" />
			<column name="flgtriangolazione3" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="noteinterne2" type="varchar" length="255" decimal="0" jt="12" />
			<column name="noteinterne3" type="varchar" length="255" decimal="0" jt="12" />
			<column name="noteinterne4" type="varchar" length="255" decimal="0" jt="12" />
			<column name="oraarrivo" type="varchar" length="20" decimal="0" jt="12" />
			<column name="dataarrivofiliale" type="timestamp" decimal="6" jt="93" />
			<column name="oraarrivofiliale" type="varchar" length="20" decimal="0" jt="12" />
			<column name="datasdoganamento" type="timestamp" decimal="6" jt="93" />
			<column name="orasdoganamento" type="varchar" length="20" decimal="0" jt="12" />
			<column name="datapickup" type="timestamp" decimal="6" jt="93" />
			<column name="orapickup" type="varchar" length="20" decimal="0" jt="12" />
			<column name="dataprevistaconsegna" type="timestamp" decimal="6" jt="93" />
			<column name="flgpodspedito" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="oraprevistaconsegna" type="varchar" length="20" decimal="0" jt="12" />
			<column name="flgaerea" type="char" length="2" decimal="0" jt="1" />
			<column name="notemagazzino" type="varchar" length="250" decimal="0" jt="12" />
			<column name="flgvisibileinternet" type="char" length="1" decimal="0" jt="1" />
			<column name="flgterra" type="char" length="1" decimal="0" jt="1" />
			<column name="responsabilecommerciale" type="varchar" length="100" decimal="0" jt="12" />
			<column name="commessade" type="varchar" length="20" decimal="0" jt="12" />
			<column name="pgde" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_cartella" unique="PRIMARY_KEY" >
				<column name="anno" />
				<column name="progressivo" />
				<column name="progressivopraticagroupage" />
				<column name="codattivita" />
				<column name="codfiliale" />
			</index>
			<index name="testatapratiche_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="mawb" unique="NORMAL" >
				<column name="numawb" />
			</index>
		</table>
		<table name="tidofatt" >
			<column name="codice" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="descrizioneita" type="varchar" length="30" decimal="0" jt="12" />
			<column name="descrizioneest" type="varchar" length="30" decimal="0" jt="12" />
			<column name="cod_causale" type="varchar" length="4" decimal="0" jt="12" />
			<column name="tipodoc" type="char" length="10" decimal="0" jt="1" />
			<column name="descrizionede" type="varchar" length="30" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tidofatt" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
		</table>
		<table name="tipi_documento" >
			<column name="tipodocumento" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="descrizione" type="varchar" length="35" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipi_documenti" unique="PRIMARY_KEY" >
				<column name="tipodocumento" />
			</index>
			<index name="ix_descizionedocumento" unique="UNIQUE_KEY" >
				<column name="descrizione" />
			</index>
		</table>
		<table name="tipicalcolo" >
			<column name="tipocalcolo" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="descrizione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="field_um" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_qta" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_prezzo" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_importo" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_civa" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_perc_noli" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_perc_importo" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_cod_iva" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_num_pratica1" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_num_pratica2" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_contropartita" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_data_allibramento" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_data_consegna" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_num_giorni" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_resa" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_cod_merce" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="field_prov_dest" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="calc_perc" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="calc_percsurigp" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flg_contropartita" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipicalcolo" unique="PRIMARY_KEY" >
				<column name="tipocalcolo" />
			</index>
		</table>
		<table name="tipidichiarazioni" >
			<column name="tipodichiarazione" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="descrizione" type="varchar" length="20" decimal="0" jt="12" />
			<column name="regime" type="varchar" length="4" decimal="0" jt="12" />
			<column name="impexp" type="varchar" length="1" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipidichiarazioni" unique="PRIMARY_KEY" >
				<column name="tipodichiarazione" />
			</index>
		</table>
		<table name="tipipolizza" >
			<column name="codtipo" type="char" length="2" decimal="0" jt="1" mandatory="y" />
			<column name="destipo" type="char" length="30" decimal="0" jt="1" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipipolizza" unique="PRIMARY_KEY" >
				<column name="codtipo" />
			</index>
		</table>
		<table name="tipiriga" >
			<column name="tiporiga" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="desriga" type="varchar" length="25" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipiriga" unique="PRIMARY_KEY" >
				<column name="tiporiga" />
			</index>
		</table>
		<table name="tipitariffe" >
			<column name="descrizione" type="varchar" length="50" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipitariffe" unique="PRIMARY_KEY" >
				<column name="descrizione" />
			</index>
		</table>
		<table name="tipocntrs" >
			<column name="codcntr" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="descntr" type="varchar" length="40" decimal="0" jt="12" />
			<column name="sizcntr" type="varchar" length="2" decimal="0" jt="12" />
			<column name="tara" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="maxweight" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="maxvolume" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="lunghezza" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="larghezza" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="altezza" type="float8" length="17" decimal="17" jt="6" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="descntrbreve" type="varchar" length="5" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipocntrs" unique="PRIMARY_KEY" >
				<column name="codcntr" />
			</index>
		</table>
		<table name="tipodoc" >
			<column name="tipodoc" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="desdoc" type="varchar" length="35" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipodoc" unique="PRIMARY_KEY" >
				<column name="tipodoc" />
			</index>
		</table>
		<table name="tipodocarchiviati" >
			<column name="tipodoc" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="descrizione" type="varchar" length="25" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_tipodocarchiviati" unique="PRIMARY_KEY" >
				<column name="tipodoc" />
			</index>
		</table>
		<table name="translate_db_users" >
			<comment><![CDATA[This table Translates users from TMLogistic old application and New Application]]></comment>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="old_user" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<index name="translate_db_users_pkey" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
				<column name="old_user" />
			</index>
		</table>
		<table name="uffici" >
			<column name="codufficio" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="desufficio" type="varchar" length="30" decimal="0" jt="12" />
			<column name="datainserimento" type="timestamp" decimal="6" jt="93" />
			<column name="codutente" type="varchar" length="15" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="15" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_uffici" unique="PRIMARY_KEY" >
				<column name="codufficio" />
			</index>
			<index name="ix_desufficio" unique="UNIQUE_KEY" >
				<column name="desufficio" />
			</index>
		</table>
		<table name="unitamisura" >
			<column name="unitamisura" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="descrizione" type="varchar" length="20" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_unitamisura" unique="PRIMARY_KEY" >
				<column name="unitamisura" />
			</index>
		</table>
		<table name="utenti" >
			<column name="codice" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="descrizion" type="varchar" length="40" decimal="0" jt="12" />
			<column name="password" type="varchar" length="12" decimal="0" jt="12" />
			<column name="codfiliale" type="varchar" length="2" decimal="0" jt="12" />
			<column name="flgsupervisore" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="codattivita" type="varchar" length="1" decimal="0" jt="12" />
			<column name="email" type="varchar" length="50" decimal="0" jt="12" />
			<column name="telefono" type="varchar" length="60" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="30" decimal="0" jt="12" />
			<column name="flganapratiche" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flganafatture" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgchiudipratica" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgfiliale" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="flgfilialecif" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="personalpage" type="varchar" length="50" decimal="0" jt="12" />
			<column name="inizialiutente" type="varchar" length="5" decimal="0" jt="12" />
			<column name="progressivoofferta" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flgaggcomm" type="varchar" length="1" decimal="0" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="filialeeolog" type="char" length="3" decimal="0" jt="1" />
			<column name="flgvisit" type="char" length="1" decimal="0" jt="1" />
			<column name="flgabilitato" type="char" length="1" decimal="0" jt="1" />
			<column name="flgofferte" type="char" length="1" decimal="0" jt="1" />
			<column name="odbcd" type="varchar" length="20" decimal="0" jt="12" />
			<column name="flgquotsoloutente" type="char" length="1" decimal="0" jt="1" />
			<column name="flgfilialeofferta" type="char" length="1" decimal="0" jt="1" />
			<column name="flgsupervisorecif" type="char" length="1" decimal="0" jt="1" />
			<column name="flganagrafichenew" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['0'::bpchar]]></defo>
			</column>
			<column name="flgportale" type="char" length="1" decimal="0" jt="1" />
			<column name="contatore" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="dataultimoacceso" type="timestamp" decimal="6" jt="93" />
			<column name="idutente" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_utenti" unique="PRIMARY_KEY" >
				<column name="codice" />
			</index>
		</table>
		<table name="valute" >
			<column name="codvaluta" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="desvaluta" type="varchar" length="35" decimal="0" jt="12" />
			<column name="cambiostandard" type="numeric" length="18" decimal="5" jt="2" />
			<column name="cambiominimo" type="numeric" length="18" decimal="5" jt="2" />
			<column name="cambiomassimo" type="numeric" length="18" decimal="5" jt="2" />
			<column name="dataaggiornamento" type="date" length="13" decimal="0" jt="91" />
			<column name="flgattiva" type="char" length="1" decimal="0" jt="1" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="pk_valute" unique="PRIMARY_KEY" >
				<column name="codvaluta" />
			</index>
		</table>
		<table name="vettori" >
			<column name="codvettore" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="ragsociale" type="varchar" length="35" decimal="0" jt="12" />
			<column name="indirizzo1" type="varchar" length="35" decimal="0" jt="12" />
			<column name="cap" type="varchar" length="5" decimal="0" jt="12" />
			<column name="provincia" type="varchar" length="2" decimal="0" jt="12" />
			<column name="localita" type="varchar" length="35" decimal="0" jt="12" />
			<column name="utente" type="varchar" length="8" decimal="0" jt="12" />
			<column name="utenteultimamodifica" type="varchar" length="8" decimal="0" jt="12" />
			<column name="dataultimamodifica" type="timestamp" decimal="6" jt="93" />
			<column name="email" type="varchar" length="50" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_vettori" unique="PRIMARY_KEY" >
				<column name="codvettore" />
			</index>
		</table>
		<view name="new_docarchiviatientrate_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT h.id AS doc_id,
    h.doc_date,
    (((('documents'::text || '/'::text) || date_part('year'::text, h.doc_date)) || '/'::text) || lpad((date_part('month'::text, h.doc_date))::text, 2, '0'::text)) AS doc_path,
    d.nomefile,
    d.tipodoc,
    d.path,
        CASE
            WHEN (d.flgvisibile = 'S'::bpchar) THEN true
            ELSE false
        END AS internet_visible,
    d.codutente,
    c.directory_id,
    "substring"((d.nomefile)::text, (length((d.nomefile)::text) - 3), 1) AS p,
    (
        CASE
            WHEN ("substring"((d.nomefile)::text, (length((d.nomefile)::text) - 3), 1) = '.'::text) THEN ''::text
            ELSE '.'::text
        END || "substring"((d.nomefile)::text, (length((d.nomefile)::text) - 3), 4)) AS file_ext,
    d.jguid
   FROM (((documents.heads h
     JOIN custom_tm_logistic.entrate e ON ((e.jguid = h.jguid)))
     JOIN custom_tm_logistic.docarchiviatientrate d ON (((e.anno = d.anno) AND (d.num_entrata = e.num_entrata) AND (d.pg = e.pg))))
     JOIN cloud.directories c ON ((((c.directory_name)::text = (((('documents'::text || '/'::text) || date_part('year'::text, h.doc_date)) || '/'::text) || lpad((date_part('month'::text, h.doc_date))::text, 2, '0'::text))) AND (c.db_schema_id = 33))))
  WHERE (NOT (EXISTS ( SELECT 1
           FROM cloud.blob_files f
          WHERE (f.jguid = d.jguid))));]]></view_script>
			<column name="doc_id" type="bigint" />
			<column name="doc_date" type="date" />
			<column name="doc_path" type="text" />
			<column name="nomefile" type="varchar" />
			<column name="tipodoc" type="varchar" />
			<column name="path" type="varchar" />
			<column name="internet_visible" type="boolean" />
			<column name="codutente" type="varchar" />
			<column name="directory_id" type="bigint" />
			<column name="p" type="text" />
			<column name="file_ext" type="text" />
			<column name="jguid" type="uuid" />
		</view>
		<view name="new_docarchiviatipratiche_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT h.id AS doc_id,
    h.workdate,
    (((('workflows'::text || '/'::text) || date_part('year'::text, h.workdate)) || '/'::text) || lpad((date_part('month'::text, h.workdate))::text, 2, '0'::text)) AS doc_path,
    d.nomefile,
    d.tipodoc,
    d.path,
        CASE
            WHEN (d.flgvisibile = 'S'::bpchar) THEN true
            ELSE false
        END AS internet_visible,
    d.codutente,
    c.directory_id,
    "substring"((d.nomefile)::text, (length((d.nomefile)::text) - 3), 1) AS p,
    (
        CASE
            WHEN ("substring"((d.nomefile)::text, (length((d.nomefile)::text) - 3), 1) = '.'::text) THEN ''::text
            ELSE '.'::text
        END || "substring"((d.nomefile)::text, (length((d.nomefile)::text) - 3), 4)) AS file_ext,
    d.jguid
   FROM (((workflow.workflows h
     JOIN custom_tm_logistic.testatapratiche e ON ((e.jguid = h.jguid)))
     JOIN custom_tm_logistic.documentiarchiviati d ON ((((e.anno)::text = (d.anno)::text) AND (d.progressivo = e.progressivo) AND (d.progressivopraticagroupage = e.progressivopraticagroupage) AND ((e.codattivita)::text = (d.codattivita)::text) AND ((e.codfiliale)::text = (d.codfiliale)::text))))
     JOIN cloud.directories c ON (((c.directory_name)::text = (((('documents'::text || '/'::text) || date_part('year'::text, h.workdate)) || '/'::text) || lpad((date_part('month'::text, h.workdate))::text, 2, '0'::text)))))
  WHERE (NOT (EXISTS ( SELECT 1
           FROM cloud.blob_files f
          WHERE (f.jguid = d.jguid))));]]></view_script>
			<column name="doc_id" type="bigint" />
			<column name="workdate" type="timestamptz" />
			<column name="doc_path" type="text" />
			<column name="nomefile" type="varchar" />
			<column name="tipodoc" type="varchar" />
			<column name="path" type="varchar" />
			<column name="internet_visible" type="boolean" />
			<column name="codutente" type="varchar" />
			<column name="directory_id" type="bigint" />
			<column name="p" type="text" />
			<column name="file_ext" type="text" />
			<column name="jguid" type="uuid" />
		</view>
		<view name="verifiche" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.title,
    a.origin,
    a.destination,
    a.count
   FROM ( SELECT 'Brands'::text AS title,
            'marche'::text AS origin,
            'items.brands'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.marche m
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM items.brands b
                  WHERE (b.jguid = m.jguid))))
        UNION
         SELECT 'packages'::text AS text,
            'imballi'::text AS origin,
            'items.package_types'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.imballi i
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM items.package_types p
                  WHERE (p.jguid = i.jguid))))
        UNION
         SELECT 'compagnie'::text AS text,
            'compagnie'::text AS origin,
            'anagraph.anagraphs'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.compagnie c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid))))
        UNION
         SELECT 'Agenti IATA '::text AS text,
            'agentiiata'::text AS origin,
            'anagraph.anagraphs'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.agentiiata i
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = i.jguid))))
        UNION
         SELECT 'Airlines'::text AS text,
            'compagnie pr_compagnie flgaerea = 1'::text AS origin,
            'anagraph.anagraphs'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.pr_compagnie c
          WHERE (((c.flgaerea)::text = '1'::text) AND (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid)))))
        UNION
         SELECT '16 Warehouses'::text AS text,
            'magazzini'::text AS origin,
            'anagraph.anagraphs 16'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.magazzini c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid))))
        UNION
         SELECT '14 Accounting Customers'::text AS text,
            'clifo pr_clifo'::text AS origin,
            'anagraph.anagraphs 14'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.pr_clifo c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid))))
        UNION
         SELECT '12 ShipOwners '::text AS text,
            'compagnie pr_compagnie flgaerea = 0'::text AS origin,
            'anagraph.anagraphs 12'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.pr_compagnie c
          WHERE ((((c.flgaerea)::text = '0'::text) OR (c.flgaerea IS NULL)) AND (c.codtariffamasteraereoflr IS NULL) AND (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid)))))
        UNION
         SELECT 'Vessels '::text AS text,
            'navi'::text AS origin,
            'shipping.vessels'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.navi n
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM shipping.vessels a_1
                  WHERE (a_1.jguid = n.jguid))))
        UNION
         SELECT 'Container Types '::text AS text,
            'cntr_type'::text AS origin,
            'logistic.container_types'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.cntr_type c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.container_types l
                  WHERE (l.jguid = c.jguid))))
        UNION
         SELECT 'Items Commodities 130 '::text AS text,
            'merci'::text AS origin,
            'items.definitions 130'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.merci m
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM items.definitions d
                  WHERE (d.jguid = m.jguid))))
        UNION
         SELECT 'Warehouse Receipts Heads'::text AS text,
            'entrate'::text AS origin,
            'documents.heads 20'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.entrate e
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM documents.heads b
                  WHERE (b.jguid = e.jguid))))
        UNION
         SELECT 'View Cli Fo '::text AS text,
            'tblview_clifo'::text AS origin,
            'anagraph.anagraphs 14-15'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.tblview_clifo c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid))))
        UNION
         SELECT 'Porti Locations '::text AS text,
            'porti'::text AS origin,
            'logistic.locations'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.porti p
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.locations l
                  WHERE (l.jguid = p.jguid))))
        UNION
         SELECT 'Workflows Pratiche '::text AS text,
            'testatapratiche'::text AS origin,
            'workflow.workflows'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.testatapratiche p
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM workflow.workflows w
                  WHERE (w.jguid = p.jguid))))
        UNION
         SELECT 'Pickup Orders'::text AS text,
            'pickup_orders'::text AS origin,
            'logistic.pickup_orders'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.testatapratiche t
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.shipments o
                  WHERE (o.jguid = t.jguid))))
        UNION
         SELECT 'tabelle di supporto AWB'::text AS text,
            'aereavociotherhouse'::text AS origin,
            'logistic.awb_codes'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.aereavociotherhouse a_1
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.awb_codes c
                  WHERE (c.jguid = a_1.jguid))))
        UNION
         SELECT 'AWB LTA HOUSE'::text AS text,
            'aerealtahouse'::text AS origin,
            'logistic.awb'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.aerealtahouse h
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.awb a_1
                  WHERE (a_1.jguid = h.jguid))))
        UNION
         SELECT 'AWB LTA MASTER'::text AS text,
            'aerealtamaster'::text AS origin,
            'logistic.awb'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.aerealtamaster m
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.awb w
                  WHERE (w.jguid = m.jguid))))
        UNION
         SELECT 'Righe House'::text AS text,
            'aerearigheltahouse'::text AS origin,
            'logistic.awb_rows'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.aerearigheltahouse r
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.awb_rows w
                  WHERE (w.jguid = r.jguid))))
        UNION
         SELECT 'Righe Master'::text AS text,
            'aerearigheltamaster'::text AS origin,
            'logistic.awb_rows'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.aerearigheltamaster r
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM logistic.awb_rows w
                  WHERE (w.jguid = r.jguid))))
        UNION
         SELECT 'Costs Items'::text AS text,
            'costipredefiniti'::text AS origin,
            'items.definitions '::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.costipredefiniti a_1
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM items.definitions i
                  WHERE (((i.code)::text = (a_1.codvoce)::text) AND (i.family_id = 131)))))
        UNION
         SELECT 'Incomes Items'::text AS text,
            'fvocifatt'::text AS origin,
            'items.definitions '::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.fvocifatt f
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM items.definitions d
                  WHERE (d.jguid = f.jguid))))
        UNION
         SELECT 'Pro Forma Invoices/Credit Notes'::text AS text,
            'pretestafatt'::text AS origin,
            'documents.heads 18/19'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.pretestafatt t
          WHERE (((t.anno)::text = ANY (ARRAY[('2018'::character varying)::text, ('2019'::character varying)::text, ('2020'::character varying)::text, ('2017'::character varying)::text, ('2016'::character varying)::text, ('2015'::character varying)::text, ('2014'::character varying)::text])) AND (NOT (EXISTS ( SELECT 1
                   FROM documents.heads h
                  WHERE (h.jguid = t.jguid)))))
        UNION
         SELECT 'Pro Forma Rows'::text AS text,
            'precorpofatt'::text AS origin,
            'custom_tm_logistic.pretestafatt'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.precorpofatt p
          WHERE (((p.tipocalcolo)::text <> 'P'::text) AND (((p.anno)::text = ANY (ARRAY[('2018'::character varying)::text, ('2019'::character varying)::text, ('2020'::character varying)::text, ('2017'::character varying)::text, ('2016'::character varying)::text, ('2015'::character varying)::text])) AND ((p.tipocalcolo)::text <> ALL (ARRAY[('D'::character varying)::text, ('P'::character varying)::text])) AND (NOT (EXISTS ( SELECT 1
                   FROM documents.rows r
                  WHERE (r.jguid = p.jguid))))))
        UNION
         SELECT 'Testa Fatture Definitive'::text AS text,
            'testafatt'::text AS origin,
            'documents.heads'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.testafatt t
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM documents.heads h
                  WHERE (h.jguid = t.jguid))))
        UNION
         SELECT 'righe fatture definitive'::text AS text,
            'corpofatt'::text AS origin,
            'documents.rows'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.corpofatt p
          WHERE ((NOT (EXISTS ( SELECT 1
                   FROM documents.rows r
                  WHERE (r.jguid = p.jguid)))) AND ((p.tipocalcolo)::text <> ALL ((ARRAY['P'::character varying, 'D'::character varying])::text[])))
        UNION
         SELECT 'Agenzie'::text AS text,
            'agenzie'::text AS origin,
            'anagraph.anagraphs 20'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.agenzie c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid))))
        UNION
         SELECT 'Attività Pratiche'::text AS text,
            'ATTIVITAPRATICA'::text AS origin,
            'workflow.types'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.attivitapratica c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM workflow.types a_1
                  WHERE (a_1.jguid = c.jguid))))
        UNION
         SELECT '13 Vettori'::text AS text,
            'clifo pr_clifo'::text AS origin,
            'anagraph.anagraphs  13'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.pr_clifo c
          WHERE (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid))))
        UNION
         SELECT '13 Corrieri'::text AS text,
            'corrieri'::text AS origin,
            'anagraph.anagraphs  13'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.corrieri c
          WHERE ((c.localita IS NOT NULL) AND (NOT (EXISTS ( SELECT 1
                   FROM anagraph.anagraphs a_1
                  WHERE (a_1.jguid = c.jguid)))))
        UNION
         SELECT 'Imballi'::text AS text,
            'imballi'::text AS origin,
            'items.package_types'::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.imballi i
          WHERE (NOT ((i.codimballo)::text IN ( SELECT package_types.code
                   FROM items.package_types)))
        UNION
         SELECT 'Tipi Containers'::text AS text,
            'tipocntrs'::text AS origin,
            'logistic.container_types '::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.tipocntrs k
          WHERE (NOT ((k.codcntr)::text IN ( SELECT y.code
                   FROM logistic.container_types y)))
        UNION
         SELECT 'Tipi Documenti'::text AS text,
            'tipodoc'::text AS origin,
            'documents.types '::text AS destination,
            count(1) AS count
           FROM custom_tm_logistic.tipodoc ct
          WHERE (NOT ((ct.tipodoc)::text IN ( SELECT dt.code
                   FROM documents.types dt)))) a
  ORDER BY a.count DESC, a.destination;]]></view_script>
			<column name="title" type="text" />
			<column name="origin" type="text" />
			<column name="destination" type="text" />
			<column name="count" type="bigint" />
		</view>
		<trigger name="clifo_jguid_trg" table="clifo" id="Trigger_1635" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER clifo_jguid_trg BEFORE INSERT ON custom_tm_logistic.clifo FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="clifo_jguid_trg" table="marche" id="Trigger_796" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER clifo_jguid_trg BEFORE INSERT ON custom_tm_logistic.marche FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="cntr_type_jguid_trg" table="cntr_type" id="Trigger_1c09" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cntr_type_jguid_trg BEFORE INSERT ON custom_tm_logistic.cntr_type FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="documenti_jguid_trg" table="documenti" id="Trigger_502" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER documenti_jguid_trg BEFORE INSERT ON custom_tm_logistic.documenti FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="entrate_jguid_trg" table="entrate" id="Trigger_1a63" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER entrate_jguid_trg BEFORE INSERT ON custom_tm_logistic.entrate FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="fd_jguid_trg" table="fd" id="Trigger_23a4" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fd_jguid_trg BEFORE INSERT ON custom_tm_logistic.fd FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="imballi_jguid_trg" table="imballi" id="Trigger_2207" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER imballi_jguid_trg BEFORE INSERT ON custom_tm_logistic.imballi FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="imballi_jguid_trg" table="merci" id="Trigger_15be" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER imballi_jguid_trg BEFORE INSERT ON custom_tm_logistic.merci FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="magazzini_jguid_trg" table="magazzini" id="Trigger_284" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER magazzini_jguid_trg BEFORE INSERT ON custom_tm_logistic.magazzini FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="tipi_documento_jguid_trg" table="tipi_documento" id="Trigger_1ae4" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tipi_documento_jguid_trg BEFORE INSERT ON custom_tm_logistic.tipi_documento FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<trigger name="uffici_jguid_trg" table="uffici" id="Trigger_13d1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER uffici_jguid_trg BEFORE INSERT ON custom_tm_logistic.uffici FOR EACH ROW EXECUTE PROCEDURE custom_tm_logistic.guid_trg()]]></string>
		</trigger>
		<function name="entrate_postesta" id="Function_692" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.entrate_postesta(p_jguid uuid)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R character varying; 
begin
  R := null; 
  select into I count(1)
     from custom_tm_logistic.entrate  e
	 where
	    e.jguid = p_jguid; 
		
	if I = 1 then
    select into R potesta 
     from custom_tm_logistic.entrate e
	 where
	    e.jguid = p_jguid; 
		
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="guid_trg" id="Function_5a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.guid_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc();
  end if;

  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sp_del_clifo" id="Function_1fca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_clifo(p_codice character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.clifo
  WHERE 
    (codice = p_codice) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="12" type="varchar" />
		</function>
		<function name="sp_del_cntr_type" id="Function_c0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_cntr_type(p_cod_cntr character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.cntr_type
  WHERE 
    (cod_cntr = p_cod_cntr) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_cod_cntr" jt="12" type="varchar" />
		</function>
		<function name="sp_del_documenti" id="Function_22c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_documenti(p_tipodichiarazione character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.documenti
  WHERE 
    (tipodichiarazione = p_tipodichiarazione) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_tipodichiarazione" jt="12" type="varchar" />
		</function>
		<function name="sp_del_entrate" id="Function_184d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_entrate(p_anno smallint, p_num_entrata integer, p_pg integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.entrate
  WHERE 
    (anno = p_anno) AND
    (num_entrata = p_num_entrata) AND
    (pg = p_pg) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_anno" jt="5" type="int2" />
			<input_param name="p_num_entrata" jt="4" type="int4" />
			<input_param name="p_pg" jt="4" type="int4" />
		</function>
		<function name="sp_del_fd" id="Function_164f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_fd(p_codice integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.fd
  WHERE 
    (codice = p_codice) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="4" type="int4" />
		</function>
		<function name="sp_del_imballi" id="Function_15a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_imballi(p_codimballo character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.imballi
  WHERE 
    (codimballo = p_codimballo) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codimballo" jt="12" type="varchar" />
		</function>
		<function name="sp_del_marche" id="Function_1a4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_marche(p_codmarca integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.marche
  WHERE 
    (codmarca = p_codmarca) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codmarca" jt="4" type="int4" />
		</function>
		<function name="sp_del_merci" id="Function_25b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_merci(p_codice integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.merci
  WHERE 
    (codice = p_codice) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="4" type="int4" />
		</function>
		<function name="sp_del_tipi_documento" id="Function_a42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_tipi_documento(p_tipodocumento character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.tipi_documento
  WHERE 
    (tipodocumento = p_tipodocumento) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_tipodocumento" jt="12" type="varchar" />
		</function>
		<function name="sp_del_uffici" id="Function_1c90" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_del_uffici(p_codufficio character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM custom_tm_logistic.uffici
  WHERE 
    (codufficio = p_codufficio) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codufficio" jt="12" type="varchar" />
		</function>
		<function name="sp_ins_clifo" id="Function_144b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_clifo(p_codice character varying, p_ragionesoc character varying, p_ragionesoc2 character varying, p_tipo character varying, p_indirizzo character varying, p_cap character varying, p_localita character varying, p_provincia character varying, p_paiv character varying, p_tel character varying, p_fax character varying, p_email character varying, p_mincnt20 numeric, p_mincnt40 numeric, p_codcliente character varying, p_flgnoassicurazione character, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_nazione character varying, p_tipoimportazione character, p_importot1 numeric, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.clifo
     where codice = p_codice;  
if i = 0 then
  INSERT INTO custom_tm_logistic.clifo (
    codice,
    ragionesoc,
    ragionesoc2,
    tipo,
    indirizzo,
    cap,
    localita,
    provincia,
    paiv,
    tel,
    fax,
    email,
    mincnt20,
    mincnt40,
    codcliente,
    flgnoassicurazione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    nazione,
    tipoimportazione,
    importot1,
    jguid
  )
  VALUES (
    p_codice,
    p_ragionesoc,
    p_ragionesoc2,
    p_tipo,
    p_indirizzo,
    p_cap,
    p_localita,
    p_provincia,
    p_paiv,
    p_tel,
    p_fax,
    p_email,
    p_mincnt20,
    p_mincnt40,
    p_codcliente,
    p_flgnoassicurazione,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_nazione,
    p_tipoimportazione,
    p_importot1,
    p_jguid
  );
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="12" type="varchar" />
			<input_param name="p_ragionesoc" jt="12" type="varchar" />
			<input_param name="p_ragionesoc2" jt="12" type="varchar" />
			<input_param name="p_tipo" jt="12" type="varchar" />
			<input_param name="p_indirizzo" jt="12" type="varchar" />
			<input_param name="p_cap" jt="12" type="varchar" />
			<input_param name="p_localita" jt="12" type="varchar" />
			<input_param name="p_provincia" jt="12" type="varchar" />
			<input_param name="p_paiv" jt="12" type="varchar" />
			<input_param name="p_tel" jt="12" type="varchar" />
			<input_param name="p_fax" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_mincnt20" jt="2" type="numeric" />
			<input_param name="p_mincnt40" jt="2" type="numeric" />
			<input_param name="p_codcliente" jt="12" type="varchar" />
			<input_param name="p_flgnoassicurazione" jt="1" type="bpchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_nazione" jt="12" type="varchar" />
			<input_param name="p_tipoimportazione" jt="1" type="bpchar" />
			<input_param name="p_importot1" jt="2" type="numeric" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_clifo01" id="Function_d3c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_clifo01(p_codice character varying, p_ragionesoc character varying, p_ragionesoc2 character varying, p_tipo character varying, p_indirizzo character varying, p_cap character varying, p_localita character varying, p_provincia character varying, p_paiv character varying, p_tel character varying, p_fax character varying, p_email character varying, p_mincnt20 numeric, p_mincnt40 numeric, p_codcliente character varying, p_flgnoassicurazione character, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_nazione character varying, p_tipoimportazione character, p_importot1 numeric, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.clifo
     where codice = p_codice;  
if i = 0 then
  INSERT INTO custom_tm_logistic.clifo (
    codice,
    ragionesoc,
    ragionesoc2,
    tipo,
    indirizzo,
    cap,
    localita,
    provincia,
    paiv,
    tel,
    fax,
    email,
    mincnt20,
    mincnt40,
    codcliente,
    flgnoassicurazione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    nazione,
    tipoimportazione,
    importot1,
    jguid
  )
  VALUES (
    p_codice,
    p_ragionesoc,
    p_ragionesoc2,
    p_tipo,
    p_indirizzo,
    p_cap,
    p_localita,
    p_provincia,
    p_paiv,
    p_tel,
    p_fax,
    p_email,
    p_mincnt20,
    p_mincnt40,
    p_codcliente,
    p_flgnoassicurazione,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_nazione,
    p_tipoimportazione,
    p_importot1,
    p_jguid
  );
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="12" type="varchar" />
			<input_param name="p_ragionesoc" jt="12" type="varchar" />
			<input_param name="p_ragionesoc2" jt="12" type="varchar" />
			<input_param name="p_tipo" jt="12" type="varchar" />
			<input_param name="p_indirizzo" jt="12" type="varchar" />
			<input_param name="p_cap" jt="12" type="varchar" />
			<input_param name="p_localita" jt="12" type="varchar" />
			<input_param name="p_provincia" jt="12" type="varchar" />
			<input_param name="p_paiv" jt="12" type="varchar" />
			<input_param name="p_tel" jt="12" type="varchar" />
			<input_param name="p_fax" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_mincnt20" jt="2" type="numeric" />
			<input_param name="p_mincnt40" jt="2" type="numeric" />
			<input_param name="p_codcliente" jt="12" type="varchar" />
			<input_param name="p_flgnoassicurazione" jt="1" type="bpchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_nazione" jt="12" type="varchar" />
			<input_param name="p_tipoimportazione" jt="1" type="bpchar" />
			<input_param name="p_importot1" jt="2" type="numeric" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_cntr_type" id="Function_fb4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_cntr_type(p_cod_cntr character varying, p_des_cntr character varying, p_siz_cntr character varying, p_gg_franchigia integer, p_tariffa integer, p_thcimp double precision, p_thcval character varying, p_tarifpri integer, p_gg_prirata integer, p_max_weight double precision, p_max_volume double precision, p_lunghezza double precision, p_larghezza double precision, p_altezza double precision, p_lunghezza_interna double precision, p_lunghezza_allaporta double precision, p_larghezza_interna double precision, p_larghezza_allaporta double precision, p_altezza_interna double precision, p_altezza_allaporta double precision, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.cntr_type 
     where cod_cntr = p_cod_cntr;  
if i = 0 then
  INSERT INTO custom_tm_logistic.cntr_type (
    cod_cntr,
    des_cntr,
    siz_cntr,
    gg_franchigia,
    tariffa,
    thcimp,
    thcval,
    tarifpri,
    gg_prirata,
    max_weight,
    max_volume,
    lunghezza,
    larghezza,
    altezza,
    lunghezza_interna,
    lunghezza_allaporta,
    larghezza_interna,
    larghezza_allaporta,
    altezza_interna,
    altezza_allaporta,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  )
  VALUES (
    p_cod_cntr,
    p_des_cntr,
    p_siz_cntr,
    p_gg_franchigia,
    p_tariffa,
    p_thcimp,
    p_thcval,
    p_tarifpri,
    p_gg_prirata,
    p_max_weight,
    p_max_volume,
    p_lunghezza,
    p_larghezza,
    p_altezza,
    p_lunghezza_interna,
    p_lunghezza_allaporta,
    p_larghezza_interna,
    p_larghezza_allaporta,
    p_altezza_interna,
    p_altezza_allaporta,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_jguid
  );
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_cod_cntr" jt="12" type="varchar" />
			<input_param name="p_des_cntr" jt="12" type="varchar" />
			<input_param name="p_siz_cntr" jt="12" type="varchar" />
			<input_param name="p_gg_franchigia" jt="4" type="int4" />
			<input_param name="p_tariffa" jt="4" type="int4" />
			<input_param name="p_thcimp" jt="8" type="float8" />
			<input_param name="p_thcval" jt="12" type="varchar" />
			<input_param name="p_tarifpri" jt="4" type="int4" />
			<input_param name="p_gg_prirata" jt="4" type="int4" />
			<input_param name="p_max_weight" jt="8" type="float8" />
			<input_param name="p_max_volume" jt="8" type="float8" />
			<input_param name="p_lunghezza" jt="8" type="float8" />
			<input_param name="p_larghezza" jt="8" type="float8" />
			<input_param name="p_altezza" jt="8" type="float8" />
			<input_param name="p_lunghezza_interna" jt="8" type="float8" />
			<input_param name="p_lunghezza_allaporta" jt="8" type="float8" />
			<input_param name="p_larghezza_interna" jt="8" type="float8" />
			<input_param name="p_larghezza_allaporta" jt="8" type="float8" />
			<input_param name="p_altezza_interna" jt="8" type="float8" />
			<input_param name="p_altezza_allaporta" jt="8" type="float8" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_documenti" id="Function_102e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_documenti(p_tipodichiarazione character varying, p_descrizione character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.documenti 
     where tipodichiarazione = p_tipodichiarazione;  
if i = 0 then
  INSERT INTO custom_tm_logistic.documenti (
    tipodichiarazione,
    descrizione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica
  )
  VALUES (
    p_tipodichiarazione,
    p_descrizione,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica
  );
end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_tipodichiarazione" jt="12" type="varchar" />
			<input_param name="p_descrizione" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
		</function>
		<function name="sp_ins_entrate" id="Function_94a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_entrate(p_anno smallint, p_num_entrata integer, p_pg integer, p_flgdefinitiva character, p_codutente character varying, p_datainserimento timestamp without time zone, p_typeexport character, p_tipotrasporto character, p_flgfull character, p_flgitaest character, p_flgcoind character, p_data_entrata timestamp without time zone, p_cod_nave character varying, p_dataviaggio timestamp without time zone, p_n_viaggio character varying, p_codcompagnia integer, p_cod_pol character varying, p_cod_pod character varying, p_codorigine character varying, p_booking character varying, p_terminalritiro character varying, p_terminalconsegna character varying, p_dataconsegna timestamp without time zone, p_noteposizionamento character varying, p_codmagazzino character varying, p_ggfranchigia smallint, p_data_scad_franch timestamp without time zone, p_coddepositante character varying, p_codfornitore character varying, p_coddestinatario character varying, p_codvettore character varying, p_tipodichiarazione character varying, p_numdocumento character varying, p_seriedocumento character varying, p_datadocumento timestamp without time zone, p_codufficioemissione character varying, p_tipomezzoentrata character varying, p_numeroa1 integer, p_cina1 character varying, p_dataa1 timestamp without time zone, p_bldeposito integer, p_tipomerce character, p_tipodocalli character varying, p_datascadenza timestamp without time zone, p_vocedoganale character varying, p_regime character varying, p_valore numeric, p_fd character varying, p_nfattura integer, p_importofattura numeric, p_note character varying, p_note2 character varying, p_note3 character varying, p_potesta character varying, p_progressivopratica integer, p_annopratica character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_flgmetal character, p_numfattura character varying, p_datafattura timestamp without time zone, p_tipoentrata character, p_annotp character varying, p_progressivotp integer, p_ppgtp smallint, p_codattivitatp character varying, p_codfilialetp character varying, p_ntrackingvettore character varying, p_valutafattura character varying, p_valorefattura numeric, p_cambiofattura numeric, p_tipocondizione character varying, p_mrn character varying, p_flgvisibileinternet character, p_codfornitoregpm character varying, p_immaginegpm character varying, p_fornitoregpm character varying, p_flgnazionale character, p_flgportoassegnato character, p_importovettore numeric, p_prioritancl character varying, p_annofatturapo character varying, p_contatorefatturapo integer, p_codfilialefatturapo character varying, p_shipperncl character varying, p_consigneencl character varying, p_flgportale character, p_dataordine timestamp without time zone, p_rifnave character varying, p_prontezza timestamp without time zone, p_hubid character varying, p_datpickup timestamp without time zone)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  INSERT INTO custom_tm_logistic.entrate (
    anno,
    num_entrata,
    pg,
    flgdefinitiva,
    codutente,
    datainserimento,
    typeexport,
    tipotrasporto,
    flgfull,
    flgitaest,
    flgcoind,
    data_entrata,
    cod_nave,
    dataviaggio,
    n_viaggio,
    codcompagnia,
    cod_pol,
    cod_pod,
    codorigine,
    booking,
    terminalritiro,
    terminalconsegna,
    dataconsegna,
    noteposizionamento,
    codmagazzino,
    ggfranchigia,
    data_scad_franch,
    coddepositante,
    codfornitore,
    coddestinatario,
    codvettore,
    tipodichiarazione,
    numdocumento,
    seriedocumento,
    datadocumento,
    codufficioemissione,
    tipomezzoentrata,
    numeroa1,
    cina1,
    dataa1,
    bldeposito,
    tipomerce,
    tipodocalli,
    datascadenza,
    vocedoganale,
    regime,
    valore,
    fd,
    nfattura,
    importofattura,
    note,
    note2,
    note3,
    potesta,
    progressivopratica,
    annopratica,
    utenteultimamodifica,
    dataultimamodifica,
    flgmetal,
    numfattura,
    datafattura,
    tipoentrata,
    annotp,
    progressivotp,
    ppgtp,
    codattivitatp,
    codfilialetp,
    ntrackingvettore,
    valutafattura,
    valorefattura,
    cambiofattura,
    tipocondizione,
    mrn,
    flgvisibileinternet,
    codfornitoregpm,
    immaginegpm,
    fornitoregpm,
    flgnazionale,
    flgportoassegnato,
    importovettore,
    prioritancl,
    annofatturapo,
    contatorefatturapo,
    codfilialefatturapo,
    shipperncl,
    consigneencl,
    flgportale,
    dataordine,
    rifnave,
    prontezza,
    hubid,
    datpickup
  )
  VALUES (
    p_anno,
    p_num_entrata,
    p_pg,
    p_flgdefinitiva,
    p_codutente,
    p_datainserimento,
    p_typeexport,
    p_tipotrasporto,
    p_flgfull,
    p_flgitaest,
    p_flgcoind,
    p_data_entrata,
    p_cod_nave,
    p_dataviaggio,
    p_n_viaggio,
    p_codcompagnia,
    p_cod_pol,
    p_cod_pod,
    p_codorigine,
    p_booking,
    p_terminalritiro,
    p_terminalconsegna,
    p_dataconsegna,
    p_noteposizionamento,
    p_codmagazzino,
    p_ggfranchigia,
    p_data_scad_franch,
    p_coddepositante,
    p_codfornitore,
    p_coddestinatario,
    p_codvettore,
    p_tipodichiarazione,
    p_numdocumento,
    p_seriedocumento,
    p_datadocumento,
    p_codufficioemissione,
    p_tipomezzoentrata,
    p_numeroa1,
    p_cina1,
    p_dataa1,
    p_bldeposito,
    p_tipomerce,
    p_tipodocalli,
    p_datascadenza,
    p_vocedoganale,
    p_regime,
    p_valore,
    p_fd,
    p_nfattura,
    p_importofattura,
    p_note,
    p_note2,
    p_note3,
    p_potesta,
    p_progressivopratica,
    p_annopratica,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_flgmetal,
    p_numfattura,
    p_datafattura,
    p_tipoentrata,
    p_annotp,
    p_progressivotp,
    p_ppgtp,
    p_codattivitatp,
    p_codfilialetp,
    p_ntrackingvettore,
    p_valutafattura,
    p_valorefattura,
    p_cambiofattura,
    p_tipocondizione,
    p_mrn,
    p_flgvisibileinternet,
    p_codfornitoregpm,
    p_immaginegpm,
    p_fornitoregpm,
    p_flgnazionale,
    p_flgportoassegnato,
    p_importovettore,
    p_prioritancl,
    p_annofatturapo,
    p_contatorefatturapo,
    p_codfilialefatturapo,
    p_shipperncl,
    p_consigneencl,
    p_flgportale,
    p_dataordine,
    p_rifnave,
    p_prontezza,
    p_hubid,
    p_datpickup
  );
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_anno" jt="5" type="int2" />
			<input_param name="p_num_entrata" jt="4" type="int4" />
			<input_param name="p_pg" jt="4" type="int4" />
			<input_param name="p_flgdefinitiva" jt="1" type="bpchar" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_typeexport" jt="1" type="bpchar" />
			<input_param name="p_tipotrasporto" jt="1" type="bpchar" />
			<input_param name="p_flgfull" jt="1" type="bpchar" />
			<input_param name="p_flgitaest" jt="1" type="bpchar" />
			<input_param name="p_flgcoind" jt="1" type="bpchar" />
			<input_param name="p_data_entrata" jt="93" type="timestamp" />
			<input_param name="p_cod_nave" jt="12" type="varchar" />
			<input_param name="p_dataviaggio" jt="93" type="timestamp" />
			<input_param name="p_n_viaggio" jt="12" type="varchar" />
			<input_param name="p_codcompagnia" jt="4" type="int4" />
			<input_param name="p_cod_pol" jt="12" type="varchar" />
			<input_param name="p_cod_pod" jt="12" type="varchar" />
			<input_param name="p_codorigine" jt="12" type="varchar" />
			<input_param name="p_booking" jt="12" type="varchar" />
			<input_param name="p_terminalritiro" jt="12" type="varchar" />
			<input_param name="p_terminalconsegna" jt="12" type="varchar" />
			<input_param name="p_dataconsegna" jt="93" type="timestamp" />
			<input_param name="p_noteposizionamento" jt="12" type="varchar" />
			<input_param name="p_codmagazzino" jt="12" type="varchar" />
			<input_param name="p_ggfranchigia" jt="5" type="int2" />
			<input_param name="p_data_scad_franch" jt="93" type="timestamp" />
			<input_param name="p_coddepositante" jt="12" type="varchar" />
			<input_param name="p_codfornitore" jt="12" type="varchar" />
			<input_param name="p_coddestinatario" jt="12" type="varchar" />
			<input_param name="p_codvettore" jt="12" type="varchar" />
			<input_param name="p_tipodichiarazione" jt="12" type="varchar" />
			<input_param name="p_numdocumento" jt="12" type="varchar" />
			<input_param name="p_seriedocumento" jt="12" type="varchar" />
			<input_param name="p_datadocumento" jt="93" type="timestamp" />
			<input_param name="p_codufficioemissione" jt="12" type="varchar" />
			<input_param name="p_tipomezzoentrata" jt="12" type="varchar" />
			<input_param name="p_numeroa1" jt="4" type="int4" />
			<input_param name="p_cina1" jt="12" type="varchar" />
			<input_param name="p_dataa1" jt="93" type="timestamp" />
			<input_param name="p_bldeposito" jt="4" type="int4" />
			<input_param name="p_tipomerce" jt="1" type="bpchar" />
			<input_param name="p_tipodocalli" jt="12" type="varchar" />
			<input_param name="p_datascadenza" jt="93" type="timestamp" />
			<input_param name="p_vocedoganale" jt="12" type="varchar" />
			<input_param name="p_regime" jt="12" type="varchar" />
			<input_param name="p_valore" jt="2" type="numeric" />
			<input_param name="p_fd" jt="12" type="varchar" />
			<input_param name="p_nfattura" jt="4" type="int4" />
			<input_param name="p_importofattura" jt="2" type="numeric" />
			<input_param name="p_note" jt="12" type="varchar" />
			<input_param name="p_note2" jt="12" type="varchar" />
			<input_param name="p_note3" jt="12" type="varchar" />
			<input_param name="p_potesta" jt="12" type="varchar" />
			<input_param name="p_progressivopratica" jt="4" type="int4" />
			<input_param name="p_annopratica" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_flgmetal" jt="1" type="bpchar" />
			<input_param name="p_numfattura" jt="12" type="varchar" />
			<input_param name="p_datafattura" jt="93" type="timestamp" />
			<input_param name="p_tipoentrata" jt="1" type="bpchar" />
			<input_param name="p_annotp" jt="12" type="varchar" />
			<input_param name="p_progressivotp" jt="4" type="int4" />
			<input_param name="p_ppgtp" jt="5" type="int2" />
			<input_param name="p_codattivitatp" jt="12" type="varchar" />
			<input_param name="p_codfilialetp" jt="12" type="varchar" />
			<input_param name="p_ntrackingvettore" jt="12" type="varchar" />
			<input_param name="p_valutafattura" jt="12" type="varchar" />
			<input_param name="p_valorefattura" jt="2" type="numeric" />
			<input_param name="p_cambiofattura" jt="2" type="numeric" />
			<input_param name="p_tipocondizione" jt="12" type="varchar" />
			<input_param name="p_mrn" jt="12" type="varchar" />
			<input_param name="p_flgvisibileinternet" jt="1" type="bpchar" />
			<input_param name="p_codfornitoregpm" jt="12" type="varchar" />
			<input_param name="p_immaginegpm" jt="12" type="varchar" />
			<input_param name="p_fornitoregpm" jt="12" type="varchar" />
			<input_param name="p_flgnazionale" jt="1" type="bpchar" />
			<input_param name="p_flgportoassegnato" jt="1" type="bpchar" />
			<input_param name="p_importovettore" jt="2" type="numeric" />
			<input_param name="p_prioritancl" jt="12" type="varchar" />
			<input_param name="p_annofatturapo" jt="12" type="varchar" />
			<input_param name="p_contatorefatturapo" jt="4" type="int4" />
			<input_param name="p_codfilialefatturapo" jt="12" type="varchar" />
			<input_param name="p_shipperncl" jt="12" type="varchar" />
			<input_param name="p_consigneencl" jt="12" type="varchar" />
			<input_param name="p_flgportale" jt="1" type="bpchar" />
			<input_param name="p_dataordine" jt="93" type="timestamp" />
			<input_param name="p_rifnave" jt="12" type="varchar" />
			<input_param name="p_prontezza" jt="93" type="timestamp" />
			<input_param name="p_hubid" jt="12" type="varchar" />
			<input_param name="p_datpickup" jt="93" type="timestamp" />
		</function>
		<function name="sp_ins_fd" id="Function_2096" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_fd(p_codice integer, p_fd character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.fd
     where codice = p_codice;  
if i = 0 then
  INSERT INTO custom_tm_logistic.fd (
    codice,
    fd,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  )
  VALUES (
    p_codice,
    p_fd,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_jguid
  );
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="4" type="int4" />
			<input_param name="p_fd" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_imballi" id="Function_621" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_imballi(p_codimballo character varying, p_desimballo character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.imballi 
     where codimballo = p_codimballo;  
if i = 0 then
  INSERT INTO custom_tm_logistic.imballi (
    codimballo,
    desimballo,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  )
  VALUES (
    p_codimballo,
    p_desimballo,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_jguid
  );
end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codimballo" jt="12" type="varchar" />
			<input_param name="p_desimballo" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_magazzini" id="Function_e38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_magazzini(p_codice character varying, p_descrizione character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_localita character varying, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.magazzini 
     where codice = p_codice;  
if i = 0 then
  INSERT INTO custom_tm_logistic.magazzini (
    codice,
    descrizione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    localita,
    jguid
  )
  VALUES (
    p_codice,
    p_descrizione,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_localita,
    p_jguid
  );
end if; 

END;  
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="12" type="varchar" />
			<input_param name="p_descrizione" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_localita" jt="12" type="varchar" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_marche" id="Function_d8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_marche(p_codmarca integer, p_marca character varying, p_codicemerce integer, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.marche 
     where codmarca = p_codmarca;  
if i = 0 then
  INSERT INTO custom_tm_logistic.marche (
    codmarca,
    marca,
    codicemerce,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  )
  VALUES (
    p_codmarca,
    p_marca,
    p_codicemerce,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_jguid
  );
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codmarca" jt="4" type="int4" />
			<input_param name="p_marca" jt="12" type="varchar" />
			<input_param name="p_codicemerce" jt="4" type="int4" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_merci" id="Function_464" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_merci(p_codice integer, p_merce character varying, p_codcategoria integer, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_flgportale character, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
BEGIN
  select into i count(1)  from custom_tm_logistic.merci 
     where codice = p_codice;  
if i = 0 then
  INSERT INTO custom_tm_logistic.merci (
    codice,
    merce,
    codcategoria,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    flgportale,
    jguid
  )
  VALUES (
    p_codice,
    p_merce,
    p_codcategoria,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_flgportale,
    p_jguid
  );
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="4" type="int4" />
			<input_param name="p_merce" jt="12" type="varchar" />
			<input_param name="p_codcategoria" jt="4" type="int4" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_flgportale" jt="1" type="bpchar" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_tipi_documento" id="Function_55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_tipi_documento(p_tipodocumento character varying, p_descrizione character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.tipi_documento
     where tipodocumento = p_tipodocumento;  
if i = 0 then
  INSERT INTO custom_tm_logistic.tipi_documento (
    tipodocumento,
    descrizione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  )
  VALUES (
    p_tipodocumento,
    p_descrizione,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_jguid
  );
end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_tipodocumento" jt="12" type="varchar" />
			<input_param name="p_descrizione" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_ins_uffici" id="Function_d2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_ins_uffici(p_codufficio character varying, p_desufficio character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
  
BEGIN
  select into i count(1)  from custom_tm_logistic.magazzini 
     where codufficio = p_codufficio;  
if i = 0 then
  INSERT INTO custom_tm_logistic.uffici (
    codufficio,
    desufficio,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  )
  VALUES (
    p_codufficio,
    p_desufficio,
    p_datainserimento,
    p_codutente,
    p_utenteultimamodifica,
    p_dataultimamodifica,
    p_jguid
  );
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codufficio" jt="12" type="varchar" />
			<input_param name="p_desufficio" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_sel_clifo" id="Function_1938" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_clifo()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    codice,
    ragionesoc,
    ragionesoc2,
    tipo,
    indirizzo,
    cap,
    localita,
    provincia,
    paiv,
    tel,
    fax,
    email,
    mincnt20,
    mincnt40,
    codcliente,
    flgnoassicurazione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    nazione,
    tipoimportazione,
    importot1,
    jguid
  FROM 
    custom_tm_logistic.clifo;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_cntr_type" id="Function_21cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_cntr_type()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    cod_cntr,
    des_cntr,
    siz_cntr,
    gg_franchigia,
    tariffa,
    thcimp,
    thcval,
    tarifpri,
    gg_prirata,
    max_weight,
    max_volume,
    lunghezza,
    larghezza,
    altezza,
    lunghezza_interna,
    lunghezza_allaporta,
    larghezza_interna,
    larghezza_allaporta,
    altezza_interna,
    altezza_allaporta,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  FROM 
    custom_tm_logistic.cntr_type;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_documenti" id="Function_217d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_documenti()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    tipodichiarazione,
    descrizione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica
  FROM 
    custom_tm_logistic.documenti;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_entrate" id="Function_552" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_entrate()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    anno,
    num_entrata,
    pg,
    flgdefinitiva,
    codutente,
    datainserimento,
    typeexport,
    tipotrasporto,
    flgfull,
    flgitaest,
    flgcoind,
    data_entrata,
    cod_nave,
    dataviaggio,
    n_viaggio,
    codcompagnia,
    cod_pol,
    cod_pod,
    codorigine,
    booking,
    terminalritiro,
    terminalconsegna,
    dataconsegna,
    noteposizionamento,
    codmagazzino,
    ggfranchigia,
    data_scad_franch,
    coddepositante,
    codfornitore,
    coddestinatario,
    codvettore,
    tipodichiarazione,
    numdocumento,
    seriedocumento,
    datadocumento,
    codufficioemissione,
    tipomezzoentrata,
    numeroa1,
    cina1,
    dataa1,
    bldeposito,
    tipomerce,
    tipodocalli,
    datascadenza,
    vocedoganale,
    regime,
    valore,
    fd,
    nfattura,
    importofattura,
    note,
    note2,
    note3,
    potesta,
    progressivopratica,
    annopratica,
    utenteultimamodifica,
    dataultimamodifica,
    flgmetal,
    numfattura,
    datafattura,
    tipoentrata,
    annotp,
    progressivotp,
    ppgtp,
    codattivitatp,
    codfilialetp,
    ntrackingvettore,
    valutafattura,
    valorefattura,
    cambiofattura,
    tipocondizione,
    mrn,
    flgvisibileinternet,
    codfornitoregpm,
    immaginegpm,
    fornitoregpm,
    flgnazionale,
    flgportoassegnato,
    importovettore,
    prioritancl,
    annofatturapo,
    contatorefatturapo,
    codfilialefatturapo,
    shipperncl,
    consigneencl,
    flgportale,
    dataordine,
    rifnave,
    prontezza,
    hubid,
    datpickup
  FROM 
    custom_tm_logistic.entrate;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_fd" id="Function_2b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_fd()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    codice,
    fd,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  FROM 
    custom_tm_logistic.fd;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_imballi" id="Function_dcf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_imballi()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    codimballo,
    desimballo,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  FROM 
    custom_tm_logistic.imballi;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_magazzini" id="Function_256f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_magazzini()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    codice,
    descrizione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    localita,
    jguid
  FROM 
    custom_tm_logistic.magazzini;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_marche" id="Function_1985" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_marche()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    codmarca,
    marca,
    codicemerce,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  FROM 
    custom_tm_logistic.marche;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_merci" id="Function_167a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_merci()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    codice,
    merce,
    codcategoria,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    flgportale,
    jguid
  FROM 
    custom_tm_logistic.merci;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_tipi_documento" id="Function_1045" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_tipi_documento()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    tipodocumento,
    descrizione,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  FROM 
    custom_tm_logistic.tipi_documento;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_sel_uffici" id="Function_d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_sel_uffici()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    codufficio,
    desufficio,
    datainserimento,
    codutente,
    utenteultimamodifica,
    dataultimamodifica,
    jguid
  FROM 
    custom_tm_logistic.uffici;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_upd_clifo" id="Function_1ccd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_clifo(p_codice character varying, p_ragionesoc character varying, p_ragionesoc2 character varying, p_tipo character varying, p_indirizzo character varying, p_cap character varying, p_localita character varying, p_provincia character varying, p_paiv character varying, p_tel character varying, p_fax character varying, p_email character varying, p_mincnt20 numeric, p_mincnt40 numeric, p_codcliente character varying, p_flgnoassicurazione character, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_nazione character varying, p_tipoimportazione character, p_importot1 numeric, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.clifo SET
    ragionesoc = p_ragionesoc,
    ragionesoc2 = p_ragionesoc2,
    tipo = p_tipo,
    indirizzo = p_indirizzo,
    cap = p_cap,
    localita = p_localita,
    provincia = p_provincia,
    paiv = p_paiv,
    tel = p_tel,
    fax = p_fax,
    email = p_email,
    mincnt20 = p_mincnt20,
    mincnt40 = p_mincnt40,
    codcliente = p_codcliente,
    flgnoassicurazione = p_flgnoassicurazione,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    nazione = p_nazione,
    tipoimportazione = p_tipoimportazione,
    importot1 = p_importot1,
    jguid = p_jguid
  WHERE 
    (codice = p_codice) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="12" type="varchar" />
			<input_param name="p_ragionesoc" jt="12" type="varchar" />
			<input_param name="p_ragionesoc2" jt="12" type="varchar" />
			<input_param name="p_tipo" jt="12" type="varchar" />
			<input_param name="p_indirizzo" jt="12" type="varchar" />
			<input_param name="p_cap" jt="12" type="varchar" />
			<input_param name="p_localita" jt="12" type="varchar" />
			<input_param name="p_provincia" jt="12" type="varchar" />
			<input_param name="p_paiv" jt="12" type="varchar" />
			<input_param name="p_tel" jt="12" type="varchar" />
			<input_param name="p_fax" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_mincnt20" jt="2" type="numeric" />
			<input_param name="p_mincnt40" jt="2" type="numeric" />
			<input_param name="p_codcliente" jt="12" type="varchar" />
			<input_param name="p_flgnoassicurazione" jt="1" type="bpchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_nazione" jt="12" type="varchar" />
			<input_param name="p_tipoimportazione" jt="1" type="bpchar" />
			<input_param name="p_importot1" jt="2" type="numeric" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_cntr_type" id="Function_2130" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_cntr_type(p_cod_cntr character varying, p_des_cntr character varying, p_siz_cntr character varying, p_gg_franchigia integer, p_tariffa integer, p_thcimp double precision, p_thcval character varying, p_tarifpri integer, p_gg_prirata integer, p_max_weight double precision, p_max_volume double precision, p_lunghezza double precision, p_larghezza double precision, p_altezza double precision, p_lunghezza_interna double precision, p_lunghezza_allaporta double precision, p_larghezza_interna double precision, p_larghezza_allaporta double precision, p_altezza_interna double precision, p_altezza_allaporta double precision, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.cntr_type SET
    des_cntr = p_des_cntr,
    siz_cntr = p_siz_cntr,
    gg_franchigia = p_gg_franchigia,
    tariffa = p_tariffa,
    thcimp = p_thcimp,
    thcval = p_thcval,
    tarifpri = p_tarifpri,
    gg_prirata = p_gg_prirata,
    max_weight = p_max_weight,
    max_volume = p_max_volume,
    lunghezza = p_lunghezza,
    larghezza = p_larghezza,
    altezza = p_altezza,
    lunghezza_interna = p_lunghezza_interna,
    lunghezza_allaporta = p_lunghezza_allaporta,
    larghezza_interna = p_larghezza_interna,
    larghezza_allaporta = p_larghezza_allaporta,
    altezza_interna = p_altezza_interna,
    altezza_allaporta = p_altezza_allaporta,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    jguid = p_jguid
  WHERE 
    (cod_cntr = p_cod_cntr) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_cod_cntr" jt="12" type="varchar" />
			<input_param name="p_des_cntr" jt="12" type="varchar" />
			<input_param name="p_siz_cntr" jt="12" type="varchar" />
			<input_param name="p_gg_franchigia" jt="4" type="int4" />
			<input_param name="p_tariffa" jt="4" type="int4" />
			<input_param name="p_thcimp" jt="8" type="float8" />
			<input_param name="p_thcval" jt="12" type="varchar" />
			<input_param name="p_tarifpri" jt="4" type="int4" />
			<input_param name="p_gg_prirata" jt="4" type="int4" />
			<input_param name="p_max_weight" jt="8" type="float8" />
			<input_param name="p_max_volume" jt="8" type="float8" />
			<input_param name="p_lunghezza" jt="8" type="float8" />
			<input_param name="p_larghezza" jt="8" type="float8" />
			<input_param name="p_altezza" jt="8" type="float8" />
			<input_param name="p_lunghezza_interna" jt="8" type="float8" />
			<input_param name="p_lunghezza_allaporta" jt="8" type="float8" />
			<input_param name="p_larghezza_interna" jt="8" type="float8" />
			<input_param name="p_larghezza_allaporta" jt="8" type="float8" />
			<input_param name="p_altezza_interna" jt="8" type="float8" />
			<input_param name="p_altezza_allaporta" jt="8" type="float8" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_documenti" id="Function_194f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_documenti(p_tipodichiarazione character varying, p_descrizione character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.documenti SET
    descrizione = p_descrizione,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica
  WHERE 
    (tipodichiarazione = p_tipodichiarazione) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_tipodichiarazione" jt="12" type="varchar" />
			<input_param name="p_descrizione" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
		</function>
		<function name="sp_upd_entrate" id="Function_703" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_entrate(p_anno smallint, p_num_entrata integer, p_pg integer, p_flgdefinitiva character, p_codutente character varying, p_datainserimento timestamp without time zone, p_typeexport character, p_tipotrasporto character, p_flgfull character, p_flgitaest character, p_flgcoind character, p_data_entrata timestamp without time zone, p_cod_nave character varying, p_dataviaggio timestamp without time zone, p_n_viaggio character varying, p_codcompagnia integer, p_cod_pol character varying, p_cod_pod character varying, p_codorigine character varying, p_booking character varying, p_terminalritiro character varying, p_terminalconsegna character varying, p_dataconsegna timestamp without time zone, p_noteposizionamento character varying, p_codmagazzino character varying, p_ggfranchigia smallint, p_data_scad_franch timestamp without time zone, p_coddepositante character varying, p_codfornitore character varying, p_coddestinatario character varying, p_codvettore character varying, p_tipodichiarazione character varying, p_numdocumento character varying, p_seriedocumento character varying, p_datadocumento timestamp without time zone, p_codufficioemissione character varying, p_tipomezzoentrata character varying, p_numeroa1 integer, p_cina1 character varying, p_dataa1 timestamp without time zone, p_bldeposito integer, p_tipomerce character, p_tipodocalli character varying, p_datascadenza timestamp without time zone, p_vocedoganale character varying, p_regime character varying, p_valore numeric, p_fd character varying, p_nfattura integer, p_importofattura numeric, p_note character varying, p_note2 character varying, p_note3 character varying, p_potesta character varying, p_progressivopratica integer, p_annopratica character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_flgmetal character, p_numfattura character varying, p_datafattura timestamp without time zone, p_tipoentrata character, p_annotp character varying, p_progressivotp integer, p_ppgtp smallint, p_codattivitatp character varying, p_codfilialetp character varying, p_ntrackingvettore character varying, p_valutafattura character varying, p_valorefattura numeric, p_cambiofattura numeric, p_tipocondizione character varying, p_mrn character varying, p_flgvisibileinternet character, p_codfornitoregpm character varying, p_immaginegpm character varying, p_fornitoregpm character varying, p_flgnazionale character, p_flgportoassegnato character, p_importovettore numeric, p_prioritancl character varying, p_annofatturapo character varying, p_contatorefatturapo integer, p_codfilialefatturapo character varying, p_shipperncl character varying, p_consigneencl character varying, p_flgportale character, p_dataordine timestamp without time zone, p_rifnave character varying, p_prontezza timestamp without time zone, p_hubid character varying, p_datpickup timestamp without time zone)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  i bigint = 0; 
BEGIN
  select into i count(1)  from custom_tm_logistic.entrate
     where anno = p_anno and  num_entrata = p_num_entrata and  pg = p_pg;  
if i = 0 then
  UPDATE custom_tm_logistic.entrate SET
    flgdefinitiva = p_flgdefinitiva,
    codutente = p_codutente,
    datainserimento = p_datainserimento,
    typeexport = p_typeexport,
    tipotrasporto = p_tipotrasporto,
    flgfull = p_flgfull,
    flgitaest = p_flgitaest,
    flgcoind = p_flgcoind,
    data_entrata = p_data_entrata,
    cod_nave = p_cod_nave,
    dataviaggio = p_dataviaggio,
    n_viaggio = p_n_viaggio,
    codcompagnia = p_codcompagnia,
    cod_pol = p_cod_pol,
    cod_pod = p_cod_pod,
    codorigine = p_codorigine,
    booking = p_booking,
    terminalritiro = p_terminalritiro,
    terminalconsegna = p_terminalconsegna,
    dataconsegna = p_dataconsegna,
    noteposizionamento = p_noteposizionamento,
    codmagazzino = p_codmagazzino,
    ggfranchigia = p_ggfranchigia,
    data_scad_franch = p_data_scad_franch,
    coddepositante = p_coddepositante,
    codfornitore = p_codfornitore,
    coddestinatario = p_coddestinatario,
    codvettore = p_codvettore,
    tipodichiarazione = p_tipodichiarazione,
    numdocumento = p_numdocumento,
    seriedocumento = p_seriedocumento,
    datadocumento = p_datadocumento,
    codufficioemissione = p_codufficioemissione,
    tipomezzoentrata = p_tipomezzoentrata,
    numeroa1 = p_numeroa1,
    cina1 = p_cina1,
    dataa1 = p_dataa1,
    bldeposito = p_bldeposito,
    tipomerce = p_tipomerce,
    tipodocalli = p_tipodocalli,
    datascadenza = p_datascadenza,
    vocedoganale = p_vocedoganale,
    regime = p_regime,
    valore = p_valore,
    fd = p_fd,
    nfattura = p_nfattura,
    importofattura = p_importofattura,
    note = p_note,
    note2 = p_note2,
    note3 = p_note3,
    potesta = p_potesta,
    progressivopratica = p_progressivopratica,
    annopratica = p_annopratica,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    flgmetal = p_flgmetal,
    numfattura = p_numfattura,
    datafattura = p_datafattura,
    tipoentrata = p_tipoentrata,
    annotp = p_annotp,
    progressivotp = p_progressivotp,
    ppgtp = p_ppgtp,
    codattivitatp = p_codattivitatp,
    codfilialetp = p_codfilialetp,
    ntrackingvettore = p_ntrackingvettore,
    valutafattura = p_valutafattura,
    valorefattura = p_valorefattura,
    cambiofattura = p_cambiofattura,
    tipocondizione = p_tipocondizione,
    mrn = p_mrn,
    flgvisibileinternet = p_flgvisibileinternet,
    codfornitoregpm = p_codfornitoregpm,
    immaginegpm = p_immaginegpm,
    fornitoregpm = p_fornitoregpm,
    flgnazionale = p_flgnazionale,
    flgportoassegnato = p_flgportoassegnato,
    importovettore = p_importovettore,
    prioritancl = p_prioritancl,
    annofatturapo = p_annofatturapo,
    contatorefatturapo = p_contatorefatturapo,
    codfilialefatturapo = p_codfilialefatturapo,
    shipperncl = p_shipperncl,
    consigneencl = p_consigneencl,
    flgportale = p_flgportale,
    dataordine = p_dataordine,
    rifnave = p_rifnave,
    prontezza = p_prontezza,
    hubid = p_hubid,
    datpickup = p_datpickup
  WHERE 
    (anno = p_anno) AND
    (num_entrata = p_num_entrata) AND
    (pg = p_pg) ;
  end if; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_anno" jt="5" type="int2" />
			<input_param name="p_num_entrata" jt="4" type="int4" />
			<input_param name="p_pg" jt="4" type="int4" />
			<input_param name="p_flgdefinitiva" jt="1" type="bpchar" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_typeexport" jt="1" type="bpchar" />
			<input_param name="p_tipotrasporto" jt="1" type="bpchar" />
			<input_param name="p_flgfull" jt="1" type="bpchar" />
			<input_param name="p_flgitaest" jt="1" type="bpchar" />
			<input_param name="p_flgcoind" jt="1" type="bpchar" />
			<input_param name="p_data_entrata" jt="93" type="timestamp" />
			<input_param name="p_cod_nave" jt="12" type="varchar" />
			<input_param name="p_dataviaggio" jt="93" type="timestamp" />
			<input_param name="p_n_viaggio" jt="12" type="varchar" />
			<input_param name="p_codcompagnia" jt="4" type="int4" />
			<input_param name="p_cod_pol" jt="12" type="varchar" />
			<input_param name="p_cod_pod" jt="12" type="varchar" />
			<input_param name="p_codorigine" jt="12" type="varchar" />
			<input_param name="p_booking" jt="12" type="varchar" />
			<input_param name="p_terminalritiro" jt="12" type="varchar" />
			<input_param name="p_terminalconsegna" jt="12" type="varchar" />
			<input_param name="p_dataconsegna" jt="93" type="timestamp" />
			<input_param name="p_noteposizionamento" jt="12" type="varchar" />
			<input_param name="p_codmagazzino" jt="12" type="varchar" />
			<input_param name="p_ggfranchigia" jt="5" type="int2" />
			<input_param name="p_data_scad_franch" jt="93" type="timestamp" />
			<input_param name="p_coddepositante" jt="12" type="varchar" />
			<input_param name="p_codfornitore" jt="12" type="varchar" />
			<input_param name="p_coddestinatario" jt="12" type="varchar" />
			<input_param name="p_codvettore" jt="12" type="varchar" />
			<input_param name="p_tipodichiarazione" jt="12" type="varchar" />
			<input_param name="p_numdocumento" jt="12" type="varchar" />
			<input_param name="p_seriedocumento" jt="12" type="varchar" />
			<input_param name="p_datadocumento" jt="93" type="timestamp" />
			<input_param name="p_codufficioemissione" jt="12" type="varchar" />
			<input_param name="p_tipomezzoentrata" jt="12" type="varchar" />
			<input_param name="p_numeroa1" jt="4" type="int4" />
			<input_param name="p_cina1" jt="12" type="varchar" />
			<input_param name="p_dataa1" jt="93" type="timestamp" />
			<input_param name="p_bldeposito" jt="4" type="int4" />
			<input_param name="p_tipomerce" jt="1" type="bpchar" />
			<input_param name="p_tipodocalli" jt="12" type="varchar" />
			<input_param name="p_datascadenza" jt="93" type="timestamp" />
			<input_param name="p_vocedoganale" jt="12" type="varchar" />
			<input_param name="p_regime" jt="12" type="varchar" />
			<input_param name="p_valore" jt="2" type="numeric" />
			<input_param name="p_fd" jt="12" type="varchar" />
			<input_param name="p_nfattura" jt="4" type="int4" />
			<input_param name="p_importofattura" jt="2" type="numeric" />
			<input_param name="p_note" jt="12" type="varchar" />
			<input_param name="p_note2" jt="12" type="varchar" />
			<input_param name="p_note3" jt="12" type="varchar" />
			<input_param name="p_potesta" jt="12" type="varchar" />
			<input_param name="p_progressivopratica" jt="4" type="int4" />
			<input_param name="p_annopratica" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_flgmetal" jt="1" type="bpchar" />
			<input_param name="p_numfattura" jt="12" type="varchar" />
			<input_param name="p_datafattura" jt="93" type="timestamp" />
			<input_param name="p_tipoentrata" jt="1" type="bpchar" />
			<input_param name="p_annotp" jt="12" type="varchar" />
			<input_param name="p_progressivotp" jt="4" type="int4" />
			<input_param name="p_ppgtp" jt="5" type="int2" />
			<input_param name="p_codattivitatp" jt="12" type="varchar" />
			<input_param name="p_codfilialetp" jt="12" type="varchar" />
			<input_param name="p_ntrackingvettore" jt="12" type="varchar" />
			<input_param name="p_valutafattura" jt="12" type="varchar" />
			<input_param name="p_valorefattura" jt="2" type="numeric" />
			<input_param name="p_cambiofattura" jt="2" type="numeric" />
			<input_param name="p_tipocondizione" jt="12" type="varchar" />
			<input_param name="p_mrn" jt="12" type="varchar" />
			<input_param name="p_flgvisibileinternet" jt="1" type="bpchar" />
			<input_param name="p_codfornitoregpm" jt="12" type="varchar" />
			<input_param name="p_immaginegpm" jt="12" type="varchar" />
			<input_param name="p_fornitoregpm" jt="12" type="varchar" />
			<input_param name="p_flgnazionale" jt="1" type="bpchar" />
			<input_param name="p_flgportoassegnato" jt="1" type="bpchar" />
			<input_param name="p_importovettore" jt="2" type="numeric" />
			<input_param name="p_prioritancl" jt="12" type="varchar" />
			<input_param name="p_annofatturapo" jt="12" type="varchar" />
			<input_param name="p_contatorefatturapo" jt="4" type="int4" />
			<input_param name="p_codfilialefatturapo" jt="12" type="varchar" />
			<input_param name="p_shipperncl" jt="12" type="varchar" />
			<input_param name="p_consigneencl" jt="12" type="varchar" />
			<input_param name="p_flgportale" jt="1" type="bpchar" />
			<input_param name="p_dataordine" jt="93" type="timestamp" />
			<input_param name="p_rifnave" jt="12" type="varchar" />
			<input_param name="p_prontezza" jt="93" type="timestamp" />
			<input_param name="p_hubid" jt="12" type="varchar" />
			<input_param name="p_datpickup" jt="93" type="timestamp" />
		</function>
		<function name="sp_upd_fd" id="Function_1281" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_fd(p_codice integer, p_fd character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.fd SET
    fd = p_fd,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    jguid = p_jguid
  WHERE 
    (codice = p_codice) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="4" type="int4" />
			<input_param name="p_fd" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_imballi" id="Function_1534" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_imballi(p_codimballo character varying, p_desimballo character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.imballi SET
    desimballo = p_desimballo,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    jguid = p_jguid
  WHERE 
    (codimballo = p_codimballo) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codimballo" jt="12" type="varchar" />
			<input_param name="p_desimballo" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_magazzini" id="Function_2233" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_magazzini(p_codice character varying, p_descrizione character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_localita character varying, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.magazzini SET
    descrizione = p_descrizione,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    localita = p_localita,
    jguid = p_jguid
  WHERE 
    (codice = p_codice) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="12" type="varchar" />
			<input_param name="p_descrizione" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_localita" jt="12" type="varchar" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_marche" id="Function_bfa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_marche(p_codmarca integer, p_marca character varying, p_codicemerce integer, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.marche SET
    marca = p_marca,
    codicemerce = p_codicemerce,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    jguid = p_jguid
  WHERE 
    (codmarca = p_codmarca) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codmarca" jt="4" type="int4" />
			<input_param name="p_marca" jt="12" type="varchar" />
			<input_param name="p_codicemerce" jt="4" type="int4" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_merci" id="Function_21b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_merci(p_codice integer, p_merce character varying, p_codcategoria integer, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_flgportale character, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.merci SET
    merce = p_merce,
    codcategoria = p_codcategoria,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    flgportale = p_flgportale,
    jguid = p_jguid
  WHERE 
    (codice = p_codice) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codice" jt="4" type="int4" />
			<input_param name="p_merce" jt="12" type="varchar" />
			<input_param name="p_codcategoria" jt="4" type="int4" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_flgportale" jt="1" type="bpchar" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_tipi_documento" id="Function_1886" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_tipi_documento(p_tipodocumento character varying, p_descrizione character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.tipi_documento SET
    descrizione = p_descrizione,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    jguid = p_jguid
  WHERE 
    (tipodocumento = p_tipodocumento) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_tipodocumento" jt="12" type="varchar" />
			<input_param name="p_descrizione" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="sp_upd_uffici" id="Function_1b29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.sp_upd_uffici(p_codufficio character varying, p_desufficio character varying, p_datainserimento timestamp without time zone, p_codutente character varying, p_utenteultimamodifica character varying, p_dataultimamodifica timestamp without time zone, p_jguid uuid)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE custom_tm_logistic.uffici SET
    desufficio = p_desufficio,
    datainserimento = p_datainserimento,
    codutente = p_codutente,
    utenteultimamodifica = p_utenteultimamodifica,
    dataultimamodifica = p_dataultimamodifica,
    jguid = p_jguid
  WHERE 
    (codufficio = p_codufficio) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_codufficio" jt="12" type="varchar" />
			<input_param name="p_desufficio" jt="12" type="varchar" />
			<input_param name="p_datainserimento" jt="93" type="timestamp" />
			<input_param name="p_codutente" jt="12" type="varchar" />
			<input_param name="p_utenteultimamodifica" jt="12" type="varchar" />
			<input_param name="p_dataultimamodifica" jt="93" type="timestamp" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
		</function>
		<function name="update_documents" id="Function_c85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.update_documents()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  i integer;
  j integer; 
  rec record; 
  curaa cursor for select h.id, a.an_address
  	from documents.heads h inner join anagraph.anagraphs a on a.anagraph_id = h.anagraph_id
  	and a.an_address is not null and h.dest_address is null;  
	
  curap cursor for select h.id, a.an_postal_code
    	from documents.heads h inner join anagraph.anagraphs a on a.anagraph_id = h.anagraph_id
  	and a.an_postal_code is not null and h.dest_postal_code is null;  
	
  curat cursor for select h.id, a.an_town
    	from documents.heads h inner join anagraph.anagraphs a on a.anagraph_id = h.anagraph_id
  	and a.an_town is not null and h.dest_town is null;
	
  curas cursor for select h.id, a.an_state_province
    from documents.heads h inner join anagraph.anagraphs a on a.anagraph_id = h.anagraph_id
  	and a.an_state_province is not null and h.dest_state_province is null;
	
  curai cursor for select h.id, a.an_iso_country_code2
  	from documents.heads h inner join anagraph.anagraphs a on a.anagraph_id = h.anagraph_id
  	and a.an_iso_country_code2 is not null and h.dest_country_iso is null;
  -- pro forma payments 
  curpp cursor for select s.id, t.codpagamento, a.description, a.endmonth, a.months, a.days
		from documents.heads s
		inner join custom_tm_logistic.pretestafatt t on t.jguid = s.jguid
		inner join accounting.payment_terms a on t.codpagamento = a.code
	    where t.codpagamento is not null and s.payment_terms_des is null; 
		
   curfp cursor for	
   select s.id, t.codpagamento, a.description, a.endmonth, a.months, a.days
		from documents.heads s
		inner join custom_tm_logistic.testafatt t on t.jguid = s.jguid
		inner join accounting.payment_terms a on t.codpagamento = a.code	
		where t.codpagamento is not null and s.payment_terms_des is null; 
		
currv cursor for		
select r.id, r.vat_rate, r.vat_code, codiva, perciva, v.description
 from documents.rows r
	inner join custom_tm_logistic.precorpofatt c on c.jguid = r.jguid
	inner join accounting.vat_codes v on v.code = r.vat_code 
	where r.vat_description is null ;  
	
curfv cursor for	
select r.id, r.vat_rate, r.vat_code, codiva, perciva, v.description
 from documents.rows r
	inner join custom_tm_logistic.corpofatt c on c.jguid = r.jguid
	inner join accounting.vat_codes v on v.code = r.vat_code 
	where r.vat_description is null ;
	
curdc cursor for	
select h.id, h.currency_id, c.currency_code, c.currency_name from documents.heads h	
   inner join jpublic.currencies c on c.currency_id = h.currency_id
   where h.currency_code is null or h.currency_description is null; 
   
currc cursor for	
select h.id, h.currency_id, c.currency_code, c.currency_name from documents.rows h	
   inner join jpublic.currencies c on c.currency_id = h.currency_id
   where h.currency_code is null or h.currency_description is null; 
   
curda cursor for 
select doc_id, sum(v.taxable_amount) as taxable_amount, sum(v.taxes) as taxes, sum(v.amount) as amount
  from documents.vat_amounts v
     inner join documents.heads h on h.id = doc_id
  where h.taxable_amount is null 
  group by doc_id;
  
curwh cursor for
select d.id,  a.anagraph_id,  a.an_last_name, d.holder_town, a.an_town, a.an_address,
       a.an_state_province,  a.an_postal_code
from 
	documents.heads d	
	inner join anagraph.anagraphs a on a.anagraph_id = d.holder_id
	where
	(
	 (holder_town is null and a.an_town is not null)
	 or
	 (holder_address is null and a.an_address is not null)
	); 
	
curws cursor for	
select id, warehouse_location_id, location_name, v.name
from documents.heads h
  inner join shipping.vessels v on v.vessel_id = warehouse_location_id
where h.type_id = 20 and v.name <> location_name; 
curre cursor for 
select e.jguid, r.type_id, r.id 
from custom_tm_logistic.entrate_righe e
	inner join documents.rows r on r.jguid = e.jguid
	where r.type_id is null or r.type_id = 0; 
	
curhs cursor for 
select id, search_index,  nvl(doc_number, '') || nvl(doc_year::character varying, '') || ' ' || nvl(dest_name, '') 
        || ' ' || nvl(dest_town, '') || ' ' || nvl(dest_postal_code, '') || ' ' || nvl(location_name, '') 
		|| ' ' || nvl(dest_vat_number, '') || ' ' || nvl(holder_name, '') || ' ' || nvl(holder_town, '')
		|| ' ' || nvl(po_number, '') as search_text
from 
  documents.heads r ;
  
curtp cursor for select t.jguid, progressivo
  	from custom_tm_logistic.testatapratiche t inner join  logistic.shipments s
	  on  s.jguid = t.jguid
	 where s.work_number is null;
begin
  i := 0; 
  j := 0; 
  
 open curtp; 
  loop
  	fetch curtp into rec; 
    exit when not found;
	  i := i + 1; 
    		update logistic.shipments s set 
				work_number = rec.progressivo
      		where s.jguid = rec.jguid;
   end loop; 
   
  j := j + i; 
  raise notice 'shipment found progressive number indexes: %', i;
  i := 0;    
  
  
  open curhs; 
  loop
  	fetch curhs into rec; 
    exit when not found;
		if rec.search_index <> rec.search_text then 
    		i := i + 1; 
    		update documents.heads h set 
				search_index = rec.search_text
      		where h.id = rec.id;
	 	end if; 
   end loop; 
   
  j := j + i; 
  raise notice 'record found heads indexes: %', i; 
  i := 0;  
  
  open curre; 
  loop
  	fetch curre into rec; 
    exit when not found;
    i := i + 1; 
    update documents.rows h set 
		type_id = 2
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found rows type commodities: %', i; 
  i := 0;
  
  open curws; 
  loop
  	fetch curws into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set 
		location_name =  rec.name
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found heads vessels: %', i; 
  i := 0;
  
  open curwh; 
  loop
  	fetch curwh into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set 
		holder_name =  rec.an_last_name,
		holder_town = rec.an_town,
		holder_address = rec.an_address,
		holder_state_province = rec.an_state_province,
		holder_postal_code = rec.an_postal_code
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found heads holders: %', i; 
  i := 0;
  
  open curda; 
  loop
  	fetch curda into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set 
		taxable_amount =  rec.taxable_amount,
		amount = rec.amount,
		vat_taxes = rec.taxes
      where h.id = rec.doc_id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found heads amounts: %', i; 
  i := 0;
  
  open currc; 
  loop
  	fetch currc into rec; 
    exit when not found;
    i := i + 1; 
    update documents.rows h set 
		currency_description =  rec.currency_name,
		currency_code = rec.currency_code
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found rows currency_description: %', i; 
  i := 0;
  
  open curdc; 
  loop
  	fetch curdc into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set 
		currency_description =  rec.currency_name,
		currency_code = rec.currency_code
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found heds currency_description: %', i; 
  i := 0;
  
  open currv; 
  loop
  	fetch currv into rec; 
    exit when not found;
    i := i + 1; 
    update documents.rows h set vat_description =  rec.description
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found pro forma vat_description: %', i; 
  i := 0;
  
  open curfv; 
  loop
  	fetch curfv into rec; 
    exit when not found;
    i := i + 1; 
    update documents.rows h set vat_description =  rec.description
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found invoice vat_description: %', i; 
  i := 0;
  
  
  
  open curai; 
  loop
  	fetch curai into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set dest_country_iso =  rec.an_iso_country_code2
      where h.id = rec.id;
   end loop; 
   
  j := j +i; 
  raise notice 'record found iso_country_code2: %', i; 
  i := 0;
  
  open curpp; 
  loop
  	fetch curpp into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set 
	   payment_terms_des = rec.description,
	   payment_term_code = rec.codpagamento
      where h.id = rec.id;
   end loop;   
  
  j := j +i; 
  raise notice 'record found pro forma payments: %', i; 
  i := 0;
  
  open curfp; 
  loop
  	fetch curfp into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set 
	   payment_terms_des = rec.description,
	   payment_term_code = rec.codpagamento
      where h.id = rec.id;
   end loop;   
  
  j := j +i; 
  raise notice 'record found invoice payments: %', i; 
  i := 0;
  
  open curaa; 
  loop
  	fetch curaa into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set dest_address =  rec.an_address
      where h.id = rec.id;
   end loop; 
   
  raise notice 'record found dest_address: %', i; 
   
  open curap; 
  loop
  	fetch curap into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set dest_postal_code =  rec.an_postal_code
      where h.id = rec.id;
   end loop;  
   
   raise notice 'record found dest_postal_code: %', i; 
   
  open curat; 
  loop
  	fetch curat into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set dest_town =  rec.an_town
      where h.id = rec.id;
   end loop;
   
   raise notice 'record found dest_town: %', i; 
   
  open curas; 
  loop
  	fetch curas into rec; 
    exit when not found;
    i := i + 1; 
    update documents.heads h set dest_state_province =  rec.an_state_province
      where h.id = rec.id;
   end loop;  
   
update documents.heads set inventory = false
where
inventory = true and 
id in 
( select id from documents.heads h 
     inner join  custom_tm_logistic.entrate_righe r
     on h.doc_number = r.num_entrata::character varying and h.doc_year = r.anno
  where colliesistenza = 0 );
  
update documents.heads set inventory = true
where
inventory = false and 
id in 
(select id
 from documents.heads h 
     inner join  custom_tm_logistic.entrate_righe r
     on h.doc_number = r.num_entrata::character varying and h.doc_year = r.anno
 where colliesistenza > 0);   
   
update documents.heads h set user_insert = 
(select db_user_id from 
  custom_tm_logistic.entrate e inner join custom_tm_logistic.translate_db_users u  
  on trim(e.codutente) = u.old_user
  where  e.jguid = h.jguid)
  where exists (select 1 from custom_tm_logistic.entrate f where f.jguid = h.jguid and f.codutente is not null)
  and h.user_insert is null;   
  
-- Attachments 
	select into i count(1)  from custom_tm_logistic.new_docarchiviatientrate_view; 
	
	j := j + i;
	
insert into cloud.blob_files 
(blob_file, blob_size, db_schema_id , ispublic, cblb_jguid, cblb_deleted, file_ext, filename, directory_id, jguid, flg_stored )
select 
null, -- blob_file
0, -- blob_size
33, -- db_schema_id
false, -- ispublic
'{' || jguid  || '}', -- cblb_jguid
false, -- cblb_deleted
file_ext,   -- file_ext
nomefile, --  filename
directory_id, --directory_id
jguid, -- jguid
false -- flg_stored
from custom_tm_logistic.new_docarchiviatientrate_view; 

select into i count(1) from
(
select h.id, f.blob_id, f.jguid,  f.filename, f.file_ext, f.db_schema_id, f.description 
  FROM
  cloud.blob_files f
  JOIN custom_tm_logistic.docarchiviatientrate d ON 
    f.jguid = d.jguid
  INNER JOIN custom_tm_logistic.entrate e ON
      e.anno = d.anno AND d.num_entrata = e.num_entrata AND d.pg = e.pg
  JOIN documents.heads H  
      ON e.jguid = h.jguid 
) c
  where not exists
  (select 1 from documents.attachments a where
    a.doc_id = c.id and a.blob_id = c.blob_id);
	
j := j + i;
insert into documents.attachments 
(doc_id, blob_id , blob_jguid, filename, extension, db_schema_id, description  )
select * from
(
select h.id, f.blob_id, f.jguid,  f.filename, f.file_ext, f.db_schema_id, f.description 
  FROM
  cloud.blob_files f
  JOIN custom_tm_logistic.docarchiviatientrate d ON 
    f.jguid = d.jguid
  INNER JOIN custom_tm_logistic.entrate e ON
      e.anno = d.anno AND d.num_entrata = e.num_entrata AND d.pg = e.pg
  JOIN documents.heads H  
      ON e.jguid = h.jguid 
) c
  where not exists
  (select 1 from documents.attachments a where
    a.doc_id = c.id and a.blob_id = c.blob_id); 
   
insert into cloud.directories 
(directory_id, computer_id, db_schema_id, directory_name, directory_path, jguid, deleted )
select 
  nextval('cloud.cloud_directories_seq') as id, --directory_id 
  null,  --computer_id, 
  33, -- db_schema_id
  f.path, -- directory_name
  f.path, -- directory_path
  public.uuid_generate_v1mc(), -- jguid
  false -- deleted
from 
  workflow.workflows_folders f
where not exists
  (select 1 from cloud.directories c where c.computer_id is null and c.db_schema_id = 33 and c.directory_path = f.path );	
  
insert into cloud.blob_files 
(blob_file, blob_size, db_schema_id , ispublic, cblb_jguid, cblb_deleted, file_ext, filename, directory_id, jguid, flg_stored )
select 
null, -- blob_file
0, -- blob_size
33, -- db_schema_id
false, -- ispublic
'{' || jguid  || '}', -- cblb_jguid
false, -- cblb_deleted
file_ext,   -- file_ext
nomefile, --  filename
directory_id, --directory_id
jguid, -- jguid
false -- flg_stored
from custom_tm_logistic.new_docarchiviatipratiche_view;  
------- Vessels -----------------------------------------
declare
    f record;
BEGIN
	FOR f IN 
		SELECT h.id, e.jguid, e.cod_nave
		FROM
		documents.heads h INNER JOIN custom_tm_logistic.entrate e
 		ON h.jguid = e.jguid
		WHERE
		h.location_code is null
		AND
	    e.cod_nave is not null
	LOOP
	   j := j + i;
	  update documents.heads h
	    set location_code = f.cod_nave where id = f.id; 
	END LOOP; 
END;
declare
    f record;
BEGIN
	FOR f IN     
		select v.vessel_id, v.NAME,  v.code, h.id
		from 
		documents.heads h  join shipping.vessels v
  			on v.code = h.vessel_code
		where
		(h.vessel_name is null
		or
		h.vessel_id is null)
		LOOP
		    j := j + i;
  			update documents.heads set vessel_id = f.vessel_id, vessel_name = f.name
    		where id = f.id; 
		END LOOP;
END;
DECLARE
    f record;
BEGIN
	FOR f IN    
     SELECT  h.id, a.anagraph_id,  h.location_code, a.an_last_name
       FROM  documents.heads h inner join anagraph.anagraphs a
       ON a.an_code = h.location_code
     WHERE 
       h.warehouse_location_id is null
     OR
       h.warehouse_location_id <> a.anagraph_id
     LOOP
	   j := j + i;
       UPDATE documents.heads SET
         location_name = f.an_last_name, 
         warehouse_location_id = f.anagraph_id 
       WHERE
         id = f.id; 
     END LOOP;
 END;
------ End Vessels --------------------------------------
  
insert into workflow.attachments
(work_id, blob_id , blob_jguid, location, filename, extension, db_schema_id, description  )
select * from
(
select h.id, f.blob_id, f.jguid, 'G',  f.filename, f.file_ext, f.db_schema_id, d.note 
  FROM
  cloud.blob_files f
  JOIN custom_tm_logistic.documentiarchiviati d ON 
    f.jguid = d.jguid
  JOIN custom_tm_logistic.testatapratiche e on
	  e.anno = d.anno and d.progressivo = e.progressivo and d.progressivopraticagroupage = e.progressivopraticagroupage
	  and e.codattivita = d.codattivita and e.codfiliale = d.codfiliale
  JOIN workflow.workflows H  
      ON e.jguid = h.jguid 
) c
  where not exists
  (select 1 from workflow.attachments a where
   ( a.work_id = c.id and a.blob_id = c.blob_id) or (a.blob_jguid = c.jguid)
   );
   
   
   
   
return j; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="update_magazzino" id="Function_24e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION custom_tm_logistic.update_magazzino()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
begin
 raise notice 'record found: accounting.vat_codes';
insert into accounting.vat_codes (
code, description, vat_rate, jguid, db_schema_id
)
SELECT codice, descrizion, percentiva,  jguid, 33
  jguid
	FROM custom_tm_logistic.tabiva t where not exists
	 (select 1 from accounting.vat_codes c where c.jguid = t.jguid); 
	 
	 
 raise notice 'record found: workflow.levels';
insert into workflow.levels (
id, 
description, 
jguid, 
db_schema_id
)
SELECT codice::integer, 
       case when descrizione = '' then codice::character varying else descrizione end as description, 
       jguid, 
       33 as db_schema_id
FROM custom_tm_logistic.livelli l
where not exists
(select 1 from workflow.levels w where l.jguid = w.jguid); 
  -- first part *** items generation ***
  
  raise notice 'record found: jpublic.measure_units';
  
INSERT INTO jpublic.measure_units(
	db_schema_id, munit_code, munit_des, jguid)
    
SELECT 0, unitamisura, descrizione, jguid
	FROM custom_tm_logistic.unitamisura u
    where unitamisura not in (
    'USD', 'JPY', 'EUR', 'DKK', 'NOK', 'GBP', 'HK$', 'AU$'
    )
    and not exists
    (select 1 from jpublic.measure_units m where m.jguid = u.jguid );
	
 raise notice 'record found: jpublic.currencies';
    
INSERT INTO jpublic.currencies(
	currency_code, currency_name, jguid)
   
SELECT unitamisura, descrizione, jguid
	FROM custom_tm_logistic.unitamisura u
    where unitamisura in (
     'JPY',  'DKK', 'NOK',  'HK$', 'AU$'
    )
    and not exists
    (select 1 from jpublic.currencies c where c.jguid = u.jguid );
    
    --- *** brands ***
    INSERT INTO items.brands  (
	   db_schema_id,  brand_name, code, insert_date, update_date, jguid
       )
	SELECT 
	   33,  marca, codmarca,  datainserimento,  dataultimamodifica, jguid
	FROM 
	   custom_tm_logistic.marche m 
	where 
	   not exists (select 1 from items.brands b where b.jguid = m.jguid); 
    --- *** packages ***
    INSERT INTO 
	    items.package_types(
	         code, description, jguid, insert_date,   db_schema_id
		)
    SELECT 
	     codimballo, desimballo, jguid, datainserimento, 33
	FROM 
	    custom_tm_logistic.imballi i 
	where 
	   not exists (select 1 from items.package_types p where p.jguid = i.jguid ); 	
	   
-- Ship Owners --
insert into anagraph.anagraphs
(
  db_schema_id, anagraph_id, an_code, an_last_name, an_main_group_id, insert_date, jguid
)
SELECT 33 /*db_schema_id*/, null  /*anagraph_id*/,  codcompagnia  /*an_code*/, compagnia  /*an_last_name*/,  12 /*an_main_group_id = shipowners*/,
        datainserimento /* insert_date */, jguid
	FROM custom_tm_logistic.compagnie c
	where 
	not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid);
  -- *** Agenti IATA ***
  
insert into anagraph.anagraphs (
	an_code,  an_last_name,      an_address,  an_town, jguid, db_schema_id)
select 
	codiceiata, agente, indirizzoagente, indirizzo1agente,  jguid, 33
	FROM custom_tm_logistic.agentiiata i
where not exists
  (select 1 from anagraph.anagraphs  a where a.jguid = i.jguid);
  
--- *** Agenzie ***
INSERT INTO  anagraph.anagraphs 
(
	an_code, --1
	an_last_name, --2
	an_address, --3
	an_town, -- 4
	an_vat_numeric, --4
	an_phone, --5
	an_fax, --6
	update_date, --7
	jguid, --8
	db_schema_id, -- 9
	an_main_group_id -- 10
)
select 
	CodAgenzia as an_code, --1
	ragsocialeagenzia as an_last_name, --2
	Indirizzo1 as an_address, Indirizzo2 as an_town, --3
	PIva as an_vat_numeric, --4
	Telefono as an_phone, --5
	Fax as an_fax, --6
	DataUltimaModifica as update_date, --7
	jguid, --8
	33 as db_schema_id, -- 9
	20 as an_main_group_id-- 10
 from custom_tm_logistic.agenzie c
 where not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid);
  
update  anagraph.anagraphs 
	set db_schema_id = 33, an_main_group_id = 18 where an_code = '38.4.7044.001.3';
  -- *** Airlines ***
  
insert into anagraph.anagraphs
 (
   db_schema_id, anagraph_id, an_code, an_last_name, 
   an_address, an_town, an_vat_numeric, an_phone,
   an_fax, update_date,  custom_field_1, custom_field_2, 
   custom_field_3, an_email, custom_int_1, 
   an_main_group_id, jguid
 )
 
SELECT 
    33 /*db_schema_id*/, null /*anagraph_id*/, codcompagnia /*an_code*/, ragsocialecompagnia /*an_last_name*/, 
	indirizzo1/*an_address*/,  indirizzo2/*an_town*/, piva/*an_vat_numeric*/,  telefono/*an_phone*/,
    fax/*an_fax*/,  dataultimamodifica /*update_date*/, codiceaerea1 /*custom_field_1*/, codiceaerea2 /* custom_field_2 */, 
	codtariffamasteraereoflr /* custom_field_3 */, emailriferimento /* an_email */, scortaminawb /*custom_int_1*/ , 
	 17 /* an_main_group_id */,  jguid
	FROM custom_tm_logistic.pr_compagnie c
	where flgaerea = '1'
	and not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid )
	order by ragsocialecompagnia; 
	
-- 16 Magazzini	
	insert into anagraph.anagraphs
	(
		db_schema_id, anagraph_id, an_code, an_last_name, an_main_group_id, insert_date, jguid, update_date, an_town
	)
	SELECT 
		33 /* db_schema_id */, null  /* anagraph_id */,  codice  /* an_code */, descrizione  /* an_last_name */,  
		16 /* an_main_group_id = warehouses */, datainserimento /*  insert_date  */, jguid, dataultimamodifica, localita
	FROM 
		custom_tm_logistic.magazzini c
	where
		not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid);
	insert into anagraph.identities (db_schema_id, an_group_id, anagraph_id) 
	SELECT 
		33, 16, a.anagraph_id
	FROM 
		custom_tm_logistic.magazzini c 
      	inner join  anagraph.anagraphs a on a.jguid = c.jguid
	where 
		not exists (select 1 from anagraph.identities g where g.anagraph_id = a.anagraph_id and g.an_group_id = 16);
	
-- 13 From CliFo. -- vettori
insert 
    into anagraph.identities (db_schema_id, an_group_id, anagraph_id)
SELECT 
    33, 13, a.anagraph_id
FROM 
    custom_tm_logistic.clifo c
inner join 
     anagraph.anagraphs a on a.jguid = c.jguid
where 
    c.tipo = 'V'
    and not exists
     (select 1 from anagraph.identities g where g.anagraph_id = a.anagraph_id and g.an_group_id = 13); 
     
---  ** Vettori e corrieri
INSERT INTO  anagraph.anagraphs -- 13 carriers 
(
	an_last_name, --1
	an_address, --2
	an_postal_code, --3
	an_town, --4
	an_state_province, --5
    an_phone, --6
	an_fax, --7
	an_email, --8
	an_vat_numeric, --9
	jguid, -- 10
    db_schema_id, -- 11
    an_main_group_id -- 12 
) 
 select  
	Corriere an_last_name, --1
	-- FlgENAC char(1) NULL,
	INDIR1 || ', ' || INDIR2 as an_address, --2
	CAP as an_postal_code, --3
	LOCALITA as an_town, --4
	--COMUNE varchar(50) NULL,
	PROVINCIA as an_state_province, --5
	-- NAZIONE varchar(50) NULL,
	case when length(tel) <= 30 then tel else null end  as an_phone, --6
    case when length(fax) <= 30 then FAX else null end as an_fax, --7
	E_MailAddress as an_email, --8
	PAIV as an_vat_numeric, --9
	jguid, -- 10
    33 as db_schema_id, -- 11
    13 as an_main_group_id -- 12   	
 from custom_tm_logistic.corrieri c where localita is not null
 and not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid);  
	 
  -- *** Accounting Customers *** --
  
insert into anagraph.anagraphs
 (
   db_schema_id, anagraph_id, an_code, an_last_name, 
   an_address, an_town, an_postal_code, an_state_province,  
   custom_field_1, an_vat_numeric, an_phone, an_fax, an_email, 
   update_date,  custom_field_2, custom_field_3, an_main_group_id,  jguid
 )
SELECT  
    33 /*db_schema_id*/, null /*anagraph_id*/, codice /*an_code*/, ragionesoc /*an_last_name*/, 
	
	indir1 || ' ' || indir2 /*an_address*/,  localita /*an_town*/,  cap /*an_postal_code*/, provincia  /*an_state_province*/,
	
	nazione /*custom_field_1*/, paiv/*an_vat_numeric*/,  
	case when length(tel) > 30 then '' else tel end as an_phone/*an_phone*/, 
	case when length(fax) > 30 then '' else fax end as an_fax /*an_fax*/,  
	nvl(e_mailaddress, emailinviodocumenti)  /* an_email */, 
	
	dataultimamodifica /*update_date*/,  utenteultimamodifica /* custom_field_2 */, utente /* custom_field_3 */, 14 /* an_main_group_id */,  jguid
	
	FROM custom_tm_logistic.pr_clifo c
	where not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid) 
	order by codice; 
	
 
  -- *** 12 ShipOwners ***	
	
insert into anagraph.anagraphs
 (
   db_schema_id, anagraph_id, an_code, an_last_name, 
   an_address, an_town, an_vat_numeric, an_phone,
   an_fax, update_date,  custom_field_1, custom_field_2, 
   custom_field_3, an_email, custom_int_1, 
   an_main_group_id, jguid
 )
  
SELECT  
    33 /*db_schema_id*/, null /*anagraph_id*/, codcompagnia /*an_code*/, ragsocialecompagnia /*an_last_name*/, 
	indirizzo1/*an_address*/,  indirizzo2/*an_town*/, piva/*an_vat_numeric*/,  telefono/*an_phone*/,
    fax/*an_fax*/,  dataultimamodifica /*update_date*/, codiceaerea1 /*custom_field_1*/, codiceaerea2 /* custom_field_2 */, 
	codtariffamasteraereoflr /* custom_field_3 */, emailriferimento /* an_email */, scortaminawb /*custom_int_1*/ , 
	 12 /* an_main_group_id */,  jguid
	FROM custom_tm_logistic.pr_compagnie c
	where (flgaerea = '0' or flgaerea is null)  and codtariffamasteraereoflr is  null
	and not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid )
	order by ragsocialecompagnia; 
	
	insert into anagraph.identities 
		(db_schema_id, an_group_id, anagraph_id) 
	SELECT 
		33, 12, a.anagraph_id
	FROM custom_tm_logistic.pr_compagnie c 
      inner join  anagraph.anagraphs a on a.jguid = c.jguid
	where  (flgaerea = '0' or flgaerea is null)  and codtariffamasteraereoflr is  null
	and not exists 
				(select 1 from anagraph.identities g where g.anagraph_id = a.anagraph_id and g.an_group_id = 12);
  -- *** 16 Warehouses Anagraphs ***
  
	insert into anagraph.anagraphs
	(
		db_schema_id, anagraph_id, an_code, an_last_name, an_main_group_id, insert_date, jguid, update_date, an_town
	)
	SELECT 
		33 /* db_schema_id */, null  /* anagraph_id */,  codice  /* an_code */, descrizione  /* an_last_name */,  
		16 /* an_main_group_id = warehouses */, datainserimento /*  insert_date  */, jguid, dataultimamodifica, localita
	FROM 
		custom_tm_logistic.magazzini c
	where
		not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid);
  -- *** 13 Vettori = Carriers ***
  
	insert into anagraph.identities 
		(db_schema_id, an_group_id, anagraph_id) 
	SELECT 
		33, 13, a.anagraph_id
	FROM custom_tm_logistic.clifo c 
      inner join  anagraph.anagraphs a on a.jguid = c.jguid
	where c.tipo = 'V'
		and not exists 
				(select 1 from anagraph.identities g where g.anagraph_id = a.anagraph_id and g.an_group_id = 13);
	insert into anagraph.anagraphs
  		(db_schema_id, anagraph_id, an_code, an_last_name, an_main_group_id, insert_date, jguid)
  	SELECT 
  		33 /*db_schema_id*/, null  /*anagraph_id*/,  codcompagnia  /*an_code*/, compagnia  /*an_last_name*/,  
    	12 /*an_main_group_id = shipowners*/,    datainserimento /* insert_date */, jguid
	FROM 
		custom_tm_logistic.compagnie c
	where 
		not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid); 
		
	-- 12 ShipOwners
	insert into anagraph.anagraphs
	(
		db_schema_id, anagraph_id, an_code, an_last_name, an_main_group_id, insert_date, jguid
	)
	SELECT 33 /* db_schema_id */, null  /* anagraph_id */,  codcompagnia  /* an_code */, 
	    compagnia  /* an_last_name */,  12 /* an_main_group_id = shipowners */,
		datainserimento /*  insert_date  */, jguid
	FROM 
		custom_tm_logistic.compagnie c
	where
		not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid); 
		
UPDATE ANAGRAPH.ANAGRAPHS SET
AN_POSTAL_CODE = TRIM(UPPER(AN_POSTAL_CODE)) WHERE AN_POSTAL_CODE <> TRIM(UPPER(AN_POSTAL_CODE));
UPDATE ANAGRAPH.ANAGRAPHS SET
AN_TOWN = TRIM(UPPER(AN_TOWN)) WHERE AN_TOWN <> TRIM(UPPER(AN_TOWN));
--- *** Container Types ****
	INSERT INTO logistic.container_types(
		code, description, cntr_size, franchise_days, rate, thcimp, thcval, tarifpri, 
		prirate_days, max_weight, max_volume, cntr_length, cntr_width,
		cntr_height, internal_length, to_door_length, internal_width, to_door_width, 
		internal_heigth, to_door_heigth, insert_date,update_date, jguid)
	SELECT 
		cod_cntr, des_cntr, siz_cntr, gg_franchigia, tariffa, thcimp, thcval, tarifpri, 
		gg_prirata, max_weight, max_volume, lunghezza, larghezza, altezza,
		lunghezza_interna, lunghezza_allaporta, larghezza_interna, larghezza_allaporta, 
		altezza_interna, altezza_allaporta, datainserimento, dataultimamodifica, jguid
	FROM 
		custom_tm_logistic.cntr_type c 
	where 
		not exists (select 1 from logistic.container_types l where l.jguid = c.jguid); 
--- *** Inserimento Navi *** ---
INSERT INTO shipping.vessels
	(name, code, custom_char_3, 
	update_date, custom_char_1,custom_char_2, 
	--anagraph_id, 
	 jguid)							 
	-- net_tonnage, gross_tonnage, deadweight, insert_date, update_date, ins_id, upd_id, user_insert_id, user_update_id, local, passenger_limit, db_schema_id, jguid, deleted, notes)
SELECT  
	desnave /*name*/,  codnave /*code*/, flgdefinitiva /*custom_char_3*/, 
	dataultimamodifica /* update_date*/, utente /* custom_char_1 */, codclientecontabile /* custom_char_2 */, 
	--anagraph.get_id_by_code(codclientecontabile,  33) as anagraph_id,  
	jguid
    --viaggionave, dataviaggio, , pol, pod, codcompagnia, codlinea, progressivo, lastdateassigned, teus, utenteultimamodifica, , , codgruppo, jguid
FROM 
    custom_tm_logistic.navi n
    where not exists (select 1 from shipping.vessels a where a.jguid = n.jguid )
	and not exists  (select 1 from shipping.vessels a where a.code = n.codnave ); 
	
insert into anagraph.anagraphs
(
db_schema_id, 
jguid, 
an_last_name,
an_code,
update_date,	
an_main_group_id	
)
select 
33 as db_schema_id, 
jguid, 
name, 
code, 
update_date,
9 as an_group_id
from 
shipping.vessels v
where not exists
(select 1 from anagraph.anagraphs b where  b.jguid = v.jguid); 
	insert into anagraph.identities 
		(db_schema_id, an_group_id, anagraph_id) 
	SELECT 
		33, 9, a.anagraph_id
	FROM shipping.vessels c 
      inner join  anagraph.anagraphs a on a.jguid = c.jguid
	where 
		not exists 
				(select 1 from anagraph.identities g where g.anagraph_id = a.anagraph_id and g.an_group_id = 9);
-- inserimento items definitions
insert into items.definitions (db_schema_id,code,   model, insert_date, update_date, family_id, jguid, type_id, munit_id, description)
SELECT  33, codice, substring(merce, -5, 100), datainserimento,  dataultimamodifica, 130,  jguid, 2, 1, merce 
	FROM custom_tm_logistic.merci m 
	where 
	not exists (select 1 from items.definitions d where d.jguid = m.jguid); 
 
--- inserimento 'teste' delle Entrate
insert into documents.heads 
( 
  db_schema_id, doc_year,  doc_number, 
  doc_state, insert_date, 
  doc_date,  
  type_id, 
  in_out, 
  warehouse_location_id, 
  anagraph_id,
  holder_id, custom_field_2,
  carrier_id, custom_field_3,
  doc_ref_code, 
  notes1,notes2,notes3,purchase_order_number,
  update_date, 
  registry_code, 
  carrier_tracking_number,
  carrier_expenses_currency_id,
  custom_int_1,
  carrier_expenses,
  jguid
)
SELECT 
	33 /*db_schema_id*/,  anno /*doc_year*/, num_entrata /*doc_number*/, 
	flgdefinitiva::smallint /*doc_state*/,  datainserimento /*insert_date*/, 
	data_entrata /*doc_date*/, 
	20 as type_id, -- 
	1 as in_out, 
	shipping.vessels_get_id_by_code(cod_nave, 33) as vessel  , -- warehouse_location_id, 
    anagraph.get_id_by_code(codmagazzino, 16, 33) as office_id, -- anagraph_id,
	anagraph.get_id_by_code(codfornitore, 10, 33) as supplier_id, -- holder_id,  
	codfornitore, 
	anagraph.get_id_by_code(codvettore, 13, 33) as carrier_id, -- carrier_id,
	codvettore, 
	bldeposito /*doc_ref_code*/,  --tipomerce,  
	note, note2, note3, potesta,   
	dataultimamodifica  /*update_date*/, --numfattura, datafattura, 
	tipoentrata  /*registry_code*/, 
	-- annotp, progressivotp, ppgtp, codattivitatp, codfilialetp, 
	ntrackingvettore, /*  carrier_tracking_number,*/
	CASE WHEN valutafattura = 'EUR' then 1 WHEN valutafattura = 'USD' then 2 ELSE NULL END as currency_id, /*carrier_expenses_currency_id*/
	flgportoassegnato::integer, /*custom_int_1*/
	importovettore, /*carrier_expenses*/
	jguid
	FROM custom_tm_logistic.entrate e 
	where 
	not exists (select 1 from documents.heads  b where b.jguid = e.jguid)
	order by anno , num_entrata; 
------ fine della procedura --------------------------
-- holder (destination warehouse)
update documents.heads
set
dest_name = anagraph.get_name_by_id(anagraph_id)
where db_schema_id = 33 and dest_name is null;
update documents.heads
set
holder_name = anagraph.get_name_by_id(holder_id)
where db_schema_id = 33 and holder_name is null;
update documents.heads
set
carrier_name = anagraph.get_name_by_id(carrier_id)
where db_schema_id = 33 and carrier_name is null;
update documents.heads
set
location_name = anagraph.get_name_by_id(warehouse_location_id)
where db_schema_id = 33 and location_name is null;
------ inserimento righe delle entrate ---------------
insert into documents.rows   (
    doc_id, 
	item_id, 
    position,  
    doc_head_jguid, 
    jguid, 
    code, 
    model, 
    item_jguid, 
    delivered_qty,
    pallets,
    weight_on_delivery,
    weight_on_order, 
    weight_on_shipping,
    volume, 
    inventory_qty, 
    inventory_weight, 
    container_status, 
    customs_doc_type_id, 
    customs_doc_ref, 
   description, 
   price, 
  rights,
  purchase_order,
  insert_date , 
  custom_field_1 , 
  custom_field_2, 
  update_date,
  quantity, 
  size_weight, 
  size_length, 
  Size_height, 
  doc_origin_number, 
  doc_origin_date, 
  supplier_id,
  invoice_amount, 
  invoice_number,  
  invoice_date 
     )
SELECT  
  h.id as doc_id , 
  i.id,
  r.riga as position, --  d.position,  
  e.jguid as doc_head_jguid, 
  r.jguid as jguid, 
  codmerce as code, 
  m.merce as model, 
  m.jguid as item_jguid ,
  collientrate as delivered_qty , -- collientrateorig, packages
  plts as pallets, 
  pesoentrate as weight_on_delivery,
  pesoentrateorig as weight_on_order, 
  pesoriscontrato as weight_on_shipping,
  volume as volume, 
  colliesistenza as inventory_qty, 
  pesoesistenza as inventory_weight, 
  containerstatus as container_status ,  
  documents.types_get_id_by_code(tipodocumento, 33) as  customs_doc_type_id, 
  numerodocumentodog as customs_doc_ref, 
  r.note as description, 
  r.valore as price, 
  diritti as rights,
  po as purchase_order,
  r.datainserimento asinsert_date , 
  r.codutente as custom_field_1 , 
  r.utenteultimamodifica as custom_field_2, 
  r.dataultimamodifica as update_date,
  pezzi as quantity, 
  misuraw as size_weight, 
  misural as size_length, 
  misurah as size_height, 
  numddt as doc_origin_number, 
  dataddt as doc_origin_date, 
  anagraph.get_id_by_code(codfornitorerigo, 10, 33) as supplier_id,
  importofatturaf as invoice_amount, 
  numfatturaf as ref_invoice_number,  
  datafatturaf as ref_invoice_date
  
from 
custom_tm_logistic.entrate_righe r, 
custom_tm_logistic.entrate e, documents.heads h , 
custom_tm_logistic.merci m , items.definitions i
where
m.codice = r.codmerce 
  and h.jguid = e.jguid -- join entrate head
  and i.jguid = m.jguid -- join items merci
  and e.anno = r.anno and e.num_entrata = r.num_entrata and r.pg = e.pg 
and not exists
(select 1 from documents.rows dr where dr.jguid = r.jguid);
/* View Cli Fo */ 
INSERT INTO  anagraph.anagraphs 
(
an_code,
an_last_name,
an_address,
an_postal_code,
an_town, 
an_state_province, 
an_iso_country_code,
an_phone,
an_fax,
an_email,
an_vat_numeric,
custom_field_1,
insert_date,
custom_field_2,
update_date,
jguid,
an_main_group_id,
db_schema_id
)
select 
 codice, -- an_code
 ragionesoc, --an_last_name
 ind_anag, -- an_address
 cap_anag, -- an_postal_code
 loc_anag, --an_town
 prov_anag, -- an_state_province
 cod_naz, -- an_iso_country_code
 tel_anag1, -- an_phone
 fax_anag, -- an_fax
 email, --an_email
 p_iva, -- an_vat_numeric
 codutente, --custom_field_1
 datainserimento, -- insert_date
 utenteultimamodifica, -- custom_field_2
 dataultimamodifica, -- update_date
 jguid , --jguid,
 CASE WHEN TIPO = 'C' then 14 else 15 end /* (tipo, 'C', 14, 15) */ as an_main_group_id,
 33 -- db_schema_id
 from custom_tm_logistic.tblview_clifo c
 where not exists (select 1 from anagraph.anagraphs a where a.jguid = c.jguid);
------ fine della procedura --------------------------
--- generazione workflows dalle pratiche -------------
--- inserimento pickup orders dalle pratiche --------------------------------------------
INSERT INTO logistic.locations 
(db_schema_id, 
 code, 
 "name", 
 state_province, 
 country, 
 area_code, 
 flgairport, 
 iso_code,
 jguid
 ) 
 select 
  33, -- db_schema_id, 
  codporto, --code, 
  desporto, --"name", 
  state, -- state_province, 
  country,
  codzona, --area_code, 
  CASE WHEN flgaerea='1' THEN true ELSE false END, --flgaerea, 
  codiso, --iso_code
  jguid
  from 
  custom_tm_logistic.porti p where not exists
  (select 1 from logistic.locations l where l.jguid = p.jguid);
  
  update logistic.locations set 
       code = upper(code), 
       name = upper(name), 
       state_province = upper(state_province);
       
  UPDATE logistic.locations l 
  set 
  	iata_code = upper(substring(code, 1, 3));
         
--- generazione workflows dalle pratiche -------------
INSERT INTO workflow.workflows 
(jguid, workdate, code, office_id, customer_id, "year", type_id) 
select 
jguid, -- jguid
dataaperturapratica, -- workdate
case when progressivopraticagroupage = 0 then commessa else commessa || '-' || progressivopraticagroupage end as code, -- code 
-- codfiliale || codattivita ||  substring(anno, 3, 2) || lpad(progressivo::character varying, 6, '0'), --code
149503 as office_id, 
anagraph.get_id_by_code(codclientecontabile, 14::integer, 33::integer) as customer_id, --customer_id
anno::smallint, --"year"
codattivita::smallint -- type_id
from 
custom_tm_logistic.testatapratiche p
where not exists
(select 1 from workflow.workflows w where w.jguid = p.jguid)
; 
/*
update custom_tm_logistic.testatapratiche 
set commessa = commessa || '-' || progressivopraticagroupage
where commessa in (
select commessa from custom_tm_logistic.testatapratiche 
group by commessa
having count(1) > 1
    )
    and progressivopraticagroupage > 0;
	
update workflow.workflows w
set 
code = (
    	select commessa from 
           custom_tm_logistic.testatapratiche p
        where  w.jguid = p.jguid
)
where exists
(select 1 from custom_tm_logistic.testatapratiche t where w.jguid = t.jguid and t.commessa <> w.code);
*/
/* Pickup Orders */
INSERT INTO 
logistic.shipments
(
--id, 
jguid, 
creation_date, 
pickup_date, 
delivery_date, 
office_id, 
workflow_uid, 
agent_id, shipper_id, shipper_address, pickup_address, 
"year", 
groupage_number, 
export_type_id, 
fullcontainer, 
vessel_id, 
work_code, 
travel_identification_code, 
carrier_id, 
carrier_code, 
workflow_id, 
pol_id, 
pol_code, 
pol_name, 
pod_id, 
pod_name, 
pod_code, 
customer_id, 
notes, 
warehouse_id, 
work_date, 
order_state, 
airport_id, 
airport_code, 
awb_number, 
internal_notes, 
internal_notes2, 
warehouse_notes, 
route_type, 
internet_visible, 
flag_air, 
flag_ground, 
departure_date, 
arrival_date, 
po_state, 
po_level, 
final_date, 
flg_house, 
flg_master, 
delivered, 
flg_billable, 
customs_declearer, 
customs_date, 
insert_date, 
update_date
) 
select 
t.jguid, --jguid, 
dataaperturapratica, --creation_date, 
datanave, -- pickup_date, 
dataconsegna, -- delivery_date, 
149503 as office_id,  -- office_id, 
t.jguid, -- workflow_uid, 
null, null, null, null, -- agent_id, shipper_id,  shipper_address, pickup_address, 
anno::smallint, --year
progressivopraticagroupage, --groupage_number
typeexport::smallint, -- export_type_id (0,1)
tipocompleto, -- fullcontainer, FCL/LCL (0,1)
shipping.vessels_get_id_by_code(codnavegruppo::character varying, 33),  --vessel_id, 
codfiliale || codattivita ||substring(anno, 3, 2) || lpad(progressivo::character varying, 6, '0'), --work_code,
viaggionave, -- travel_identification_code, 
anagraph.get_id_by_code(codcompagnia, 17::integer, 33::integer)  codcompagnia,  --carrier_code,
codcompagnia, --carrier_id,
w.id, --workflow_id
/* POL*/
logistic.get_location_id_by_code(pol, 33), --pol_id
pol, --pol_code, 
logistic.get_location_name_by_code(pol, 33), --pol_name
/* POD */
logistic.get_location_id_by_code(pol, 33), --pod_id
pod, --pod_code, 
logistic.get_location_name_by_code(pol, 33), --pod_name
anagraph.get_id_by_code(codclientecontabile, 14, 33), --customer_id,
note, -- notes
null, -- warehouse_id, 
dataaperturapratica, -- work_date, 
flgpraticadefinitiva::smallint, -- order_state,
logistic.get_location_id_by_code(pol, 33), --airport_id
pol, --airport_code, 
numawb, -- awb_number,
noteinterne, -- internal_notes, 
noteinterne2, -- internal_notes2
notemagazzino, -- warehouse_notes, 
null, -- route type
case when flgvisibileinternet::smallint = 1 then true else false end, -- internet_visible
case when flgaerea = 'SI' then true else false end, -- flag_air
case when flgterra::smallint = 1 then true else false end, -- flag_ground
datanave, -- departure_date, 
datanavearrivo, -- arrival_date, 
flgpraticadefinitiva::smallint, -- po_state, 
levelcode::smallint, -- po_level, 
datanavedefinitiva, -- final_date, 
case when flggeneratahouse::smallint = 1 then true else false end, -- flg_house, 
case when flggeneratamaster::smallint = 1 then true else false end, -- flg_master, 
case when flgdelivery::smallint = 1 then true else false end, -- delivered, 
case when flgfatturabile::smallint = 1 then true else false end, -- flg_billable, 
coddichiarantedoganale, -- customs_declearer, 
datasdoganamento, -- customs_date
dataaperturapraticadautente, -- insert_date
dataultimamodifica --update_date
from 
workflow.workflows w , custom_tm_logistic.testatapratiche t
where 
t.jguid = w.jguid
and not exists
(select 1 from logistic.shipments o where o.jguid = t.jguid)
;
/* tabelle di supporto AWB */
INSERT INTO logistic.awb_codes(
	code, type, amount, description, house, jguid)
SELECT sigla, tipo, importo, descrizione, true, jguid
	FROM custom_tm_logistic.aereavociotherhouse  a where not exists 
    (select 1 from logistic.awb_codes c where c.jguid = a.jguid);
INSERT INTO logistic.awb_codes(
	code, type, amount, description, house, jguid)
SELECT sigla, tipo, importo, descrizione, false, jguid
	FROM custom_tm_logistic.aereavociother  a where not exists 
    (select 1 from custom_tm_logistic.aereavociotherhouse o where o.sigla = a.sigla)
    and not exists
    (select 1 from logistic.awb_codes c where c.jguid = a.jguid);
    
    
/* Inserimento LTA HOUSE */
INSERT INTO logistic.awb(
	year, 
	office_id, 
	code, 
     year_number, 
	db_schema_id, 
	field1a, 
	field1b, 
	field1c, 
	cin, 
	field2, 
	field21, 
	field22,
	field23, 
	field3, 
	field31, 
	field32, 
	field33, 
	field4a, 
	field4b, 
	field4c, 
	field4c2, 
	field4c3, 
	field5, 
	field6, 
	field7, 
	field8, 
	field8a, 
	field8b, 
	field8c, 
	field8d, 
	field8c1, 
	field8d1, 
	field8e, 
	field8f, 
	field8f1, 
	field9, 
	field10, 
	field11, 
	field12, 
	field13, 
	field14, 
	field15, 
	field16, 
	field17, 
	field28a, 
	field28b, 
	field29a, 
	field29b, 
	field30a, 
	field30b, 
	field31a, 
	field31b, 
	field32a, 
	field32b, 
	field33a, 
	field33b, 
	field34, 
	field35, 
	field36, 
	field37, 
	field38, 
	hi1, 
	hi2, 
	hi3, 
	codother1, 
	codother2, 
	codother3, 
	codother4, 
	codother5, 
	codother6, 
	codother7, 
	codother8, 
	codother9, 
	amountother9, 
	amountother8, 
	amountother7, 
	amountother6, 
	amountother5, 
	amountother4, 
	amountother3, 
	amountother2, 
	amountother1, 
	fieldhead, 
	partialmaster, 
	partialmasteryear, 
	currency_id, 
	customs_doc_type, 
    awb_type_id,
    awb_type, 
    jguid,
	order_id)
select
h.anno, -- year
149503, -- office_id
h.codfiliale, -- code
progressivolta, -- year_number
33, -- db_schema_id
campo1a, -- field1a
campo1b, -- field1b
campo1c, -- field1c
 cin, -- cin,
campo2,
campo21,
campo22, 
campo23, 
campo3, 
campo31, 
campo32, 
campo33,
campo4a, 
campo4b, 
campo4c, 
campo4c2, 
campo4c3,
campo5, 
campo6, 
campo7,
campo8, 
campo8a, 
campo8b, 
campo8c, 
campo8d, 
campo8c1, 
campo8d1, 
campo8e, 
campo8f, 
campo8f1,
campo9, 
campo10, 
campo11, 
campo12, 
campo13, 
campo14, 
campo15, 
campo16, 
campo17,
campo28a, 
campo28b, 
campo29a, 
campo29b, 
campo30a, 
campo30b, 
campo31a, 
campo31b, 
campo32a, 
campo32b, 
campo33a, 
campo33b, 
campo34, 
campo35, 
campo36, 
campo37, 
campo38,
hi1, 
hi2, 
hi3, 
codother1, 
codother2, 
codother3, 
codother4, 
codother5, 
codother6, 
codother7, 
codother8, 
codother9,
importoother9,
importoother8, 
importoother7, 
importoother6, 
importoother5, 
importoother4, 
importoother3, 
importoother2, 
importoother1,
campohead, 
masterparziale, 
annomasterparziale, 
CASE when valuta='USD' THEN 1 ELSE 2 END, --currency_id
tipo, -- customs_doc_type
1, --awb_type_id
'H' as awb_type, -- awb_type = house 
h.jguid,  -- jguid
p.id -- order_id 
from 
custom_tm_logistic.aerealtahouse h,  custom_tm_logistic.testatapratiche t, logistic.shipments p
where
p.jguid = t.jguid and
t.anno = h.anno and t.codfiliale = h.codfiliale 
and t.progressivo = h.progressivo and t.progressivopraticagroupage = h.progressivopraticagroupage
and t.codattivita = h.codattivita
and not exists
(select 1 from logistic.awb a where a.jguid = h.jguid );
/* Inserimento LTA MASTER */
INSERT INTO logistic.awb(
	year, 
	office_id, 
	code, 
        year_number, 
	db_schema_id, 
	field1a, 
	field1b, 
	field1c, 
	cin, 
	field2, 
	field21, 
	field22,
	field23, 
	field3, 
	field31, 
	field32, 
	field33, 
	field4a, 
	field4b, 
	field4c, 
	field4c2, 
	field4c3, 
	field5, 
	field6, 
	field7, 
	field8, 
	field8a, 
	field8b, 
	field8c, 
	field8d, 
	field8c1, 
	field8d1, 
	field8e, 
	field8f, 
	field8f1, 
	field9, 
	field10, 
	field11, 
	field12, 
	field13, 
	field14, 
	field15, 
	field16, 
	field17, 
	field28a, 
	field28b, 
	field29a, 
	field29b, 
	field30a, 
	field30b, 
	field31a, 
	field31b, 
	field32a, 
	field32b, 
	field33a, 
	field33b, 
	field34, 
	field35, 
	field36, 
	field37, 
	field38, 
	hi1, 
	hi2, 
	hi3, 
	codother1, 
	codother2, 
	codother3, 
	codother4, 
	codother5, 
	codother6, 
	codother7, 
	codother8, 
	codother9, 
	amountother9, 
	amountother8, 
	amountother7, 
	amountother6, 
	amountother5, 
	amountother4, 
	amountother3, 
	amountother2, 
	amountother1, 
       

      	netamount, 
	mawbcosts, 
	mawbothcosts, 
	taxableweight, 
	masterdate, 
	estimateflight, 
	effectiveflight, 
	etdestimate, 
	etdeffective, 
	etaestimate, 
	etaeffective, 
	palletcost, 
	transportcost, 
	containerseals, 
	masternotes, 
	awb_type, 
        

	fieldhead, 
	partialmaster, 
	customs_doc_type, 
         awb_type_id,
        jguid,
	order_id)
select
m.anno, -- year
149503, -- office_id
o.work_code, -- code
m.progressivo, -- year_number
33 as db_schema_id, -- db_schema_id
campo1a, -- field1a
campo1b, -- field1b
campo1c, -- field1c
m.cin::smallint, -- cin,
-- campo19a, -- field19a, 
-- campo20a, -- field20a
campo2,	--field2, 
campo21,	--field21, 
campo22,	--field22,
campo23,	--field23, 
campo3,	--field3, 
campo31, 	--field31, 
campo32, 	--field32, 
campo33,	--field33, 
campo4a, --field4a, 
campo4b, --field4b, 
campo4c, --field4c, 
null, 	--field4c2, 
campo4c3, 	--field4c3, 
campo5, -- field5, 
campo6, --field6, 
campo7, --field7, 
campo8, --field8, 
campo8a, --field8a, 
campo8b,--field8b, 
campo8c,--field8c, 
campo8d,--field8d, 
campo8c1, --field8c1, 
campo8d1, --field8d1, 
campo8e, --field8e, 
campo8f, --field8f, 
campo8f1, --field8f1, 
campo9,  --field9, 
campo10, --field10, 
campo11, --field11, 
campo12, --field12, 
campo13, --field13, 
campo14,--	field14, 
campo15,--	field15, 
campo16,--	field16, 
campo17,--	field17, 
campo28a, --field28a, 
campo28b, --field28b, 
campo29a, --field29a, 
campo29b, --field29b, 
campo30a, --field30a, 
campo30b,--	field30b, 
campo31a,--	field31a,  
campo31b,--	field31b, 
campo32a, --field32a, 
campo32b,--field32b, 
campo33a, -- field33a, 
campo33b, --field33b, 
campo34, --field34, 
campo35, --field35, 
campo36, --field36, 
campo37, --field37, 
campo38, --field38, 
m.hi1,--	hi1, 
m.hi2,--	hi2, 
m.hi3,--	hi3,
m.codother1,--	codother1, 
m.codother2,--	codother2, 
m.codother3,--	codother3, 
m.codother4,--	codother4, 
m.codother5,--	codother5, 
m.codother6,--	codother6, 
m.codother7,--	codother7, 
m.codother8,--	codother8, 
m.codother9,--	codother9, 
importoother8, --amountother9, 
importoother9, --amountother8, 
importoother7, --amountother7, 
importoother6, --amountother6, 
importoother5, --amountother5, 
importoother4, --amountother4, 
importoother3, --amountother3, 
importoother2, --amountother2, 
importoother1, --amountother1, 


ratanetta,     --netamount, 
m.mawbcosts,	--mawbcosts, 
m.mawbothcosts,	--mawbothcosts, 
pesotassabile, 	--taxableweight, 
datamaster,	--masterdate, 
voloprevisto,	--estimateflight, 
voloeffettivo,	--effectiveflight, 
etdprevisto,	--etdestimate, 
etdeffettivo,	--etdeffective, 
etaprevisto, 	--etaestimate, 
etaeffettivo, 	--etaeffective, 
costopallet,	--palletcost, 
costotrasporto,	--transportcost, 
sigillo,	--containerseals, 
notemaster,	--masternotes, 
'M' as awb_type,	--awb_type = master awb  


campohead,--	fieldhead, 
ratanetta,  --	partialmaster, 
tipo,	-- customs_doc_type, 
2 as awb_type_id,    --     awb_type_id,
m.jguid,    --jguid,
o.id    -- order_id
from 
--logistic.shippings l, 
custom_tm_logistic.aerealtamaster m,
custom_tm_logistic.testatapratiche p, 
logistic.shipments o
where
o.jguid = p.jguid
and
p.anno =  m.anno
and
p.progressivo  = m.progressivo
and not exists
(select 1 from logistic.awb w where w.jguid = m.jguid);
update  logistic.awb
set  field2_shipper_id = anagraph.get_id_by_name(
	field2,
	field21,
	null,
	14,
	33)
where field2_shipper_id is null; 
update logistic.awb set field1b_location_name = logistic.get_location_name_by_code(field1b, 33)  
	where field1b_location_name is null; 
update logistic.awb set field8_location_name = logistic.get_location_name_by_code(field8, 33)  
	where field8_location_name is null; 
update logistic.awb set field8a_location_name = logistic.get_location_name_by_code(field8a, 33)  
	where field8a_location_name is null; 
update logistic.awb set field8e_location_name = logistic.get_location_name_by_code(field8e, 33)  
	where field8e_location_name is null; 
update logistic.awb set field8c_location_name = logistic.get_location_name_by_code(field8c, 33)  
	where field8c_location_name is null and field8c is not null;
update logistic.awb set field8c1_location_name = logistic.get_location_name_by_code(field8c1, 33)  
	where field8c1_location_name is null and field8c1 is not null;
	
update logistic.awb set handling_information = 
           case when hi1 is null then '' else  hi1 end ||
           case when hi2 is null then '' else   E'\n' || hi2 end ||
		   case when hi3 is null then '' else   E'\n' || hi3 end
		   where handling_information is null; 
/* Righe House */
INSERT INTO logistic.awb_rows(
       awb_id, row_pos, field19a, field20a, field21, field22, field23, field24, field25, field26a, field27, jguid
    )
SELECT  --r.progressivolta, r.anno, r.codfiliale, 
        a.id as awb_id,         -- awb_id,
        r.prriga, --  row_pos,
        r.campo19a, --  field19a,
        r.campo20a, -- field20a,
        r.campo21, -- field21,
        r.campo22, -- field22, 
        r.campo23, -- field23, 
        r.campo24, -- field24, 
        r.campo25, -- field25,
        r.campo26a, -- field26a,
        r.campo27, -- field27,
        r.jguid -- , jguid
	FROM custom_tm_logistic.aerearigheltahouse r,
         custom_tm_logistic.aerealtahouse h, 
         logistic.awb a
         where 
         a.jguid = h.jguid
         and
         h.anno = r.anno
         and 
         h.codfiliale = r.codfiliale
         and
         h.progressivolta = r.progressivolta
         and not exists
         (select 1 from logistic.awb_rows w where w.jguid = r.jguid)
     order by r.anno, r.progressivolta, r.prriga;
     
/* Righe Master */
INSERT INTO logistic.awb_rows(
       awb_id, row_pos, field19a, field20a, field21, field22, field23, field24, field25, field26a, field27, jguid
    )
SELECT  --r.progressivolta, r.anno, r.codfiliale, 
        a.id as awb_id,         -- awb_id,
        r.prriga,  -- row_pos,
        r.campo19a, --  field19a,
        r.campo20a, -- field20a,
        r.campo21, -- field21,
        r.campo22, -- field22, 
        r.campo23, -- field23, 
        r.campo24, -- field24, 
        r.campo25, -- field25,
        r.campo26a, -- field26a,
        r.campo27, -- field27,
        r.jguid -- , jguid
	FROM custom_tm_logistic.aerearigheltamaster r,
         custom_tm_logistic.aerealtamaster h, 
         logistic.awb a
         where 
         a.jguid = h.jguid
         and
         h.campo1c = r.campo1c
         and not exists
         (select 1 from logistic.awb_rows w where w.jguid = r.jguid)
     order by a.id, r.prriga;
UPDATE anagraph.anagraphs a 
SET
  an_country_id = jpublic.get_country_id_by_code(an_state_province), 
  an_iso_country_code2 = an_state_province,
  an_state_province = null
where exists
(select 1 from  jpublic.countries C
where 
an_state_province =  iso_country_code2
)
AND AN_STATE_PROVINCE NOT IN ('GE') AND AN_TOWN NOT IN ('FORLI')
and
not exists (select 1 from jpublic.towns_regions_countries where country_id = 1 and town_name = an_town )
AND NOT EXISTS
(select 1 from jpublic.towns_regions_countries where country_id = 1 AND AN_STATE_PROVINCE = REGION_NAME AND
 AN_POSTAL_CODE = TOWN_POSTAL_CODE )
AND DB_SCHEMA_ID = 33;
/* ----------- documents ----------------------------------------------------- */
/* costs  */
raise notice 'items.definition'; 
INSERT INTO items.definitions(
	db_schema_id, code, model, type_id, munit_id,family_id)
select * from 
(
SELECT  
  33 as db_schema_id, 
  codvoce as code,
  min(desvoce) as model, 
  1 as type_id, 
  1 as munit_id, 
  131 as family_id
FROM custom_tm_logistic.costipredefiniti c
group by codvoce
) a
where not exists
(select 1 from items.definitions i where i.code = a.code and i.family_id = 131);
/* incomes */
INSERT INTO items.definitions(
	db_schema_id, code, model, type_id, munit_id,family_id, jguid
)
SELECT
  33 as db_schema_id, 
  codvoce as code, 
  desvoceit as model, 
  3 as type_id, 
  1 as munit_id, 
  132 as family_id,   
  jguid 
-- tipovoce, gruppovoci, desvocestat, desvoceit, desvocele, tipocalcolo, um, percentuale, percentuale2, coefficentetr, 
-- importobase, importominimo, codiva, contropartita, flgmaggioraz, flgnscarico, codanalitica, flgvociascaglioni, desaddizionale, 
-- codraggpref, utente, utenteultimamodifica, dataultimamodifica, flgvisibile, importomassimo, jguid
FROM custom_tm_logistic.fvocifatt f
where not exists
(select 1 from items.definitions d where d.jguid = f.jguid);
/* ---------- pro forma invoices -------------------------------------------- */
insert into documents.heads (
  doc_year, --1
  office_id, -- SC 2
  type_id, --3
  an_code, --4 
  anagraph_id, -- 5
  dest_name, -- 6
  ref_code, --7
  payment_term_id, -- 8 
  currency_id, -- 9  
  stamp_duty, --10 
  exchange_rate, --11
  notes1, --12
  notes2, --13
  doc_number, --14
  custom_int_1, --15
  printed, --16 
  amount, --17
  accounted, -- 18 flgcontabilizzata, 
  deleted , -- 19   
 work_code,  --20  
importexport, --21
 workflow_id, --22
 jguid, --23, 
 db_schema_id, --24,
 payment_term_code, --25
 payment_terms_des	--26	
)
SELECT 
       annofattura::integer  as doc_year, --1
	   149503 AS office_id, --codfiliale, --2
	   case when cod_causale = 'FT' then 18 else 19 end  as type_id, -- 3  
       codcliente as an_code, --4
	   a.anagraph_id,  --5 
	   ragionesoc as dest_name, --6
       numriferimentoesterno as ref_code, -- 7
	   accounting.get_payment_id_by_code(codpagamento, 33) payment_id, -- 8 
      case when codvaluta = 'EUR' THEN 1 ELSE 2 END AS currency_id, -- 9
       importobollo as stamp_duty, --10 
       importocambio as exchange_rate, -- 11 
       oggetto as notes1, --12 
       descrizionepiede as notes2, --13 
       contatore as doc_number, --14
       numrif as doc_ref, --15
       case when flgstampata = '1' then true else false end as printed, --16 
       importofatt as amount, --17
       false as accounted, -- 18 flgcontabilizzata, 
       case when flgerrata = '1' then true else false end as deleted , -- 19 
       p.commessa as work_code, --20 
       typeexport::smallint as importexport, --21
       w.id as workflow_id, --22
       t.jguid, --23, 
	   33 as db_schema_id, --24
	   codpagamento, --25
	   accounting.get_payment_term_by_code( codpagamento, 33) --26	
	   FROM custom_tm_logistic.pretestafatt t, anagraph.anagraphs a, 
         custom_tm_logistic.testatapratiche p, workflow.workflows w
   	where 
	a.an_code = t.codcliente and a.an_main_group_id = 14 and
	t.anno in ('2018', '2019', '2020', '2017', '2016', '2015', '2014') and
    p.anno = t.anno and p.progressivo = t.progressivo and t.codattivita = p.codattivita and p.progressivopraticagroupage = 0
    and w.jguid = p.jguid
	and not exists
    (select 1 from documents.heads h where h.jguid = t.jguid);
    
/* Righe fatture pro Forma */
insert into documents.rows (
  doc_id, --1
  code, --2
  item_id, --3
  model, --4
  price, --5
  quantity, ---6
  freight_rate, --7
  freight_qty, --8
  amount, --9
  vat_code, --10
  vat_id, --11
  description, --12
  vat_rate, --13
  currency_id, --14
  position, --15
  exchange_rate, --16
  is_description, --17
  jguid
)
SELECT 
   h.id as doc_id, --1
   p.codvoce as code, --2
   i.id as item_id, --3
   p.desvoce as model, --4
   p.prezzo as price, --5
   p.qta as qty, --6
   case when um <> 'EUR' then 0.0 else p.percmoltiplicatorenoli end as freight_rate, --7
   p.qtanoli as freight_qty, --8
   p.importo as amount, --9
   p.codiva as vat_code, --10
   --p.contropartita, 
   v.id as vat_id,  --11
   p.descrizioneaggnoli as description, --12
   perciva as vat_rate, --13
   case when um = 'EUR' then 1 when um = 'USD' then 2 else null end as currency_id, --14
   progrriga as pos, --15
   case when um <> 'EUR' then p.percmoltiplicatorenoli else 0.0 end as exchange_rate, --16
   case when tipocalcolo = 'D' then true else false end as is_description, --17
   p.jguid 
 FROM custom_tm_logistic.precorpofatt p 
 	inner join accounting.vat_codes v on v.code = p.codiva 
 	inner join items.definitions i on i.code = p.codvoce
 	inner join custom_tm_logistic.pretestafatt t on t.anno = p.anno and t.contatore = p.contatore and t.codfiliale = p.codfiliale
 	inner join documents.heads h on h.jguid = t.jguid
 where
    v.db_schema_id = 33 and i.db_schema_id = 33 and i.family_id = 132
    and t.anno in ('2018', '2019', '2020', '2017', '2016', '2015', '2014')
    AND P.tipocalcolo not in ('P')
    and not exists
    (select 1 from documents."rows" r where r.jguid = p.jguid);   
    
    
    
/* Testa Fatture Definitive documents.heads */ 
raise notice 'custom_tm_logistic.testafatt t';
insert into documents.heads (
  doc_year, --1
  office_id, -- SC 2
  type_id, --3
  an_code, --4 
  anagraph_id, -- 5
  dest_name, -- 6
  ref_code, --7
  payment_term_id, -- 8 
  currency_id, -- 9  
  stamp_duty, --10 
  exchange_rate, --11
  notes1, --12
  notes2, --13
  doc_number, --14
  conversion_date, --15
  printed, --16 
  amount, --17
  accounted, -- 18 flgcontabilizzata, 
  --type_id, -- 18  
  deleted , -- 19   
  work_code, --20  
  importexport, --21
  jguid, --22, 
  db_schema_id, --23
  doc_date --24
)
SELECT 
       annofattura::integer as doc_year, --1
       --contatore, 
	   149503 AS office_id, --codfiliale, --2
	   case when cod_causale = 'FT' then 16 else 17 end  as type_id, -- 3  
	   --codutente, anno, codattivita, progressivo, progressivopraticagroupage, contatorepref, 
       codcliente as an_code, --4
	   a.anagraph_id,  --5 
	   ragionesoc as dest_name, --6
       numriferimentoesterno as ref_code, -- 7
	   --cod_anag, 
	   case when codpagamento is null then 0 when codpagamento = '' then 0 else codpagamento::integer end as payment_id, -- 8 
	   --coddestinazione,  ragsocialedestinazione, indirizzodestinazione, indirizzodestinazione2, capdestinazione, localitadestinazione,pvdestinazione, flglinguavoce
       case when codvaluta = 'EUR' THEN 1 ELSE 2 END AS currency_id, -- 9
       importobollo as stamp_duty, --10 
       --codbanca, abi, cab, importocambio, 
       importocambio as exchange_rate, -- 11 
       oggetto as notes1, --12 
       descrizionepiede as notes2, --13 
       numdocumento as doc_number, --14
       datafatturadefinitiva as conversion_date, --15
       case when flgstampata = '1' then true else false end as printed, --16 
       importofatt as amount, --17
       false as accounted, -- 18 flgcontabilizzata, 
       --codregistroiva, datacompetenzafattura, 
       case when flgerrata = '1' then true else false end as deleted , -- 19 
	   --flgcontabilizzata, importofatt, codregistroiva, datacompetenzafattura, cod_causale, flgerrata, 
       --flgesportata, numerocopie, codvalutacontabilita, note1, note2, 
       commessa as work_code, --20 
       typeexport::smallint as importexport, --21
       /* numpn, flgclientenotabolla, prog_destin, 
	   flgricontabilizza, desbanca, filialeeolog, typeexport, po, datainserimento, flgassegna, utente, dataincasso, 
	   idstatoinviofe, */
       t.jguid, --22, 
	   33 as db_schema_id, --23
	   datafatturadefinitiva --24
	FROM custom_tm_logistic.testafatt t, anagraph.anagraphs a
	where 
	a.an_code = t.codcliente and a.an_main_group_id = 14 
    and not exists (select 1 from documents.heads h where h.jguid = t.jguid)
	order by annofattura, contatore;   
	
/* righe fatture definitive */
insert into documents.rows (
  doc_id, --1
  code, --2
  item_id, --3
  model, --4
  price, --5
  quantity, ---6
  freight_rate, --7
  freight_qty, --8
  amount, --9
  vat_code, --10
  vat_id, --11
  description, --12
  vat_rate, --13
  currency_id, --14
  position, --15
  exchange_rate, --16
  is_description, --17
  jguid
)
SELECT 
   h.id as doc_id, --1
   p.codvoce as code, --2
   i.id as item_id, --3
   p.desvoce as model, --4
   p.prezzo as price, --5
   p.qta as qty, --6
   case when um <> 'EUR' then 0.0 else p.percmoltiplicatorenoli end as freight_rate, --7
   p.qtanoli as freight_qty, --8
   p.importo as amount, --9
   p.codiva as vat_code, --10
   --p.contropartita, 
   v.id as vat_id,  --11
   p.descrizioneaggnoli as description, --12
   perciva as vat_rate, --13
   case when um = 'EUR' then 1 when um = 'USD' then 2 else null end as currency_id, --14
   progrriga as pos, --15
   case when um <> 'EUR' then p.percmoltiplicatorenoli else 0.0 end as exchange_rate, --16
   case when tipocalcolo = 'D' then true else false end as is_description, --17
   p.jguid 
 FROM custom_tm_logistic.corpofatt p 
 	inner join accounting.vat_codes v on v.code = p.codiva 
 	inner join items.definitions i on i.code = p.codvoce
 	inner join custom_tm_logistic.testafatt t on t.annofattura = p.anno and t.contatore = p.contatore and t.codfiliale = p.codfiliale
 	inner join documents.heads h on h.jguid = t.jguid
 where
    v.db_schema_id = 33 and i.db_schema_id = 33 and i.family_id = 132
    AND P.tipocalcolo not in ('P')
    and not exists
    (select 1 from documents."rows" r where r.jguid = p.jguid);
/* documents.vat_amounts */
INSERT INTO documents.vat_amounts(
	doc_id, vat_id, vat_code,  taxable_amount, taxes, vat_rate, amount, vat_description)
    select * from 
    (
	select 
      h.id as doc_id, 
      c.id as vat_id, 
      c.code as vat_code, 
      imponibile1 as taxable_amount, 
      imposta1 as taxes, 
      c.vat_rate, 
      imponibile1 + imposta1 as amount,
      c.description as desctription   
    from custom_tm_logistic.testafatt t, documents.heads h, accounting.vat_codes c
    where h.jguid = t.jguid and   c.code = codiva1
        
union all 
        
	select 
      h.id as doc_id, 
      c.id as vat_id, 
      c.code as vat_code, 
      imponibile2 as taxable_amount, 
      imposta2 as taxes, 
      c.vat_rate, 
      imponibile2 + imposta2 as amount,
      c.description as desctription  
    from  custom_tm_logistic.testafatt t, documents.heads h, accounting.vat_codes c
    where h.jguid = t.jguid and c.code = codiva2
        
union all 
        
	select 
      h.id as doc_id, 
      c.id as vat_id, 
      c.code as vat_code, 
      imponibile3 as taxable_amount, 
      imposta3 as taxes, 
      c.vat_rate, 
      imponibile3 + imposta3 as amount,
      c.description as desctription  
    from  custom_tm_logistic.testafatt t, documents.heads h, accounting.vat_codes c
    where h.jguid = t.jguid and c.code = codiva3
        
union all 
        
	select 
      h.id as doc_id, 
      c.id as vat_id, 
      c.code as vat_code, 
      imponibile4 as taxable_amount, 
      imposta4 as taxes, 
      c.vat_rate, 
      imponibile4 + imposta4 as amount,
      c.description as desctription  
    from  custom_tm_logistic.testafatt t, documents.heads h, accounting.vat_codes c
    where h.jguid = t.jguid and c.code = codiva4
        
union all 
        
	select 
      h.id as doc_id, 
      c.id as vat_id, 
      c.code as vat_code, 
      imponibile5 as taxable_amount, 
      imposta5 as taxes, 
      c.vat_rate, 
      imponibile5 + imposta4 as amount,
      c.description as desctription  
    from  custom_tm_logistic.testafatt t, documents.heads h, accounting.vat_codes c
    where h.jguid = t.jguid and c.code = codiva5
     
union all
        
	select 
      h.id as doc_id, 
      c.id as vat_id, 
      c.code as vat_code, 
      imponibile6 as taxable_amount, 
      imposta1 as taxes, 
      c.vat_rate, 
      imponibile6 + imposta6 as amount,
      c.description as desctription   
    from custom_tm_logistic.testafatt t, documents.heads h, accounting.vat_codes c
    where h.jguid = t.jguid and   c.code = codiva6
        
    ) a 
    where not exists (select 1 from documents.vat_amounts v  where v.doc_id = a.doc_id and  v.vat_id=a.vat_id)
    order by 
    a.doc_id, a.vat_id;
    
raise notice 'documents.vat_amounts'; 	
	
INSERT INTO documents.vat_amounts(
	doc_id, --1
    vat_id, --2
    taxable_amount, --3
    taxes, --4 
    vat_rate, --5
    amount, --6
    vat_description, --7
    vat_code)--8
select 
    doc_id, --1
    vat_id, --2
    sum(amount) as taxable_amount, --3
    sum(amount) * r.vat_rate/100 as taxes,  --4
    r.vat_rate, --5
    sum(amount) + sum(amount) * r.vat_rate/100 as amount,--6
    v.description as  vat_description,--7
    r.vat_code--8
from documents.rows r 
     inner join accounting.vat_codes v on v.id = r.vat_id
where 
   vat_id is not null
and not exists
  (select 1 from documents.vat_amounts a where a.doc_id = r.doc_id)
group by
     r.doc_id, r.vat_id, r.vat_rate, v.description, r.vat_code;  /*
select  
  CodFornitoreMagazzino,
  count(1) 
  from 
  custom_tm_logistic.datimerce 
  group by CodFornitoreMagazzino
select * from anagraph.anagraphs where an_code = 'SC'
*/
raise notice 'logistic.shipment_rows'; 
insert into logistic.shipment_rows 
(
  jguid, --1
  year, --2
  shipment_id, -- 3 
  office_id, --4
  pos, --5
  quantity,--6
  weight,--7
  volume,--8
  booking, --9
  cntr_type, --10
  cntr_code, --11
  cntr_seal, --12
   pkg_type_code, --13
   PO1 , --14
   PO2 , --15
   PO3 , --16
	PO4 , --17
	PO5 , --18
	PO6, --19
	PO7, --20
	PO8 , --21
    freight_amount, --22
    marks, --23
    description1 ,--24
    description2 ,--25
	BOL ,--26
	BOLHouse,--27
    NOTE, --28
    temperature, --29
    supplier,  --30
    supplier_code, --31
    taxable_weight,-- 32
    Dimentions, --33
    Remarks, --34
    weght_volume_ratio,--35
    flgnotaxw,
    actual_weight,
    actual_volume, 
    booking_number, 
    customs_tariff, 
    size_weight,
    size_length,
    size_height,
    supplier_warehouse_code,
    supplier_warehouse_id
)
select 
  m.jguid, --1
  year, --2
  o.id as shipment_id, -- 3 
  office_id, --4
  progressivoriga as pos, --5
  numerocolli as quantity,
  peso as  weight,
  volume,
  booking as booking, 
  TipoCntr as cntr_type, 
  SiglaCntr as cntr_code, 
  Sigillo as cntr_seal, 
  Imballo as pkg_type_code, 
   PO1 ,
   PO2 ,
   PO3 ,
	PO4 ,
	PO5 ,
	PO6,
	PO7,
	PO8 ,
   ImportoNolo as freight_amount, 
   Marche as marks, 
   DescrizioneMerce1 as description1 ,
    DescrizioneMerce2 as asdescription2 ,
	BL as BOL ,
	BLHouse as BOLHouse,
    m.NOTE, 
    Temperatura as temperature, 
    Fornitore as supplier,  
    CodFornitore as supplier_code, 
    PesoTassabile as taxable_weight,
    Dimentions, 
    Remarks, 
    RappPesoVolume as weght_volume_ratio,
    case when FlgNoTaxW = '1' then true else false end as flg_notaxv,
    PesoVero as actual_weight,
    VolumeVero as actual_volume, 
    BookingNumber as booking_number, 
    TariffaDoganale as customs_tariff, 
    MisuraW as size_weight,
    MisuraL as size_length,
    MisuraH as size_height,
    CodFornitoreMagazzino as supplier_warehouse_code,
    anagraph.get_id_by_code(CodFornitoreMagazzino, 10, 33)
      as supplier_warehouse_id    
from 
  custom_tm_logistic.datimerce  m
  inner join custom_tm_logistic.testatapratiche p 
    on  p.anno = m.anno and p.progressivo = m.progressivo and p.codattivita = m.codattivita 
      and p.progressivopraticagroupage = m.progressivopraticagroupage 
  inner join logistic.shipments o on o.jguid = p.jguid
  where 
  not exists (select 1 from logistic.shipment_rows  r where r.jguid = m.jguid);
     
     
    
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
	</schema>
	<schema name="dbms_alert" >
		<function name="_signal" id="Function_2188" isSystem="false" params_known="y" >
			<string><![CDATA[create function _signal dbms_alert_signal;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="message" jt="12" type="text" />
		</function>
		<function name="defered_signal" id="Function_5b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.defered_signal()
 RETURNS trigger
 LANGUAGE c
 SECURITY DEFINER
AS '$libdir/orafce', $function$dbms_alert_defered_signal$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="register" id="Function_8ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.register(name text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_alert_register$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="name" jt="12" type="text" />
		</function>
		<function name="remove" id="Function_f31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.remove(name text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_alert_remove$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="name" jt="12" type="text" />
		</function>
		<function name="removeall" id="Function_151b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.removeall()
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_alert_removeall$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="set_defaults" id="Function_65b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.set_defaults(sensitivity double precision)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_alert_set_defaults$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="sensitivity" jt="8" type="float8" />
		</function>
		<function name="signal" id="Function_f2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.signal(_event text, _message text)
 RETURNS void
 LANGUAGE c
 SECURITY DEFINER
AS '$libdir/orafce', $function$dbms_alert_signal$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="_event" jt="12" type="text" />
			<input_param name="_message" jt="12" type="text" />
		</function>
		<function name="waitany" id="Function_201f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.waitany(OUT name text, OUT message text, OUT status integer, timeout double precision)
 RETURNS record
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_alert_waitany$function$
;]]></string>
			<input_param name="name" jt="12" type="text" />
			<input_param name="message" jt="12" type="text" />
			<input_param name="status" jt="4" type="int4" />
			<input_param name="timeout" jt="8" type="float8" />
		</function>
		<function name="waitone" id="Function_846" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_alert.waitone(name text, OUT message text, OUT status integer, timeout double precision)
 RETURNS record
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_alert_waitone$function$
;]]></string>
			<input_param name="name" jt="12" type="text" />
			<input_param name="message" jt="12" type="text" />
			<input_param name="status" jt="4" type="int4" />
			<input_param name="timeout" jt="8" type="float8" />
		</function>
	</schema>
	<schema name="dbms_assert" >
		<function name="enquote_literal" id="Function_1778" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.enquote_literal(str character varying)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$dbms_assert_enquote_literal$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
		</function>
		<function name="enquote_name" id="Function_958" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.enquote_name(str character varying, loweralize boolean)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$dbms_assert_enquote_name$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
			<input_param name="loweralize" jt="-7" type="bool" />
		</function>
		<function name="enquote_name" id="Function_1f60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.enquote_name(str character varying)
 RETURNS character varying
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$SELECT dbms_assert.enquote_name($1, true)$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
		</function>
		<function name="noop" id="Function_200a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.noop(str character varying)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$dbms_assert_noop$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
		</function>
		<function name="object_name" id="Function_26fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.object_name(str character varying)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$dbms_assert_object_name$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
		</function>
		<function name="qualified_sql_name" id="Function_10e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.qualified_sql_name(str character varying)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$dbms_assert_qualified_sql_name$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
		</function>
		<function name="schema_name" id="Function_13fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.schema_name(str character varying)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$dbms_assert_schema_name$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
		</function>
		<function name="simple_sql_name" id="Function_d5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_assert.simple_sql_name(str character varying)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$dbms_assert_simple_sql_name$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="varchar" />
		</function>
	</schema>
	<schema name="dbms_output" >
		<function name="disable" id="Function_1d4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.disable()
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_disable$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="enable" id="Function_22ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.enable(buffer_size integer)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_output_enable$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="buffer_size" jt="4" type="int4" />
		</function>
		<function name="enable" id="Function_1f26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.enable()
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_enable_default$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="get_line" id="Function_2228" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.get_line(OUT line text, OUT status integer)
 RETURNS record
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_get_line$function$
;]]></string>
			<input_param name="line" jt="12" type="text" />
			<input_param name="status" jt="4" type="int4" />
		</function>
		<function name="get_lines" id="Function_2395" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.get_lines(OUT lines text[], INOUT numlines integer)
 RETURNS record
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_get_lines$function$
;]]></string>
			<input_param name="lines" jt="2003" type="_text" />
			<input_param name="numlines" jt="4" type="int4" />
		</function>
		<function name="new_line" id="Function_1dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.new_line()
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_new_line$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="put" id="Function_1e47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.put(a text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_put$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="a" jt="12" type="text" />
		</function>
		<function name="put_line" id="Function_15d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.put_line(a text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_put_line$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="a" jt="12" type="text" />
		</function>
		<function name="serveroutput" id="Function_2324" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_output.serveroutput(boolean)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_output_serveroutput$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="-7" type="bool" />
		</function>
	</schema>
	<schema name="dbms_pipe" >
		<view name="db_pipes" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT __list_pipes.name,
    __list_pipes.items,
    __list_pipes.size,
    __list_pipes."limit",
    __list_pipes.private,
    __list_pipes.owner
   FROM dbms_pipe.__list_pipes() __list_pipes(name character varying, items integer, size integer, "limit" integer, private boolean, owner character varying);]]></view_script>
			<column name="name" type="varchar" />
			<column name="items" type="integer" />
			<column name="size" type="integer" />
			<column name="limit" type="integer" />
			<column name="private" type="boolean" />
			<column name="owner" type="varchar" />
		</view>
		<function name="__list_pipes" id="Function_b18" isSystem="false" params_known="y" >
			<string><![CDATA[create function __list_pipes dbms_pipe_list_pipes;]]></string>
			<input_param name="returnValue" jt="1111" type="record" />
		</function>
		<function name="create_pipe" id="Function_1ff8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.create_pipe(text, integer, boolean)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_pipe_create_pipe$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="-7" type="bool" />
		</function>
		<function name="create_pipe" id="Function_2b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.create_pipe(text, integer)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_pipe_create_pipe_2$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="create_pipe" id="Function_2f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.create_pipe(text)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_pipe_create_pipe_1$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="next_item_type" id="Function_2258" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.next_item_type()
 RETURNS integer
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_next_item_type$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="pack_message" id="Function_70e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_text$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="pack_message" id="Function_1d11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(date)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_date$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="pack_message" id="Function_237d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(timestamp with time zone)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_timestamp$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="93" type="timestamptz" />
		</function>
		<function name="pack_message" id="Function_1db5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(numeric)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_number$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="2" type="numeric" />
		</function>
		<function name="pack_message" id="Function_270d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(integer)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_integer$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="4" type="int4" />
		</function>
		<function name="pack_message" id="Function_20e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(bigint)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_bigint$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="-5" type="int8" />
		</function>
		<function name="pack_message" id="Function_1ae9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(bytea)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_bytea$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="-2" type="bytea" />
		</function>
		<function name="pack_message" id="Function_1689" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.pack_message(record)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_pack_message_record$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="1111" type="record" />
		</function>
		<function name="purge" id="Function_1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.purge(text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_purge$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="receive_message" id="Function_6cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.receive_message(text, integer)
 RETURNS integer
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_pipe_receive_message$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="receive_message" id="Function_419" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.receive_message(text)
 RETURNS integer
 LANGUAGE sql
AS $function$SELECT dbms_pipe.receive_message($1,NULL::int);$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="remove_pipe" id="Function_176e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.remove_pipe(text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_remove_pipe$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="reset_buffer" id="Function_244f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.reset_buffer()
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_pipe_reset_buffer$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="send_message" id="Function_192a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.send_message(text, integer, integer)
 RETURNS integer
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_pipe_send_message$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
		</function>
		<function name="send_message" id="Function_1ce0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.send_message(text, integer)
 RETURNS integer
 LANGUAGE sql
AS $function$SELECT dbms_pipe.send_message($1,$2,NULL);$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="send_message" id="Function_2e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.send_message(text)
 RETURNS integer
 LANGUAGE sql
AS $function$SELECT dbms_pipe.send_message($1,NULL,NULL);$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="unique_session_name" id="Function_265d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.unique_session_name()
 RETURNS character varying
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_unique_session_name$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
		</function>
		<function name="unpack_message_bytea" id="Function_470" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.unpack_message_bytea()
 RETURNS bytea
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_unpack_message_bytea$function$
;]]></string>
			<input_param name="returnValue" jt="-2" type="bytea" />
		</function>
		<function name="unpack_message_date" id="Function_b43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.unpack_message_date()
 RETURNS date
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_unpack_message_date$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
		</function>
		<function name="unpack_message_number" id="Function_1252" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.unpack_message_number()
 RETURNS numeric
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_unpack_message_number$function$
;]]></string>
			<input_param name="returnValue" jt="2" type="numeric" />
		</function>
		<function name="unpack_message_record" id="Function_23d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.unpack_message_record()
 RETURNS record
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_unpack_message_record$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="record" />
		</function>
		<function name="unpack_message_text" id="Function_2379" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.unpack_message_text()
 RETURNS text
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_pipe_unpack_message_text$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="unpack_message_timestamp" id="Function_269" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_pipe.unpack_message_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_pipe_unpack_message_timestamp$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamptz" />
		</function>
	</schema>
	<schema name="dbms_random" >
		<function name="initialize" id="Function_140e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.initialize(integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$dbms_random_initialize$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="4" type="int4" />
		</function>
		<function name="normal" id="Function_23f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.normal()
 RETURNS double precision
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_random_normal$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="float8" />
		</function>
		<function name="random" id="Function_1a63" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.random()
 RETURNS integer
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_random_random$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="seed" id="Function_dea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.seed(integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$dbms_random_seed_int$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="4" type="int4" />
		</function>
		<function name="seed" id="Function_143a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.seed(text)
 RETURNS void
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$dbms_random_seed_varchar$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="string" id="Function_1718" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.string(opt text, len integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$dbms_random_string$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="opt" jt="12" type="text" />
			<input_param name="len" jt="4" type="int4" />
		</function>
		<function name="terminate" id="Function_23f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.terminate()
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$dbms_random_terminate$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="value" id="Function_21e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.value(low double precision, high double precision)
 RETURNS double precision
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_random_value_range$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="float8" />
			<input_param name="low" jt="8" type="float8" />
			<input_param name="high" jt="8" type="float8" />
		</function>
		<function name="value" id="Function_1c59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_random.value()
 RETURNS double precision
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_random_value$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="float8" />
		</function>
	</schema>
	<schema name="dbms_utility" >
		<function name="format_call_stack" id="Function_198f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_utility.format_call_stack(text)
 RETURNS text
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$dbms_utility_format_call_stack1$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="format_call_stack" id="Function_498" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION dbms_utility.format_call_stack()
 RETURNS text
 LANGUAGE c
AS '$libdir/orafce', $function$dbms_utility_format_call_stack0$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
	</schema>
	<schema name="ads" catalogname="ergomercator" >
		<table name="adwords_campaigns" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="adwc_jguid" type="varchar" length="40" decimal="0" jt="12" />
			<column name="adwc_deleted" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="name" type="varchar" length="256" decimal="0" jt="12" />
			<index name="adwords_campaigns_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="adwords_locations" >
			<column name="location_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="campaign_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="adwords_locations_pkey" unique="PRIMARY_KEY" >
				<column name="location_name" />
			</index>
		</table>
		<table name="adwords_terms" >
			<column name="campaign_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="description" type="varchar" decimal="0" jt="12" mandatory="y" />
			<index name="adwords_terms_pk" unique="PRIMARY_KEY" >
				<column name="campaign_id" />
				<column name="description" />
			</index>
		</table>
		<table name="banner_logs" >
			<column name="log_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="page_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="location_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ip" type="varchar" length="20" decimal="0" jt="12" />
			<column name="url" type="varchar" decimal="0" jt="12" />
			<column name="site_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="agent" type="varchar" decimal="0" jt="12" />
		</table>
		<table name="banners" >
			<column name="number" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="image_url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="target_url" type="varchar" length="2040" decimal="0" jt="12" />
			<column name="visions" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="clicks" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="customer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[This is the customer ID. E.G. the target of the campaign]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="abnn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="abnn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="width" type="integer" length="10" decimal="0" jt="4" />
			<column name="height" type="integer" length="10" decimal="0" jt="4" />
			<column name="since" type="date" length="13" decimal="0" jt="91" />
			<column name="until" type="date" length="13" decimal="0" jt="91" />
			<index name="banners_pk" unique="PRIMARY_KEY" >
				<column name="number" />
			</index>
			<index name="abnn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="abnn_jguid" />
			</index>
			<index name="banners_images_uk" unique="UNIQUE_KEY" >
				<column name="image_url" />
			</index>
		</table>
		<table name="click_logs" >
			<column name="log_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="page_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="location_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ip" type="varchar" length="20" decimal="0" jt="12" />
			<column name="url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="site_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="agent" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="rawdata" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="banner_id" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="domains" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="domain_url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="domain_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="whois" type="text" decimal="0" jt="12" />
			<column name="admn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="admn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="domains_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="admn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="admn_jguid" />
			</index>
			<index name="ads_domains_schemas_fk_ndx" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
		</table>
		<table name="domains_locations" >
			<column name="domain_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_id" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="last_banner" >
			<column name="ip_address" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="last_banner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="alst_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="alst_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="last_banner_pk" unique="PRIMARY_KEY" >
				<column name="ip_address" />
			</index>
			<index name="alst_jguid_uk" unique="UNIQUE_KEY" >
				<column name="alst_jguid" />
			</index>
		</table>
		<table name="publish_slots" >
			<column name="slot_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="domain_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="since" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="until" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="location_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="apbl_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="apbl_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="slots_pk" unique="PRIMARY_KEY" >
				<column name="slot_id" />
			</index>
			<index name="apbl_jguid_uk" unique="UNIQUE_KEY" >
				<column name="apbl_jguid" />
			</index>
		</table>
		<sequence name="banner_logs_seq" options="START WITH 1" />
		<sequence name="banners_seq" options="START WITH 1" />
		<sequence name="click_logs_seq" options="START WITH 1" />
		<sequence name="domains_seq" options="START WITH 1" />
		<trigger name="abnn_bi_trg" table="banners" id="Trigger_1605" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER abnn_bi_trg BEFORE INSERT OR UPDATE ON ads.banners FOR EACH ROW EXECUTE PROCEDURE ads.abnn_trg()]]></string>
		</trigger>
		<trigger name="admn_bi_trg" table="domains" id="Trigger_167a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER admn_bi_trg BEFORE INSERT OR UPDATE ON ads.domains FOR EACH ROW EXECUTE PROCEDURE ads.admn_trg()]]></string>
		</trigger>
		<trigger name="alst_bi_trg" table="last_banner" id="Trigger_114c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER alst_bi_trg BEFORE INSERT OR UPDATE ON ads.last_banner FOR EACH ROW EXECUTE PROCEDURE ads.alst_trg()]]></string>
		</trigger>
		<trigger name="apbl_bi_trg" table="publish_slots" id="Trigger_dec" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER apbl_bi_trg BEFORE INSERT OR UPDATE ON ads.publish_slots FOR EACH ROW EXECUTE PROCEDURE ads.apbl_trg()]]></string>
		</trigger>
		<function name="abnn_trg" id="Function_179e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.abnn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.abnn_jguid is null then
     New.abnn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.abnn_deleted is null then
     New.abnn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="admn_trg" id="Function_205d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.admn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.admn_jguid is null then
     New.admn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.admn_deleted is null then
     New.admn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="adsfrombanner" id="Function_1c98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.adsfrombanner(urlbanner character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  url character varying; 
begin
   select 'http://151.1.24.133/scripts/ergoads.dll?id=' || "number"   as target_url into url 
      from ads.banners where image_url = urlbanner; 
   return(url); 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="urlbanner" jt="12" type="varchar" />
		</function>
		<function name="adsfrombannerlog" id="Function_51e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.adsfrombannerlog(urlbanner character varying, ip character varying, site_id bigint, page_id bigint, site_key character varying, page_location_id bigint, headers character varying, agent character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  url character varying; 
begin
   select target_url into url from ads.banners where image_url = urlbanner; 
   return(url); 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="urlbanner" jt="12" type="varchar" />
			<input_param name="ip" jt="12" type="varchar" />
			<input_param name="site_id" jt="-5" type="int8" />
			<input_param name="page_id" jt="-5" type="int8" />
			<input_param name="site_key" jt="12" type="varchar" />
			<input_param name="page_location_id" jt="-5" type="int8" />
			<input_param name="headers" jt="12" type="varchar" />
			<input_param name="agent" jt="12" type="varchar" />
		</function>
		<function name="adsfromid" id="Function_427" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.adsfromid(id integer, remoteip character varying, header character varying, remoteurl character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  url character varying; 
  target bigint; 
begin
  select  nvl(clicks,0) + 1 into target from  ads.banners where "number" = id; 

   update ads.banners set clicks = target where "number" = id; 
   select target_url into url from ads.banners where "number" = id; 
   return(url); 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="id" jt="4" type="int4" />
			<input_param name="remoteip" jt="12" type="varchar" />
			<input_param name="header" jt="12" type="varchar" />
			<input_param name="remoteurl" jt="12" type="varchar" />
		</function>
		<function name="alst_trg" id="Function_79e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.alst_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.alst_jguid is null then
     New.alst_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.alst_deleted is null then
     New.alst_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="apbl_trg" id="Function_2380" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.apbl_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.apbl_jguid is null then
     New.apbl_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.apbl_deleted is null then
     New.apbl_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="banner" id="Function_114c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.banner(ip character varying, site_id bigint, site_key bigint, page_location_id bigint, headers character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  rnd integer; 
  target bigint; 
  s_banner character varying (2000); 
begin

   select count(1) into rnd from ads.banners;
   select trunc(random() * rnd+1) into rnd; 
   select nvl(visions,0) into target from  ads.banners  where "number" = rnd; 
   target := target + 1; 
   update ads.banners set visions = target where "number" = rnd;  
   select image_url  into s_banner from ads.banners where "number" = rnd;  
   INSERT INTO ads.banner_logs(
            log_id, insert_date, page_id, location_id, ip, url, site_id, 
            agent)
    VALUES (nextval('ads.banner_logs_seq'), now(), 0, page_location_id, ip, site_key, site_id, 
            headers);

     
   Return s_banner;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="ip" jt="12" type="varchar" />
			<input_param name="site_id" jt="-5" type="int8" />
			<input_param name="site_key" jt="-5" type="int8" />
			<input_param name="page_location_id" jt="-5" type="int8" />
			<input_param name="headers" jt="12" type="varchar" />
		</function>
		<function name="banner_cursor" id="Function_24be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.banner_cursor(ip character varying, site_id bigint, site_key bigint, page_location_id bigint, headers character varying)
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
DECLARE
    ref refcursor;
    rnd integer; 
begin

   select count(1) into rnd from ads.banners;
   select trunc(random() * rnd + 1) into rnd; 
 --  select image_url  into s_banner from ads.banners where "number" = rnd;  
   INSERT INTO ads.banner_logs(
            log_id, insert_date, page_id, location_id, ip, url, site_id, 
            agent)
    VALUES (nextval('ads.banner_logs_seq'), now(), 0, page_location_id, ip, site_key, site_id, 
            headers);

     
   Return s_banner;
   
 OPEN ref FOR  select image_url, 'http://ads.ergomercator.com/scripts/ergoads.dll&id=' ||  as   banner_url where "number" = rnd;  
 Return ref;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
			<input_param name="ip" jt="12" type="varchar" />
			<input_param name="site_id" jt="-5" type="int8" />
			<input_param name="site_key" jt="-5" type="int8" />
			<input_param name="page_location_id" jt="-5" type="int8" />
			<input_param name="headers" jt="12" type="varchar" />
		</function>
		<function name="banner_random_url" id="Function_7f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.banner_random_url(p_site_key character varying, p_ip_address character varying, p_headers text, OUT o_id bigint, OUT o_img_url character varying, OUT o_site_url character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$declare
    rnd integer; 
begin

   select count(1) into rnd from ads.banners;
   select trunc(random() * rnd + 1) into rnd; 
   update ads.banners set visions = visions + 1 where "number" = rnd; 

   select image_url, target_url into o_img_url, o_site_url 
        from ads.banners where "number" = rnd; 
        
   INSERT INTO ads.banner_logs(
            log_id, insert_date, page_id, location_id, ip, url, site_id, 
            agent)
    VALUES (nextval('ads.banner_logs_seq'), now(), rnd, 0, p_ip_address, p_site_key, 0, 
            p_headers);

end; $function$
;]]></string>
			<input_param name="p_site_key" jt="12" type="varchar" />
			<input_param name="p_ip_address" jt="12" type="varchar" />
			<input_param name="p_headers" jt="12" type="text" />
			<input_param name="o_id" jt="-5" type="int8" />
			<input_param name="o_img_url" jt="12" type="varchar" />
			<input_param name="o_site_url" jt="12" type="varchar" />
		</function>
		<function name="domains_seq_trg" id="Function_21d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.domains_seq_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id:=nextval('ads.domains_seq');
          New.key := system.get_key(New.id, 32); 
     end if; 
     Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="nvl" id="Function_21c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION ads.nvl(value bigint, replace integer)
 RETURNS text
 LANGUAGE plpgsql
AS $function$begin
   if value is null then 
	return (replace);
    else
	return(value);
    end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="value" jt="-5" type="int8" />
			<input_param name="replace" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="anagraph" catalogname="ergomercator" >
		<comment><![CDATA[Anagraph is one of the Main Schemas of the System. It can be considered th 'core' of near all the possible Applications and comes just one level after the 'system' kernel object.]]></comment>
		<udt name="address" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(256) ]]></udt_script>
		</udt>
		<udt name="address_number" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(20) ]]></udt_script>
		</udt>
		<udt name="full_address" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(512) ]]></udt_script>
		</udt>
		<udt name="phone" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(30) ]]></udt_script>
		</udt>
		<udt name="postal_code" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(30) ]]></udt_script>
		</udt>
		<udt name="state_province" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(30) ]]></udt_script>
		</udt>
		<udt name="town_code" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(20) ]]></udt_script>
		</udt>
		<udt name="town_name" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(128) ]]></udt_script>
		</udt>
		<table name="addresses" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="address_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="postal_code" length="34" decimal="0" jt="12" />
			<column name="state_province" type="state_province" length="34" decimal="0" jt="12" />
			<column name="town_name" type="town_name" length="132" decimal="0" jt="12" />
			<column name="town_code" type="town_code" length="24" decimal="0" jt="12" />
			<column name="address" type="address" length="260" decimal="0" jt="12" />
			<column name="address_number" type="address_number" length="24" decimal="0" jt="12" />
			<column name="phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="full_address" type="varchar" length="512" decimal="0" jt="12" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="maps_json" type="json" decimal="0" jt="2000" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="pos" type="smallint" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="anagraph_id" type="integer" jt="4" mandatory="y" />
			<index name="addresses_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="addresses_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<fk name="fk_addresses_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" delete_action="cascade" update_action="cascade" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="an_addresses" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="address_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="postal_code" length="34" decimal="0" jt="12" />
			<column name="state_province" type="state_province" length="34" decimal="0" jt="12" />
			<column name="town_name" type="town_name" length="132" decimal="0" jt="12" />
			<column name="town_code" type="town_code" length="24" decimal="0" jt="12" />
			<column name="address" type="address" length="260" decimal="0" jt="12" mandatory="y" />
			<column name="address_number" type="address_number" length="24" decimal="0" jt="12" />
			<column name="phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="full_address" type="varchar" length="512" decimal="0" jt="12" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="maps_json" type="json" decimal="0" jt="2000" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="an_addresses_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="an_addresses_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="fki_an_addresses_anagraph_fk" unique="NORMAL" >
				<column name="anagraph_id" />
			</index>
			<constraint name="anagraph_id_check" >
				<string><![CDATA[CHECK ((anagraph_id > 0))]]></string>
			</constraint>
			<fk name="an_addresses_anagraph_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="an_contacts" >
			<comment><![CDATA[group of contacts in an anagraph schema]]></comment>
			<column name="an_master_id" type="integer" jt="4" mandatory="y" />
			<column name="an_contact_id" type="integer" jt="4" mandatory="y" />
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[group id]]></comment>
			</column>
			<index name="pk_an_contacts_an_master_id" unique="PRIMARY_KEY" >
				<column name="an_master_id" />
				<column name="an_contact_id" />
			</index>
			<fk name="fk_an_contacts_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="an_master_id" pk="anagraph_id" />
			</fk>
			<fk name="fk_an_contacts_anagraphs_0" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="an_contact_id" pk="anagraph_id" />
			</fk>
			<fk name="fk_an_contacts_groups" to_schema="ergomercator.anagraph" to_table="groups" >
				<fk_column name="an_group_id" pk="an_group_id" />
			</fk>
		</table>
		<table name="an_locations" >
			<comment><![CDATA[Different Locations for an anagraph account]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Anagraph Location Id]]></comment>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign kez to Anagraph id]]></comment>
			</column>
			<column name="osm_place_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Foreign Key to GIS open street maps Location]]></comment>
			</column>
			<index name="pk_an_locations_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_an_locations_anagraphs" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="anag_categories" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="category_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="anag_categories_pkey" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="category_id" />
			</index>
			<index name="anag_categories_categories_ndx" unique="NORMAL" >
				<column name="category_id" />
			</index>
			<fk name="an_categories_anagraph_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
			<fk name="an_anagraph_categories_fk" to_schema="ergomercator.anagraph" to_table="categories" >
				<fk_column name="category_id" pk="category_id" />
			</fk>
		</table>
		<table name="anagraphs" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="an_title" type="varchar" length="32" decimal="0" jt="12" />
			<column name="an_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_second_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_last_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="an_notes" type="varchar" length="512" decimal="0" jt="12" />
			<column name="an_address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_iso_country_code" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="an_state_province" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_phone" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_phone2" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_fax" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_cellular" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_code" type="varchar" length="15" decimal="0" jt="12" />
			<column name="an_vat_numeric" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_email" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_web" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_contact_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_bank_account" type="varchar" length="255" decimal="0" jt="12" />
			<column name="an_payment_des" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_discount" type="numeric" length="5" decimal="2" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_distance" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_distance_mesunit" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_sex" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="an_cod_comune" type="varchar" length="3" decimal="0" jt="12" />
			<column name="an_cod_provincia" type="varchar" length="3" decimal="0" jt="12" />
			<column name="an_credit_line" type="numeric" length="14" decimal="2" jt="2" />
			<column name="an_currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_cat_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_notes2" type="varchar" length="40" decimal="0" jt="12" />
			<column name="an_notes3" type="text" decimal="0" jt="12" />
			<column name="an_edi" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_privacy" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_office_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key to Anagraph record of Office it belongs to]]></comment>
			</column>
			<column name="an_cod_prov_rif" type="varchar" length="3" decimal="0" jt="12" />
			<column name="an_data_fido" type="date" length="13" decimal="0" jt="91" />
			<column name="an_user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="an_area_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_agent_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_area_code" type="varchar" length="1" decimal="0" jt="12" />
			<column name="an_zone_id" type="varchar" length="1" decimal="0" jt="12" />
			<column name="an_ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_documents" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_last_date" type="date" length="13" decimal="0" jt="91" />
			<column name="an_birthdate" type="date" length="13" decimal="0" jt="91" />
			<column name="an_office_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_searchname" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_extra_ue_flag" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_external_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_vat_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_personal_fiscal_code" type="varchar" length="16" decimal="0" jt="12" />
			<column name="an_privacy_print" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_sms" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_encrypted_fiscal_code" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_vat_purcentage" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_status" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_ownsite" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="an_insurance_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_anagraphs_anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_main_language_code" type="varchar" length="2" decimal="0" jt="12" mandatory="y" />
			<column name="an_main_culture_code" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="an_fiscal_code" type="varchar" length="16" decimal="0" jt="12" />
			<column name="an_main_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[The foreign key to the main group id can be assigned to only one group at a time even if anagraph subject can be in many groups at the same time]]></comment>
			</column>
			<column name="an_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="test" type="float8" length="17" decimal="17" jt="6" />
			<column name="search_index" type="varchar" length="2048" decimal="0" jt="12" >
				<comment><![CDATA[Campo di ricerca]]></comment>
			</column>
			<column name="an_birthplace" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_birthplace_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="anagraph64" type="varchar" length="64" decimal="0" jt="12" >
				<comment><![CDATA[Base 64 Anagraph identifier]]></comment>
			</column>
			<column name="main_category_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="osm_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_description" type="varchar" length="512" decimal="0" jt="12" />
			<column name="an_address_number" type="varchar" length="20" decimal="0" jt="12" >
				<defo><![CDATA[''::character varying]]></defo>
			</column>
			<column name="anag_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="anag_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Unique ID of user inserting]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="custom_field_1" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Custom Field for optional Data]]></comment>
			</column>
			<column name="custom_field_2" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_field_3" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_float_1" type="real" length="8" decimal="8" jt="7" />
			<column name="custom_float_2" type="real" length="8" decimal="8" jt="7" />
			<column name="custom_int_1" type="integer" length="10" decimal="0" jt="4" />
			<column name="custom_int_2" type="integer" length="10" decimal="0" jt="4" />
			<column name="supplier_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="vessel_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[An anagraph can be connected to a Vessel. An anagaph location record can be used (also) to oonnect as specific Vessel to its Shipowner]]></comment>
			</column>
			<column name="an_country_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_iso_country_code2" type="char" length="2" decimal="0" jt="1" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="an_full_address" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[The Route, road, square for the address minus the address number]]></comment>
			</column>
			<index name="anagraph_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
			</index>
			<index name="anagraphs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="anagraph_code_ndx" unique="NORMAL" >
				<column name="an_code" />
				<column name="db_schema_id" />
				<column name="an_main_group_id" />
			</index>
			<index name="anagraph_main_category_ndx" unique="NORMAL" >
				<column name="main_category_id" />
			</index>
			<index name="anagraph_search_index_uk_ndx" unique="NORMAL" >
				<column name="search_index" />
			</index>
			<index name="anagraphs_dbschema_ndx" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="fki_an_anagraphs_groups_fk" unique="NORMAL" >
				<column name="an_main_group_id" />
			</index>
			<fk name="fk_anagraphs_categories" to_schema="ergomercator.anagraph" to_table="categories" update_action="cascade" >
				<fk_column name="main_category_id" pk="category_id" />
			</fk>
			<fk name="fk_anagraphs_groups" to_schema="ergomercator.anagraph" to_table="groups" update_action="cascade" >
				<fk_column name="an_main_group_id" pk="an_group_id" />
			</fk>
		</table>
		<table name="branches" >
			<column name="an_branch_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="an_branch_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="an_branch_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_branch_town_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_branch_town_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="an_branch_address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="an_insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="an_update_date" type="timestamp" decimal="6" jt="93" />
			<column name="an_upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="an_user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="abrn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="abrn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="an_branch_phone" type="phone" length="34" decimal="0" jt="12" />
			<column name="an_branch_state_province" type="state_province" length="34" decimal="0" jt="12" />
			<column name="an_reference_id" type="integer" jt="4" >
				<comment><![CDATA[Anagraph Reference id]]></comment>
			</column>
			<index name="an_branches_pk" unique="PRIMARY_KEY" >
				<column name="an_branch_id" />
				<column name="anagraph_id" />
			</index>
			<index name="abrn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="abrn_jguid" />
			</index>
			<index name="idx_an_branches" unique="NORMAL" >
				<column name="anagraph_id" />
			</index>
			<fk name="fk_an_branches" to_schema="ergomercator.anagraph" to_table="anagraphs" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
		</table>
		<table name="cars" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="numberplate" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="model" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="color" type="varchar" length="128" decimal="0" jt="12" />
			<column name="pos" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="country_code" type="char" length="2" decimal="0" jt="1" >
				<defo><![CDATA['IT'::bpchar]]></defo>
			</column>
			<index name="cars_pkey" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="numberplate" />
			</index>
		</table>
		<table name="categories" >
			<column name="category_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="category_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="image_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA['-1'::integer]]></defo>
			</column>
			<column name="master_category_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="osm_category_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="categories_pk" unique="PRIMARY_KEY" >
				<column name="category_id" />
			</index>
			<index name="categories_master_ndx" unique="NORMAL" >
				<column name="master_category_id" />
			</index>
		</table>
		<table name="categories_translations" >
			<column name="category_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="culture_code" type="char" length="5" decimal="0" jt="1" mandatory="y" />
			<column name="category_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="categories_translations_pkey" unique="PRIMARY_KEY" >
				<column name="category_id" />
				<column name="culture_code" />
			</index>
			<fk name="category_t_categories_fk" to_schema="ergomercator.anagraph" to_table="categories" >
				<fk_column name="category_id" pk="category_id" />
			</fk>
		</table>
		<table name="groups" >
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[group id]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="group_des" type="varchar" length="20" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[description group]]></comment>
			</column>
			<column name="contact_group" type="smallint" length="5" decimal="0" jt="5" />
			<column name="sub_group" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[sub group]]></comment>
			</column>
			<column name="sub_group_des" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[sub group description]]></comment>
			</column>
			<column name="settings" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[settings of the group]]></comment>
			</column>
			<column name="position" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[position of the group]]></comment>
			</column>
			<column name="accounting" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<comment><![CDATA[accounting of the group]]></comment>
			</column>
			<column name="cod_account" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[cod of the account]]></comment>
			</column>
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[if the record is made local]]></comment>
			</column>
			<column name="group_cod" type="varchar" length="2" decimal="0" jt="12" >
				<comment><![CDATA[General ledger group cod]]></comment>
			</column>
			<column name="ledger_cod" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[the ledger code of acconting]]></comment>
			</column>
			<column name="subledger_cod" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[GL subledger code of account]]></comment>
			</column>
			<column name="grouping" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[grouping]]></comment>
			</column>
			<column name="description" type="varchar" length="30" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[long description of the row]]></comment>
			</column>
			<column name="angr_jguid" type="varchar" length="40" decimal="0" jt="12" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="angr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="icon_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="an_groups_pk" unique="PRIMARY_KEY" >
				<column name="an_group_id" />
			</index>
			<index name="angr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="angr_jguid" />
			</index>
		</table>
		<table name="identities" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="an_agent_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_agent_group_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_credit_limit" type="numeric" length="12" decimal="2" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_credit_days" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="an_credit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="an_credit_notes" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_credit_used" type="numeric" length="12" decimal="2" jt="2" />
			<column name="an_overdue_credit" type="numeric" length="12" decimal="2" jt="2" />
			<column name="adnt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="adnt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<index name="an_anag_gr" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="an_group_id" />
			</index>
			<index name="adnt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="adnt_jguid" />
			</index>
			<index name="fk_identities_anagraphs_ndx" unique="NORMAL" >
				<column name="anagraph_id" />
			</index>
			<index name="idx_an_identities" unique="NORMAL" >
				<column name="an_group_id" />
			</index>
			<fk name="an_identities_anagraphs_fk" to_schema="ergomercator.anagraph" to_table="anagraphs" delete_action="cascade" update_action="cascade" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
			</fk>
			<fk name="fk_an_identities_0" to_schema="ergomercator.anagraph" to_table="groups" >
				<fk_column name="an_group_id" pk="an_group_id" />
			</fk>
		</table>
		<table name="schema_groups" >
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="schema_groups_pkey" unique="PRIMARY_KEY" >
				<column name="an_group_id" />
				<column name="db_schema_id" />
			</index>
			<index name="fki_s" unique="NORMAL" >
				<column name="an_group_id" />
			</index>
			<index name="group_schemas_fki" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="groups_schemas_groups_fk" to_schema="ergomercator.anagraph" to_table="groups" >
				<fk_column name="an_group_id" pk="an_group_id" />
			</fk>
			<fk name="groups_schemas_fk" to_schema="ergomercator.system" to_table="db_schemas" update_action="cascade" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<view name="an_addresses_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT an_addresses.db_schema_id,
    an_addresses.id,
    an_addresses.address_name,
    an_addresses.postal_code,
    an_addresses.state_province,
    an_addresses.town_name,
    an_addresses.town_code,
    an_addresses.address,
    an_addresses.address_number,
    an_addresses.phone,
    an_addresses.full_address,
    an_addresses.insert_date,
    an_addresses.update_date,
    an_addresses.upd_id,
    an_addresses.ins_id,
    an_addresses.user_insert,
    an_addresses.user_update,
    an_addresses.local,
    an_addresses.deleted,
    an_addresses.jguid,
    an_addresses.country_code,
    an_addresses.email,
    an_addresses.anagraph_id,
    an_addresses.maps_json,
    an_addresses.longitude,
    an_addresses.latitude,
    an_addresses.pos,
    an_addresses.master_jguid
   FROM anagraph.an_addresses;]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="id" type="bigint" />
			<column name="address_name" type="varchar" />
			<column name="postal_code" type="postal_code" />
			<column name="state_province" type="state_province" />
			<column name="town_name" type="town_name" />
			<column name="town_code" type="town_code" />
			<column name="address" type="address" />
			<column name="address_number" type="address_number" />
			<column name="phone" type="phone" />
			<column name="full_address" type="varchar" />
			<column name="insert_date" type="timestamp" />
			<column name="update_date" type="timestamp" />
			<column name="upd_id" type="bigint" />
			<column name="ins_id" type="bigint" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="local" type="boolean" />
			<column name="deleted" type="boolean" />
			<column name="jguid" type="uuid" />
			<column name="country_code" type="char" />
			<column name="email" type="varchar" />
			<column name="anagraph_id" type="integer" />
			<column name="maps_json" type="json" />
			<column name="longitude" type="float8" />
			<column name="latitude" type="float8" />
			<column name="pos" type="smallint" />
			<column name="master_jguid" type="uuid" />
		</view>
		<view name="anagraphs_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.db_schema_id,
    a.anagraph_id,
    a.an_title,
    a.an_name,
    a.an_second_name,
    a.an_last_name,
    a.an_notes,
    a.an_address,
    a.an_town,
    a.an_postal_code,
    a.an_iso_country_code,
    a.an_state_province,
    a.an_phone,
    a.an_phone2,
    a.an_fax,
    a.an_cellular,
    a.an_code,
    a.an_vat_numeric,
    a.an_email,
    a.an_web,
    a.an_contact_id,
    a.an_bank_account,
    a.an_payment_des,
    a.an_discount,
    a.an_distance,
    a.an_distance_mesunit,
    a.an_sex,
    a.an_cod_comune,
    a.an_cod_provincia,
    a.an_credit_line,
    a.an_currency_id,
    a.an_cat_id,
    a.an_notes2,
    a.an_notes3,
    a.an_edi,
    a.an_privacy,
    a.an_office_id,
    a.an_cod_prov_rif,
    a.an_data_fido,
    a.an_user_insert,
    a.an_user_update,
    a.an_area_id,
    a.an_agent_id,
    a.an_area_code,
    a.an_zone_id,
    a.an_ins_id,
    a.an_upd_id,
    a.an_documents,
    a.an_last_date,
    a.an_birthdate,
    a.an_office_type_id,
    a.an_searchname,
    a.an_extra_ue_flag,
    a.an_external_code,
    a.an_vat_id,
    a.an_personal_fiscal_code,
    a.an_privacy_print,
    a.an_sms,
    a.an_encrypted_fiscal_code,
    a.an_vat_purcentage,
    a.an_status,
    a.an_ownsite,
    a.an_insurance_id,
    a.an_anagraphs_anagraph_id,
    a.an_main_language_code,
    a.an_main_culture_code,
    a.an_fiscal_code,
    a.an_main_group_id,
    a.an_image_id,
    a.latitude,
    a.longitude,
    a.test,
    a.search_index,
    a.an_birthplace,
    a.an_birthplace_code,
    a.anagraph64,
    a.main_category_id,
    a.osm_id,
    a.an_description,
    a.an_address_number,
    a.anag_jguid,
    a.anag_deleted,
    a.insert_date,
    a.update_date,
    a.user_insert,
    a.jguid,
    a.custom_field_1,
    a.custom_field_2,
    a.custom_field_3,
    a.custom_float_1,
    a.custom_float_2,
    a.custom_int_1,
    a.custom_int_2,
    a.supplier_id,
    a.vessel_id,
    a.an_country_id,
    a.an_iso_country_code2,
    a.deleted,
    i.an_group_id,
    i.an_credit_limit,
    i.an_credit,
    s.an_branch_name AS shipment_name,
    s.an_branch_postal_code AS shipment_postal_code,
    s.an_branch_town_name AS shipment_town,
    s.an_branch_address AS shipment_address,
    s.an_branch_phone AS shipment_phone,
    s.an_branch_state_province AS shipment_state_province,
    b.an_branch_name AS billing_name,
    b.an_branch_postal_code AS billing_postal_code,
    b.an_branch_town_name AS billing_town,
    b.an_branch_address AS billing_address,
    b.an_branch_phone AS billing_phone,
    b.an_branch_state_province AS billing_state_province,
    a.an_full_address
   FROM (((anagraph.anagraphs a
     JOIN anagraph.identities i ON ((i.anagraph_id = a.anagraph_id)))
     LEFT JOIN anagraph.branches s ON (((s.anagraph_id = a.anagraph_id) AND (s.an_branch_id = 2))))
     LEFT JOIN anagraph.branches b ON (((s.anagraph_id = a.anagraph_id) AND (s.an_branch_id = 1))));]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="anagraph_id" type="integer" />
			<column name="an_title" type="varchar" />
			<column name="an_name" type="varchar" />
			<column name="an_second_name" type="varchar" />
			<column name="an_last_name" type="varchar" />
			<column name="an_notes" type="varchar" />
			<column name="an_address" type="varchar" />
			<column name="an_town" type="varchar" />
			<column name="an_postal_code" type="varchar" />
			<column name="an_iso_country_code" type="varchar" />
			<column name="an_state_province" type="varchar" />
			<column name="an_phone" type="varchar" />
			<column name="an_phone2" type="varchar" />
			<column name="an_fax" type="varchar" />
			<column name="an_cellular" type="varchar" />
			<column name="an_code" type="varchar" />
			<column name="an_vat_numeric" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_web" type="varchar" />
			<column name="an_contact_id" type="integer" />
			<column name="an_bank_account" type="varchar" />
			<column name="an_payment_des" type="varchar" />
			<column name="an_discount" type="numeric" />
			<column name="an_distance" type="integer" />
			<column name="an_distance_mesunit" type="smallint" />
			<column name="an_sex" type="varchar" />
			<column name="an_cod_comune" type="varchar" />
			<column name="an_cod_provincia" type="varchar" />
			<column name="an_credit_line" type="numeric" />
			<column name="an_currency_id" type="smallint" />
			<column name="an_cat_id" type="smallint" />
			<column name="an_notes2" type="varchar" />
			<column name="an_notes3" type="text" />
			<column name="an_edi" type="boolean" />
			<column name="an_privacy" type="boolean" />
			<column name="an_office_id" type="integer" />
			<column name="an_cod_prov_rif" type="varchar" />
			<column name="an_data_fido" type="date" />
			<column name="an_user_insert" type="varchar" />
			<column name="an_user_update" type="varchar" />
			<column name="an_area_id" type="smallint" />
			<column name="an_agent_id" type="smallint" />
			<column name="an_area_code" type="varchar" />
			<column name="an_zone_id" type="varchar" />
			<column name="an_ins_id" type="bigint" />
			<column name="an_upd_id" type="bigint" />
			<column name="an_documents" type="smallint" />
			<column name="an_last_date" type="date" />
			<column name="an_birthdate" type="date" />
			<column name="an_office_type_id" type="smallint" />
			<column name="an_searchname" type="varchar" />
			<column name="an_extra_ue_flag" type="boolean" />
			<column name="an_external_code" type="varchar" />
			<column name="an_vat_id" type="smallint" />
			<column name="an_personal_fiscal_code" type="varchar" />
			<column name="an_privacy_print" type="smallint" />
			<column name="an_sms" type="boolean" />
			<column name="an_encrypted_fiscal_code" type="varchar" />
			<column name="an_vat_purcentage" type="smallint" />
			<column name="an_status" type="smallint" />
			<column name="an_ownsite" type="boolean" />
			<column name="an_insurance_id" type="bigint" />
			<column name="an_anagraphs_anagraph_id" type="integer" />
			<column name="an_main_language_code" type="varchar" />
			<column name="an_main_culture_code" type="varchar" />
			<column name="an_fiscal_code" type="varchar" />
			<column name="an_main_group_id" type="integer" />
			<column name="an_image_id" type="bigint" />
			<column name="latitude" type="float8" />
			<column name="longitude" type="float8" />
			<column name="test" type="float8" />
			<column name="search_index" type="varchar" />
			<column name="an_birthplace" type="varchar" />
			<column name="an_birthplace_code" type="varchar" />
			<column name="anagraph64" type="varchar" />
			<column name="main_category_id" type="smallint" />
			<column name="osm_id" type="bigint" />
			<column name="an_description" type="varchar" />
			<column name="an_address_number" type="varchar" />
			<column name="anag_jguid" type="varchar" />
			<column name="anag_deleted" type="boolean" />
			<column name="insert_date" type="timestamp" />
			<column name="update_date" type="timestamp" />
			<column name="user_insert" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="custom_field_1" type="varchar" />
			<column name="custom_field_2" type="varchar" />
			<column name="custom_field_3" type="varchar" />
			<column name="custom_float_1" type="real" />
			<column name="custom_float_2" type="real" />
			<column name="custom_int_1" type="integer" />
			<column name="custom_int_2" type="integer" />
			<column name="supplier_id" type="integer" />
			<column name="vessel_id" type="smallint" />
			<column name="an_country_id" type="integer" />
			<column name="an_iso_country_code2" type="char" />
			<column name="deleted" type="boolean" />
			<column name="an_group_id" type="smallint" />
			<column name="an_credit_limit" type="numeric" />
			<column name="an_credit" type="boolean" />
			<column name="shipment_name" type="varchar" />
			<column name="shipment_postal_code" type="varchar" />
			<column name="shipment_town" type="varchar" />
			<column name="shipment_address" type="varchar" />
			<column name="shipment_phone" type="phone" />
			<column name="shipment_state_province" type="state_province" />
			<column name="billing_name" type="varchar" />
			<column name="billing_postal_code" type="varchar" />
			<column name="billing_town" type="varchar" />
			<column name="billing_address" type="varchar" />
			<column name="billing_phone" type="phone" />
			<column name="billing_state_province" type="state_province" />
			<column name="an_full_address" type="varchar" />
		</view>
		<view name="groups_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT g.db_schema_id,
    g.an_group_id,
    g.group_des,
    g.contact_group,
    g.sub_group,
    g.sub_group_des,
    g.settings,
    g."position",
    g.accounting,
    g.cod_account,
    g.local,
    g.group_cod,
    g.ledger_cod,
    g.subledger_cod,
    g."grouping",
    g.description,
    g.angr_jguid,
    g.angr_deleted,
    g.icon_id,
    g.jguid
   FROM anagraph.groups g
  WHERE (g.an_group_id IN ( SELECT s.an_group_id
           FROM anagraph.schema_groups s
          WHERE (s.db_schema_id = (current_setting('system.db_schema_id'::text))::integer)));]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="an_group_id" type="smallint" />
			<column name="group_des" type="varchar" />
			<column name="contact_group" type="smallint" />
			<column name="sub_group" type="smallint" />
			<column name="sub_group_des" type="varchar" />
			<column name="settings" type="varchar" />
			<column name="position" type="smallint" />
			<column name="accounting" type="boolean" />
			<column name="cod_account" type="varchar" />
			<column name="local" type="boolean" />
			<column name="group_cod" type="varchar" />
			<column name="ledger_cod" type="varchar" />
			<column name="subledger_cod" type="varchar" />
			<column name="grouping" type="varchar" />
			<column name="description" type="varchar" />
			<column name="angr_jguid" type="varchar" />
			<column name="angr_deleted" type="boolean" />
			<column name="icon_id" type="smallint" />
			<column name="jguid" type="uuid" />
		</view>
		<view name="osm_anagraphs" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT ac.category_id,
    c.id AS osm_cat_id,
    p.id AS osm_id,
    p.name,
    p.visible,
    p.creation,
    p.uid,
    p.lat,
    p.lon,
    p.distance,
    p.mapgroup,
    p.address,
    p.description,
    p.brand,
    p.mapoperator,
    p.phone,
    p.website,
    p.email,
    p.fax,
    p.addressfull,
    p.addr_city,
    p.addr_number,
    p.addr_street,
    p.addr_postcode,
    p.tags,
    p.version,
    p.cuisine
   FROM gis.osm_places p,
    gis.osm_categories c,
    anagraph.categories ac
  WHERE (((c.code)::text = (p.address)::text) AND (ac.osm_category_id = c.id) AND (p.visible = true) AND (btrim((p.name)::text) <> ''::text) AND ((p.address)::text <> ALL (ARRAY[('unknown'::character varying)::text, ('highway'::character varying)::text])));]]></view_script>
			<column name="category_id" type="smallint" />
			<column name="osm_cat_id" type="smallint" />
			<column name="osm_id" type="bigint" />
			<column name="name" type="varchar" />
			<column name="visible" type="boolean" />
			<column name="creation" type="timestamp" />
			<column name="uid" type="bigint" />
			<column name="lat" type="float8" />
			<column name="lon" type="float8" />
			<column name="distance" type="float8" />
			<column name="mapgroup" type="varchar" />
			<column name="address" type="varchar" />
			<column name="description" type="varchar" />
			<column name="brand" type="varchar" />
			<column name="mapoperator" type="varchar" />
			<column name="phone" type="varchar" />
			<column name="website" type="varchar" />
			<column name="email" type="varchar" />
			<column name="fax" type="varchar" />
			<column name="addressfull" type="varchar" />
			<column name="addr_city" type="varchar" />
			<column name="addr_number" type="varchar" />
			<column name="addr_street" type="varchar" />
			<column name="addr_postcode" type="varchar" />
			<column name="tags" type="text" />
			<column name="version" type="smallint" />
			<column name="cuisine" type="varchar" />
		</view>
		<sequence name="an_addresses_seq" options="START WITH 1" />
		<sequence name="an_anagraph_seq" options="START WITH 1" />
		<sequence name="categories_seq" options="START WITH 1" />
		<sequence name="group_seq" options="START WITH 2" />
		<trigger name="abrn_bi_trg" table="branches" id="Trigger_2567" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER abrn_bi_trg BEFORE INSERT OR UPDATE ON anagraph.branches FOR EACH ROW EXECUTE PROCEDURE anagraph.abrn_trg()]]></string>
		</trigger>
		<trigger name="adnt_bi_trg" table="identities" id="Trigger_23df" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER adnt_bi_trg BEFORE INSERT OR UPDATE ON anagraph.identities FOR EACH ROW EXECUTE PROCEDURE anagraph.adnt_trg()]]></string>
		</trigger>
		<trigger name="an_addresses_view_bi_trg" id="Trigger_1ea4" isSystem="false" />
		<trigger name="an_addresses_view_bu_trg" id="Trigger_10f5" isSystem="false" />
		<trigger name="an_anagraph_bi_trg" table="anagraphs" id="Trigger_1d67" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER an_anagraph_bi_trg BEFORE INSERT OR UPDATE ON anagraph.anagraphs FOR EACH ROW EXECUTE PROCEDURE anagraph.anagraph_new_id_trg()]]></string>
		</trigger>
		<trigger name="anag_bi_trg" table="anagraphs" id="Trigger_24f6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anag_bi_trg BEFORE INSERT OR UPDATE ON anagraph.anagraphs FOR EACH ROW EXECUTE PROCEDURE anagraph.anag_trg()]]></string>
		</trigger>
		<trigger name="anagraph_addresses_biu_trg" table="an_addresses" id="Trigger_24a2" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anagraph_addresses_biu_trg BEFORE INSERT OR UPDATE ON anagraph.an_addresses FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="anagraph_view_ioi_trg" id="Trigger_1ef4" isSystem="false" />
		<trigger name="anagraphs_identities_aiu_trg" table="anagraphs" id="Trigger_15aa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anagraphs_identities_aiu_trg AFTER INSERT OR UPDATE ON anagraph.anagraphs FOR EACH ROW EXECUTE PROCEDURE anagraph.anagraph_identities_trg()]]></string>
		</trigger>
		<trigger name="anagraphs_view_iou_trg" id="Trigger_23b0" isSystem="false" />
		<trigger name="categories_id_bi_trg" table="categories" id="Trigger_cd" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER categories_id_bi_trg BEFORE INSERT OR UPDATE ON anagraph.categories FOR EACH ROW EXECUTE PROCEDURE anagraph.categories_new_id_trg()]]></string>
		</trigger>
		<trigger name="group_new_id" table="groups" id="Trigger_23f6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER group_new_id BEFORE INSERT OR UPDATE ON anagraph.groups FOR EACH ROW EXECUTE PROCEDURE anagraph.group_new_id_trg()]]></string>
		</trigger>
		<trigger name="identities_bi_trg" table="identities" id="Trigger_16d8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER identities_bi_trg BEFORE INSERT OR UPDATE ON anagraph.identities FOR EACH ROW EXECUTE PROCEDURE anagraph.identities_defaults_trg()]]></string>
		</trigger>
		<function name="abrn_trg" id="Function_73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.abrn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.abrn_jguid is null then
     New.abrn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.abrn_deleted is null then
     New.abrn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="adnt_trg" id="Function_194f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.adnt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.adnt_jguid is null then
     New.adnt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.adnt_deleted is null then
     New.adnt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="an_addresses_view_insert_trg" id="Function_21c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.an_addresses_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE 
  v_anagraph_id integer; 
-- Variables
    v_state TEXT;
    v_msg TEXT;
    v_detail TEXT;
    v_hint TEXT;
    v_context TEXT;
	v_message TEXT; 
begin
  v_anagraph_id := new.anagraph_id; 
  
	IF v_anagraph_id = 0 or v_anagraph_id IS NULL THEN
		IF new.master_jguid IS NOT NULL THEN 
			  SELECT anagraph_id INTO v_anagraph_id 
			  FROM anagraph.anagraphs
			  WHERE jguid = new.master_jguid;   
		END IF; 
	END IF; 
	
	IF new.pos IS NULL THEN 
	   new.pos := 1; 	
	END IF; 
  
    IF EXISTS (SELECT 1 FROM anagraph.an_addresses where jguid = new.jguid ) THEN 
	
	UPDATE anagraph.an_addresses
		SET db_schema_id= new.db_schema_id, address_name= new.address_name, 
		postal_code= new.postal_code, 
		state_province= new.state_province, town_name= new.town_name, 
		town_code= new.town_code, address= new.address, address_number= new.address_number, 
		phone= new.phone, 
		full_address= new.full_address, email= new.email, country_code= new.country_code, 
		update_date = now() 
		/*
		upd_id= new.upd_id, ins_id= new.ins_id, user_insert= new.user_insert, 
		user_update= new.user_update, local= new.local, deleted= new.deleted, 
		anagraph_id= new.anagraph_id, master_jguid = new.master_jguid 
		*/
		WHERE 
		jguid = new.jguid; 
		
	ELSE
  
	INSERT INTO anagraph.an_addresses(
		db_schema_id, id, address_name, postal_code, 
		state_province, town_name, town_code, address, 
		address_number, phone, full_address, insert_date, 
		upd_id, ins_id, user_insert, user_update, 
		local, deleted, jguid, country_code, email, anagraph_id, master_jguid,
	    maps_json, longitude, latitude, pos )
	VALUES 
		(
		  new.db_schema_id, new.id, new.address_name, new.postal_code, 
		  new.state_province, new.town_name, new.town_code, new.address, 
		  new.address_number, new.phone, new.full_address, now(), 
		  new.upd_id, new.ins_id, new.user_insert, new.user_update, 
		  new.local, new.deleted, new.jguid, new.country_code, new.email, 
		  v_anagraph_id, new.master_jguid, 
		  new.maps_json, new.longitude, new.latitude, new.pos 
		);
		
	END IF; 	
		
	RETURN new; 
	
	EXCEPTION WHEN OTHERS THEN
		get stacked diagnostics
			v_state = returned_sqlstate,
			v_msg = message_text,
			v_detail = pg_exception_detail,
			v_context = pg_exception_context;
			
	  	RAISE EXCEPTION 'an_addresses_view_insert_trg aID: % % % ', v_anagraph_id::character varying, v_msg,  v_state;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="an_addresses_view_update_trg" id="Function_938" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.an_addresses_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE 
  v_anagraph_id integer; 
-- Variables
    v_state TEXT;
    v_msg TEXT;
    v_detail TEXT;
    v_hint TEXT;
    v_context TEXT;
	v_message TEXT; 
    
begin
    v_anagraph_id := new.anagraph_id;
	if v_anagraph_id is null THEN v_anagraph_id := old.anagraph_id; end if; 
	
	UPDATE anagraph.an_addresses
		SET db_schema_id= new.db_schema_id, address_name= new.address_name, 
		postal_code= new.postal_code, 
		state_province= new.state_province, town_name= new.town_name, 
		town_code= new.town_code, address= new.address, address_number= new.address_number, 
		phone= new.phone, 
		full_address= new.full_address, 
		update_date= now(), 
		upd_id= new.upd_id, ins_id= new.ins_id, user_insert= new.user_insert, 
		user_update= new.user_update, 
		local= new.local, deleted= new.deleted, country_code= new.country_code, 
		email= new.email, anagraph_id= new.anagraph_id, master_jguid = new.master_jguid
		WHERE 
		jguid = old.jguid; 
	
	RETURN new; 
	
	EXCEPTION WHEN OTHERS THEN
		get stacked diagnostics
			v_state = returned_sqlstate,
			v_msg = message_text,
			v_detail = pg_exception_detail,
			v_context = pg_exception_context;
			
	  	RAISE EXCEPTION 'an_addresses_view_update_trg aID: % % % ', new.anagraph_id::character varying, v_msg,  v_state;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anag_categories_trans_update" id="Function_1868" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anag_categories_trans_update()
 RETURNS void
 LANGUAGE sql
AS $function$
INSERT INTO anagraph.categories_translations(
	category_id, culture_code, category_name)
	SELECT category_id, 'it', category_name
	FROM anagraph.categories c
	where not exists (select 1 from  anagraph.categories_translations t where t.category_id = c.category_id and t.culture_code = 'it' );
	
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anag_trg" id="Function_121" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anag_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.anag_jguid is null then
     New.anag_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.anag_deleted is null then
     New.anag_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_add_group" id="Function_1378" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_add_group(p_anagaph_id integer, p_group_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
  Result Boolean; 
BEGIN
   
	Result := NOT EXISTS (SELECT 1 FROM anagraph.identities WHERE
				   an_group_id = p_group_id AND anagraph_id = p_anagaph_id);
	IF Result THEN
	   INSERT INTO anagraph.identities 
	     (db_schema_id, anagraph_id, an_group_id, jguid )
	   VALUES
	     (system.get_schema_id(), 
		  p_anagaph_id,
		  p_group_id, 
		  uuid_generate_v4() 
		 );
	END IF; 
	RETURN Result; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_anagaph_id" jt="4" type="int4" />
			<input_param name="p_group_id" jt="4" type="int4" />
		</function>
		<function name="anagraph_identities_trg" id="Function_263e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_identities_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
declare
   vtest integer; 		
begin
    if (TG_OP = 'INSERT')  then
	INSERT INTO anagraph.identities(
		db_schema_id, anagraph_id, an_group_id)
	VALUES (New.db_schema_id, New.anagraph_id, New.an_main_group_id);
    elsif (New.an_main_group_id <> Old.an_main_group_id)  then
       select count(1) into vtest 
	from anagraph.identities  
        where 
        anagraph_id = New.anagraph_id and an_group_id = New.an_main_group_id;
        if vtest = 0 then
		INSERT INTO anagraph.identities(
			db_schema_id, anagraph_id, an_group_id)
		VALUES (New.db_schema_id, New.anagraph_id, New.an_main_group_id);
	end if; 
    end if; 
    Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_insert_osm" id="Function_f66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_insert_osm()
 RETURNS void
 LANGUAGE sql
AS $function$
--INSERT INTO anagraph.anagraphs(
--	db_schema_id,  an_last_name, an_notes, an_address, an_town, an_postal_code, an_iso_country_code, an_state_province, 
--   an_phone, an_phone2, an_fax, an_cellular, an_code, an_vat_numeric, an_email, an_web, 
--   an_contact_id, an_bank_account, an_payment_des, an_discount, an_distance, an_distance_mesunit, 
--   an_sex, an_cod_comune, an_cod_provincia, an_credit_line, an_currency_id, an_cat_id, an_notes2, an_notes3, an_edi, 
--   an_privacy, an_office_id, an_cod_prov_rif, an_data_fido, an_user_insert, an_user_update, an_area_id, an_agent_id, 
--   an_area_code, an_zone_id, an_ins_id, an_upd_id, an_documents, an_last_date, an_birthdate, an_office_type_id, 
--   an_searchname, an_extra_ue_flag, an_external_code, an_vat_id, an_personal_fiscal_code, an_privacy_print, 
--   an_sms, an_encrypted_fiscal_code, an_vat_purcentage, an_status, an_ownsite, an_insurance_id, an_anagraphs_anagraph_id, 
--   an_main_language_code, an_main_culture_code, an_fiscal_code, an_main_group_id, an_image_id, latitude, longitude, test, search_index, 
--   an_birthplace, an_birthplace_code, anagraph64, main_category_id
INSERT INTO 
anagraph.anagraphs(
		db_schema_id, main_category_id, an_last_name, latitude, longitude, an_phone, an_email , an_address , 
	     an_web , an_town  ,  an_postal_code,    osm_id )
select 
		0           , category_id     , "name"      ,lat      ,lon        , phone  , email     , coalesce (addr_street,  addressfull), 
		website     , addr_city , addr_postcode,  o.osm_id
from anagraph.osm_anagraphs o 
where 
  not exists (select 1 from anagraph.anagraphs a where a.osm_id = o.osm_id ); 
  
INSERT INTO anagraph.identities(
	db_schema_id, anagraph_id, an_group_id)
  select 
     db_schema_id, anagraph_id, 9 
	 from anagraph.anagraphs a where not exists
	   (select 1 from anagraph.identities i where i.anagraph_id = a.anagraph_id and i.an_group_id = 9 )
	  and a.osm_id is not null; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anagraph_new_id_trg" id="Function_259e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_new_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.anagraph_id is null then
          New.anagraph_id:=nextval('anagraph.an_anagraph_seq');
      end if; 
      
      New.anagraph64 := ENCODE(CONVERT_TO(New.anagraph_id::VARCHAR, 'UTF-8'), 'base64'); 
	New.search_index = 
		system.stripstringsearch(New.an_last_name, New.an_name) || '-' ||
		system.stripstringsearch(New.an_address, New.an_town) || '-' ||
		system.stripstringsearch(New.an_name, New.an_last_name) || '-' ||
		system.stripstringsearch(New.an_phone, New.an_fax) || '-' ||
		system.stripstringsearch(New.an_vat_numeric, New.an_fiscal_code);
     -- if New.an_contact_id is null then
     --    New.an_contact_id:=1;
     -- end if; 
      if New.an_currency_id is null then
          New.an_currency_id:=1;
      end if; 
       if New.an_discount is null then
          New.an_discount:=0;
      end if; 
        if New.an_sex is null then
          New.an_sex:='S';
      end if; 
         if New.an_iso_country_code is null then
          New.an_iso_country_code:='ITA';
      end if; 
        if New.an_main_language_code is null then
          New.an_main_language_code:='IT';
      end if; 
         if New.an_main_culture_code is null then
          New.an_main_culture_code:='it-IT';
      end if; 
         if (New.an_main_group_id is null) or (New.an_main_group_id = 0) then
          New.an_main_group_id:=2;
      end if; 
      
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_update_osm" id="Function_10b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_update_osm()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare 
   x record; 
begin
for x in 
	select 
		0           , category_id     , "name"      ,lat      ,lon        , phone  , email     , 
		coalesce (addr_street,  addressfull) as addressfull, 
		website     , addr_city , addr_postcode,  o.osm_id
	from anagraph.osm_anagraphs o 
	where 
 	 exists (select 1 from anagraph.anagraphs a where a.osm_id = o.osm_id )
  	loop
		update 
		anagraph.anagraphs set 
        main_category_id = x.category_id, 
		an_last_name = x.name, 
		latitude = x.lat, 
		longitude = x.lon,
		an_phone = x.phone, 
		an_email = x.email, 
		an_address = x.addressfull , 
	    an_web = x.website, 
		an_town  = x.addr_city,  
		an_postal_code = x.addr_postcode   
		where 
  		osm_id = x.osm_id;
	end loop; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anagraph_update_web" id="Function_2276" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_update_web()
 RETURNS void
 LANGUAGE sql
AS $function$

update
anagraph.anagraphs 
set an_web = 'http://' || an_web
where
an_web is not null and
lower(an_web) not like 'http://%'
and
lower(an_web) not like 'https://%'
and not upper(an_web) like 'NO%';

$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="anagraph_view_insert_trg" id="Function_d0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; v_id integer; v_jguid uuid; v_vessel_id integer; 
BEGIN
  v_count := 0; 
  v_id := new.anagraph_id;
  
  if v_id is null or v_id = 0 then
    v_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
 PERFORM system.setlog('anagraph_view_insert_trg ID: ' || v_id::character varying); 
  
  v_jguid := new.jguid; 
  
  if v_jguid is null then
     v_jguid := '{' || public.uuid_generate_v1mc() || '}';
  end if; 
  
  if new.vessel_id = 0 then v_vessel_id := null; else v_vessel_id := new.vessel_id; end if; 
  
  
  
  
  INSERT INTO anagraph.anagraphs (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2,
	an_full_address
  )
  values( 
    new.db_schema_id,
    case when v_id = 0 then NULL else v_id end,
    new.an_title,
    new.an_name,
    new.an_second_name,
    new.an_last_name,
    new.an_notes,
    new.an_address,
    new.an_town,
    new.an_postal_code,
    new.an_iso_country_code,
    new.an_state_province,
    new.an_phone,
    new.an_phone2,
    new.an_fax,
    new.an_cellular,
    new.an_code,
    new.an_vat_numeric,
    new.an_email,
    new.an_web,
    case when new.an_contact_id = 0 then NULL else new.an_contact_id end,
    new.an_bank_account,
    new.an_payment_des,
    new.an_discount,
    new.an_distance,
    new.an_distance_mesunit,
    new.an_sex,
    new.an_cod_comune,
    new.an_cod_provincia,
    new.an_credit_line,
    case when new.an_currency_id = 0 then NULL else new.an_currency_id end,
    case when new.an_cat_id = 0 then NULL else new.an_cat_id end,
    new.an_notes2,
    new.an_notes3,
    new.an_edi,
    new.an_privacy,
    case when new.an_office_id = 0 then NULL else new.an_office_id end,
    new.an_cod_prov_rif,
    new.an_data_fido,
    new.an_user_insert,
    new.an_user_update,
    case when new.an_area_id = 0 then NULL else new.an_area_id end,
    case when new.an_agent_id = 0 then NULL else new.an_agent_id end,
    new.an_area_code,
    case when new.an_zone_id = '' then NULL else new.an_zone_id end,
    case when new.an_ins_id = 0 then NULL else new.an_ins_id end,
    case when new.an_upd_id = 0 then NULL else new.an_upd_id end,
    new.an_documents,
    new.an_last_date,
    new.an_birthdate,
    case when new.an_office_type_id = 0 then NULL else new.an_office_type_id end,
    new.an_searchname,
    new.an_extra_ue_flag,
    new.an_external_code,
    case when new.an_vat_id = 0 then NULL else new.an_vat_id end,
    new.an_personal_fiscal_code,
    new.an_privacy_print,
    new.an_sms,
    new.an_encrypted_fiscal_code,
    new.an_vat_purcentage,
    new.an_status,
    new.an_ownsite,
    case when new.an_insurance_id = 0 then NULL else new.an_insurance_id end,
    case when new.an_anagraphs_anagraph_id = 0 then NULL else new.an_anagraphs_anagraph_id end,
    new.an_main_language_code,
    new.an_main_culture_code,
    new.an_fiscal_code,
    new.an_main_group_id,
    case when new.an_image_id = 0 then NULL else new.an_image_id end,
    new.latitude,
    new.longitude,
    new.test,
    new.search_index,
    new.an_birthplace,
    new.an_birthplace_code,
    new.anagraph64,
    case when new.main_category_id = 0 then NULL else new.main_category_id end,
    case when new.osm_id = 0 then NULL else new.osm_id end,
    new.an_description,
    new.an_address_number,
    new.anag_jguid,
    new.anag_deleted,
    new.insert_date,
    new.update_date,
    new.user_insert,
    v_jguid,
    new.custom_field_1,
    new.custom_field_2,
    new.custom_field_3,
    new.custom_float_1,
    new.custom_float_2,
    new.custom_int_1,
    new.custom_int_2,
    case when new.supplier_id = 0 then NULL else new.supplier_id end,
    case when v_vessel_id = 0 then NULL else v_vessel_id end,
    case when new.an_country_id = 0 then NULL else new.an_country_id end,
    new.an_iso_country_code2,
	case when new.an_full_address IS NULL THEN
	     new.an_address || ',' || new.an_postal_code || ',' || new.an_town || ',' || new.an_state_province
	  ELSE
	  	new.an_full_address 
	END
	)
  ;
	
  PERFORM system.setlog('anagraph_view_insert_trg Completed ID: ' || v_id::character varying || ', guid: ' || v_jguid::character varying); 	
	
	return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraph_view_update_trg" id="Function_4fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraph_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
declare
  v_count bigint; v_id integer; v_jguid uuid;
BEGIN
/* 2023-07-23 updating using jguid */ 
  v_id := new.anagraph_id; 
  v_jguid := new.jguid; 
  
  if  (v_id is null or v_id = 0) then v_id := old.anagraph_id; end if;
  if   v_jguid is null then v_jguid := old.jguid; end if; 
  
  /*
  if (v_id is null or v_id = 0) and (v_jguid is not null) then  
	 select 
         count(1), anagraph_id
     into 
         v_count, v_id
	   from 
          anagraph.anagraphs where jguid = v_jguid 
       group by anagraph_id;  
  end if; 
 */
  
  UPDATE anagraph.anagraphs SET
    db_schema_id = new.db_schema_id,
    an_title = new.an_title,
    an_name = new.an_name,
    an_second_name = new.an_second_name,
    an_last_name = new.an_last_name,
    an_notes = new.an_notes,
    an_address = new.an_address,
    an_town = new.an_town,
    an_postal_code = new.an_postal_code,
    an_iso_country_code = new.an_iso_country_code,
    an_state_province = new.an_state_province,
    an_phone = new.an_phone,
    an_phone2 = new.an_phone2,
    an_fax = new.an_fax,
    an_cellular = new.an_cellular,
    an_code = new.an_code,
    an_vat_numeric = new.an_vat_numeric,
    an_email = new.an_email,
    an_web = new.an_web,
    an_contact_id = new.an_contact_id,
    an_bank_account = new.an_bank_account,
    an_payment_des = new.an_payment_des,
    an_discount = new.an_discount,
    an_distance = new.an_distance,
    an_distance_mesunit = new.an_distance_mesunit,
    an_sex = new.an_sex,
    an_cod_comune = new.an_cod_comune,
    an_cod_provincia = new.an_cod_provincia,
    an_credit_line = new.an_credit_line,
    an_currency_id = new.an_currency_id,
    an_cat_id = new.an_cat_id,
    an_notes2 = new.an_notes2,
    an_notes3 = new.an_notes3,
    an_edi = new.an_edi,
    an_privacy = new.an_privacy,
    an_office_id = new.an_office_id,
    an_cod_prov_rif = new.an_cod_prov_rif,
    an_data_fido = new.an_data_fido,
    an_user_insert = new.an_user_insert,
    an_user_update = new.an_user_update,
    an_area_id = new.an_area_id,
    an_agent_id = new.an_agent_id,
    an_area_code = new.an_area_code,
    an_zone_id = new.an_zone_id,
    an_ins_id = new.an_ins_id,
    an_upd_id = new.an_upd_id,
    an_documents = new.an_documents,
    an_last_date = new.an_last_date,
    an_birthdate = new.an_birthdate,
    an_office_type_id = new.an_office_type_id,
    an_searchname = new.an_searchname,
    an_extra_ue_flag = new.an_extra_ue_flag,
    an_external_code = new.an_external_code,
    an_vat_id = new.an_vat_id,
    an_personal_fiscal_code = new.an_personal_fiscal_code,
    an_privacy_print = new.an_privacy_print,
    an_sms = new.an_sms,
    an_encrypted_fiscal_code = new.an_encrypted_fiscal_code,
    an_vat_purcentage = new.an_vat_purcentage,
    an_status = new.an_status,
    an_ownsite = new.an_ownsite,
    an_insurance_id = new.an_insurance_id,
    an_anagraphs_anagraph_id = new.an_anagraphs_anagraph_id,
    an_main_language_code = new.an_main_language_code,
    an_main_culture_code = new.an_main_culture_code,
    an_fiscal_code = new.an_fiscal_code,
    an_main_group_id = new.an_main_group_id,
    an_image_id = new.an_image_id,
    latitude = new.latitude,
    longitude = new.longitude,
    test = new.test,
    search_index = new.search_index,
    an_birthplace = new.an_birthplace,
    an_birthplace_code = new.an_birthplace_code,
    anagraph64 = new.anagraph64,
    main_category_id = new.main_category_id,
    osm_id = new.osm_id,
    an_description = new.an_description,
    an_address_number = new.an_address_number,
    anag_deleted = new.anag_deleted,
    update_date = now(),
    user_insert = new.user_insert,
    custom_field_1 = new.custom_field_1,
    custom_field_2 = new.custom_field_2,
    custom_field_3 = new.custom_field_3,
    custom_float_1 = new.custom_float_1,
    custom_float_2 = new.custom_float_2,
    custom_int_1 = new.custom_int_1,
    custom_int_2 = new.custom_int_2,
    supplier_id = new.supplier_id,
    vessel_id = new.vessel_id,
    an_country_id = new.an_country_id,
    an_iso_country_code2 = new.an_iso_country_code2,
	deleted = new.deleted,
	an_full_address = new.an_full_address
  WHERE 
    (jguid = old.jguid) ;
	
  return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="anagraphs_insert" id="Function_273" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraphs_insert(an_group_id smallint, db_schema_id integer, anagraph_id integer, an_title character varying, an_name character varying, an_second_name character varying, an_last_name character varying, an_notes character varying, an_address character varying, an_town character varying, an_postal_code character varying, an_iso_country_code character varying, an_state_province character varying, an_phone character varying, an_phone2 character varying, an_fax character varying, an_cellular character varying, an_code character varying, an_vat_numeric character varying, an_email character varying, an_web character varying, an_contact_id integer, an_bank_account character varying, an_payment_des character varying, an_discount numeric, an_distance integer, an_distance_mesunit smallint, an_sex character varying, an_cod_comune character varying, an_cod_provincia character varying, an_credit_line numeric, an_currency_id smallint, an_cat_id smallint, an_notes2 character varying, an_notes3 text, an_edi boolean, an_privacy boolean, an_office_id smallint, an_cod_prov_rif character varying, an_data_fido date, an_user_insert character varying, an_user_update character varying, an_area_id smallint, an_agent_id smallint, an_area_code character varying, an_zone_id character varying, an_ins_id bigint, an_upd_id bigint, an_documents smallint, an_last_date date, an_birthdate date, an_office_type_id smallint, an_searchname character varying, an_extra_ue_flag boolean, an_external_code character varying, an_vat_id smallint, an_personal_fiscal_code character varying, an_privacy_print smallint, an_sms boolean, an_encrypted_fiscal_code character varying, an_vat_purcentage smallint, an_status smallint, an_ownsite boolean, an_insurance_id bigint, an_anagraphs_anagraph_id integer, an_main_language_code character varying, an_main_culture_code character varying, an_fiscal_code character varying, an_main_group_id integer, an_image_id bigint, latitude double precision, longitude double precision)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$declare
  newid bigint; 
begin
    if anagraph_id is null then
          newid:=nextval('anagraph.an_anagraph_seq');
    else
	newid := anagraph_id; 
    end if; 
    insert into anagraph.anagraphs
    (db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    )
    values
    (    
    db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id, 
    latitude ,
    longitude  
    );
    insert into anagraph.identities
    (  
      db_schema_id ,
      anagraph_id , 
      an_group_id
    )
    values
    (
      db_schema_id,
      anagraph_id, 
      an_group_id
    );
    


    return newid; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="an_group_id" jt="5" type="int2" />
			<input_param name="db_schema_id" jt="4" type="int4" />
			<input_param name="anagraph_id" jt="4" type="int4" />
			<input_param name="an_title" jt="12" type="varchar" />
			<input_param name="an_name" jt="12" type="varchar" />
			<input_param name="an_second_name" jt="12" type="varchar" />
			<input_param name="an_last_name" jt="12" type="varchar" />
			<input_param name="an_notes" jt="12" type="varchar" />
			<input_param name="an_address" jt="12" type="varchar" />
			<input_param name="an_town" jt="12" type="varchar" />
			<input_param name="an_postal_code" jt="12" type="varchar" />
			<input_param name="an_iso_country_code" jt="12" type="varchar" />
			<input_param name="an_state_province" jt="12" type="varchar" />
			<input_param name="an_phone" jt="12" type="varchar" />
			<input_param name="an_phone2" jt="12" type="varchar" />
			<input_param name="an_fax" jt="12" type="varchar" />
			<input_param name="an_cellular" jt="12" type="varchar" />
			<input_param name="an_code" jt="12" type="varchar" />
			<input_param name="an_vat_numeric" jt="12" type="varchar" />
			<input_param name="an_email" jt="12" type="varchar" />
			<input_param name="an_web" jt="12" type="varchar" />
			<input_param name="an_contact_id" jt="4" type="int4" />
			<input_param name="an_bank_account" jt="12" type="varchar" />
			<input_param name="an_payment_des" jt="12" type="varchar" />
			<input_param name="an_discount" jt="2" type="numeric" />
			<input_param name="an_distance" jt="4" type="int4" />
			<input_param name="an_distance_mesunit" jt="5" type="int2" />
			<input_param name="an_sex" jt="12" type="varchar" />
			<input_param name="an_cod_comune" jt="12" type="varchar" />
			<input_param name="an_cod_provincia" jt="12" type="varchar" />
			<input_param name="an_credit_line" jt="2" type="numeric" />
			<input_param name="an_currency_id" jt="5" type="int2" />
			<input_param name="an_cat_id" jt="5" type="int2" />
			<input_param name="an_notes2" jt="12" type="varchar" />
			<input_param name="an_notes3" jt="12" type="text" />
			<input_param name="an_edi" jt="-7" type="bool" />
			<input_param name="an_privacy" jt="-7" type="bool" />
			<input_param name="an_office_id" jt="5" type="int2" />
			<input_param name="an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="an_data_fido" jt="91" type="date" />
			<input_param name="an_user_insert" jt="12" type="varchar" />
			<input_param name="an_user_update" jt="12" type="varchar" />
			<input_param name="an_area_id" jt="5" type="int2" />
			<input_param name="an_agent_id" jt="5" type="int2" />
			<input_param name="an_area_code" jt="12" type="varchar" />
			<input_param name="an_zone_id" jt="12" type="varchar" />
			<input_param name="an_ins_id" jt="-5" type="int8" />
			<input_param name="an_upd_id" jt="-5" type="int8" />
			<input_param name="an_documents" jt="5" type="int2" />
			<input_param name="an_last_date" jt="91" type="date" />
			<input_param name="an_birthdate" jt="91" type="date" />
			<input_param name="an_office_type_id" jt="5" type="int2" />
			<input_param name="an_searchname" jt="12" type="varchar" />
			<input_param name="an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="an_external_code" jt="12" type="varchar" />
			<input_param name="an_vat_id" jt="5" type="int2" />
			<input_param name="an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_privacy_print" jt="5" type="int2" />
			<input_param name="an_sms" jt="-7" type="bool" />
			<input_param name="an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_vat_purcentage" jt="5" type="int2" />
			<input_param name="an_status" jt="5" type="int2" />
			<input_param name="an_ownsite" jt="-7" type="bool" />
			<input_param name="an_insurance_id" jt="-5" type="int8" />
			<input_param name="an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="an_main_language_code" jt="12" type="varchar" />
			<input_param name="an_main_culture_code" jt="12" type="varchar" />
			<input_param name="an_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_main_group_id" jt="4" type="int4" />
			<input_param name="an_image_id" jt="-5" type="int8" />
			<input_param name="latitude" jt="8" type="float8" />
			<input_param name="longitude" jt="8" type="float8" />
		</function>
		<function name="anagraphs_insert_update" id="Function_344" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.anagraphs_insert_update(INOUT an_group_id smallint, INOUT db_schema_id integer, INOUT anagraph_id integer, INOUT an_title character varying, INOUT an_name character varying, INOUT an_second_name character varying, INOUT an_last_name character varying, INOUT an_notes character varying, INOUT an_address character varying, INOUT an_town character varying, INOUT an_postal_code character varying, INOUT an_iso_country_code character varying, INOUT an_state_province character varying, INOUT an_phone character varying, INOUT an_phone2 character varying, INOUT an_fax character varying, INOUT an_cellular character varying, INOUT an_code character varying, INOUT an_vat_numeric character varying, INOUT an_email character varying, INOUT an_web character varying, INOUT an_contact_id integer, INOUT an_bank_account character varying, INOUT an_payment_des character varying, INOUT an_discount numeric, INOUT an_distance integer, INOUT an_distance_mesunit smallint, INOUT an_sex character varying, INOUT an_cod_comune character varying, INOUT an_cod_provincia character varying, INOUT an_credit_line numeric, INOUT an_currency_id smallint, INOUT an_cat_id smallint, INOUT an_notes2 character varying, INOUT an_notes3 text, INOUT an_edi boolean, INOUT an_privacy boolean, INOUT an_office_id smallint, INOUT an_cod_prov_rif character varying, INOUT an_data_fido date, INOUT an_user_insert character varying, INOUT an_user_update character varying, INOUT an_area_id smallint, INOUT an_agent_id smallint, INOUT an_area_code character varying, INOUT an_zone_id character varying, INOUT an_ins_id bigint, INOUT an_upd_id bigint, INOUT an_documents smallint, INOUT an_last_date date, INOUT an_birthdate date, INOUT an_office_type_id smallint, INOUT an_searchname character varying, INOUT an_extra_ue_flag boolean, INOUT an_external_code character varying, INOUT an_vat_id smallint, INOUT an_personal_fiscal_code character varying, INOUT an_privacy_print smallint, INOUT an_sms boolean, INOUT an_encrypted_fiscal_code character varying, INOUT an_vat_purcentage smallint, INOUT an_status smallint, INOUT an_ownsite boolean, INOUT an_insurance_id bigint, INOUT an_anagraphs_anagraph_id integer, INOUT an_main_language_code character varying, INOUT an_main_culture_code character varying, INOUT an_fiscal_code character varying, INOUT an_main_group_id integer, INOUT an_image_id bigint, INOUT latitude double precision, INOUT longitude double precision)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  newid bigint; 
begin
    if anagraph_id is null then
       newid := nextval('anagraph.an_anagraph_seq');
    else
	    newid := anagraph_id; 
    end if; 
    insert into anagraph.anagraphs
    (db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    )
    values
    (    
    db_schema_id ,
    newid ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id, 
    latitude ,
    longitude  
    );
    insert into anagraph.identities
    (  
      db_schema_id ,
      newid , 
      an_group_id
    )
    values
    (
      db_schema_id,
      anagraph_id, 
      an_group_id
    );
    
    select  
    db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    INTO 
    db_schema_id ,
    anagraph_id ,
    an_title ,
    an_name ,
    an_second_name ,
    an_last_name ,
    an_notes ,
    an_address ,
    an_town ,
    an_postal_code ,
    an_iso_country_code ,
    an_state_province ,
    an_phone ,
    an_phone2 ,
    an_fax ,
    an_cellular ,
    an_code ,
    an_vat_numeric ,
    an_email ,
    an_web ,
    an_contact_id ,
    an_bank_account ,
    an_payment_des ,
    an_discount ,
    an_distance ,
    an_distance_mesunit ,
    an_sex ,
    an_cod_comune ,
    an_cod_provincia ,
    an_credit_line ,
    an_currency_id ,
    an_cat_id ,
    an_notes2 ,
    an_notes3 ,
    an_edi ,
    an_privacy ,
    an_office_id ,
    an_cod_prov_rif ,
    an_data_fido ,
    an_user_insert ,
    an_user_update ,
    an_area_id ,
    an_agent_id ,
    an_area_code ,
    an_zone_id ,
    an_ins_id ,
    an_upd_id ,
    an_documents ,
    an_last_date ,
    an_birthdate ,
    an_office_type_id ,
    an_searchname ,
    an_extra_ue_flag ,
    an_external_code ,
    an_vat_id ,
    an_personal_fiscal_code ,
    an_privacy_print ,
    an_sms ,
    an_encrypted_fiscal_code ,
    an_vat_purcentage ,
    an_status ,
    an_ownsite ,
    an_insurance_id ,
    an_anagraphs_anagraph_id ,
    an_main_language_code ,
    an_main_culture_code ,
    an_fiscal_code ,
    an_main_group_id ,
    an_image_id,
    latitude ,
    longitude  
    WHERE 
      anagraph_id = newid; 
    --return newid; 

end;
$function$
;]]></string>
			<input_param name="an_group_id" jt="5" type="int2" />
			<input_param name="db_schema_id" jt="4" type="int4" />
			<input_param name="anagraph_id" jt="4" type="int4" />
			<input_param name="an_title" jt="12" type="varchar" />
			<input_param name="an_name" jt="12" type="varchar" />
			<input_param name="an_second_name" jt="12" type="varchar" />
			<input_param name="an_last_name" jt="12" type="varchar" />
			<input_param name="an_notes" jt="12" type="varchar" />
			<input_param name="an_address" jt="12" type="varchar" />
			<input_param name="an_town" jt="12" type="varchar" />
			<input_param name="an_postal_code" jt="12" type="varchar" />
			<input_param name="an_iso_country_code" jt="12" type="varchar" />
			<input_param name="an_state_province" jt="12" type="varchar" />
			<input_param name="an_phone" jt="12" type="varchar" />
			<input_param name="an_phone2" jt="12" type="varchar" />
			<input_param name="an_fax" jt="12" type="varchar" />
			<input_param name="an_cellular" jt="12" type="varchar" />
			<input_param name="an_code" jt="12" type="varchar" />
			<input_param name="an_vat_numeric" jt="12" type="varchar" />
			<input_param name="an_email" jt="12" type="varchar" />
			<input_param name="an_web" jt="12" type="varchar" />
			<input_param name="an_contact_id" jt="4" type="int4" />
			<input_param name="an_bank_account" jt="12" type="varchar" />
			<input_param name="an_payment_des" jt="12" type="varchar" />
			<input_param name="an_discount" jt="2" type="numeric" />
			<input_param name="an_distance" jt="4" type="int4" />
			<input_param name="an_distance_mesunit" jt="5" type="int2" />
			<input_param name="an_sex" jt="12" type="varchar" />
			<input_param name="an_cod_comune" jt="12" type="varchar" />
			<input_param name="an_cod_provincia" jt="12" type="varchar" />
			<input_param name="an_credit_line" jt="2" type="numeric" />
			<input_param name="an_currency_id" jt="5" type="int2" />
			<input_param name="an_cat_id" jt="5" type="int2" />
			<input_param name="an_notes2" jt="12" type="varchar" />
			<input_param name="an_notes3" jt="12" type="text" />
			<input_param name="an_edi" jt="-7" type="bool" />
			<input_param name="an_privacy" jt="-7" type="bool" />
			<input_param name="an_office_id" jt="5" type="int2" />
			<input_param name="an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="an_data_fido" jt="91" type="date" />
			<input_param name="an_user_insert" jt="12" type="varchar" />
			<input_param name="an_user_update" jt="12" type="varchar" />
			<input_param name="an_area_id" jt="5" type="int2" />
			<input_param name="an_agent_id" jt="5" type="int2" />
			<input_param name="an_area_code" jt="12" type="varchar" />
			<input_param name="an_zone_id" jt="12" type="varchar" />
			<input_param name="an_ins_id" jt="-5" type="int8" />
			<input_param name="an_upd_id" jt="-5" type="int8" />
			<input_param name="an_documents" jt="5" type="int2" />
			<input_param name="an_last_date" jt="91" type="date" />
			<input_param name="an_birthdate" jt="91" type="date" />
			<input_param name="an_office_type_id" jt="5" type="int2" />
			<input_param name="an_searchname" jt="12" type="varchar" />
			<input_param name="an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="an_external_code" jt="12" type="varchar" />
			<input_param name="an_vat_id" jt="5" type="int2" />
			<input_param name="an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_privacy_print" jt="5" type="int2" />
			<input_param name="an_sms" jt="-7" type="bool" />
			<input_param name="an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_vat_purcentage" jt="5" type="int2" />
			<input_param name="an_status" jt="5" type="int2" />
			<input_param name="an_ownsite" jt="-7" type="bool" />
			<input_param name="an_insurance_id" jt="-5" type="int8" />
			<input_param name="an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="an_main_language_code" jt="12" type="varchar" />
			<input_param name="an_main_culture_code" jt="12" type="varchar" />
			<input_param name="an_fiscal_code" jt="12" type="varchar" />
			<input_param name="an_main_group_id" jt="4" type="int4" />
			<input_param name="an_image_id" jt="-5" type="int8" />
			<input_param name="latitude" jt="8" type="float8" />
			<input_param name="longitude" jt="8" type="float8" />
		</function>
		<function name="angr_trg" id="Function_296" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.angr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.angr_jguid is null then
     New.angr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.angr_deleted is null then
     New.angr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=current_setting('system.db_schema_id')::integer;
  end if;
  
  if New.vessel_id = 0 then
     New.vessel_id := NULL;
  end if;
  
  
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="categories_from_osm" id="Function_748" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.categories_from_osm()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  x record; 
  i integer; 
  j integer; 
  k integer; 
begin
  k := 0; 
  
  for x in select * from gis.osm_categories
  loop
    select count(1) into j from anagraph.categories
	  where osm_category_id = x.id; 
	  
	if j = 0 then
	   insert into anagraph.categories 
		   (category_name, osm_category_id)
		  values
		   (x.code, x.id);
	    k := k +1; 
	end if; 
  
  end loop; 
  return k; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="categories_new_id_trg" id="Function_126b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.categories_new_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.category_id is null or New.category_id  = 0 then
          New.category_id:=nextval('anagraph.categories_seq');
      end if; 
	        Return NEW;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_id_by_code" id="Function_1a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.get_id_by_code(p_code character varying, p_group_id integer, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
begin
  R := null; 
  select into I count(1)
     from anagraph.anagraphs a
	 where
	    a.an_code = upper(p_code) 
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
		
	if I = 1 then
    select into R anagraph_id 
      from anagraph.anagraphs a
	 where
	    a.an_code = Upper(p_code) 
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_group_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="get_id_by_name" id="Function_1dd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.get_id_by_name(p_name character varying, p_address character varying, p_town character varying, p_group_id integer, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
  test boolean; 
begin
  R := null; 
  test := false;
  
  select into I count(1)
     from anagraph.anagraphs a
	 where
	    a.an_last_name = upper(p_name) 
		-- and ( a.an_address = upper(p_address)  or p_address is null  )
		-- and ( a.an_town = upper(p_town)  or p_town is null  )
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
		
	if I = 1 then
	test := true; 
    select into R anagraph_id 
      from anagraph.anagraphs a
	 where
	    a.an_last_name = upper(p_name) 
		-- and ( a.an_address = upper(p_address)  or p_address is null  )
		--and ( a.an_town = upper(p_town)  or p_town is null  )
		and db_schema_id = p_schema_id
		and an_main_group_id = p_group_id; 
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_name" jt="12" type="varchar" />
			<input_param name="p_address" jt="12" type="varchar" />
			<input_param name="p_town" jt="12" type="varchar" />
			<input_param name="p_group_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="get_name_by_id" id="Function_1e7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.get_name_by_id(p_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R character varying; 
begin
  R := null; 
  select into I count(1)
     from anagraph.anagraphs a
	 where
	  a.anagraph_id = p_id;
		
	if I = 1 then
    select into R  an_last_name
      from anagraph.anagraphs a
	 where
	    a.anagraph_id = p_id;
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
		</function>
		<function name="group_new_id_trg" id="Function_1619" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.group_new_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.an_group_id is null then
          New.an_group_id:=nextval('anagraph.group_seq');
      end if; 
	  New.db_schema_id = current_setting('system.db_schema_id')::integer;
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="groups_view_trg" id="Function_1b02" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.groups_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	BEGIN
	  UPDATE anagraph.groups SET
		group_des = New.group_des,
		contact_group = New.contact_group,
		sub_group = New.sub_group,
		sub_group_des = New.sub_group_des,
		settings = New.settings,
		position = New.position,
		accounting = New.accounting,
		cod_account = New.cod_account,
		local = New.local,
		group_cod = New.group_cod,
		ledger_cod = New.ledger_cod,
		subledger_cod = New.subledger_cod,
		grouping = New.grouping,
		description = New.description,
		angr_jguid = New.angr_jguid,
		angr_deleted = New.angr_deleted,
		icon_id = New.icon_id
	WHERE 
		(an_group_id = New.an_group_id) ;
	END;
  ELSIF TG_OP = 'INSERT' THEN 
	BEGIN
	  INSERT INTO anagraph.groups (
		db_schema_id,
		an_group_id,
		group_des,
		contact_group,
		sub_group,
		sub_group_des,
		settings,
		position,
		accounting,
		cod_account,
		local,
		group_cod,
		ledger_cod,
		subledger_cod,
		grouping,
		description,
		angr_jguid,
		angr_deleted,
		icon_id,
		jguid
	  )
	  VALUES (
		current_setting('system.db_schema_id')::integer,
		New.an_group_id,
		New.group_des,
		New.contact_group,
		New.sub_group,
		New.sub_group_des,
		New.settings,
		New.position,
		New.accounting,
		New.cod_account,
		New.local,
		New.group_cod,
		New.ledger_cod,
		New.subledger_cod,
		New.grouping,
		New.description,
		New.angr_jguid,
		New.angr_deleted,
		New.icon_id,
		New.jguid
	  );
	END;
  ELSIF TG_OP = 'DELETE' THEN 
	BEGIN
	  DELETE FROM anagraph.groups
	  WHERE 
		(an_group_id = New.an_group_id) ;
	END;
  END IF; 
  
  RETURN NEW; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="identities_defaults_trg" id="Function_2618" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.identities_defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
    if new.an_agent_id is null then  new.an_agent_id  := 0; end if; 
    if new.an_credit_limit is null then  new.an_credit_limit  := 0; end if; 
    if new.an_credit_days is null then  new.an_credit_days  := 0; end if; 
    if new.an_credit is null then  new.an_credit  := 0; end if; 
    Return NEW;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="record_date_biu" id="Function_463" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.record_date_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.insert_date is null then
          New.insert_date := Now();
     end if; 
     New.update_date := Now();
     Return New; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sp_del_anagraphs" id="Function_33b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_del_anagraphs(p_anagraph_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM anagraph.anagraphs
  WHERE 
    (anagraph_id = p_anagraph_id) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
		</function>
		<function name="sp_ins_anagraphs" id="Function_12a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_ins_anagraphs(p_db_schema_id integer, p_anagraph_id integer, p_an_title character varying, p_an_name character varying, p_an_second_name character varying, p_an_last_name character varying, p_an_notes character varying, p_an_address character varying, p_an_town character varying, p_an_postal_code character varying, p_an_iso_country_code character varying, p_an_state_province character varying, p_an_phone character varying, p_an_phone2 character varying, p_an_fax character varying, p_an_cellular character varying, p_an_code character varying, p_an_vat_numeric character varying, p_an_email character varying, p_an_web character varying, p_an_contact_id integer, p_an_bank_account character varying, p_an_payment_des character varying, p_an_discount numeric, p_an_distance integer, p_an_distance_mesunit smallint, p_an_sex character varying, p_an_cod_comune character varying, p_an_cod_provincia character varying, p_an_credit_line numeric, p_an_currency_id smallint, p_an_cat_id smallint, p_an_notes2 character varying, p_an_notes3 text, p_an_edi boolean, p_an_privacy boolean, p_an_office_id smallint, p_an_cod_prov_rif character varying, p_an_data_fido date, p_an_user_insert character varying, p_an_user_update character varying, p_an_area_id smallint, p_an_agent_id smallint, p_an_area_code character varying, p_an_zone_id character varying, p_an_ins_id bigint, p_an_upd_id bigint, p_an_documents smallint, p_an_last_date date, p_an_birthdate date, p_an_office_type_id smallint, p_an_searchname character varying, p_an_extra_ue_flag boolean, p_an_external_code character varying, p_an_vat_id smallint, p_an_personal_fiscal_code character varying, p_an_privacy_print smallint, p_an_sms boolean, p_an_encrypted_fiscal_code character varying, p_an_vat_purcentage smallint, p_an_status smallint, p_an_ownsite boolean, p_an_insurance_id bigint, p_an_anagraphs_anagraph_id integer, p_an_main_language_code character varying, p_an_main_culture_code character varying, p_an_fiscal_code character varying, p_an_main_group_id integer, p_an_image_id bigint, p_latitude double precision, p_longitude double precision, p_test double precision, p_search_index character varying, p_an_birthplace character varying, p_an_birthplace_code character varying, p_anagraph64 character varying, p_main_category_id smallint, p_osm_id bigint, p_an_description character varying, p_an_address_number character varying, p_anag_jguid character varying, p_anag_deleted boolean, p_insert_date timestamp without time zone, p_update_date timestamp without time zone, p_user_insert integer, p_jguid uuid, p_custom_field_1 character varying, p_custom_field_2 character varying, p_custom_field_3 character varying, p_custom_float_1 real, p_custom_float_2 real, p_custom_int_1 integer, p_custom_int_2 integer, p_supplier_id integer, p_vessel_id smallint, p_an_country_id integer, p_an_iso_country_code2 character)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; v_id integer; v_jguid uuid; v_vessel_id integer; 
BEGIN
  v_count := 0; 
  v_id := p_anagraph_id;
  
  if v_id is null or v_id = 0 then
    v_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
  v_jguid := p_jguid; 
  
  if v_jguid is null then
     v_jguid := '{' || public.uuid_generate_v1mc() || '}';
  end if; 
  
  if p_vessel_id = 0 then v_vessel_id := null; else v_vessel_id := p_vessel_id; end if; 
  
  
  INSERT INTO anagraph.anagraphs (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2
  )
  values( 
    p_db_schema_id,
    case when v_id = 0 then NULL else v_id end,
    p_an_title,
    p_an_name,
    p_an_second_name,
    p_an_last_name,
    p_an_notes,
    p_an_address,
    p_an_town,
    p_an_postal_code,
    p_an_iso_country_code,
    p_an_state_province,
    p_an_phone,
    p_an_phone2,
    p_an_fax,
    p_an_cellular,
    p_an_code,
    p_an_vat_numeric,
    p_an_email,
    p_an_web,
    case when p_an_contact_id = 0 then NULL else p_an_contact_id end,
    p_an_bank_account,
    p_an_payment_des,
    p_an_discount,
    p_an_distance,
    p_an_distance_mesunit,
    p_an_sex,
    p_an_cod_comune,
    p_an_cod_provincia,
    p_an_credit_line,
    case when p_an_currency_id = 0 then NULL else p_an_currency_id end,
    case when p_an_cat_id = 0 then NULL else p_an_cat_id end,
    p_an_notes2,
    p_an_notes3,
    p_an_edi,
    p_an_privacy,
    case when p_an_office_id = 0 then NULL else p_an_office_id end,
    p_an_cod_prov_rif,
    p_an_data_fido,
    p_an_user_insert,
    p_an_user_update,
    case when p_an_area_id = 0 then NULL else p_an_area_id end,
    case when p_an_agent_id = 0 then NULL else p_an_agent_id end,
    p_an_area_code,
    case when p_an_zone_id = '' then NULL else p_an_zone_id end,
    case when p_an_ins_id = 0 then NULL else p_an_ins_id end,
    case when p_an_upd_id = 0 then NULL else p_an_upd_id end,
    p_an_documents,
    p_an_last_date,
    p_an_birthdate,
    case when p_an_office_type_id = 0 then NULL else p_an_office_type_id end,
    p_an_searchname,
    p_an_extra_ue_flag,
    p_an_external_code,
    case when p_an_vat_id = 0 then NULL else p_an_vat_id end,
    p_an_personal_fiscal_code,
    p_an_privacy_print,
    p_an_sms,
    p_an_encrypted_fiscal_code,
    p_an_vat_purcentage,
    p_an_status,
    p_an_ownsite,
    case when p_an_insurance_id = 0 then NULL else p_an_insurance_id end,
    case when p_an_anagraphs_anagraph_id = 0 then NULL else p_an_anagraphs_anagraph_id end,
    p_an_main_language_code,
    p_an_main_culture_code,
    p_an_fiscal_code,
    p_an_main_group_id,
    case when p_an_image_id = 0 then NULL else p_an_image_id end,
    p_latitude,
    p_longitude,
    p_test,
    p_search_index,
    p_an_birthplace,
    p_an_birthplace_code,
    p_anagraph64,
    case when p_main_category_id = 0 then NULL else p_main_category_id end,
    case when p_osm_id = 0 then NULL else p_osm_id end,
    p_an_description,
    p_an_address_number,
    p_anag_jguid,
    p_anag_deleted,
    p_insert_date,
    p_update_date,
    p_user_insert,
    v_jguid,
    p_custom_field_1,
    p_custom_field_2,
    p_custom_field_3,
    p_custom_float_1,
    p_custom_float_2,
    p_custom_int_1,
    p_custom_int_2,
    case when p_supplier_id = 0 then NULL else p_supplier_id end,
    case when v_vessel_id = 0 then NULL else v_vessel_id end,
    case when p_an_country_id = 0 then NULL else p_an_country_id end,
    p_an_iso_country_code2
	)
  ;
  
  return v_id; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_title" jt="12" type="varchar" />
			<input_param name="p_an_name" jt="12" type="varchar" />
			<input_param name="p_an_second_name" jt="12" type="varchar" />
			<input_param name="p_an_last_name" jt="12" type="varchar" />
			<input_param name="p_an_notes" jt="12" type="varchar" />
			<input_param name="p_an_address" jt="12" type="varchar" />
			<input_param name="p_an_town" jt="12" type="varchar" />
			<input_param name="p_an_postal_code" jt="12" type="varchar" />
			<input_param name="p_an_iso_country_code" jt="12" type="varchar" />
			<input_param name="p_an_state_province" jt="12" type="varchar" />
			<input_param name="p_an_phone" jt="12" type="varchar" />
			<input_param name="p_an_phone2" jt="12" type="varchar" />
			<input_param name="p_an_fax" jt="12" type="varchar" />
			<input_param name="p_an_cellular" jt="12" type="varchar" />
			<input_param name="p_an_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_numeric" jt="12" type="varchar" />
			<input_param name="p_an_email" jt="12" type="varchar" />
			<input_param name="p_an_web" jt="12" type="varchar" />
			<input_param name="p_an_contact_id" jt="4" type="int4" />
			<input_param name="p_an_bank_account" jt="12" type="varchar" />
			<input_param name="p_an_payment_des" jt="12" type="varchar" />
			<input_param name="p_an_discount" jt="2" type="numeric" />
			<input_param name="p_an_distance" jt="4" type="int4" />
			<input_param name="p_an_distance_mesunit" jt="5" type="int2" />
			<input_param name="p_an_sex" jt="12" type="varchar" />
			<input_param name="p_an_cod_comune" jt="12" type="varchar" />
			<input_param name="p_an_cod_provincia" jt="12" type="varchar" />
			<input_param name="p_an_credit_line" jt="2" type="numeric" />
			<input_param name="p_an_currency_id" jt="5" type="int2" />
			<input_param name="p_an_cat_id" jt="5" type="int2" />
			<input_param name="p_an_notes2" jt="12" type="varchar" />
			<input_param name="p_an_notes3" jt="12" type="text" />
			<input_param name="p_an_edi" jt="-7" type="bool" />
			<input_param name="p_an_privacy" jt="-7" type="bool" />
			<input_param name="p_an_office_id" jt="5" type="int2" />
			<input_param name="p_an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="p_an_data_fido" jt="91" type="date" />
			<input_param name="p_an_user_insert" jt="12" type="varchar" />
			<input_param name="p_an_user_update" jt="12" type="varchar" />
			<input_param name="p_an_area_id" jt="5" type="int2" />
			<input_param name="p_an_agent_id" jt="5" type="int2" />
			<input_param name="p_an_area_code" jt="12" type="varchar" />
			<input_param name="p_an_zone_id" jt="12" type="varchar" />
			<input_param name="p_an_ins_id" jt="-5" type="int8" />
			<input_param name="p_an_upd_id" jt="-5" type="int8" />
			<input_param name="p_an_documents" jt="5" type="int2" />
			<input_param name="p_an_last_date" jt="91" type="date" />
			<input_param name="p_an_birthdate" jt="91" type="date" />
			<input_param name="p_an_office_type_id" jt="5" type="int2" />
			<input_param name="p_an_searchname" jt="12" type="varchar" />
			<input_param name="p_an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="p_an_external_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_id" jt="5" type="int2" />
			<input_param name="p_an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_privacy_print" jt="5" type="int2" />
			<input_param name="p_an_sms" jt="-7" type="bool" />
			<input_param name="p_an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_purcentage" jt="5" type="int2" />
			<input_param name="p_an_status" jt="5" type="int2" />
			<input_param name="p_an_ownsite" jt="-7" type="bool" />
			<input_param name="p_an_insurance_id" jt="-5" type="int8" />
			<input_param name="p_an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_main_language_code" jt="12" type="varchar" />
			<input_param name="p_an_main_culture_code" jt="12" type="varchar" />
			<input_param name="p_an_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_main_group_id" jt="4" type="int4" />
			<input_param name="p_an_image_id" jt="-5" type="int8" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_test" jt="8" type="float8" />
			<input_param name="p_search_index" jt="12" type="varchar" />
			<input_param name="p_an_birthplace" jt="12" type="varchar" />
			<input_param name="p_an_birthplace_code" jt="12" type="varchar" />
			<input_param name="p_anagraph64" jt="12" type="varchar" />
			<input_param name="p_main_category_id" jt="5" type="int2" />
			<input_param name="p_osm_id" jt="-5" type="int8" />
			<input_param name="p_an_description" jt="12" type="varchar" />
			<input_param name="p_an_address_number" jt="12" type="varchar" />
			<input_param name="p_anag_jguid" jt="12" type="varchar" />
			<input_param name="p_anag_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamp" />
			<input_param name="p_update_date" jt="93" type="timestamp" />
			<input_param name="p_user_insert" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_custom_field_1" jt="12" type="varchar" />
			<input_param name="p_custom_field_2" jt="12" type="varchar" />
			<input_param name="p_custom_field_3" jt="12" type="varchar" />
			<input_param name="p_custom_float_1" jt="7" type="float4" />
			<input_param name="p_custom_float_2" jt="7" type="float4" />
			<input_param name="p_custom_int_1" jt="4" type="int4" />
			<input_param name="p_custom_int_2" jt="4" type="int4" />
			<input_param name="p_supplier_id" jt="4" type="int4" />
			<input_param name="p_vessel_id" jt="5" type="int2" />
			<input_param name="p_an_country_id" jt="4" type="int4" />
			<input_param name="p_an_iso_country_code2" jt="1" type="bpchar" />
		</function>
		<function name="sp_ins_anagraphs" id="Function_2445" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_ins_anagraphs(p_db_schema_id integer, p_anagraph_id integer, p_an_title character varying, p_an_name character varying, p_an_second_name character varying, p_an_last_name character varying, p_an_notes character varying, p_an_address character varying, p_an_town character varying, p_an_postal_code character varying, p_an_iso_country_code character varying, p_an_state_province character varying, p_an_phone character varying, p_an_phone2 character varying, p_an_fax character varying, p_an_cellular character varying, p_an_code character varying, p_an_vat_numeric character varying, p_an_email character varying, p_an_web character varying, p_an_contact_id integer, p_an_bank_account character varying, p_an_payment_des character varying, p_an_discount numeric, p_an_distance integer, p_an_distance_mesunit smallint, p_an_sex character varying, p_an_cod_comune character varying, p_an_cod_provincia character varying, p_an_credit_line numeric, p_an_currency_id smallint, p_an_cat_id smallint, p_an_notes2 character varying, p_an_notes3 text, p_an_edi boolean, p_an_privacy boolean, p_an_office_id smallint, p_an_cod_prov_rif character varying, p_an_data_fido date, p_an_user_insert character varying, p_an_user_update character varying, p_an_area_id smallint, p_an_agent_id smallint, p_an_area_code character varying, p_an_zone_id character varying, p_an_ins_id bigint, p_an_upd_id bigint, p_an_documents smallint, p_an_last_date date, p_an_birthdate date, p_an_office_type_id smallint, p_an_searchname character varying, p_an_extra_ue_flag boolean, p_an_external_code character varying, p_an_vat_id smallint, p_an_personal_fiscal_code character varying, p_an_privacy_print smallint, p_an_sms boolean, p_an_encrypted_fiscal_code character varying, p_an_vat_purcentage smallint, p_an_status smallint, p_an_ownsite boolean, p_an_insurance_id bigint, p_an_anagraphs_anagraph_id integer, p_an_main_language_code character varying, p_an_main_culture_code character varying, p_an_fiscal_code character varying, p_an_main_group_id integer, p_an_image_id bigint, p_latitude double precision, p_longitude double precision, p_test double precision, p_search_index character varying, p_an_birthplace character varying, p_an_birthplace_code character varying, p_anagraph64 character varying, p_main_category_id smallint, p_osm_id bigint, p_an_description character varying, p_an_address_number character varying, p_anag_jguid character varying, p_anag_deleted boolean, p_insert_date timestamp without time zone, p_update_date timestamp without time zone, p_user_insert integer, p_jguid uuid, p_custom_field_1 character varying, p_custom_field_2 character varying, p_custom_field_3 character varying, p_custom_float_1 real, p_custom_float_2 real, p_custom_int_1 integer, p_custom_int_2 integer, p_supplier_id integer, p_vessel_id smallint, p_an_country_id integer, p_an_iso_country_code2 character, p_an_full_address character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count integer; v_id integer; v_jguid uuid; v_vessel_id integer; v_full_address character varying;
BEGIN
  v_count := 0; 
  v_id := p_anagraph_id;
  
  if v_id is null or v_id = 0 then
    v_id:=nextval('anagraph.an_anagraph_seq');
  end if; 
  
  v_jguid := p_jguid; 
  
  if v_jguid is null then
     v_jguid := '{' || public.uuid_generate_v1mc() || '}';
  end if; 
  
  if p_vessel_id = 0 then v_vessel_id := null; else v_vessel_id := p_vessel_id; end if; 
  
  v_full_address := 
  	CASE WHEN p_full_address IS NULL THEN
	     p_an_address || ',' || p_an_postal_code || ',' || p_an_town || ',' || p_an_state_province
	  ELSE
	  	p_an_full_address 
	END;
  
  
  INSERT INTO anagraph.anagraphs (
    db_schema_id,	
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2,
	p_an_full_address
  )
  values( 
    p_db_schema_id,
    case when v_id = 0 then NULL else v_id end,
    p_an_title,
    p_an_name,
    p_an_second_name,
    p_an_last_name,
    p_an_notes,
    p_an_address,
    p_an_town,
    p_an_postal_code,
    p_an_iso_country_code,
    p_an_state_province,
    p_an_phone,
    p_an_phone2,
    p_an_fax,
    p_an_cellular,
    p_an_code,
    p_an_vat_numeric,
    p_an_email,
    p_an_web,
    case when p_an_contact_id = 0 then NULL else p_an_contact_id end,
    p_an_bank_account,
    p_an_payment_des,
    p_an_discount,
    p_an_distance,
    p_an_distance_mesunit,
    p_an_sex,
    p_an_cod_comune,
    p_an_cod_provincia,
    p_an_credit_line,
    case when p_an_currency_id = 0 then NULL else p_an_currency_id end,
    case when p_an_cat_id = 0 then NULL else p_an_cat_id end,
    p_an_notes2,
    p_an_notes3,
    p_an_edi,
    p_an_privacy,
    case when p_an_office_id = 0 then NULL else p_an_office_id end,
    p_an_cod_prov_rif,
    p_an_data_fido,
    p_an_user_insert,
    p_an_user_update,
    case when p_an_area_id = 0 then NULL else p_an_area_id end,
    case when p_an_agent_id = 0 then NULL else p_an_agent_id end,
    p_an_area_code,
    case when p_an_zone_id = '' then NULL else p_an_zone_id end,
    case when p_an_ins_id = 0 then NULL else p_an_ins_id end,
    case when p_an_upd_id = 0 then NULL else p_an_upd_id end,
    p_an_documents,
    p_an_last_date,
    p_an_birthdate,
    case when p_an_office_type_id = 0 then NULL else p_an_office_type_id end,
    p_an_searchname,
    p_an_extra_ue_flag,
    p_an_external_code,
    case when p_an_vat_id = 0 then NULL else p_an_vat_id end,
    p_an_personal_fiscal_code,
    p_an_privacy_print,
    p_an_sms,
    p_an_encrypted_fiscal_code,
    p_an_vat_purcentage,
    p_an_status,
    p_an_ownsite,
    case when p_an_insurance_id = 0 then NULL else p_an_insurance_id end,
    case when p_an_anagraphs_anagraph_id = 0 then NULL else p_an_anagraphs_anagraph_id end,
    p_an_main_language_code,
    p_an_main_culture_code,
    p_an_fiscal_code,
    p_an_main_group_id,
    case when p_an_image_id = 0 then NULL else p_an_image_id end,
    p_latitude,
    p_longitude,
    p_test,
    p_search_index,
    p_an_birthplace,
    p_an_birthplace_code,
    p_anagraph64,
    case when p_main_category_id = 0 then NULL else p_main_category_id end,
    case when p_osm_id = 0 then NULL else p_osm_id end,
    p_an_description,
    p_an_address_number,
    p_anag_jguid,
    p_anag_deleted,
    p_insert_date,
    p_update_date,
    p_user_insert,
    v_jguid,
    p_custom_field_1,
    p_custom_field_2,
    p_custom_field_3,
    p_custom_float_1,
    p_custom_float_2,
    p_custom_int_1,
    p_custom_int_2,
    case when p_supplier_id = 0 then NULL else p_supplier_id end,
    case when v_vessel_id = 0 then NULL else v_vessel_id end,
    case when p_an_country_id = 0 then NULL else p_an_country_id end,
    p_an_iso_country_code2,
	p_an_full_address
	)
  ;
  
  return v_id; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_title" jt="12" type="varchar" />
			<input_param name="p_an_name" jt="12" type="varchar" />
			<input_param name="p_an_second_name" jt="12" type="varchar" />
			<input_param name="p_an_last_name" jt="12" type="varchar" />
			<input_param name="p_an_notes" jt="12" type="varchar" />
			<input_param name="p_an_address" jt="12" type="varchar" />
			<input_param name="p_an_town" jt="12" type="varchar" />
			<input_param name="p_an_postal_code" jt="12" type="varchar" />
			<input_param name="p_an_iso_country_code" jt="12" type="varchar" />
			<input_param name="p_an_state_province" jt="12" type="varchar" />
			<input_param name="p_an_phone" jt="12" type="varchar" />
			<input_param name="p_an_phone2" jt="12" type="varchar" />
			<input_param name="p_an_fax" jt="12" type="varchar" />
			<input_param name="p_an_cellular" jt="12" type="varchar" />
			<input_param name="p_an_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_numeric" jt="12" type="varchar" />
			<input_param name="p_an_email" jt="12" type="varchar" />
			<input_param name="p_an_web" jt="12" type="varchar" />
			<input_param name="p_an_contact_id" jt="4" type="int4" />
			<input_param name="p_an_bank_account" jt="12" type="varchar" />
			<input_param name="p_an_payment_des" jt="12" type="varchar" />
			<input_param name="p_an_discount" jt="2" type="numeric" />
			<input_param name="p_an_distance" jt="4" type="int4" />
			<input_param name="p_an_distance_mesunit" jt="5" type="int2" />
			<input_param name="p_an_sex" jt="12" type="varchar" />
			<input_param name="p_an_cod_comune" jt="12" type="varchar" />
			<input_param name="p_an_cod_provincia" jt="12" type="varchar" />
			<input_param name="p_an_credit_line" jt="2" type="numeric" />
			<input_param name="p_an_currency_id" jt="5" type="int2" />
			<input_param name="p_an_cat_id" jt="5" type="int2" />
			<input_param name="p_an_notes2" jt="12" type="varchar" />
			<input_param name="p_an_notes3" jt="12" type="text" />
			<input_param name="p_an_edi" jt="-7" type="bool" />
			<input_param name="p_an_privacy" jt="-7" type="bool" />
			<input_param name="p_an_office_id" jt="5" type="int2" />
			<input_param name="p_an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="p_an_data_fido" jt="91" type="date" />
			<input_param name="p_an_user_insert" jt="12" type="varchar" />
			<input_param name="p_an_user_update" jt="12" type="varchar" />
			<input_param name="p_an_area_id" jt="5" type="int2" />
			<input_param name="p_an_agent_id" jt="5" type="int2" />
			<input_param name="p_an_area_code" jt="12" type="varchar" />
			<input_param name="p_an_zone_id" jt="12" type="varchar" />
			<input_param name="p_an_ins_id" jt="-5" type="int8" />
			<input_param name="p_an_upd_id" jt="-5" type="int8" />
			<input_param name="p_an_documents" jt="5" type="int2" />
			<input_param name="p_an_last_date" jt="91" type="date" />
			<input_param name="p_an_birthdate" jt="91" type="date" />
			<input_param name="p_an_office_type_id" jt="5" type="int2" />
			<input_param name="p_an_searchname" jt="12" type="varchar" />
			<input_param name="p_an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="p_an_external_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_id" jt="5" type="int2" />
			<input_param name="p_an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_privacy_print" jt="5" type="int2" />
			<input_param name="p_an_sms" jt="-7" type="bool" />
			<input_param name="p_an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_purcentage" jt="5" type="int2" />
			<input_param name="p_an_status" jt="5" type="int2" />
			<input_param name="p_an_ownsite" jt="-7" type="bool" />
			<input_param name="p_an_insurance_id" jt="-5" type="int8" />
			<input_param name="p_an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_main_language_code" jt="12" type="varchar" />
			<input_param name="p_an_main_culture_code" jt="12" type="varchar" />
			<input_param name="p_an_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_main_group_id" jt="4" type="int4" />
			<input_param name="p_an_image_id" jt="-5" type="int8" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_test" jt="8" type="float8" />
			<input_param name="p_search_index" jt="12" type="varchar" />
			<input_param name="p_an_birthplace" jt="12" type="varchar" />
			<input_param name="p_an_birthplace_code" jt="12" type="varchar" />
			<input_param name="p_anagraph64" jt="12" type="varchar" />
			<input_param name="p_main_category_id" jt="5" type="int2" />
			<input_param name="p_osm_id" jt="-5" type="int8" />
			<input_param name="p_an_description" jt="12" type="varchar" />
			<input_param name="p_an_address_number" jt="12" type="varchar" />
			<input_param name="p_anag_jguid" jt="12" type="varchar" />
			<input_param name="p_anag_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamp" />
			<input_param name="p_update_date" jt="93" type="timestamp" />
			<input_param name="p_user_insert" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_custom_field_1" jt="12" type="varchar" />
			<input_param name="p_custom_field_2" jt="12" type="varchar" />
			<input_param name="p_custom_field_3" jt="12" type="varchar" />
			<input_param name="p_custom_float_1" jt="7" type="float4" />
			<input_param name="p_custom_float_2" jt="7" type="float4" />
			<input_param name="p_custom_int_1" jt="4" type="int4" />
			<input_param name="p_custom_int_2" jt="4" type="int4" />
			<input_param name="p_supplier_id" jt="4" type="int4" />
			<input_param name="p_vessel_id" jt="5" type="int2" />
			<input_param name="p_an_country_id" jt="4" type="int4" />
			<input_param name="p_an_iso_country_code2" jt="1" type="bpchar" />
			<input_param name="p_an_full_address" jt="12" type="varchar" />
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_title" jt="12" type="varchar" />
			<input_param name="p_an_name" jt="12" type="varchar" />
			<input_param name="p_an_second_name" jt="12" type="varchar" />
			<input_param name="p_an_last_name" jt="12" type="varchar" />
			<input_param name="p_an_notes" jt="12" type="varchar" />
			<input_param name="p_an_address" jt="12" type="varchar" />
			<input_param name="p_an_town" jt="12" type="varchar" />
			<input_param name="p_an_postal_code" jt="12" type="varchar" />
			<input_param name="p_an_iso_country_code" jt="12" type="varchar" />
			<input_param name="p_an_state_province" jt="12" type="varchar" />
			<input_param name="p_an_phone" jt="12" type="varchar" />
			<input_param name="p_an_phone2" jt="12" type="varchar" />
			<input_param name="p_an_fax" jt="12" type="varchar" />
			<input_param name="p_an_cellular" jt="12" type="varchar" />
			<input_param name="p_an_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_numeric" jt="12" type="varchar" />
			<input_param name="p_an_email" jt="12" type="varchar" />
			<input_param name="p_an_web" jt="12" type="varchar" />
			<input_param name="p_an_contact_id" jt="4" type="int4" />
			<input_param name="p_an_bank_account" jt="12" type="varchar" />
			<input_param name="p_an_payment_des" jt="12" type="varchar" />
			<input_param name="p_an_discount" jt="2" type="numeric" />
			<input_param name="p_an_distance" jt="4" type="int4" />
			<input_param name="p_an_distance_mesunit" jt="5" type="int2" />
			<input_param name="p_an_sex" jt="12" type="varchar" />
			<input_param name="p_an_cod_comune" jt="12" type="varchar" />
			<input_param name="p_an_cod_provincia" jt="12" type="varchar" />
			<input_param name="p_an_credit_line" jt="2" type="numeric" />
			<input_param name="p_an_currency_id" jt="5" type="int2" />
			<input_param name="p_an_cat_id" jt="5" type="int2" />
			<input_param name="p_an_notes2" jt="12" type="varchar" />
			<input_param name="p_an_notes3" jt="12" type="text" />
			<input_param name="p_an_edi" jt="-7" type="bool" />
			<input_param name="p_an_privacy" jt="-7" type="bool" />
			<input_param name="p_an_office_id" jt="5" type="int2" />
			<input_param name="p_an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="p_an_data_fido" jt="91" type="date" />
			<input_param name="p_an_user_insert" jt="12" type="varchar" />
			<input_param name="p_an_user_update" jt="12" type="varchar" />
			<input_param name="p_an_area_id" jt="5" type="int2" />
			<input_param name="p_an_agent_id" jt="5" type="int2" />
			<input_param name="p_an_area_code" jt="12" type="varchar" />
			<input_param name="p_an_zone_id" jt="12" type="varchar" />
			<input_param name="p_an_ins_id" jt="-5" type="int8" />
			<input_param name="p_an_upd_id" jt="-5" type="int8" />
			<input_param name="p_an_documents" jt="5" type="int2" />
			<input_param name="p_an_last_date" jt="91" type="date" />
			<input_param name="p_an_birthdate" jt="91" type="date" />
			<input_param name="p_an_office_type_id" jt="5" type="int2" />
			<input_param name="p_an_searchname" jt="12" type="varchar" />
			<input_param name="p_an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="p_an_external_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_id" jt="5" type="int2" />
			<input_param name="p_an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_privacy_print" jt="5" type="int2" />
			<input_param name="p_an_sms" jt="-7" type="bool" />
			<input_param name="p_an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_purcentage" jt="5" type="int2" />
			<input_param name="p_an_status" jt="5" type="int2" />
			<input_param name="p_an_ownsite" jt="-7" type="bool" />
			<input_param name="p_an_insurance_id" jt="-5" type="int8" />
			<input_param name="p_an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_main_language_code" jt="12" type="varchar" />
			<input_param name="p_an_main_culture_code" jt="12" type="varchar" />
			<input_param name="p_an_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_main_group_id" jt="4" type="int4" />
			<input_param name="p_an_image_id" jt="-5" type="int8" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_test" jt="8" type="float8" />
			<input_param name="p_search_index" jt="12" type="varchar" />
			<input_param name="p_an_birthplace" jt="12" type="varchar" />
			<input_param name="p_an_birthplace_code" jt="12" type="varchar" />
			<input_param name="p_anagraph64" jt="12" type="varchar" />
			<input_param name="p_main_category_id" jt="5" type="int2" />
			<input_param name="p_osm_id" jt="-5" type="int8" />
			<input_param name="p_an_description" jt="12" type="varchar" />
			<input_param name="p_an_address_number" jt="12" type="varchar" />
			<input_param name="p_anag_jguid" jt="12" type="varchar" />
			<input_param name="p_anag_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamp" />
			<input_param name="p_update_date" jt="93" type="timestamp" />
			<input_param name="p_user_insert" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_custom_field_1" jt="12" type="varchar" />
			<input_param name="p_custom_field_2" jt="12" type="varchar" />
			<input_param name="p_custom_field_3" jt="12" type="varchar" />
			<input_param name="p_custom_float_1" jt="7" type="float4" />
			<input_param name="p_custom_float_2" jt="7" type="float4" />
			<input_param name="p_custom_int_1" jt="4" type="int4" />
			<input_param name="p_custom_int_2" jt="4" type="int4" />
			<input_param name="p_supplier_id" jt="4" type="int4" />
			<input_param name="p_vessel_id" jt="5" type="int2" />
			<input_param name="p_an_country_id" jt="4" type="int4" />
			<input_param name="p_an_iso_country_code2" jt="1" type="bpchar" />
			<input_param name="p_an_full_address" jt="12" type="varchar" />
		</function>
		<function name="sp_insert_address_from_anagraph" id="Function_1c2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_insert_address_from_anagraph(p_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
begin
	INSERT INTO anagraph.an_addresses(
			address_name, 	postal_code, 	state_province, 	town_name, 	address, 			address_number, 
			phone, 	full_address,  									country_code,  anagraph_id, pos, 	latitude, 		longitude)
	SELECT
			an_last_name, 	an_postal_code, an_state_province, 	an_town, 	an_address, 		an_address_number, 			
			an_cellular, 	an_full_address, an_iso_country_code2, 		     anagraph_id, 		1, 		latitude, 	longitude
	FROM anagraph.anagraphs WHERE anagraph_id = p_id;
  
  
  return true; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_id" jt="4" type="int4" />
		</function>
		<function name="sp_sel_anagraphs" id="Function_2291" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_sel_anagraphs()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    db_schema_id,
    anagraph_id,
    an_title,
    an_name,
    an_second_name,
    an_last_name,
    an_notes,
    an_address,
    an_town,
    an_postal_code,
    an_iso_country_code,
    an_state_province,
    an_phone,
    an_phone2,
    an_fax,
    an_cellular,
    an_code,
    an_vat_numeric,
    an_email,
    an_web,
    an_contact_id,
    an_bank_account,
    an_payment_des,
    an_discount,
    an_distance,
    an_distance_mesunit,
    an_sex,
    an_cod_comune,
    an_cod_provincia,
    an_credit_line,
    an_currency_id,
    an_cat_id,
    an_notes2,
    an_notes3,
    an_edi,
    an_privacy,
    an_office_id,
    an_cod_prov_rif,
    an_data_fido,
    an_user_insert,
    an_user_update,
    an_area_id,
    an_agent_id,
    an_area_code,
    an_zone_id,
    an_ins_id,
    an_upd_id,
    an_documents,
    an_last_date,
    an_birthdate,
    an_office_type_id,
    an_searchname,
    an_extra_ue_flag,
    an_external_code,
    an_vat_id,
    an_personal_fiscal_code,
    an_privacy_print,
    an_sms,
    an_encrypted_fiscal_code,
    an_vat_purcentage,
    an_status,
    an_ownsite,
    an_insurance_id,
    an_anagraphs_anagraph_id,
    an_main_language_code,
    an_main_culture_code,
    an_fiscal_code,
    an_main_group_id,
    an_image_id,
    latitude,
    longitude,
    test,
    search_index,
    an_birthplace,
    an_birthplace_code,
    anagraph64,
    main_category_id,
    osm_id,
    an_description,
    an_address_number,
    anag_jguid,
    anag_deleted,
    insert_date,
    update_date,
    user_insert,
    jguid,
    custom_field_1,
    custom_field_2,
    custom_field_3,
    custom_float_1,
    custom_float_2,
    custom_int_1,
    custom_int_2,
    supplier_id,
    vessel_id,
    an_country_id,
    an_iso_country_code2
  FROM 
    anagraph.anagraphs;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_upd_anagraphs" id="Function_1fc2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION anagraph.sp_upd_anagraphs(p_db_schema_id integer, p_anagraph_id integer, p_an_title character varying, p_an_name character varying, p_an_second_name character varying, p_an_last_name character varying, p_an_notes character varying, p_an_address character varying, p_an_town character varying, p_an_postal_code character varying, p_an_iso_country_code character varying, p_an_state_province character varying, p_an_phone character varying, p_an_phone2 character varying, p_an_fax character varying, p_an_cellular character varying, p_an_code character varying, p_an_vat_numeric character varying, p_an_email character varying, p_an_web character varying, p_an_contact_id integer, p_an_bank_account character varying, p_an_payment_des character varying, p_an_discount numeric, p_an_distance integer, p_an_distance_mesunit smallint, p_an_sex character varying, p_an_cod_comune character varying, p_an_cod_provincia character varying, p_an_credit_line numeric, p_an_currency_id smallint, p_an_cat_id smallint, p_an_notes2 character varying, p_an_notes3 text, p_an_edi boolean, p_an_privacy boolean, p_an_office_id smallint, p_an_cod_prov_rif character varying, p_an_data_fido date, p_an_user_insert character varying, p_an_user_update character varying, p_an_area_id smallint, p_an_agent_id smallint, p_an_area_code character varying, p_an_zone_id character varying, p_an_ins_id bigint, p_an_upd_id bigint, p_an_documents smallint, p_an_last_date date, p_an_birthdate date, p_an_office_type_id smallint, p_an_searchname character varying, p_an_extra_ue_flag boolean, p_an_external_code character varying, p_an_vat_id smallint, p_an_personal_fiscal_code character varying, p_an_privacy_print smallint, p_an_sms boolean, p_an_encrypted_fiscal_code character varying, p_an_vat_purcentage smallint, p_an_status smallint, p_an_ownsite boolean, p_an_insurance_id bigint, p_an_anagraphs_anagraph_id integer, p_an_main_language_code character varying, p_an_main_culture_code character varying, p_an_fiscal_code character varying, p_an_main_group_id integer, p_an_image_id bigint, p_latitude double precision, p_longitude double precision, p_test double precision, p_search_index character varying, p_an_birthplace character varying, p_an_birthplace_code character varying, p_anagraph64 character varying, p_main_category_id smallint, p_osm_id bigint, p_an_description character varying, p_an_address_number character varying, p_anag_jguid character varying, p_anag_deleted boolean, p_insert_date timestamp without time zone, p_update_date timestamp without time zone, p_user_insert integer, p_jguid uuid, p_custom_field_1 character varying, p_custom_field_2 character varying, p_custom_field_3 character varying, p_custom_float_1 real, p_custom_float_2 real, p_custom_int_1 integer, p_custom_int_2 integer, p_supplier_id integer, p_vessel_id smallint, p_an_country_id integer, p_an_iso_country_code2 character, p_deleted boolean)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count bigint; v_id bigint; v_jguid uuid;
BEGIN
  v_id := p_anagraph_id; 
  v_jguid := p_jguid; 
  
  if (v_id is null or v_id = 0) and (p_jguid is not null) then  
	 select 
         count(1), id
     into 
         v_count, v_id
	   from 
          anagraph.anagraph where jguid = v_jguid 
       group by id;  
  end if; 
   
  UPDATE anagraph.anagraphs SET
    db_schema_id = p_db_schema_id,
    an_title = p_an_title,
    an_name = p_an_name,
    an_second_name = p_an_second_name,
    an_last_name = p_an_last_name,
    an_notes = p_an_notes,
    an_address = p_an_address,
    an_town = p_an_town,
    an_postal_code = p_an_postal_code,
    an_iso_country_code = p_an_iso_country_code,
    an_state_province = p_an_state_province,
    an_phone = p_an_phone,
    an_phone2 = p_an_phone2,
    an_fax = p_an_fax,
    an_cellular = p_an_cellular,
    an_code = p_an_code,
    an_vat_numeric = p_an_vat_numeric,
    an_email = p_an_email,
    an_web = p_an_web,
    an_contact_id = p_an_contact_id,
    an_bank_account = p_an_bank_account,
    an_payment_des = p_an_payment_des,
    an_discount = p_an_discount,
    an_distance = p_an_distance,
    an_distance_mesunit = p_an_distance_mesunit,
    an_sex = p_an_sex,
    an_cod_comune = p_an_cod_comune,
    an_cod_provincia = p_an_cod_provincia,
    an_credit_line = p_an_credit_line,
    an_currency_id = p_an_currency_id,
    an_cat_id = p_an_cat_id,
    an_notes2 = p_an_notes2,
    an_notes3 = p_an_notes3,
    an_edi = p_an_edi,
    an_privacy = p_an_privacy,
    an_office_id = p_an_office_id,
    an_cod_prov_rif = p_an_cod_prov_rif,
    an_data_fido = p_an_data_fido,
    an_user_insert = p_an_user_insert,
    an_user_update = p_an_user_update,
    an_area_id = p_an_area_id,
    an_agent_id = p_an_agent_id,
    an_area_code = p_an_area_code,
    an_zone_id = p_an_zone_id,
    an_ins_id = p_an_ins_id,
    an_upd_id = p_an_upd_id,
    an_documents = p_an_documents,
    an_last_date = p_an_last_date,
    an_birthdate = p_an_birthdate,
    an_office_type_id = p_an_office_type_id,
    an_searchname = p_an_searchname,
    an_extra_ue_flag = p_an_extra_ue_flag,
    an_external_code = p_an_external_code,
    an_vat_id = p_an_vat_id,
    an_personal_fiscal_code = p_an_personal_fiscal_code,
    an_privacy_print = p_an_privacy_print,
    an_sms = p_an_sms,
    an_encrypted_fiscal_code = p_an_encrypted_fiscal_code,
    an_vat_purcentage = p_an_vat_purcentage,
    an_status = p_an_status,
    an_ownsite = p_an_ownsite,
    an_insurance_id = p_an_insurance_id,
    an_anagraphs_anagraph_id = p_an_anagraphs_anagraph_id,
    an_main_language_code = p_an_main_language_code,
    an_main_culture_code = p_an_main_culture_code,
    an_fiscal_code = p_an_fiscal_code,
    an_main_group_id = p_an_main_group_id,
    an_image_id = p_an_image_id,
    latitude = p_latitude,
    longitude = p_longitude,
    test = p_test,
    search_index = p_search_index,
    an_birthplace = p_an_birthplace,
    an_birthplace_code = p_an_birthplace_code,
    anagraph64 = p_anagraph64,
    main_category_id = p_main_category_id,
    osm_id = p_osm_id,
    an_description = p_an_description,
    an_address_number = p_an_address_number,
    anag_jguid = p_anag_jguid,
    anag_deleted = p_anag_deleted,
    insert_date = p_insert_date,
    update_date = p_update_date,
    user_insert = p_user_insert,
    jguid = p_jguid,
    custom_field_1 = p_custom_field_1,
    custom_field_2 = p_custom_field_2,
    custom_field_3 = p_custom_field_3,
    custom_float_1 = p_custom_float_1,
    custom_float_2 = p_custom_float_2,
    custom_int_1 = p_custom_int_1,
    custom_int_2 = p_custom_int_2,
    supplier_id = p_supplier_id,
    vessel_id = p_vessel_id,
    an_country_id = p_an_country_id,
    an_iso_country_code2 = p_an_iso_country_code2,
	deleted = p_deleted
  WHERE 
    (anagraph_id = v_id) ;
	
   return p_anagraph_id; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_title" jt="12" type="varchar" />
			<input_param name="p_an_name" jt="12" type="varchar" />
			<input_param name="p_an_second_name" jt="12" type="varchar" />
			<input_param name="p_an_last_name" jt="12" type="varchar" />
			<input_param name="p_an_notes" jt="12" type="varchar" />
			<input_param name="p_an_address" jt="12" type="varchar" />
			<input_param name="p_an_town" jt="12" type="varchar" />
			<input_param name="p_an_postal_code" jt="12" type="varchar" />
			<input_param name="p_an_iso_country_code" jt="12" type="varchar" />
			<input_param name="p_an_state_province" jt="12" type="varchar" />
			<input_param name="p_an_phone" jt="12" type="varchar" />
			<input_param name="p_an_phone2" jt="12" type="varchar" />
			<input_param name="p_an_fax" jt="12" type="varchar" />
			<input_param name="p_an_cellular" jt="12" type="varchar" />
			<input_param name="p_an_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_numeric" jt="12" type="varchar" />
			<input_param name="p_an_email" jt="12" type="varchar" />
			<input_param name="p_an_web" jt="12" type="varchar" />
			<input_param name="p_an_contact_id" jt="4" type="int4" />
			<input_param name="p_an_bank_account" jt="12" type="varchar" />
			<input_param name="p_an_payment_des" jt="12" type="varchar" />
			<input_param name="p_an_discount" jt="2" type="numeric" />
			<input_param name="p_an_distance" jt="4" type="int4" />
			<input_param name="p_an_distance_mesunit" jt="5" type="int2" />
			<input_param name="p_an_sex" jt="12" type="varchar" />
			<input_param name="p_an_cod_comune" jt="12" type="varchar" />
			<input_param name="p_an_cod_provincia" jt="12" type="varchar" />
			<input_param name="p_an_credit_line" jt="2" type="numeric" />
			<input_param name="p_an_currency_id" jt="5" type="int2" />
			<input_param name="p_an_cat_id" jt="5" type="int2" />
			<input_param name="p_an_notes2" jt="12" type="varchar" />
			<input_param name="p_an_notes3" jt="12" type="text" />
			<input_param name="p_an_edi" jt="-7" type="bool" />
			<input_param name="p_an_privacy" jt="-7" type="bool" />
			<input_param name="p_an_office_id" jt="5" type="int2" />
			<input_param name="p_an_cod_prov_rif" jt="12" type="varchar" />
			<input_param name="p_an_data_fido" jt="91" type="date" />
			<input_param name="p_an_user_insert" jt="12" type="varchar" />
			<input_param name="p_an_user_update" jt="12" type="varchar" />
			<input_param name="p_an_area_id" jt="5" type="int2" />
			<input_param name="p_an_agent_id" jt="5" type="int2" />
			<input_param name="p_an_area_code" jt="12" type="varchar" />
			<input_param name="p_an_zone_id" jt="12" type="varchar" />
			<input_param name="p_an_ins_id" jt="-5" type="int8" />
			<input_param name="p_an_upd_id" jt="-5" type="int8" />
			<input_param name="p_an_documents" jt="5" type="int2" />
			<input_param name="p_an_last_date" jt="91" type="date" />
			<input_param name="p_an_birthdate" jt="91" type="date" />
			<input_param name="p_an_office_type_id" jt="5" type="int2" />
			<input_param name="p_an_searchname" jt="12" type="varchar" />
			<input_param name="p_an_extra_ue_flag" jt="-7" type="bool" />
			<input_param name="p_an_external_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_id" jt="5" type="int2" />
			<input_param name="p_an_personal_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_privacy_print" jt="5" type="int2" />
			<input_param name="p_an_sms" jt="-7" type="bool" />
			<input_param name="p_an_encrypted_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_vat_purcentage" jt="5" type="int2" />
			<input_param name="p_an_status" jt="5" type="int2" />
			<input_param name="p_an_ownsite" jt="-7" type="bool" />
			<input_param name="p_an_insurance_id" jt="-5" type="int8" />
			<input_param name="p_an_anagraphs_anagraph_id" jt="4" type="int4" />
			<input_param name="p_an_main_language_code" jt="12" type="varchar" />
			<input_param name="p_an_main_culture_code" jt="12" type="varchar" />
			<input_param name="p_an_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_an_main_group_id" jt="4" type="int4" />
			<input_param name="p_an_image_id" jt="-5" type="int8" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_test" jt="8" type="float8" />
			<input_param name="p_search_index" jt="12" type="varchar" />
			<input_param name="p_an_birthplace" jt="12" type="varchar" />
			<input_param name="p_an_birthplace_code" jt="12" type="varchar" />
			<input_param name="p_anagraph64" jt="12" type="varchar" />
			<input_param name="p_main_category_id" jt="5" type="int2" />
			<input_param name="p_osm_id" jt="-5" type="int8" />
			<input_param name="p_an_description" jt="12" type="varchar" />
			<input_param name="p_an_address_number" jt="12" type="varchar" />
			<input_param name="p_anag_jguid" jt="12" type="varchar" />
			<input_param name="p_anag_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamp" />
			<input_param name="p_update_date" jt="93" type="timestamp" />
			<input_param name="p_user_insert" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_custom_field_1" jt="12" type="varchar" />
			<input_param name="p_custom_field_2" jt="12" type="varchar" />
			<input_param name="p_custom_field_3" jt="12" type="varchar" />
			<input_param name="p_custom_float_1" jt="7" type="float4" />
			<input_param name="p_custom_float_2" jt="7" type="float4" />
			<input_param name="p_custom_int_1" jt="4" type="int4" />
			<input_param name="p_custom_int_2" jt="4" type="int4" />
			<input_param name="p_supplier_id" jt="4" type="int4" />
			<input_param name="p_vessel_id" jt="5" type="int2" />
			<input_param name="p_an_country_id" jt="4" type="int4" />
			<input_param name="p_an_iso_country_code2" jt="1" type="bpchar" />
			<input_param name="p_deleted" jt="-7" type="bool" />
		</function>
	</schema>
	<schema name="analytics" catalogname="ergomercator" >
		<table name="group_users" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="query_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="pk_group_users" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
				<column name="query_group_id" />
			</index>
			<fk name="fk_group_users_query_groups" to_schema="ergomercator.analytics" to_table="query_groups" update_action="cascade" >
				<fk_column name="query_group_id" pk="group_id" />
			</fk>
		</table>
		<table name="params" >
			<comment><![CDATA[Parameters used in a query]]></comment>
			<column name="query_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Foreign Key To Query]]></comment>
			</column>
			<column name="name" type="varchar" length="60" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Paramter Name]]></comment>
			</column>
			<column name="value" type="varchar" length="1024" decimal="0" jt="12" >
				<comment><![CDATA[Param Value here is just a String and is Managed by IJanuaField as a Variant or a TValue Field and  converted to Code64]]></comment>
			</column>
			<column name="lookup_query_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign key to a Lookup Table]]></comment>
			</column>
			<column name="lookup_key_field" type="varchar" length="128" decimal="0" jt="12" />
			<column name="lookup_value_field" type="varchar" length="128" decimal="0" jt="12" />
			<index name="pk_params_name" unique="PRIMARY_KEY" >
				<column name="query_id" />
				<column name="name" />
			</index>
			<fk name="fk_params_queries" to_schema="ergomercator.analytics" to_table="queries" delete_action="cascade" update_action="cascade" >
				<fk_column name="query_id" pk="query_id" />
			</fk>
			<fk name="fk_params_queries_0" to_schema="ergomercator.analytics" to_table="queries" >
				<fk_column name="lookup_query_id" pk="query_id" />
			</fk>
		</table>
		<table name="queries" >
			<comment><![CDATA[List of queries, a query can be connected as a Node to an upper level query using a Tree Model (for drill down or master-Detail operations). A Query can (also) be used as as drop-down list for a parameter's input.]]></comment>
			<column name="query_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="query_des" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="query_text" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="query_update" type="text" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="master_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[master query ID can be a master as a master_detail relationship or a drill down query]]></comment>
			</column>
			<column name="isdetail" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Tell us if a query is the detail of another. By default is false (sub queries are used as drill-down queries)]]></comment>
			</column>
			<column name="description" type="varchar" length="1024" decimal="0" jt="12" >
				<comment><![CDATA[optional query description for statistics]]></comment>
			</column>
			<column name="schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Foreign Key to physical or virtual schema in DB]]></comment>
			</column>
			<index name="queries_pk" unique="PRIMARY_KEY" >
				<column name="query_id" />
			</index>
			<fk name="fk_queries_queries" to_schema="ergomercator.analytics" to_table="queries" update_action="cascade" >
				<fk_column name="master_id" pk="query_id" />
			</fk>
			<fk name="fk_queries_queries_schemas" to_schema="ergomercator.analytics" to_table="queries_schemas" >
				<fk_column name="schema_id" pk="schema_id" />
			</fk>
			<fk name="fk_queries_query_groups" to_schema="ergomercator.analytics" to_table="query_groups" update_action="cascade" >
				<fk_column name="group_id" pk="group_id" />
			</fk>
		</table>
		<table name="queries_schemas" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="schema_name" type="varchar" length="128" decimal="0" jt="12" />
			<index name="unq_queries_schemas_schema_id" unique="UNIQUE_KEY" >
				<column name="schema_id" />
			</index>
		</table>
		<table name="query_groups" >
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="group_des" type="varchar" length="30" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="query_groups_pk" unique="PRIMARY_KEY" >
				<column name="group_id" />
			</index>
		</table>
		<sequence name="queries_seq" options="START WITH 1" />
		<sequence name="query_groups_seq" options="START WITH 1" />
		<trigger name="queries_id_bi_trg" table="queries" id="Trigger_54b" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER queries_id_bi_trg BEFORE INSERT ON analytics.queries FOR EACH ROW EXECUTE PROCEDURE analytics.queries_id_trg()]]></string>
		</trigger>
		<trigger name="query_groups_id_bi_trg" table="query_groups" id="Trigger_2423" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER query_groups_id_bi_trg BEFORE INSERT ON analytics.query_groups FOR EACH ROW EXECUTE PROCEDURE analytics.query_groups_id_trg()]]></string>
		</trigger>
		<function name="queries_id_trg" id="Function_1211" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION analytics.queries_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.query_id is null then
          New.query_id:=nextval('analytics.queries_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="query_groups_id_trg" id="Function_ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION analytics.query_groups_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.group_id is null then
          New.group_id:=nextval('analytics.query_groups_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="assets" catalogname="ergomercator" />
	<schema name="attorneys" catalogname="ergomercator" >
		<comment><![CDATA[The attorneys schema is the 'container' of legal applications, mainly the system Database backup for attorneys]]></comment>
	</schema>
	<schema name="books" catalogname="ergomercator" >
		<table name="authors" >
			<column name="anagraph_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="family_name" type="varchar" length="128" decimal="0" jt="12" />
			<index name="authors_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
			</index>
		</table>
		<table name="definitions" >
			<column name="book_def_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Columun unique identifier of book definition Worldwide]]></comment>
			</column>
			<column name="title" type="varchar" length="512" decimal="0" jt="12" />
			<column name="subtitle" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="cover_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="editor_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="author_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[foreign key to authors database]]></comment>
			</column>
			<column name="collection_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign key to language table]]></comment>
			</column>
			<column name="isbn13" type="char" length="13" decimal="0" jt="1" />
			<column name="isbn10" type="char" length="10" decimal="0" jt="1" />
			<column name="publish_year" type="smallint" length="5" decimal="0" jt="5" />
			<column name="release_date" type="date" length="13" decimal="0" jt="91" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="main_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="book_defs_pk" unique="PRIMARY_KEY" >
				<column name="book_def_id" />
			</index>
			<index name="book_defs_ISBN10_uk" unique="UNIQUE_KEY" >
				<column name="isbn10" />
			</index>
			<index name="books_defs_isbn13_uk" unique="UNIQUE_KEY" >
				<column name="isbn13" />
			</index>
			<index name="fki_book_defs_language_fk" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_book_defs" unique="NORMAL" >
				<column name="main_image_id" />
			</index>
			<constraint name="publish_year_check" >
				<string><![CDATA[CHECK (((publish_year >= 1900) AND (publish_year <= 3000)))]]></string>
			</constraint>
		</table>
		<table name="offers" >
			<column name="offer_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="valid_since" type="date" length="13" decimal="0" jt="91" mandatory="y" >
				<defo><![CDATA[('now'::text)::date]]></defo>
			</column>
			<column name="valid_until" type="date" length="13" decimal="0" jt="91" />
			<column name="used" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="conditions" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[5]]></defo>
			</column>
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="advertiser_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="book_def_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Columun unique identifier of book definition Worldwide]]></comment>
			</column>
			<column name="uni_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="pk_books_offers" unique="PRIMARY_KEY" >
				<column name="offer_id" />
			</index>
			<index name="idx_books_offers" unique="NORMAL" >
				<column name="image_id" />
			</index>
			<index name="idx_books_offers_0" unique="NORMAL" >
				<column name="advertiser_id" />
			</index>
			<index name="idx_books_offers_1" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="idx_books_offers_2" unique="NORMAL" >
				<column name="book_def_id" />
			</index>
			<index name="idx_books_offers_3" unique="NORMAL" >
				<column name="uni_id" />
			</index>
			<fk name="fk_books_offers_defs" to_schema="ergomercator.books" to_table="definitions" >
				<fk_column name="book_def_id" pk="book_def_id" />
			</fk>
		</table>
		<table name="offers_views" >
			<column name="view_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="offer_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="idx_books_offers_views" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_books_offers_views_0" unique="NORMAL" >
				<column name="offer_id" />
			</index>
			<fk name="fk_books_offers_views" to_schema="ergomercator.books" to_table="offers" >
				<fk_column name="offer_id" pk="offer_id" />
			</fk>
		</table>
		<sequence name="book_defs_seq" options="START WITH 1" />
		<trigger name="book_defs_biu_id_trg" table="definitions" id="Trigger_13cf" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER book_defs_biu_id_trg BEFORE INSERT OR UPDATE ON books.definitions FOR EACH ROW EXECUTE PROCEDURE books.book_defs_get_id()]]></string>
		</trigger>
		<function name="book_defs_get_id" id="Function_aec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION books.book_defs_get_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.book_def_id is null then
          New.book_def_id:=nextval('books.book_defs_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="cloud" catalogname="ergomercator" >
		<comment><![CDATA[Tabelle cloud di immagini, dati, locazioni, paypal ....]]></comment>
		<table name="blob_files" >
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="blob_file" type="bytea" decimal="0" jt="-2" />
			<column name="blob_size" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="blob_key" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ispublic" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="cblb_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cblb_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="file_ext" type="varchar" length="12" decimal="0" jt="12" >
				<defo><![CDATA[''::character varying]]></defo>
			</column>
			<column name="filename" type="varchar" length="256" decimal="0" jt="12" />
			<column name="isresource" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="is_external" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="ex_location" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['D'::"char"]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="description" type="varchar" length="2048" decimal="0" jt="12" >
				<comment><![CDATA[File Description]]></comment>
			</column>
			<column name="flg_stored" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="cloud_blob_files_pk" unique="PRIMARY_KEY" >
				<column name="blob_id" />
			</index>
			<index name="blob_files_uuid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="blob_files_old" >
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="blob_file" type="bytea" decimal="0" jt="-2" />
			<column name="blob_size" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="blob_key" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ispublic" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="blob_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DB's]]></comment>
			</column>
			<column name="blob_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="cblb_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cblb_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="filename" type="varchar" length="256" decimal="0" jt="12" />
			<column name="file_ext" type="varchar" length="12" decimal="0" jt="12" >
				<defo><![CDATA[''::character varying]]></defo>
			</column>
			<column name="isresource" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="file_name" type="varchar" length="256" decimal="0" jt="12" >
				<defo><![CDATA[''::character varying]]></defo>
				<comment><![CDATA[File Name without direcotory]]></comment>
			</column>
			<index name="blob_pk" unique="PRIMARY_KEY" >
				<column name="blob_id" />
			</index>
			<index name="blob_jguid_uk" unique="UNIQUE_KEY" >
				<column name="blob_jguid" />
			</index>
			<index name="cblb_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cblb_jguid" />
			</index>
			<index name="isresource_ndx" unique="NORMAL" options="clustered" >
				<column name="ispublic" />
			</index>
			<index name="blob_files_schemas_ndx" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="blob_files_users_ndx" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
		</table>
		<table name="computers" >
			<comment><![CDATA[This is the table of the Cloud Computers connected to the central system]]></comment>
			<column name="computer_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[Unique Server or computer id in the system]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_owner_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="computer_uk" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Unique Key ID of this computer for his owner. This is an auto-generate Key after the request to Register a new Server in the system, is a string based on 256 Character length and should uniquely identify the server in the system.]]></comment>
			</column>
			<column name="computer_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Unique computer Name]]></comment>
			</column>
			<column name="computer_key" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Encrytped computer Key to use for communications]]></comment>
			</column>
			<column name="insert_datetime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="ccmp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ccmp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_cloud_computers" unique="PRIMARY_KEY" >
				<column name="computer_id" />
			</index>
			<index name="ccmp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ccmp_jguid" />
			</index>
			<index name="idx_cloud_computers" unique="UNIQUE_KEY" >
				<column name="computer_name" />
				<column name="db_schema_id" />
			</index>
			<index name="uk_computers_keys" unique="UNIQUE_KEY" >
				<column name="computer_key" />
			</index>
			<index name="idx_computers" unique="NORMAL" >
				<column name="db_owner_id" />
			</index>
		</table>
		<table name="directories" >
			<comment><![CDATA[These are all the directories stored in a Backup Server, a directory cannot be contained into another these must be all root directories ....]]></comment>
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="computer_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[foreign key to computer]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="directory_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="directory_path" type="varchar" length="512" decimal="0" jt="12" mandatory="y" />
			<column name="directory_size" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_cloud_directories" unique="PRIMARY_KEY" >
				<column name="directory_id" />
			</index>
			<index name="idx_cloud_directories" unique="NORMAL" >
				<column name="computer_id" />
			</index>
			<fk name="fk_cloud_directories" to_schema="ergomercator.cloud" to_table="computers" >
				<fk_column name="computer_id" pk="computer_id" />
			</fk>
		</table>
		<table name="external_files" >
			<column name="external_file_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="external_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="location_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="ext_file_key" type="varchar" length="64" decimal="0" jt="12" >
				<comment><![CDATA[file_key, blob_key ed ext_file_key  hanno lo stesso valore alla prima creazione]]></comment>
			</column>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cxtf_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cxtf_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<comment><![CDATA[Unique identifier can be the same FileName as stored on an external FileSystem or Cloud Drive]]></comment>
			</column>
			<index name="pk_external_files" unique="PRIMARY_KEY" >
				<column name="external_file_id" />
			</index>
			<index name="cxtf_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cxtf_jguid" />
			</index>
			<index name="fki_db_extfiles_dbusers_fk" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_external_files" unique="NORMAL" >
				<column name="location_id" />
			</index>
			<index name="idx_external_files_0" unique="NORMAL" >
				<column name="blob_id" />
			</index>
			<fk name="fk_external_files_blob" to_schema="ergomercator.cloud" to_table="blob_files_old" >
				<fk_column name="blob_id" pk="blob_id" />
			</fk>
			<fk name="fk_external_files_locations" to_schema="ergomercator.cloud" to_table="external_locations" >
				<fk_column name="location_id" pk="location_id" />
			</fk>
		</table>
		<table name="external_locations" >
			<column name="location_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_type" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="cxtr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cxtr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_external_locations" unique="PRIMARY_KEY" >
				<column name="location_id" />
			</index>
			<index name="cxtr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cxtr_jguid" />
			</index>
		</table>
		<table name="filedirlist" >
			<comment><![CDATA[This is the table with the list of all cloud Files from one computer one user]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[database unique id]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="local_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[the local id of the file]]></comment>
			</column>
			<column name="parent_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[the unique id of the parent of the file]]></comment>
			</column>
			<column name="dir" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[Tell us if this is a Dir or not]]></comment>
			</column>
			<column name="treeorder" type="varchar" length="1024" decimal="0" jt="12" >
				<comment><![CDATA[The tree position of the node of the file in the Representation Tree.]]></comment>
			</column>
			<column name="name" type="varchar" length="512" decimal="0" jt="12" >
				<comment><![CDATA[The file name with its extension]]></comment>
			</column>
			<column name="local_location" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="description" type="varchar" length="2048" decimal="0" jt="12" >
				<comment><![CDATA[A brief description of the file content]]></comment>
			</column>
			<column name="filedatetime" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[The date of the file]]></comment>
			</column>
			<column name="fileattr" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The datafile system attribute]]></comment>
			</column>
			<column name="extension" type="varchar" length="128" decimal="0" jt="12" />
			<column name="namenoextension" type="varchar" length="512" decimal="0" jt="12" />
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="size" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="external_file_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[ID is set if the phisical datafile is stored on external disks]]></comment>
			</column>
			<column name="file_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="cfld_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cfld_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="cloud_filedirlist_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cfld_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cfld_jguid" />
			</index>
			<index name="idx_filedirlist_0" unique="NORMAL" >
				<column name="directory_id" />
			</index>
			<index name="idx_filedirlist_1" unique="NORMAL" >
				<column name="external_file_id" />
			</index>
			<fk name="fk_filedirlist_directories" to_schema="ergomercator.cloud" to_table="directories" >
				<fk_column name="directory_id" pk="directory_id" />
			</fk>
			<fk name="fk_filedirlist" to_schema="ergomercator.cloud" to_table="external_files" >
				<fk_column name="external_file_id" pk="external_file_id" />
			</fk>
		</table>
		<table name="images" >
			<column name="external_file_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="filename" type="varchar" length="512" decimal="0" jt="12" >
				<comment><![CDATA[This is the full Filename]]></comment>
			</column>
			<column name="file_ext" type="varchar" length="20" decimal="0" jt="12" />
			<column name="filename_noext" type="varchar" length="512" decimal="0" jt="12" />
			<column name="ext_file_key" type="varchar" length="64" decimal="0" jt="12" >
				<comment><![CDATA[file_key, blob_key ed ext_file_key 
hanno lo stesso valore 
alla prima creazione]]></comment>
			</column>
			<column name="cover_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="image_file" type="bytea" decimal="0" jt="-2" />
			<column name="cimg_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cimg_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_images" unique="PRIMARY_KEY" >
				<column name="external_file_id" />
			</index>
			<index name="cimg_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cimg_jguid" />
			</index>
			<index name="idx_images_0" unique="NORMAL" >
				<column name="db_owner_id" />
			</index>
		</table>
		<table name="text_files" >
			<column name="text_file_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="text_file_name" type="varchar" length="512" decimal="0" jt="12" />
			<column name="text_file_des" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="text_file" type="text" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="system_file" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="text_file_key" type="varchar" length="128" decimal="0" jt="12" />
			<column name="ctxt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ctxt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="text_files_pk" unique="PRIMARY_KEY" >
				<column name="text_file_id" />
			</index>
			<index name="ctxt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ctxt_jguid" />
			</index>
		</table>
		<table name="twilio_log" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="json_content" type="json" decimal="0" jt="2000" />
			<column name="body_received" type="text" decimal="0" jt="12" />
			<column name="action" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Web Action Called]]></comment>
			</column>
			<index name="twilio_log_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="twilio_log_old" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="json_content" type="json" decimal="0" jt="2000" />
			<column name="body_received" type="text" decimal="0" jt="12" />
			<column name="action" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Web Action Called]]></comment>
			</column>
		</table>
		<sequence name="cloud_computers_seq" options="START WITH 1" />
		<sequence name="cloud_directories_seq" options="START WITH 1" />
		<sequence name="cloud_images_blob_id_seq" options="START WITH 1" />
		<sequence name="cloud_images_seq" options="START WITH 1" />
		<sequence name="cloud_text_files_seq" options="START WITH 1" />
		<sequence name="file_seq" options="START WITH 1" />
		<sequence name="images_seq" options="START WITH 1" />
		<sequence name="twilio_log_seq" options="START WITH 1" />
		<trigger name="blob_files_bi_id_trg" table="blob_files" id="Trigger_a84" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER blob_files_bi_id_trg BEFORE INSERT ON cloud.blob_files FOR EACH ROW EXECUTE PROCEDURE cloud.blob_files_id_trg()]]></string>
		</trigger>
		<trigger name="blob_files_bi_id_trg" table="blob_files_old" id="Trigger_16a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER blob_files_bi_id_trg BEFORE INSERT ON cloud.blob_files_old FOR EACH ROW EXECUTE PROCEDURE cloud.blob_files_id_trg()]]></string>
		</trigger>
		<trigger name="cblb_bi_trg" table="blob_files" id="Trigger_16d6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cblb_bi_trg BEFORE INSERT OR UPDATE ON cloud.blob_files FOR EACH ROW EXECUTE PROCEDURE cloud.cblb_trg()]]></string>
		</trigger>
		<trigger name="cblb_bi_trg" table="blob_files_old" id="Trigger_2146" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cblb_bi_trg BEFORE INSERT OR UPDATE ON cloud.blob_files_old FOR EACH ROW EXECUTE PROCEDURE cloud.cblb_trg()]]></string>
		</trigger>
		<trigger name="ccmp_bi_trg" table="computers" id="Trigger_1ac8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ccmp_bi_trg BEFORE INSERT OR UPDATE ON cloud.computers FOR EACH ROW EXECUTE PROCEDURE cloud.ccmp_trg()]]></string>
		</trigger>
		<trigger name="cfld_bi_trg" table="filedirlist" id="Trigger_1baf" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cfld_bi_trg BEFORE INSERT OR UPDATE ON cloud.filedirlist FOR EACH ROW EXECUTE PROCEDURE cloud.cfld_trg()]]></string>
		</trigger>
		<trigger name="cimg_bi_trg" table="images" id="Trigger_fac" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cimg_bi_trg BEFORE INSERT OR UPDATE ON cloud.images FOR EACH ROW EXECUTE PROCEDURE cloud.cimg_trg()]]></string>
		</trigger>
		<trigger name="ctxt_bi_trg" table="text_files" id="Trigger_6fb" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ctxt_bi_trg BEFORE INSERT OR UPDATE ON cloud.text_files FOR EACH ROW EXECUTE PROCEDURE cloud.ctxt_trg()]]></string>
		</trigger>
		<trigger name="cxtf_bi_trg" table="external_files" id="Trigger_1c22" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cxtf_bi_trg BEFORE INSERT OR UPDATE ON cloud.external_files FOR EACH ROW EXECUTE PROCEDURE cloud.cxtf_trg()]]></string>
		</trigger>
		<trigger name="cxtr_bi_trg" table="external_locations" id="Trigger_1e37" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cxtr_bi_trg BEFORE INSERT OR UPDATE ON cloud.external_locations FOR EACH ROW EXECUTE PROCEDURE cloud.cxtr_trg()]]></string>
		</trigger>
		<trigger name="directories_biu_trg" table="directories" id="Trigger_ba3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER directories_biu_trg BEFORE INSERT OR UPDATE ON cloud.directories FOR EACH ROW EXECUTE PROCEDURE cloud.cdrc_trg()]]></string>
		</trigger>
		<trigger name="external_files_bi_id_trg" table="external_files" id="Trigger_12da" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER external_files_bi_id_trg BEFORE INSERT ON cloud.external_files FOR EACH ROW EXECUTE PROCEDURE cloud.external_files_id_trg()]]></string>
		</trigger>
		<trigger name="twilio_log_defaults_biu" table="twilio_log" id="Trigger_1fdd" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER twilio_log_defaults_biu BEFORE INSERT OR UPDATE ON cloud.twilio_log FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_defaults_trg()]]></string>
		</trigger>
		<function name="addcomputer" id="Function_2609" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.addcomputer(p_session_id bigint, p_computer_name character varying, p_computer_uk character varying)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_id );
   --RAISE NOTICE 'createpersonalschema ricerca sessione: ' || TO_CHAR(p_session_id) ;
   select count(*) into n_record from system.db_user_sessions WHERE db_session_id = p_session_id; 
   PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_id || ' trovato record: ' || n_record);
   if n_record = 1 then
        select * into a_record from system.db_user_sessions where db_session_id = p_session_id; 
 
   	select nextval('cloud.cloud_computers_seq') into i_schema_id; 
        select md5(to_char(now(), 'YYYYMMDDHH24MISSMS' || lpad( Cast(i_schema_id as character), 32, '0'))) into s_token; 
        INSERT INTO cloud.computers(
            computer_id, db_schema_id, db_owner_id, computer_uk, computer_name, computer_key, insert_datetime)
        VALUES (i_schema_id, a_record.db_schema_id, a_record.db_user_id, p_computer_uk, p_computer_name, s_token, now());
    end if; 
    return i_schema_id; 
    exception when others then 
           PERFORM system.setlog('cloud.addcomputer errore: ' || MESSAGE_TEXT); 
           return -1; 
    
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_session_id" jt="-5" type="int8" />
			<input_param name="p_computer_name" jt="12" type="varchar" />
			<input_param name="p_computer_uk" jt="12" type="varchar" />
		</function>
		<function name="addcomputerkey" id="Function_651" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.addcomputerkey(p_session_key character varying, p_computer_name character varying, p_computer_key character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  computerid bigint; 
  sessioni smallint; 
  result character varying;
begin
  PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_key );
   select system.get_session_id(p_session_key) into sessioni;
   
   if sessioni > 0 and sessioni is not null then
   
     	select cloud.addcomputer(sessioni, p_computer_name, p_computer_key ) into computerid;
	PERFORM system.setlog('creato computer id: ' || computerid );
	select computer_key into result from cloud.computers where computer_id = computerid; 
   end if; 
   return result; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_computer_name" jt="12" type="varchar" />
			<input_param name="p_computer_key" jt="12" type="varchar" />
		</function>
		<function name="addfiledir" id="Function_2369" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.addfiledir(p_id integer, p_parent_id integer, p_dir boolean, p_treeorder character varying, p_namenoext character varying, p_location character varying, p_description character varying, p_datetime date, p_attr integer, p_extension character varying, p_name character varying, p_user_id integer, p_session_key character varying, p_directory_id bigint)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  i_user_id integer; 
  n_record integer;
  a_record record; 
  s_token varchar; 
  p_session_id bigint;
begin
/*
IN p_id integer, IN p_parent_id integer, IN p_dir boolean, IN p_treeorder character varying, 
IN p_namenoext character varying, IN p_location character varying, IN p_description character varying, 
IN p_datetime date, IN p_attr integer, IN p_extension character varying, IN p_name character varying
*/
   i_user_id := -1; 
   select system.get_session_id(p_session_key)  into p_session_id; 
   if p_session_id > 0 then
      select * into a_record from system.db_user_sessions where db_session_id = p_session_id;
    else
      p_session_id := -1; 
   end if; 
   if p_session_id > 0 then
      select count(*) into n_record from cloud.filedirlist where db_schema_id = p_schema_id and local_id = p_id;
   end if; 

   if n_record = 0 then
   
	select nextval('cloud.file_seq') into i_user_id; 
	select md5(to_char(now(), 'YYYYMMDDHH24MISSMS' || lpad( Cast(i_user_id as character), 32, '0'))) into s_token;   
	insert into cloud.filedirlist
	(db_schema_id , db_owner_id , id , local_id , parent_id , dir , treeorder , name ,
	 local_location , description , filedatetime , fileattr , extension , namenoextension, file_key 
	)
	values (p_schema_id , p_user_id ,i_user_id , p_id , p_parent_id , p_dir , p_treeorder , p_namenoext ,
	 p_location , p_description , p_datetime , p_attr , p_extension , p_name, s_token );
	INSERT INTO cloud.cloud_blob_files(blob_id, blob_key, db_schema_id) VALUES (i_user_id, s_token, p_schema_id);
     end if; 
     return s_token;
  

end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
			<input_param name="p_parent_id" jt="4" type="int4" />
			<input_param name="p_dir" jt="-7" type="bool" />
			<input_param name="p_treeorder" jt="12" type="varchar" />
			<input_param name="p_namenoext" jt="12" type="varchar" />
			<input_param name="p_location" jt="12" type="varchar" />
			<input_param name="p_description" jt="12" type="varchar" />
			<input_param name="p_datetime" jt="91" type="date" />
			<input_param name="p_attr" jt="4" type="int4" />
			<input_param name="p_extension" jt="12" type="varchar" />
			<input_param name="p_name" jt="12" type="varchar" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_directory_id" jt="-5" type="int8" />
		</function>
		<function name="blob_files_id_trg" id="Function_2370" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.blob_files_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
    if New.blob_id is null then
       New.blob_id:=nextval('cloud.file_seq');
   end if;
   
   New.blob_key := system.get_key(New.blob_id,  32);
         
   if New.insert_date is null then 
      New.insert_date := now(); 
   end if; 
		 
    if New.isresource is null then new.isresource := false; end if; 
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cblb_trg" id="Function_18b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.cblb_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cblb_jguid is null then
     New.cblb_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cblb_deleted is null then
     New.cblb_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ccmp_trg" id="Function_1da3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.ccmp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ccmp_jguid is null then
     New.ccmp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ccmp_deleted is null then
     New.ccmp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cdrc_trg" id="Function_20ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.cdrc_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:= public.uuid_generate_v1mc();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cfld_trg" id="Function_2e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.cfld_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cfld_jguid is null then
     New.cfld_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cfld_deleted is null then
     New.cfld_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cimg_trg" id="Function_12e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.cimg_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cimg_jguid is null then
     New.cimg_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cimg_deleted is null then
     New.cimg_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ctxt_trg" id="Function_62b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.ctxt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ctxt_jguid is null then
     New.ctxt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ctxt_deleted is null then
     New.ctxt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cxtf_trg" id="Function_1862" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.cxtf_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cxtf_jguid is null then
     New.cxtf_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cxtf_deleted is null then
     New.cxtf_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cxtr_trg" id="Function_2387" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.cxtr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cxtr_jguid is null then
     New.cxtr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cxtr_deleted is null then
     New.cxtr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="external_files_id_trg" id="Function_2455" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.external_files_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.external_file_id is null then
          New.external_file_id:=nextval('cloud.file_seq');
      end if; 
     New.ext_file_key := system.get_key(1,  32);
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_file" id="Function_c67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.insert_file(p_guid character varying, p_filename character varying, p_file_ext character varying, p_blob_file bytea, p_db_schema integer DEFAULT 0, p_db_owner_id integer DEFAULT 0)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare	
  v_id bigint; 
begin
v_id := nextval('cloud.file_seq');
-- p_filename character varying, 
-- p_file_ext character varying, 
--  p_filename_noext character varying, 
--  p_image_file bytea, 
--   p_db_schema integer DEFAULT 0, 
--  p_db_owner_id integer DEFAULT 0
INSERT INTO cloud.blob_files(
	blob_id, blob_file, blob_size, db_schema_id,  db_user_id, ispublic, cblb_jguid, cblb_deleted, filename, file_ext)
	VALUES (v_id, P_blob_file, 0, p_db_schema, p_db_owner_id, true, p_guid, false, p_filename, p_file_ext);
--INSERT INTO cloud.images(
--	db_schema_id, db_owner_id, filename, file_ext, filename_noext, external_file_id,  image_file, cimg_jguid, cimg_deleted)
--	VALUES (p_db_schema, p_db_owner_id, p_filename,  p_file_ext, p_filename_noext, v_id,  p_image_file, p_guid, false);	
  return v_id; 	
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_guid" jt="12" type="varchar" />
			<input_param name="p_filename" jt="12" type="varchar" />
			<input_param name="p_file_ext" jt="12" type="varchar" />
			<input_param name="p_blob_file" jt="-2" type="bytea" />
			<input_param name="p_db_schema" jt="4" type="int4" />
			<input_param name="p_db_owner_id" jt="4" type="int4" />
		</function>
		<function name="insert_image" id="Function_f60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.insert_image(p_guid character varying, p_filename character varying, p_file_ext character varying, p_filename_noext character varying, p_image_file bytea, p_db_schema integer DEFAULT 0, p_db_owner_id integer DEFAULT 0)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  v_id bigint; 
begin
v_id := nextval('cloud.images_seq');
-- p_filename character varying, 
-- p_file_ext character varying, 
--  p_filename_noext character varying, 
--  p_image_file bytea, 
--   p_db_schema integer DEFAULT 0, 
--  p_db_owner_id integer DEFAULT 0
INSERT INTO cloud.images(
	db_schema_id, db_owner_id, filename, file_ext, filename_noext, external_file_id,  image_file, cimg_jguid, cimg_deleted)
	VALUES (p_db_schema, p_db_owner_id, p_filename,  p_file_ext, p_filename_noext, v_id,  p_image_file, p_guid, false);	
  return v_id; 	
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_guid" jt="12" type="varchar" />
			<input_param name="p_filename" jt="12" type="varchar" />
			<input_param name="p_file_ext" jt="12" type="varchar" />
			<input_param name="p_filename_noext" jt="12" type="varchar" />
			<input_param name="p_image_file" jt="-2" type="bytea" />
			<input_param name="p_db_schema" jt="4" type="int4" />
			<input_param name="p_db_owner_id" jt="4" type="int4" />
		</function>
		<function name="insertimage" id="Function_24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.insertimage(p_image bytea, p_filename character varying)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  v_id bigint; 
begin
  v_id:=nextval('cloud.cloud_images_seq');
  return v_id; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_image" jt="-2" type="bytea" />
			<input_param name="p_filename" jt="12" type="varchar" />
		</function>
		<function name="insertimage" id="Function_17e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.insertimage(p_image bytea, p_filename character varying, p_filenamenoext character varying, p_db_schema_id integer, p_db_owner_id integer)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  v_id bigint; 
begin
  v_id:=nextval('cloud.cloud_images_seq');
  return v_id; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_image" jt="-2" type="bytea" />
			<input_param name="p_filename" jt="12" type="varchar" />
			<input_param name="p_filenamenoext" jt="12" type="varchar" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_db_owner_id" jt="4" type="int4" />
		</function>
		<function name="insertimage" id="Function_2494" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cloud.insertimage(p_image bytea, p_filename character varying, p_filenamenoext character varying, p_db_schema_id integer, p_db_owner_id integer, p_key character varying, p_file_ext character varying)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  v_id bigint; 
begin
  v_id:=nextval('cloud.cloud_images_seq');
  
  insert into images (db_schema_id, db_owner_id, image, external_file_id, ext_file_key, filename, filename_noext, file_ext)
      values
	  (p_db_schema_id, p_db_owner_id, p_image, v_id, '', p_filename,  p_filenamenoext,  p_file_ext);
  return v_id; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_image" jt="-2" type="bytea" />
			<input_param name="p_filename" jt="12" type="varchar" />
			<input_param name="p_filenamenoext" jt="12" type="varchar" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_db_owner_id" jt="4" type="int4" />
			<input_param name="p_key" jt="12" type="varchar" />
			<input_param name="p_file_ext" jt="12" type="varchar" />
		</function>
	</schema>
	<schema name="cms" catalogname="ergomercator" >
		<comment><![CDATA[The CMS is a function that is an utilty to many other functons in the system]]></comment>
		<table name="app_languages" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="app_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="iso_code" type="varchar" length="2" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['IT'::character varying]]></defo>
			</column>
			<column name="iso_name" type="varchar" length="60" decimal="0" jt="12" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="idx_app_iso_languages" unique="NORMAL" >
				<column name="app_id" />
			</index>
			<index name="idx_app_languages" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_app_iso_languages" to_schema="ergomercator.cms" to_table="apps" >
				<fk_column name="app_id" pk="app_id" />
			</fk>
		</table>
		<table name="apps" >
			<column name="app_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[This is the unique id of the WEb App inside schema]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="app_title" type="varchar" length="60" decimal="0" jt="12" mandatory="y" />
			<column name="app_iconfile" type="varchar" length="256" decimal="0" jt="12" />
			<column name="app_icon" type="bytea" decimal="0" jt="-2" />
			<column name="pp_intro" type="bytea" decimal="0" jt="-2" />
			<column name="default_language" type="varchar" length="3" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['IT'::character varying]]></defo>
				<comment><![CDATA[This is the default language]]></comment>
			</column>
			<column name="default_culture" type="varchar" length="5" decimal="0" jt="12" />
			<column name="main_language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="cpps_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cpps_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="apps_pk" unique="PRIMARY_KEY" >
				<column name="app_id" />
			</index>
			<index name="cpps_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cpps_jguid" />
			</index>
			<index name="idx_apps" unique="NORMAL" >
				<column name="main_language_id" />
			</index>
		</table>
		<table name="arguments" >
			<column name="argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="main_argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="argument_des" type="varchar" length="512" decimal="0" jt="12" />
			<column name="code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="carg_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="carg_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="arguments_pk" unique="PRIMARY_KEY" >
				<column name="argument_id" />
			</index>
			<index name="carg_jguid_uk" unique="UNIQUE_KEY" >
				<column name="carg_jguid" />
			</index>
			<fk name="arguments_main_fk" to_schema="ergomercator.cms" to_table="main_arguments" >
				<fk_column name="main_argument_id" pk="main_argument_id" />
			</fk>
		</table>
		<table name="arguments_groups" >
			<column name="main_argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="crgm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="crgm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="web_arguments_groups_pk" unique="PRIMARY_KEY" >
				<column name="main_argument_id" />
				<column name="group_id" />
			</index>
			<index name="crgm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="crgm_jguid" />
			</index>
			<index name="idx_arguments_groups" unique="NORMAL" >
				<column name="main_argument_id" />
			</index>
			<fk name="fk_arguments_groups" to_schema="ergomercator.cms" to_table="main_arguments" >
				<fk_column name="main_argument_id" pk="main_argument_id" />
			</fk>
		</table>
		<table name="arguments_roles" >
			<column name="main_argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_user_role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="crgr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="crgr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="main_arg_roles_pk" unique="PRIMARY_KEY" >
				<column name="main_argument_id" />
				<column name="db_user_role_id" />
			</index>
			<index name="crgr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="crgr_jguid" />
			</index>
			<index name="idx_arguments_roles" unique="NORMAL" >
				<column name="main_argument_id" />
			</index>
			<index name="idx_arguments_roles_0" unique="NORMAL" >
				<column name="db_user_role_id" />
			</index>
			<index name="idx_arguments_roles_1" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="argroles_mainargs_fk" to_schema="ergomercator.cms" to_table="main_arguments" update_action="cascade" >
				<fk_column name="main_argument_id" pk="main_argument_id" />
			</fk>
		</table>
		<table name="articles" >
			<column name="article_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[unique identifier]]></comment>
			</column>
			<column name="title" type="varchar" length="512" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Short Article]]></comment>
			</column>
			<column name="abstract" type="varchar" length="4000" decimal="0" jt="12" mandatory="y" />
			<column name="author_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="text" type="text" decimal="0" jt="12" />
			<column name="datetime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="external_link" type="varchar" length="512" decimal="0" jt="12" />
			<column name="image" type="bytea" decimal="0" jt="-2" />
			<column name="shorttext" type="varchar" length="4000" decimal="0" jt="12" />
			<column name="main_argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="argument_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="sub_argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="specification_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="article_key" type="varchar" length="64" decimal="0" jt="12" >
				<comment><![CDATA[Chiave unica per esempio per assegnare un URL all'articolo ?]]></comment>
			</column>
			<column name="image_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[foreign key to languages in jpublic tables]]></comment>
			</column>
			<column name="feed_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="crtc_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="crtc_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="main_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="main_attach_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="thumb_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="article" type="bytea" decimal="0" jt="-2" />
			<column name="expiry_date" type="date" length="13" decimal="0" jt="91" />
			<column name="state" type="smallint" length="5" decimal="0" jt="5" />
			<column name="hasimage" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="hasattach" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="attachment" type="bytea" decimal="0" jt="-2" />
			<column name="imagetext" type="text" decimal="0" jt="12" />
			<column name="main_attach_zip_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="web_articles_pk" unique="PRIMARY_KEY" >
				<column name="article_id" />
			</index>
			<index name="crtc_jguid_uk" unique="UNIQUE_KEY" >
				<column name="crtc_jguid" />
			</index>
			<index name="fki_articles_languages_fk" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="fki_articles_main_arguments_fk" unique="NORMAL" >
				<column name="main_argument_id" />
			</index>
			<index name="idx_articles" unique="NORMAL" >
				<column name="specification_id" />
			</index>
			<index name="idx_articles_0" unique="NORMAL" >
				<column name="author_id" />
			</index>
			<fk name="articles_main_arguments_fk" to_schema="ergomercator.cms" to_table="main_arguments" >
				<fk_column name="main_argument_id" pk="main_argument_id" />
			</fk>
		</table>
		<table name="events" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="fromdate" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="todate" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="image" type="bytea" decimal="0" jt="-2" />
			<column name="content" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="website" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<index name="events_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="graphic_menu" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="img_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="img_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="css_template" type="text" decimal="0" jt="12" />
			<column name="template" type="text" decimal="0" jt="12" />
			<column name="row_template" type="text" decimal="0" jt="12" />
			<column name="group_template" type="text" decimal="0" jt="12" />
			<column name="cgrm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cgrm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="graphic_menu_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cgrm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cgrm_jguid" />
			</index>
		</table>
		<table name="graphic_menu_groups" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="css_class" type="varchar" length="128" decimal="0" jt="12" />
			<column name="css_color" type="varchar" length="20" decimal="0" jt="12" />
			<column name="menu_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cgrg_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cgrg_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="graphic_menu_groups_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cgrg_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cgrg_jguid" />
			</index>
			<fk name="graphics_menu_groups_fk" to_schema="ergomercator.cms" to_table="graphic_menu" >
				<fk_column name="menu_id" pk="id" />
			</fk>
		</table>
		<table name="graphic_menu_rows" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="title" type="varchar" length="256" decimal="0" jt="12" />
			<column name="group_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="img_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="img_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cgrp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cgrp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="graphic_menu_rows_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cgrp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cgrp_jguid" />
			</index>
		</table>
		<table name="main_arguments" >
			<column name="main_argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="main_argument_des" type="varchar" length="512" decimal="0" jt="12" mandatory="y" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cmar_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cmar_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="ma_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="mainargs_pk" unique="PRIMARY_KEY" >
				<column name="main_argument_id" />
			</index>
			<index name="cmar_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cmar_jguid" />
			</index>
		</table>
		<table name="menu" >
			<column name="menu_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Menu Identificator]]></comment>
			</column>
			<column name="menu_level" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Hierarchy of the Menu]]></comment>
			</column>
			<column name="menu_title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['Main Menu'::character varying]]></defo>
				<comment><![CDATA[The title of the menu]]></comment>
			</column>
			<column name="menu_parent_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Parent, is null for Main menu or itself]]></comment>
			</column>
			<column name="menu_page_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[The Model of the Page]]></comment>
			</column>
			<column name="app_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[This is the unique id of the WEb App inside schema]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cmn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cmn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="menu_pk" unique="PRIMARY_KEY" >
				<column name="menu_id" />
			</index>
			<index name="cmn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cmn_jguid" />
			</index>
			<index name="pk_menu" unique="UNIQUE_KEY" >
				<column name="menu_page_id" />
			</index>
			<index name="idx_menu" unique="NORMAL" >
				<column name="app_id" />
			</index>
			<fk name="fk_menu_apps" to_schema="ergomercator.cms" to_table="apps" >
				<fk_column name="app_id" pk="app_id" />
			</fk>
		</table>
		<table name="menu_items" >
			<column name="item_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[the unique id]]></comment>
			</column>
			<column name="menu_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Foreign Key to Main Menu]]></comment>
			</column>
			<column name="item_pos" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[position of the item]]></comment>
			</column>
			<column name="item_title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The Title of Menu Item]]></comment>
			</column>
			<column name="item_text" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The Item Text]]></comment>
			</column>
			<column name="item_image" type="bytea" decimal="0" jt="-2" />
			<column name="img_filename" type="varchar" length="256" decimal="0" jt="12" />
			<column name="item_page_target" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[The Target Page of Items]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cmni_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cmni_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="menu_items_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
			</index>
			<index name="cmni_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cmni_jguid" />
			</index>
			<index name="idx_menu_items" unique="NORMAL" >
				<column name="menu_id" />
			</index>
			<fk name="fk_menu_items" to_schema="ergomercator.cms" to_table="menu" >
				<fk_column name="menu_id" pk="menu_id" />
			</fk>
		</table>
		<table name="menu_items_t" >
			<column name="item_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="language_code" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="menu_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="item_title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="item_text" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cmnt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cmnt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="menu_items_t_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
				<column name="language_code" />
			</index>
			<index name="cmnt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cmnt_jguid" />
			</index>
			<index name="idx_menu_items_t" unique="NORMAL" >
				<column name="item_id" />
			</index>
			<index name="idx_menu_items_t_0" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_menu_items_t" to_schema="ergomercator.cms" to_table="menu_items" >
				<fk_column name="item_id" pk="item_id" />
			</fk>
		</table>
		<table name="news" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="newsdate" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="image" type="bytea" decimal="0" jt="-2" />
			<column name="content" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="webpage" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="imagetext" type="text" decimal="0" jt="12" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="news_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="news_type_id_ndx" unique="NORMAL" >
				<column name="type_id" />
			</index>
			<fk name="news_types_fk" to_schema="ergomercator.cms" to_table="news_types" >
				<fk_column name="type_id" pk="type_id" />
			</fk>
		</table>
		<table name="news_types" >
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="type_des" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="news_types_pkey" unique="PRIMARY_KEY" >
				<column name="type_id" />
			</index>
		</table>
		<table name="pages" >
			<column name="page_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Pk for web Pages]]></comment>
			</column>
			<column name="page_title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="page_text" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Web Page Text]]></comment>
			</column>
			<column name="page_description" type="varchar" length="512" decimal="0" jt="12" />
			<column name="page_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Web Pages Types]]></comment>
			</column>
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="menu_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="page_short" type="varchar" length="60" decimal="0" jt="12" >
				<comment><![CDATA[Web Page Short Title]]></comment>
			</column>
			<column name="main_language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cpgp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cpgp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pages_pk" unique="PRIMARY_KEY" >
				<column name="page_id" />
			</index>
			<index name="cpgp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cpgp_jguid" />
			</index>
			<index name="pk_pages" unique="UNIQUE_KEY" >
				<column name="page_type_id" />
			</index>
			<index name="idx_pages" unique="NORMAL" >
				<column name="an_group_id" />
			</index>
			<index name="idx_pages_0" unique="NORMAL" >
				<column name="menu_id" />
			</index>
			<fk name="fk_pages_menu" to_schema="ergomercator.cms" to_table="menu" >
				<fk_column name="menu_id" pk="menu_id" />
			</fk>
			<fk name="fk_pages_menus" to_schema="ergomercator.cms" to_table="menu" >
				<fk_column name="page_id" pk="menu_page_id" />
			</fk>
		</table>
		<table name="pages_t" >
			<column name="page_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Pk for web Pages]]></comment>
			</column>
			<column name="page_title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="page_text" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Web Page Text]]></comment>
			</column>
			<column name="page_description" type="varchar" length="512" decimal="0" jt="12" />
			<column name="page_short" type="varchar" length="60" decimal="0" jt="12" >
				<comment><![CDATA[Web Page Short Title]]></comment>
			</column>
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cpgt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cpgt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pages_pk_0" unique="PRIMARY_KEY" >
				<column name="page_id" />
			</index>
			<index name="cpgt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cpgt_jguid" />
			</index>
			<index name="idx_pages_t" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_pages_t" to_schema="ergomercator.cms" to_table="pages" >
				<fk_column name="page_id" pk="page_id" />
			</fk>
		</table>
		<table name="pages_types" >
			<comment><![CDATA[This tables is part of the system Tables, is not readable or writeable by users that are NOT administrators. So is Published Read-Only to applications and Read Write in DB Schema Setup Applications]]></comment>
			<column name="page_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="page_type_description" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cpgs_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cpgs_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="page_type_pk" unique="PRIMARY_KEY" >
				<column name="page_type_id" />
			</index>
			<index name="cpgs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cpgs_jguid" />
			</index>
			<fk name="fk_pages_types" to_schema="ergomercator.cms" to_table="pages" >
				<fk_column name="page_type_id" pk="page_type_id" />
			</fk>
		</table>
		<table name="rss_articles" >
			<column name="article_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="feed_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="title" type="varchar" length="512" decimal="0" jt="12" />
			<column name="description" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="link" type="varchar" length="512" decimal="0" jt="12" />
			<column name="text" type="text" decimal="0" jt="12" />
			<column name="date" type="date" length="13" decimal="0" jt="91" />
			<column name="image" type="varchar" length="512" decimal="0" jt="12" />
			<column name="author" type="varchar" length="512" decimal="0" jt="12" />
			<column name="sent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="crsa_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="crsa_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="rss_articles_pk" unique="PRIMARY_KEY" >
				<column name="article_id" />
			</index>
			<index name="crsa_jguid_uk" unique="UNIQUE_KEY" >
				<column name="crsa_jguid" />
			</index>
			<index name="rss_articles_feed_ndx" unique="NORMAL" >
				<column name="sent" />
			</index>
			<index name="rss_articles_feeds_fk_ndx" unique="NORMAL" >
				<column name="feed_id" />
			</index>
		</table>
		<table name="rss_feeds" >
			<column name="feed_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="url" type="varchar" length="1024" decimal="0" jt="12" mandatory="y" />
			<column name="tag_title" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tag_description" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tag_link" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tag_text" type="varchar" length="60" decimal="0" jt="12" />
			<column name="tag_date" type="varchar" length="60" decimal="0" jt="12" />
			<column name="tag_image" type="varchar" length="60" decimal="0" jt="12" />
			<column name="tag_author" type="varchar" length="60" decimal="0" jt="12" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="title" type="varchar" length="512" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="main_argument_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="argument_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="sub_argument_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="crsf_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="crsf_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="rss_feeds_pk" unique="PRIMARY_KEY" >
				<column name="feed_id" />
			</index>
			<index name="crsf_jguid_uk" unique="UNIQUE_KEY" >
				<column name="crsf_jguid" />
			</index>
			<index name="rss_feed_country_fk_ndx" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<index name="rss_feeds_language_fk_ndx" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="rssfeeds_dbschema_id_ndx" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
		</table>
		<table name="session_logs" >
			<column name="session_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="insert_date" type="_timestamp" length="29" decimal="6" jt="2003" />
			<column name="logtype" type="varchar" length="20" decimal="0" jt="12" />
			<column name="log" type="varchar" length="1024" decimal="0" jt="12" />
			<fk name="session_logs_essions_fk" to_schema="ergomercator.cms" to_table="sessions" >
				<fk_column name="session_id" pk="session_id" />
			</fk>
		</table>
		<table name="sessions" >
			<column name="session_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="ip" type="varchar" length="16" decimal="0" jt="12" />
			<column name="host" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_agent" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="csss_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="csss_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="sessions_pk" unique="PRIMARY_KEY" >
				<column name="session_id" />
			</index>
			<index name="csss_jguid_uk" unique="UNIQUE_KEY" >
				<column name="csss_jguid" />
			</index>
		</table>
		<table name="specifications" >
			<column name="specification_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="sub_argument_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="specification_des" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cspc_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cspc_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_specifications" unique="PRIMARY_KEY" >
				<column name="specification_id" />
			</index>
			<index name="cspc_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cspc_jguid" />
			</index>
			<index name="idx_specifications" unique="NORMAL" >
				<column name="sub_argument_id" />
			</index>
			<fk name="fk_specifications" to_schema="ergomercator.cms" to_table="sub_arguments" >
				<fk_column name="sub_argument_id" pk="sub_argument_id" />
			</fk>
		</table>
		<table name="sub_arguments" >
			<column name="sub_argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="sub_argument_des" type="varchar" length="512" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="csbr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="csbr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="sub_arguments_pk" unique="PRIMARY_KEY" >
				<column name="sub_argument_id" />
			</index>
			<index name="csbr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="csbr_jguid" />
			</index>
			<index name="idx_sub_arguments" unique="NORMAL" >
				<column name="argument_id" />
			</index>
			<fk name="sub_arguments_arguments_fk" to_schema="ergomercator.cms" to_table="arguments" >
				<fk_column name="argument_id" pk="argument_id" />
			</fk>
		</table>
		<table name="templates" >
			<column name="template_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="theme_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[This is the External Key to theme ID]]></comment>
			</column>
			<column name="template_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="template_type" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign Key to template Types]]></comment>
			</column>
			<column name="website_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="head" type="text" decimal="0" jt="12" />
			<column name="header" type="text" decimal="0" jt="12" />
			<column name="js" type="text" decimal="0" jt="12" />
			<column name="scripts" type="text" decimal="0" jt="12" />
			<column name="footer" type="text" decimal="0" jt="12" />
			<column name="ctmt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ctmt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="templates_pk" unique="PRIMARY_KEY" >
				<column name="template_id" />
			</index>
			<index name="ctmt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ctmt_jguid" />
			</index>
			<index name="fki_templates_websites_fk" unique="NORMAL" >
				<column name="website_id" />
			</index>
			<fk name="templates_websites_fk" to_schema="ergomercator.cms" to_table="web_sites" >
				<fk_column name="website_id" pk="website_id" />
			</fk>
		</table>
		<table name="templates_pages" >
			<comment><![CDATA[Tabella che include i Modelli standard per determinate pagine o tipi di Pagina, nel caso di Applicazioni può anche trattarsi di una pagin unica, templates_pages è un contenitore come una cartella all'interno del Template medesimo.]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Template Page ID]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[chiave esterna verso lo schema di riferimento]]></comment>
			</column>
			<column name="page_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Nome unico per il template pagina all'interno del template

Ovviamente può anche essere il template della home page]]></comment>
			</column>
			<column name="body" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Testo del Corpo della Pagina]]></comment>
			</column>
			<column name="html" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Html Template Text della pagina]]></comment>
			</column>
			<column name="js" type="text" decimal="0" jt="12" />
			<column name="template_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="css" type="text" decimal="0" jt="12" />
			<column name="head" type="text" decimal="0" jt="12" />
			<column name="ctmp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ctmp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="template_pages_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="ctmp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ctmp_jguid" />
			</index>
		</table>
		<table name="themes" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[foreign key to schema]]></comment>
			</column>
			<column name="name" type="varchar" decimal="0" jt="12" />
			<column name="head" type="text" decimal="0" jt="12" />
			<column name="header" type="text" decimal="0" jt="12" />
			<column name="js" type="text" decimal="0" jt="12" />
			<column name="scripts" type="text" decimal="0" jt="12" />
			<column name="footer" type="text" decimal="0" jt="12" />
			<column name="ctht_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ctht_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="themes_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="ctht_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ctht_jguid" />
			</index>
		</table>
		<table name="themes_pages" >
			<comment><![CDATA[Tabella che include i Modelli standard per determinate pagine o tipi di Pagina, nel caso di Applicazioni può anche trattarsi di una pagin unica, templates_pages è un contenitore come una cartella all'interno del Template medesimo.]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Template Page ID]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[chiave esterna verso lo schema di riferimento]]></comment>
			</column>
			<column name="page_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Nome unico per il template pagina all'interno del template

Ovviamente può anche essere il template della home page]]></comment>
			</column>
			<column name="body" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Testo del Corpo della Pagina]]></comment>
			</column>
			<column name="html" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Html Template Text della pagina]]></comment>
			</column>
			<column name="js" type="text" decimal="0" jt="12" />
			<column name="theme_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="css" type="text" decimal="0" jt="12" />
			<column name="head" type="text" decimal="0" jt="12" />
			<column name="cthm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cthm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="themes_pages_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cthm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cthm_jguid" />
			</index>
		</table>
		<table name="web_menus" >
			<column name="web_menu_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[id unico del web menu numero intero]]></comment>
			</column>
			<column name="web_site_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="web_menu_order" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[ordine eventuale della voce nei menu]]></comment>
			</column>
			<column name="web_menu_title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Titolo del web Menu]]></comment>
			</column>
			<column name="web_menu_text" type="varchar" length="4000" decimal="0" jt="12" >
				<comment><![CDATA[Testo del web Menu (solitamente testo html) della pagina collegata se esiste]]></comment>
			</column>
			<column name="web_menu_subtitle" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Sottotitolo del menu compare in lista o in hint]]></comment>
			</column>
			<column name="web_menu_img" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[immagine per web app del menu]]></comment>
			</column>
			<column name="web_menu_page_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Pagina Web legata al web Menu]]></comment>
			</column>
			<column name="web_menu_img_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[id Immagine del Menu per Ricerca]]></comment>
			</column>
			<column name="web_menu_main_img_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[id Immagine 'rappresentativa' del web menu]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[id schema di riferimento fk a db schemas]]></comment>
			</column>
		</table>
		<table name="web_sites" >
			<column name="website_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="website_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="website_key" type="char" length="64" decimal="0" jt="1" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cwbs_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cwbs_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="web_sites_pk" unique="PRIMARY_KEY" >
				<column name="website_id" />
			</index>
			<index name="cwbs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cwbs_jguid" />
			</index>
			<index name="web_sites_uk" unique="UNIQUE_KEY" >
				<column name="website_url" />
			</index>
		</table>
		<table name="webitems_pictures" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="picture_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="short_descritpion" type="varchar" length="512" decimal="0" jt="12" />
			<column name="long_description" type="text" decimal="0" jt="12" />
			<column name="seo_title" type="varchar" length="140" decimal="0" jt="12" />
			<column name="seo_description" type="varchar" length="512" decimal="0" jt="12" />
			<column name="seo_tags" type="varchar" length="512" decimal="0" jt="12" />
			<column name="seo_target" type="varchar" length="128" decimal="0" jt="12" />
			<column name="cwbt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="cwbt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="webitems_pictures_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
				<column name="picture_id" />
			</index>
			<index name="cwbt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="cwbt_jguid" />
			</index>
			<index name="idx_webitems_pictures" unique="NORMAL" >
				<column name="item_id" />
			</index>
		</table>
		<sequence name="apps_seq" options="START WITH 1" />
		<sequence name="arguments_seq" options="START WITH 1" />
		<sequence name="articles_seq" options="START WITH 1" />
		<sequence name="events_seq" options="START WITH 1" />
		<sequence name="graphic_menu_groups_seq" options="START WITH 1" />
		<sequence name="graphic_menu_rows_seq" options="START WITH 1" />
		<sequence name="graphic_menus_seq" options="START WITH 1" />
		<sequence name="main_arguments_seq" options="START WITH 1" />
		<sequence name="menu_seq" options="START WITH 1" />
		<sequence name="news_seq" options="START WITH 1" />
		<sequence name="rssarticles_seq" options="START WITH 1" />
		<sequence name="rssfeed_seq" options="START WITH 1" />
		<sequence name="sessions_seq" options="START WITH 1" />
		<sequence name="sub_arguments_seq" options="START WITH 1" />
		<sequence name="templates_seq" options="START WITH 1" />
		<sequence name="themes_seq" options="START WITH 1" />
		<sequence name="web_sites_seq" options="START WITH 1" />
		<trigger name="arguments_id_bi_trg" table="arguments" id="Trigger_2518" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER arguments_id_bi_trg BEFORE INSERT ON cms.arguments FOR EACH ROW EXECUTE PROCEDURE cms.get_argument_id()]]></string>
		</trigger>
		<trigger name="carg_bi_trg" table="arguments" id="Trigger_8b2" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER carg_bi_trg BEFORE INSERT OR UPDATE ON cms.arguments FOR EACH ROW EXECUTE PROCEDURE cms.carg_trg()]]></string>
		</trigger>
		<trigger name="cgrg_bi_trg" table="graphic_menu_groups" id="Trigger_1b88" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cgrg_bi_trg BEFORE INSERT OR UPDATE ON cms.graphic_menu_groups FOR EACH ROW EXECUTE PROCEDURE cms.cgrg_trg()]]></string>
		</trigger>
		<trigger name="cgrm_bi_trg" table="graphic_menu" id="Trigger_2657" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cgrm_bi_trg BEFORE INSERT OR UPDATE ON cms.graphic_menu FOR EACH ROW EXECUTE PROCEDURE cms.cgrm_trg()]]></string>
		</trigger>
		<trigger name="cgrp_bi_trg" table="graphic_menu_rows" id="Trigger_1e4c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cgrp_bi_trg BEFORE INSERT OR UPDATE ON cms.graphic_menu_rows FOR EACH ROW EXECUTE PROCEDURE cms.cgrp_trg()]]></string>
		</trigger>
		<trigger name="cmar_bi_trg" table="main_arguments" id="Trigger_1a33" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cmar_bi_trg BEFORE INSERT OR UPDATE ON cms.main_arguments FOR EACH ROW EXECUTE PROCEDURE cms.cmar_trg()]]></string>
		</trigger>
		<trigger name="cmn_bi_trg" table="menu" id="Trigger_398" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cmn_bi_trg BEFORE INSERT OR UPDATE ON cms.menu FOR EACH ROW EXECUTE PROCEDURE cms.cmn_trg()]]></string>
		</trigger>
		<trigger name="cmni_bi_trg" table="menu_items" id="Trigger_1edb" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cmni_bi_trg BEFORE INSERT OR UPDATE ON cms.menu_items FOR EACH ROW EXECUTE PROCEDURE cms.cmni_trg()]]></string>
		</trigger>
		<trigger name="cmnt_bi_trg" table="menu_items_t" id="Trigger_15ec" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cmnt_bi_trg BEFORE INSERT OR UPDATE ON cms.menu_items_t FOR EACH ROW EXECUTE PROCEDURE cms.cmnt_trg()]]></string>
		</trigger>
		<trigger name="cpgp_bi_trg" table="pages" id="Trigger_d36" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cpgp_bi_trg BEFORE INSERT OR UPDATE ON cms.pages FOR EACH ROW EXECUTE PROCEDURE cms.cpgp_trg()]]></string>
		</trigger>
		<trigger name="cpgs_bi_trg" table="pages_types" id="Trigger_1538" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cpgs_bi_trg BEFORE INSERT OR UPDATE ON cms.pages_types FOR EACH ROW EXECUTE PROCEDURE cms.cpgs_trg()]]></string>
		</trigger>
		<trigger name="cpgt_bi_trg" table="pages_t" id="Trigger_1086" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cpgt_bi_trg BEFORE INSERT OR UPDATE ON cms.pages_t FOR EACH ROW EXECUTE PROCEDURE cms.cpgt_trg()]]></string>
		</trigger>
		<trigger name="cpps_bi_trg" table="apps" id="Trigger_52e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cpps_bi_trg BEFORE INSERT OR UPDATE ON cms.apps FOR EACH ROW EXECUTE PROCEDURE cms.cpps_trg()]]></string>
		</trigger>
		<trigger name="crgm_bi_trg" table="arguments_groups" id="Trigger_1e0d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER crgm_bi_trg BEFORE INSERT OR UPDATE ON cms.arguments_groups FOR EACH ROW EXECUTE PROCEDURE cms.crgm_trg()]]></string>
		</trigger>
		<trigger name="crgr_bi_trg" table="arguments_roles" id="Trigger_1653" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER crgr_bi_trg BEFORE INSERT OR UPDATE ON cms.arguments_roles FOR EACH ROW EXECUTE PROCEDURE cms.crgr_trg()]]></string>
		</trigger>
		<trigger name="crsa_bi_trg" table="rss_articles" id="Trigger_2402" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER crsa_bi_trg BEFORE INSERT OR UPDATE ON cms.rss_articles FOR EACH ROW EXECUTE PROCEDURE cms.crsa_trg()]]></string>
		</trigger>
		<trigger name="crsf_bi_trg" table="rss_feeds" id="Trigger_1e1e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER crsf_bi_trg BEFORE INSERT OR UPDATE ON cms.rss_feeds FOR EACH ROW EXECUTE PROCEDURE cms.crsf_trg()]]></string>
		</trigger>
		<trigger name="crtc_bi_trg" table="articles" id="Trigger_1332" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER crtc_bi_trg BEFORE INSERT OR UPDATE ON cms.articles FOR EACH ROW EXECUTE PROCEDURE cms.crtc_trg()]]></string>
		</trigger>
		<trigger name="csbr_bi_trg" table="sub_arguments" id="Trigger_2033" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER csbr_bi_trg BEFORE INSERT OR UPDATE ON cms.sub_arguments FOR EACH ROW EXECUTE PROCEDURE cms.csbr_trg()]]></string>
		</trigger>
		<trigger name="cspc_bi_trg" table="specifications" id="Trigger_1b8a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cspc_bi_trg BEFORE INSERT OR UPDATE ON cms.specifications FOR EACH ROW EXECUTE PROCEDURE cms.cspc_trg()]]></string>
		</trigger>
		<trigger name="csss_bi_trg" table="sessions" id="Trigger_21e1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER csss_bi_trg BEFORE INSERT OR UPDATE ON cms.sessions FOR EACH ROW EXECUTE PROCEDURE cms.csss_trg()]]></string>
		</trigger>
		<trigger name="cthm_bi_trg" table="themes_pages" id="Trigger_1fa2" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cthm_bi_trg BEFORE INSERT OR UPDATE ON cms.themes_pages FOR EACH ROW EXECUTE PROCEDURE cms.cthm_trg()]]></string>
		</trigger>
		<trigger name="ctht_bi_trg" table="themes" id="Trigger_1a6a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ctht_bi_trg BEFORE INSERT OR UPDATE ON cms.themes FOR EACH ROW EXECUTE PROCEDURE cms.ctht_trg()]]></string>
		</trigger>
		<trigger name="ctmp_bi_trg" table="templates_pages" id="Trigger_e22" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ctmp_bi_trg BEFORE INSERT OR UPDATE ON cms.templates_pages FOR EACH ROW EXECUTE PROCEDURE cms.ctmp_trg()]]></string>
		</trigger>
		<trigger name="ctmt_bi_trg" table="templates" id="Trigger_2622" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ctmt_bi_trg BEFORE INSERT OR UPDATE ON cms.templates FOR EACH ROW EXECUTE PROCEDURE cms.ctmt_trg()]]></string>
		</trigger>
		<trigger name="cwbs_bi_trg" table="web_sites" id="Trigger_168" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cwbs_bi_trg BEFORE INSERT OR UPDATE ON cms.web_sites FOR EACH ROW EXECUTE PROCEDURE cms.cwbs_trg()]]></string>
		</trigger>
		<trigger name="cwbt_bi_trg" table="webitems_pictures" id="Trigger_1c14" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER cwbt_bi_trg BEFORE INSERT OR UPDATE ON cms.webitems_pictures FOR EACH ROW EXECUTE PROCEDURE cms.cwbt_trg()]]></string>
		</trigger>
		<trigger name="events_id_bi_trg" table="events" id="Trigger_1547" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER events_id_bi_trg BEFORE INSERT ON cms.events FOR EACH ROW EXECUTE PROCEDURE cms.get_events_id()]]></string>
		</trigger>
		<trigger name="graphic_menu_id_bi_trg" table="graphic_menu" id="Trigger_7fd" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER graphic_menu_id_bi_trg BEFORE INSERT ON cms.graphic_menu FOR EACH ROW EXECUTE PROCEDURE cms.get_graphimenuid()]]></string>
		</trigger>
		<trigger name="graphic_menu_rows_id_bi_trg" table="graphic_menu_rows" id="Trigger_eb2" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER graphic_menu_rows_id_bi_trg BEFORE INSERT ON cms.graphic_menu_rows FOR EACH ROW EXECUTE PROCEDURE cms.get_graphimenurowid()]]></string>
		</trigger>
		<trigger name="news_id_bi_trg" table="news" id="Trigger_7bf" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER news_id_bi_trg BEFORE INSERT ON cms.news FOR EACH ROW EXECUTE PROCEDURE cms.get_news_id()]]></string>
		</trigger>
		<trigger name="rss_feeds_bi_rtg" table="rss_feeds" id="Trigger_14" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER rss_feeds_bi_rtg BEFORE INSERT ON cms.rss_feeds FOR EACH ROW EXECUTE PROCEDURE cms.get_rss_feed_id()]]></string>
		</trigger>
		<trigger name="sub_arguments_id_bi_trg" table="sub_arguments" id="Trigger_f50" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sub_arguments_id_bi_trg BEFORE INSERT ON cms.sub_arguments FOR EACH ROW EXECUTE PROCEDURE cms.get_sub_argument_id()]]></string>
		</trigger>
		<trigger name="web_sites_id_bi_trg" table="web_sites" id="Trigger_1ac9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER web_sites_id_bi_trg BEFORE INSERT OR UPDATE ON cms.web_sites FOR EACH ROW EXECUTE PROCEDURE cms.get_website_id()]]></string>
		</trigger>
		<function name="articles_ins" id="Function_1c71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.articles_ins(in_article_id bigint, in_title text, in_abstract text, in_author_id integer, in_text text, in_datetime timestamp with time zone, in_external_link character varying, in_image_url character varying, in_shorttext text, in_main_argument_id integer, in_argument_id integer, in_sub_argument_id integer, in_specification_id integer, in_article_key character varying, in_isfeed boolean, in_language_id smallint, in_feed_id integer)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
   vArticle_id bigint; 
   vkey  character varying (64);
begin
    if in_ARTICLE_ID is null or in_ARTICLE_ID = 0 then
       select nextval('cms.articles_seq') into vArticle_id;
    else
       vArticle_id := in_ARTICLE_ID;
    end if; 
    if in_article_key is null or in_article_key = '' then
       select system.get_key ( vArticle_id, 32) into vKey;
    else
	vKey := in_article_key; 
    end if; 

    
INSERT INTO cms.articles(
            article_id, title, abstract, author_id, text, datetime, external_link, 
            image_url, shorttext, main_argument_id, argument_id, sub_argument_id, 
            specification_id, article_key, language_id, feed_id)
            
    VALUES (vArticle_id, in_title, in_abstract, in_author_id, in_text, in_datetime, in_external_link, 
            in_image_url, in_shorttext, in_main_argument_id, in_argument_id, in_sub_argument_id, 
            in_specification_id, vKey, in_language_id, in_feed_id );

   return vArticle_id; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="in_article_id" jt="-5" type="int8" />
			<input_param name="in_title" jt="12" type="text" />
			<input_param name="in_abstract" jt="12" type="text" />
			<input_param name="in_author_id" jt="4" type="int4" />
			<input_param name="in_text" jt="12" type="text" />
			<input_param name="in_datetime" jt="93" type="timestamptz" />
			<input_param name="in_external_link" jt="12" type="varchar" />
			<input_param name="in_image_url" jt="12" type="varchar" />
			<input_param name="in_shorttext" jt="12" type="text" />
			<input_param name="in_main_argument_id" jt="4" type="int4" />
			<input_param name="in_argument_id" jt="4" type="int4" />
			<input_param name="in_sub_argument_id" jt="4" type="int4" />
			<input_param name="in_specification_id" jt="4" type="int4" />
			<input_param name="in_article_key" jt="12" type="varchar" />
			<input_param name="in_isfeed" jt="-7" type="bool" />
			<input_param name="in_language_id" jt="5" type="int2" />
			<input_param name="in_feed_id" jt="4" type="int4" />
		</function>
		<function name="carg_trg" id="Function_1d9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.carg_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.carg_jguid is null then
     New.carg_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.carg_deleted is null then
     New.carg_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cgrg_trg" id="Function_758" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cgrg_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cgrg_jguid is null then
     New.cgrg_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cgrg_deleted is null then
     New.cgrg_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cgrm_trg" id="Function_1947" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cgrm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cgrm_jguid is null then
     New.cgrm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cgrm_deleted is null then
     New.cgrm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cgrp_trg" id="Function_2dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cgrp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cgrp_jguid is null then
     New.cgrp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cgrp_deleted is null then
     New.cgrp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cmar_trg" id="Function_f6e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cmar_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cmar_jguid is null then
     New.cmar_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cmar_deleted is null then
     New.cmar_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cmn_trg" id="Function_ddf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cmn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cmn_jguid is null then
     New.cmn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cmn_deleted is null then
     New.cmn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cmni_trg" id="Function_2b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cmni_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cmni_jguid is null then
     New.cmni_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cmni_deleted is null then
     New.cmni_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cmnt_trg" id="Function_1db5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cmnt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cmnt_jguid is null then
     New.cmnt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cmnt_deleted is null then
     New.cmnt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cpgp_trg" id="Function_838" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cpgp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cpgp_jguid is null then
     New.cpgp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cpgp_deleted is null then
     New.cpgp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cpgs_trg" id="Function_1390" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cpgs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cpgs_jguid is null then
     New.cpgs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cpgs_deleted is null then
     New.cpgs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cpgt_trg" id="Function_26d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cpgt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cpgt_jguid is null then
     New.cpgt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cpgt_deleted is null then
     New.cpgt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cpps_trg" id="Function_178a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cpps_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cpps_jguid is null then
     New.cpps_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cpps_deleted is null then
     New.cpps_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="crgm_trg" id="Function_563" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.crgm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.crgm_jguid is null then
     New.crgm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.crgm_deleted is null then
     New.crgm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="crgr_trg" id="Function_113c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.crgr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.crgr_jguid is null then
     New.crgr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.crgr_deleted is null then
     New.crgr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="crsa_trg" id="Function_1c4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.crsa_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.crsa_jguid is null then
     New.crsa_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.crsa_deleted is null then
     New.crsa_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="crsf_trg" id="Function_25ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.crsf_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.crsf_jguid is null then
     New.crsf_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.crsf_deleted is null then
     New.crsf_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="crtc_trg" id="Function_23fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.crtc_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.crtc_jguid is null then
     New.crtc_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.crtc_deleted is null then
     New.crtc_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="csbr_trg" id="Function_4aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.csbr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.csbr_jguid is null then
     New.csbr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.csbr_deleted is null then
     New.csbr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cspc_trg" id="Function_818" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cspc_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cspc_jguid is null then
     New.cspc_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cspc_deleted is null then
     New.cspc_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="csss_trg" id="Function_213f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.csss_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.csss_jguid is null then
     New.csss_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.csss_deleted is null then
     New.csss_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cthm_trg" id="Function_1d9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cthm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cthm_jguid is null then
     New.cthm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cthm_deleted is null then
     New.cthm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ctht_trg" id="Function_1d6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.ctht_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ctht_jguid is null then
     New.ctht_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ctht_deleted is null then
     New.ctht_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ctmp_trg" id="Function_1470" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.ctmp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ctmp_jguid is null then
     New.ctmp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ctmp_deleted is null then
     New.ctmp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ctmt_trg" id="Function_22ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.ctmt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ctmt_jguid is null then
     New.ctmt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ctmt_deleted is null then
     New.ctmt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cwbs_trg" id="Function_119b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cwbs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cwbs_jguid is null then
     New.cwbs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cwbs_deleted is null then
     New.cwbs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cwbt_trg" id="Function_18ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.cwbt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.cwbt_jguid is null then
     New.cwbt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.cwbt_deleted is null then
     New.cwbt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_argument_id" id="Function_2502" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_argument_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.argument_id is null then
          New.argument_id:=nextval('cms.arguments_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_events_id" id="Function_19f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_events_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('cms.events_seq');
      end if; 
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_graphimenuid" id="Function_1e54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_graphimenuid()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('cms.graphic_menus_seq');
      end if; 
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_graphimenurowid" id="Function_211d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_graphimenurowid()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('cms.graphic_menu_rows_seq');
      end if; 
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_news_id" id="Function_2dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_news_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('cms.news_seq');
      end if; 
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_rss_feed_id" id="Function_2057" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_rss_feed_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.feed_id is null then
          New.feed_id:=nextval('cms.rssfeed_seq');
      end if; 
      Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_sub_argument_id" id="Function_fab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_sub_argument_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.sub_argument_id is null then
          New.sub_argument_id:=nextval('cms.sub_arguments_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_website_id" id="Function_237a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.get_website_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.website_id is null then
          New.website_id:=nextval('cms.web_sites_seq');
	SELECT system.get_key(
		New.website_id,
		32
		) into New.website_key;
          
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="new_session" id="Function_2076" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.new_session(ip character varying, host character varying, user_agent character varying, url character varying)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$declare
  newid bigint; 
 -- newdate timestamp with time zone; 
begin
   newid :=nextval('cms.sessions_seq');
--newdate := now(); 
   insert into cms.sessions (session_id, ip, host, user_agent, url, insert_date  )
       values (newid, ip, host, user_agent, url, now() ); 

    Return newid; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="ip" jt="12" type="varchar" />
			<input_param name="host" jt="12" type="varchar" />
			<input_param name="user_agent" jt="12" type="varchar" />
			<input_param name="url" jt="12" type="varchar" />
		</function>
		<function name="send_rss_articles" id="Function_1359" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION cms.send_rss_articles()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
   rart record;
   i integer; 
   aid bigint; 
   articledate timestamp with time zone; 
   --- exception and diagnostics ----
  text_var1 text;
  text_var2 text;
  text_var3 text;
   
begin
  i := 0; 
  for rart in 
     select a.*, f.language_id, s.default_user_id
     from cms.rss_articles a, cms.rss_feeds f, system.db_schemas s 
     where 
     (sent = false or sent is null)
     and link is not null
     and a.feed_id = f.feed_id
     and f.db_schema_id = s.db_schema_id 
  loop
     RAISE NOTICE 'Lettura record %', rart.title;	
     i := i + 1; 
     if entity2char(rart.title) != rart.title then
        RAISE NOTICE 'Corretto record %', rart.title;	 
        RAISE NOTICE 'Corretto in %', entity2char(rart.title);
        update cms.rss_articles set title = entity2char(rart.title) where article_id = rart.article_id;
     end if; 

     begin
        articledate := rart.date;
        aid := 0; 
        aid :=  cms.articles_ins( aid --in_article_id bigint
                                , entity2char(strip_tags(rart.title)) -- in_title character varying
                                , entity2char(strip_tags(rart.description)) ---in_abstract character varying
                                , rart.default_user_id  --in_author_id integer
                                , entity2char(strip_tags(rart.text)) --in_text text
                                , articledate -- in_datetime timestamp with time zone
                                , rart.link --in_external_link character varying
                                , rart.image ---in_image_url character varying
                                , entity2char(strip_tags(rart.description)) -- in_shorttext character varying
                                , 1 --in_main_argument_id smallint
                                , 27 --in_argument_id smallint
                                , 1 ---in_sub_argument_id smallint
                                , 1 ---in_specification_id smallint
                                , null  --- in_article_key character varying
                                , true --in_isfeed boolean
                                , rart.language_id -- in_language_id smallint
                                , rart.feed_id -- in_feed_id integer
                                );

        RAISE NOTICE 'inserito  record %', aid;	
        update cms.rss_articles  set sent = true where article_id = rart.article_id; 
      exception when others then
        begin
            -- rollback; 
             
		GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
                          
                PERFORM system.setlog('cms.send_rss_articles Errore RSS record ' || rart.title  || ' --  id Feed RSS= ' || rart.feed_id) || ' -- id Article= ' || rart.article_id ; 
		PERFORM system.setlog('cms.send_rss_articles   MESSAGE_TEXT: ' || text_var1); 
		PERFORM system.setlog('cms.send_rss_articles   PG_EXCEPTION_DETAIL: ' || text_var2); 
		PERFORM system.setlog('cms.send_rss_articles   PG_EXCEPTION_HINT: ' || text_var3); 
	  --  commit; 
	end;                           
      end; 
     
  end loop;
  /*   db_schema_id integer NOT NULL,
  article_id bigint NOT NULL,
  feed_id integer NOT NULL,
  title character varying(512),
  description character varying(2048),
  link character varying(512),
  text text,
  date date,
  image character varying(512),
  author character varying(512) */
   
  return i; 
end;$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="confluence" catalogname="ergomercator" />
	<schema name="crm" catalogname="ergomercator" >
		<comment><![CDATA[Customer Relationship Schema]]></comment>
		<table name="attachments" >
			<column name="attach_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="contact_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="attach_blob" type="bytea" decimal="0" jt="-2" />
			<column name="filename" type="varchar" length="256" decimal="0" jt="12" />
			<index name="attachments_pk" unique="PRIMARY_KEY" >
				<column name="attach_id" />
			</index>
			<index name="idx_attachments" unique="NORMAL" >
				<column name="contact_id" />
			</index>
			<fk name="fk_attachments" to_schema="ergomercator.crm" to_table="contactforms" >
				<fk_column name="contact_id" pk="contact_id" />
			</fk>
		</table>
		<table name="cform_taxonomies" >
			<column name="contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="taxonomy_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="taxonomy_def" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="cform_taxonomies_pk" unique="PRIMARY_KEY" >
				<column name="contact_id" />
				<column name="taxonomy_id" />
			</index>
			<index name="idx_cform_taxonomies" unique="NORMAL" >
				<column name="contact_id" />
			</index>
			<fk name="fk_cform_taxonomies" to_schema="ergomercator.crm" to_table="contactforms" >
				<fk_column name="contact_id" pk="contact_id" />
			</fk>
		</table>
		<table name="contactforms" >
			<column name="contact_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="last_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="telephone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cellular" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="cms_subject_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="cms_detail_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="address" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="varchar" length="8" decimal="0" jt="12" />
			<column name="town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="form_text" type="varchar" length="4000" decimal="0" jt="12" mandatory="y" />
			<column name="vat_code" type="varchar" length="16" decimal="0" jt="12" />
			<column name="ssn_fiscal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="an_anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="contactform_pk" unique="PRIMARY_KEY" >
				<column name="contact_id" />
			</index>
			<fk name="contactformsbj_fk" to_schema="ergomercator.crm" to_table="subjects" delete_action="cascade" >
				<fk_column name="cms_subject_id" pk="cms_subject_id" />
			</fk>
			<fk name="crmsbdetail_crmcontact" to_schema="ergomercator.crm" to_table="subjects_details" >
				<fk_column name="cms_subject_id" pk="cms_subject_id" />
				<fk_column name="cms_detail_id" pk="cms_detail_id" />
			</fk>
		</table>
		<table name="form_definitions" >
			<column name="form_def_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="form_def_name" type="varchar" length="128" decimal="0" jt="12" />
			<index name="form_definition_pk" unique="PRIMARY_KEY" >
				<column name="form_def_id" />
			</index>
		</table>
		<table name="quote_form_models" >
			<column name="model_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[unique id for form model id]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[external relation schema id]]></comment>
			</column>
			<column name="time_cost" type="numeric" length="12" decimal="2" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[time cost for model (questo è espresso per unità di misura in costo al minuto)]]></comment>
			</column>
			<column name="is_public" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
				<comment><![CDATA[Y if public N if not]]></comment>
			</column>
			<column name="time_period_multiplier" type="numeric" length="6" decimal="3" jt="2" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[Multiplies the unit periods used (in questo caso il numero medio di settimane in un mese medio)]]></comment>
			</column>
			<column name="isdefault" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
				<comment><![CDATA[Set the default(s) models for trigger]]></comment>
			</column>
			<column name="model_key_numeric" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="model_title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Model Title]]></comment>
			</column>
			<column name="monthly_rate" type="numeric" length="6" decimal="4" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Multiplier if monthly Rates....]]></comment>
			</column>
			<column name="model_full_address" type="varchar" length="512" decimal="0" jt="12" >
				<comment><![CDATA[Our Contatcts address full]]></comment>
			</column>
			<column name="model_footer" type="varchar" length="256" decimal="0" jt="12" />
			<column name="print_checked_only" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Stampa solo le righe selezionate]]></comment>
			</column>
			<index name="form_models_pk" unique="PRIMARY_KEY" >
				<column name="model_id" />
			</index>
		</table>
		<table name="quote_forms" >
			<column name="form_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[unique id for compiled model]]></comment>
			</column>
			<column name="model_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[foreign key to original model.]]></comment>
			</column>
			<column name="customer_mail" type="varchar" length="256" decimal="0" jt="12" />
			<column name="customer_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="customer_town" type="varchar" length="256" decimal="0" jt="12" />
			<column name="customer_iso_country" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[contry of customer]]></comment>
			</column>
			<column name="customer_iso_lang" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[language of customer]]></comment>
			</column>
			<column name="customer_posta_code" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[postal code local]]></comment>
			</column>
			<column name="customer_phone" type="varchar" length="12" decimal="0" jt="12" >
				<comment><![CDATA[phoen with international prefix by defua]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[database schema id]]></comment>
			</column>
			<column name="db_session_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[session id when form is compiled]]></comment>
			</column>
			<column name="form_date_time" type="timestamp" decimal="6" jt="93" >
				<comment><![CDATA[Date and time form is compiled]]></comment>
			</column>
			<column name="form_time_cost" type="numeric" length="12" decimal="2" jt="2" >
				<comment><![CDATA[Cost per Time Unit (or price per time Unit)]]></comment>
			</column>
			<column name="form_monthly_rate" type="numeric" length="6" decimal="4" jt="2" >
				<comment><![CDATA[Rate Index for monthly executed works (when no week is selected)]]></comment>
			</column>
			<column name="form_time_period" type="numeric" length="6" decimal="4" jt="2" />
			<column name="ms_send_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="quote_forms_pk" unique="PRIMARY_KEY" >
				<column name="form_id" />
			</index>
			<index name="idx_quote_forms" unique="NORMAL" >
				<column name="ms_send_id" />
			</index>
			<fk name="quote_forms_models_fk" to_schema="ergomercator.crm" to_table="quote_form_models" >
				<fk_column name="model_id" pk="model_id" />
			</fk>
		</table>
		<table name="quote_forms_rows" >
			<column name="prodserv_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="form_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="selected" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="monthly" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="quantity" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="frequency" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="price" type="numeric" length="12" decimal="4" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="time_coefficient" type="numeric" length="6" decimal="3" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="pk_quote_forms_rows" unique="PRIMARY_KEY" >
				<column name="prodserv_id" />
				<column name="form_id" />
			</index>
			<index name="idx_quote_forms_rows" unique="NORMAL" >
				<column name="form_id" />
			</index>
			<index name="idx_quote_forms_rows_0" unique="NORMAL" >
				<column name="prodserv_id" />
			</index>
			<fk name="fk_quote_forms_rows_0" to_schema="ergomercator.crm" to_table="quote_forms" >
				<fk_column name="form_id" pk="form_id" />
			</fk>
			<fk name="fk_quote_forms_rows" to_schema="ergomercator.crm" to_table="quote_productservices" >
				<fk_column name="prodserv_id" pk="prodserv_id" />
			</fk>
		</table>
		<table name="quote_frmmodels_prdserv" >
			<column name="prodserv_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="form_model_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="quote_frmmod_pdserv_pk" unique="PRIMARY_KEY" >
				<column name="prodserv_id" />
				<column name="form_model_id" />
			</index>
			<index name="idx_quote_frmmodels_prdserv" unique="NORMAL" >
				<column name="form_model_id" />
			</index>
			<index name="idx_quote_frmmodels_prdserv_0" unique="NORMAL" >
				<column name="prodserv_id" />
			</index>
			<fk name="fk_quote_frmmodels_prdserv" to_schema="ergomercator.crm" to_table="quote_form_models" >
				<fk_column name="form_model_id" pk="model_id" />
			</fk>
			<fk name="fk_quote_frmmodels_prdserv_0" to_schema="ergomercator.crm" to_table="quote_productservices" >
				<fk_column name="prodserv_id" pk="prodserv_id" />
			</fk>
		</table>
		<table name="quote_productservices" >
			<column name="prodserv_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="numeric" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="description" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="specification" type="varchar" length="256" decimal="0" jt="12" />
			<column name="price" type="numeric" length="12" decimal="4" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="time_coefficient" type="numeric" length="6" decimal="3" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="qty_coefficient" type="numeric" length="6" decimal="3" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="position" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Position in schema]]></comment>
			</column>
			<index name="quote_prodservices_pk" unique="PRIMARY_KEY" >
				<column name="prodserv_id" />
			</index>
		</table>
		<table name="subjects" >
			<column name="cms_subject_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schmea_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subject_name" type="varchar" length="30" decimal="0" jt="12" />
			<column name="form_def_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="subjects_pk" unique="PRIMARY_KEY" >
				<column name="cms_subject_id" />
			</index>
			<index name="idx_subjects" unique="NORMAL" >
				<column name="form_def_id" />
			</index>
			<fk name="fk_subjects_forms" to_schema="ergomercator.crm" to_table="form_definitions" >
				<fk_column name="form_def_id" pk="form_def_id" />
			</fk>
		</table>
		<table name="subjects_details" >
			<column name="cms_subject_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="cms_detail_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="cms_detail_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="subjects_details_pk" unique="PRIMARY_KEY" >
				<column name="cms_subject_id" />
				<column name="cms_detail_id" />
			</index>
			<index name="idx_subjects_details" unique="NORMAL" >
				<column name="cms_subject_id" />
			</index>
			<fk name="fk_subjects_details" to_schema="ergomercator.crm" to_table="subjects" update_action="cascade" >
				<fk_column name="cms_subject_id" pk="cms_subject_id" />
			</fk>
		</table>
		<function name="quote_prodserv_ai_trg" id="Function_73c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION crm.quote_prodserv_ai_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$declare
  x record; 
begin
    for x in (select * from crm.quote_form_models m
              where m.db_schema_id = new.db_schema_id)
    loop
       insert into januacrm.crm.quote_frmmodels_prdserv 
            (db_schema_id, prodserv_id, form_MODEL_ID , position)
       values (x.db_schema_id, new.prodserv_id, x.model_id, new.position);
    
    
    end loop;

end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="quote_prodserve_ins_trg" id="Function_37e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION crm.quote_prodserve_ins_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
 --  if new.prodserv_id is null then
 --      select januacrm.crm.prodservices_seq.NEXTVAL 
 --              into new.prodserv_id from dual;
 --  end if;
   
   if new.price is null then new.price := 0; end if;
   if new.time_coefficient is null then new.time_coefficient := 0; end if;
   if new.qty_coefficient is null then new.qty_coefficient := 0; end if; 
   if new.position is null then new.position := 1; end if;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="quotefrmmodels_bi_trg" id="Function_1c8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION crm.quotefrmmodels_bi_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
-- new.model_id is null
--     then select crm.formmodel_seq.NEXTVAL into new.model_id from dual;
--  end if;
null;
  
--  if new.model_key_numeric is null then
--     new.model_key_numeric := (TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') || new.model_id);
--  end if;

end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="documents" catalogname="ergomercator" >
		<comment><![CDATA[Documents such as invoices, Bill of Lading, Receipts, Proof of Delivery, Packing Lists]]></comment>
		<table name="attachments" >
			<column name="doc_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="blob_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="location" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA['D'::"char"]]></defo>
			</column>
			<column name="filename" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[a descriptive file name to identify the attachment]]></comment>
			</column>
			<column name="description" type="text" decimal="0" jt="12" >
				<comment><![CDATA[A long Text Description for the File]]></comment>
			</column>
			<column name="context" type="text" decimal="0" jt="12" >
				<comment><![CDATA[content text for contextual search on engine (from OCR or PDF-Word-Excel scan Read).]]></comment>
			</column>
			<column name="extension" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[File Extension (to correctly display the icon and manage MIME informations)]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="flg_internet" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Flag Internet Visible Field]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="attachments_pk" unique="PRIMARY_KEY" >
				<column name="doc_id" />
				<column name="blob_id" />
			</index>
			<index name="attachments_uk" unique="UNIQUE_KEY" >
				<column name="blob_jguid" />
			</index>
			<fk name="fk_attachments_heads" to_schema="ergomercator.documents" to_table="heads" update_action="cascade" >
				<fk_column name="doc_id" pk="id" />
			</fk>
		</table>
		<table name="heads" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="in_out" type="smallint" length="5" decimal="0" jt="5" />
			<column name="doc_date" type="date" length="13" decimal="0" jt="91" />
			<column name="doc_number" type="varchar" length="12" decimal="0" jt="12" />
			<column name="reason" type="smallint" length="5" decimal="0" jt="5" />
			<column name="dest_address" type="varchar" length="200" decimal="0" jt="12" />
			<column name="dest_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="dest_town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="dest_state_province" type="varchar" length="2" decimal="0" jt="12" />
			<column name="dest_country_iso" type="varchar" length="3" decimal="0" jt="12" />
			<column name="departure_date" type="date" length="13" decimal="0" jt="91" />
			<column name="delivery_methos" type="varchar" length="15" decimal="0" jt="12" />
			<column name="goods_description" type="varchar" length="15" decimal="0" jt="12" />
			<column name="packages_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="total_weight" type="float8" length="17" decimal="17" jt="6" />
			<column name="incoterms" type="varchar" length="3" decimal="0" jt="12" />
			<column name="delivery_charges" type="numeric" length="12" decimal="4" jt="2" />
			<column name="discount_rate" type="numeric" length="5" decimal="3" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="carrier_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="dest_state_province_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="dest_region_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="dest_town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[2]]></defo>
			</column>
			<column name="payment_terms_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="payment_terms_des" type="varchar" length="128" decimal="0" jt="12" />
			<column name="package_description" type="varchar" length="15" decimal="0" jt="12" />
			<column name="payment_term_code" type="varchar" length="8" decimal="0" jt="12" />
			<column name="folder_id" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="doc_state" type="smallint" length="5" decimal="0" jt="5" />
			<column name="holder_name" type="varchar" length="50" decimal="0" jt="12" />
			<column name="holder_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="holder_vat_id" type="varchar" length="15" decimal="0" jt="12" />
			<column name="holder_address" type="varchar" length="200" decimal="0" jt="12" />
			<column name="holder_postal_code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="holder_town" type="varchar" length="40" decimal="0" jt="12" />
			<column name="holder_state_province" type="varchar" length="2" decimal="0" jt="12" />
			<column name="holder_country_iso" type="varchar" length="3" decimal="0" jt="12" />
			<column name="delivery_rate_expense" type="numeric" length="5" decimal="2" jt="2" />
			<column name="holder_group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="amount" type="numeric" length="12" decimal="4" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="net_amount" type="numeric" length="12" decimal="4" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="financial_year" type="varchar" length="10" decimal="0" jt="12" />
			<column name="doc_origin_id" type="numeric" length="24" decimal="0" jt="2" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="delivery_vat_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="delivery_vat_rate" type="numeric" length="5" decimal="2" jt="2" >
				<defo><![CDATA[20]]></defo>
			</column>
			<column name="accounted" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="date" length="13" decimal="0" jt="91" />
			<column name="delivery_due_date" type="date" length="13" decimal="0" jt="91" />
			<column name="sent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="arrival_date" type="date" length="13" decimal="0" jt="91" />
			<column name="payment_due_date" type="date" length="13" decimal="0" jt="91" />
			<column name="duties" type="numeric" length="12" decimal="4" jt="2" />
			<column name="paid" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="doc_fine" type="numeric" length="12" decimal="4" jt="2" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="doc_year" type="numeric" length="4" decimal="0" jt="2" />
			<column name="po_number_id" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="po_number" type="varchar" length="128" decimal="0" jt="12" />
			<column name="printed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="contact_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="contact_email" type="varchar" length="70" decimal="0" jt="12" />
			<column name="contact_phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="office_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Reference to anagraph info of office emitter of the document]]></comment>
			</column>
			<column name="warehouse_location_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Warehouse Location where Goods Are Loaded]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="notes1" type="text" decimal="0" jt="12" />
			<column name="notes2" type="text" decimal="0" jt="12" />
			<column name="notes3" type="text" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="purchase_order_number" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_field_1" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_field_2" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_field_3" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_int_1" type="integer" length="10" decimal="0" jt="4" />
			<column name="custom_int_2" type="integer" length="10" decimal="0" jt="4" />
			<column name="custom_int_3" type="integer" length="10" decimal="0" jt="4" />
			<column name="doc_ref_code" type="varchar" length="128" decimal="0" jt="12" />
			<column name="carrier_expenses" type="real" length="8" decimal="8" jt="7" />
			<column name="registry_code" type="varchar" length="12" decimal="0" jt="12" />
			<column name="carrier_tracking_number" type="varchar" length="128" decimal="0" jt="12" />
			<column name="carrier_expenses_currency_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="search_index" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="dest_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="carrier_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="location_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="goods_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="importexport" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="carrier_invoice_number" type="varchar" length="60" decimal="0" jt="12" />
			<column name="carrier_invoice_date" type="date" length="13" decimal="0" jt="91" />
			<column name="workflow_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="vessel_department_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Identification for a Vessel department. Useful to correctly address the shipping to the Vessel]]></comment>
			</column>
			<column name="payment_term_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="an_code" type="varchar" length="128" decimal="0" jt="12" />
			<column name="ref_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Customer/Supplier Reference Date]]></comment>
			</column>
			<column name="ref_code" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[Customer Supplier Reference Code]]></comment>
			</column>
			<column name="stamp_duty" type="numeric" decimal="0" jt="2" >
				<comment><![CDATA[Sometimes on document customer must pay a tax (stamp duty) by setting a phisica or virtual stamp on the document.]]></comment>
			</column>
			<column name="exchange_rate" type="numeric" length="12" decimal="6" jt="2" >
				<defo><![CDATA[0.0]]></defo>
			</column>
			<column name="conversion_date" type="date" length="13" decimal="0" jt="91" />
			<column name="work_code" type="varchar" length="128" decimal="0" jt="12" />
			<column name="work_date" type="date" length="13" decimal="0" jt="91" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="dest_vat_number" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[Unique Europea Vat Number (if European goes along with iso_state_code)]]></comment>
			</column>
			<column name="holder_vat_number" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[Europea Vat Number for Holder along with iso country code]]></comment>
			</column>
			<column name="currency_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="currency_description" type="varchar" decimal="0" jt="12" />
			<column name="taxable_amount" type="numeric" decimal="0" jt="2" />
			<column name="vat_taxes" type="numeric" decimal="0" jt="2" />
			<column name="assigned" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[if workflow is set then assigned is set to 2 else to 1 should be 0 only if the assigned workflow is set to deleted or removed state.]]></comment>
			</column>
			<column name="inventory" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[This is the inventory flag. When all goods from a warehouse document are shipped it turns to false. By default it is true  according to the  document type.]]></comment>
			</column>
			<column name="location_code" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[location code can be used (also) to connect different db or to provide IATA or UNI EN ISO codes to location or vessel]]></comment>
			</column>
			<column name="vessel_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="vessel_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="vessel_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="lpad((doc_number)::text, 15, &#039;0&#039;::text)" type="varchar" jt="12" spec="functional" />
			<index name="documents_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="doc_heads_uid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="heads_doc_types_btree_ndx" unique="NORMAL" >
				<column name="type_id" />
			</index>
			<index name="heads_doc_years_btree_ndx" unique="NORMAL" >
				<column name="doc_year" />
			</index>
			<index name="heads_sort_desc_ndx" unique="NORMAL" >
				<column name="doc_year" options="DESC" />
				<column name="doc_date" options="DESC" />
				<column name="lpad((doc_number)::text, 15, &#039;0&#039;::text)" options="DESC" />
			</index>
			<fk name="fk_heads_types" to_schema="ergomercator.documents" to_table="types" >
				<fk_column name="type_id" pk="id" />
			</fk>
		</table>
		<table name="payment_schedule" >
			<column name="doc_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="payment_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="doc_date" type="date" length="13" decimal="0" jt="91" />
			<column name="due_date" type="date" length="13" decimal="0" jt="91" />
			<column name="amount" type="money" decimal="0" jt="3" />
			<column name="payment_term_des" type="varchar" length="128" decimal="0" jt="12" />
			<column name="payd" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="partial_payment" type="money" decimal="0" jt="3" />
			<column name="reminder_notices" type="smallint" length="5" decimal="0" jt="5" />
			<index name="payment_schedule_pk" unique="PRIMARY_KEY" >
				<column name="doc_id" />
				<column name="pos" />
			</index>
			<index name="payment_schedule_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="fki_payment_schedule_documents_fk" unique="NORMAL" >
				<column name="doc_id" />
			</index>
			<index name="idx_payment_schedule_payment_id" unique="NORMAL" >
				<column name="payment_id" />
			</index>
		</table>
		<table name="rows" >
			<comment><![CDATA[This table contains all the rows from a document and all the basic informations for the register of loaded and unloaded materials from the warehouse]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="doc_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="row_date" type="date" length="13" decimal="0" jt="91" mandatory="y" >
				<defo><![CDATA[CURRENT_DATE]]></defo>
			</column>
			<column name="inout" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="model" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="code" type="varchar" length="60" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="price" type="numeric" length="16" decimal="4" jt="2" mandatory="y" >
				<defo><![CDATA[0.0]]></defo>
			</column>
			<column name="vat_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign key to Vat_ID code for the row]]></comment>
			</column>
			<column name="vat_rate" type="numeric" length="6" decimal="3" jt="2" mandatory="y" >
				<defo><![CDATA[0.0]]></defo>
			</column>
			<column name="discount_rate" type="numeric" length="6" decimal="3" jt="2" mandatory="y" >
				<defo><![CDATA[0.0]]></defo>
			</column>
			<column name="discount_comm_rate" type="numeric" length="6" decimal="3" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="discount_ext_rate" type="numeric" length="6" decimal="3" jt="2" mandatory="y" />
			<column name="quantity" type="numeric" length="12" decimal="6" jt="2" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="secondhand" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="dimension_id1" type="smallint" length="5" decimal="0" jt="5" />
			<column name="dimension_id2" type="smallint" length="5" decimal="0" jt="5" />
			<column name="dimensions_id3" type="smallint" length="5" decimal="0" jt="5" />
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="exchange_rate" type="numeric" length="12" decimal="6" jt="2" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" />
			<column name="delivery_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="barcode" type="varchar" length="128" decimal="0" jt="12" />
			<column name="delivered_qty" type="numeric" length="12" decimal="6" jt="2" />
			<column name="sample_qty" type="numeric" length="12" decimal="6" jt="2" />
			<column name="is_sample" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="ref_code" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA['Codice Terzi' Reference code to supplier's code if different from internal code]]></comment>
			</column>
			<column name="doc_origin_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="row_origin_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="anagrams_ref_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="collector_points" type="smallint" length="5" decimal="0" jt="5" />
			<column name="collector_points_forfait" type="smallint" length="5" decimal="0" jt="5" />
			<column name="package_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="ordered_qty" type="numeric" length="12" decimal="6" jt="2" />
			<column name="pallets" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[If Goods are stocked in pallets this is the total counting of pallets for a row]]></comment>
			</column>
			<column name="weight_on_delivery" type="numeric" length="12" decimal="6" jt="2" >
				<comment><![CDATA[weight of good at delivery]]></comment>
			</column>
			<column name="weight_on_order" type="numeric" length="12" decimal="6" jt="2" >
				<comment><![CDATA[weight of good as ordered]]></comment>
			</column>
			<column name="weight_on_shipping" type="numeric" length="12" decimal="6" jt="2" >
				<comment><![CDATA[weight of good as declaread when shipped]]></comment>
			</column>
			<column name="volume" type="numeric" length="12" decimal="6" jt="2" />
			<column name="doc_origin_number" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Reference to the number of origin documents]]></comment>
			</column>
			<column name="doc_origin_date" type="date" length="13" decimal="0" jt="91" />
			<column name="customs_doc_ref" type="varchar" length="128" decimal="0" jt="12" />
			<column name="customs_doc_type_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Reference tu customs document Status]]></comment>
			</column>
			<column name="purchase_order" type="varchar" length="30" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="size_weight" type="numeric" length="12" decimal="6" jt="2" />
			<column name="size_length" type="numeric" length="12" decimal="6" jt="2" />
			<column name="size_height" type="numeric" length="12" decimal="6" jt="2" />
			<column name="inventory_qty" type="numeric" length="12" decimal="6" jt="2" />
			<column name="inventory_weight" type="numeric" length="12" decimal="6" jt="2" />
			<column name="customs_doc_cin" type="char" length="1" decimal="0" jt="1" />
			<column name="customs_doc_date" type="date" length="13" decimal="0" jt="91" />
			<column name="supplier_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="doc_origin__number" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="doc_head_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="item_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="container_status" type="char" length="1" decimal="0" jt="1" />
			<column name="rights" type="numeric" length="12" decimal="6" jt="2" />
			<column name="invoice_number" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_field_1" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_field_2" type="varchar" length="128" decimal="0" jt="12" />
			<column name="invoice_amount" type="numeric" length="12" decimal="6" jt="2" />
			<column name="custom_field_3" type="varchar" length="128" decimal="0" jt="12" />
			<column name="json_nested_table" type="jsonb" decimal="0" jt="2000" >
				<comment><![CDATA[Json nested table using jsonb format for queries]]></comment>
			</column>
			<column name="invoice_date" type="date" length="13" decimal="0" jt="91" />
			<column name="importexport" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="is_description" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Tells the system that this row is descriptive and should not be used for statistical or accounting purposes.]]></comment>
			</column>
			<column name="exchange_rage" type="numeric" length="12" decimal="6" jt="2" >
				<defo><![CDATA[1.0]]></defo>
				<comment><![CDATA[currency exchange rate, if amount is reported using a different currency from the document's default currency id.]]></comment>
			</column>
			<column name="freight_qty" type="numeric" length="12" decimal="2" jt="2" >
				<defo><![CDATA[NULL::numeric]]></defo>
			</column>
			<column name="amount" type="money" decimal="0" jt="3" />
			<column name="vat_code" type="varchar" length="12" decimal="0" jt="12" />
			<column name="freight_rate" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="vat_description" type="varchar" length="25" decimal="0" jt="12" />
			<column name="currency_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="currency_description" type="varchar" length="16" decimal="0" jt="12" />
			<column name="flg_description" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="haz_class" type="varchar" length="20" decimal="0" jt="12" />
			<index name="document_rows_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="doc_rows_uid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="doc_rows_schema_ndx" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="fki_doc_rows_suppliers_fk" unique="NORMAL" >
				<column name="supplier_id" />
			</index>
			<fk name="docrows_docheads_fk" to_schema="ergomercator.documents" to_table="heads" >
				<fk_column name="doc_id" pk="id" />
			</fk>
			<fk name="fk_rows_doc_origin" to_schema="ergomercator.documents" to_table="heads" >
				<fk_column name="doc_origin_id" pk="id" />
			</fk>
			<fk name="docrows_itemtypes_fk" to_schema="ergomercator.documents" to_table="types" />
		</table>
		<table name="test" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="test" type="money" decimal="0" jt="3" />
			<index name="test_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="type_groups" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="code" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_inset" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="document_types_groups_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="types" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="code" type="varchar" length="12" decimal="0" jt="12" mandatory="y" />
			<column name="in_out" type="numeric" length="1" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="cash" type="numeric" length="1" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="credit" type="numeric" length="1" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="description" type="varchar" length="128" decimal="0" jt="12" />
			<column name="flg_order" type="numeric" length="1" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flg_quotation" type="numeric" length="1" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flg_customers" type="numeric" length="1" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flg_suppliers" type="numeric" length="1" decimal="0" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="is_accouting" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="ac_group_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ac_ledger_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ac_subledger_code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ac_group_vat_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ac_ledger_vat_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ac_subledger_vat_code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ac_group_taxable_amnt_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ac_ledger_taxable_amnt_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ac_subledger_taxable_amnt_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ac_text" type="varchar" length="256" decimal="0" jt="12" />
			<column name="ac_entry" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="ac_entry_pos" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['D'::bpchar]]></defo>
			</column>
			<column name="ac_vat_entry_pos" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['D'::bpchar]]></defo>
			</column>
			<column name="ac_taxable_amnt_entry_pos" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['D'::bpchar]]></defo>
			</column>
			<column name="group_trans_fees_cod" type="varchar" length="3" decimal="0" jt="12" />
			<column name="ledger_trans_fees_cod" type="varchar" length="3" decimal="0" jt="12" />
			<column name="subledger_trans_fees_cod" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ac_trans_fees_entry" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="iso_description" type="varchar" length="128" decimal="0" jt="12" />
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="dt_vat_registry" type="varchar" length="2" decimal="0" jt="12" />
			<column name="bill_book" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="type_group" type="smallint" length="5" decimal="0" jt="5" />
			<column name="type_anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="short_description" type="varchar" length="30" decimal="0" jt="12" />
			<column name="NOSTRODOC" type="char" length="1" decimal="0" jt="1" />
			<column name="CASSA" type="char" length="1" decimal="0" jt="1" />
			<column name="warehouse_register" type="numeric" length="1" decimal="0" jt="2" />
			<column name="reverse_doc_type" type="smallint" length="5" decimal="0" jt="5" />
			<column name="type_group_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign key to Type Groups]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="customs_doc_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Date of Reference customs document]]></comment>
			</column>
			<column name="customs_doc_cin" type="char" length="1" decimal="0" jt="1" />
			<index name="document_types_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="fki_doc_types_schemas_fk" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="document_types_groups_fk" to_schema="ergomercator.documents" to_table="type_groups" update_action="cascade" >
				<fk_column name="type_group_id" pk="id" />
			</fk>
		</table>
		<table name="vat_amounts" >
			<column name="doc_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[Foreign key link to Document Head]]></comment>
			</column>
			<column name="vat_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Foreign Key Link to VAT Codes]]></comment>
			</column>
			<column name="taxable_amount" type="money" decimal="0" jt="3" mandatory="y" />
			<column name="taxes" type="money" decimal="0" jt="3" mandatory="y" />
			<column name="vat_rate" type="numeric" length="5" decimal="2" jt="2" mandatory="y" >
				<defo><![CDATA[0.0]]></defo>
			</column>
			<column name="amount" type="money" decimal="0" jt="3" />
			<column name="vat_description" type="varchar" length="25" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="vat_code" type="varchar" length="12" decimal="0" jt="12" >
				<comment><![CDATA[Vat Code (different for any vat taxation or exemption]]></comment>
			</column>
			<index name="vat_amounts_pk" unique="PRIMARY_KEY" >
				<column name="doc_id" />
				<column name="vat_id" />
			</index>
			<index name="vat_amounts_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="fki_fk_vat_amounts_heads" unique="NORMAL" >
				<column name="doc_id" />
			</index>
			<fk name="fk_vat_amounts_heads" to_schema="ergomercator.documents" to_table="heads" delete_action="cascade" update_action="cascade" >
				<fk_column name="doc_id" pk="id" />
			</fk>
		</table>
		<view name="attachments_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.doc_id,
    a.blob_id,
    a.blob_jguid,
    a.location,
    a.filename,
    a.description,
    a.context,
    a.extension,
    a.db_schema_id,
    a.flg_internet,
    a.jguid,
    a.deleted,
    f.blob_file,
    f.blob_size,
    f.blob_key,
    f.filename AS blob_filename,
    f.is_external,
    f.insert_date,
    f.isresource,
    f.directory_id,
    f.db_user_id,
    d.directory_path
   FROM ((documents.attachments a
     JOIN cloud.blob_files f ON ((f.blob_id = a.blob_id)))
     LEFT JOIN cloud.directories d ON ((f.directory_id = d.directory_id)));]]></view_script>
			<column name="doc_id" type="bigint" />
			<column name="blob_id" type="bigint" />
			<column name="blob_jguid" type="uuid" />
			<column name="location" type="char" />
			<column name="filename" type="varchar" />
			<column name="description" type="text" />
			<column name="context" type="text" />
			<column name="extension" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="flg_internet" type="boolean" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="blob_file" type="bytea" />
			<column name="blob_size" type="bigint" />
			<column name="blob_key" type="varchar" />
			<column name="blob_filename" type="varchar" />
			<column name="is_external" type="boolean" />
			<column name="insert_date" type="timestamp" />
			<column name="isresource" type="boolean" />
			<column name="directory_id" type="bigint" />
			<column name="db_user_id" type="integer" />
			<column name="directory_path" type="varchar" />
		</view>
		<view name="heads_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT h.id,
    h.type_id,
    h.in_out,
    h.doc_date,
    h.doc_number,
    h.reason,
    h.dest_address,
    h.dest_postal_code,
    h.dest_town,
    h.dest_state_province,
    h.dest_country_iso,
    h.departure_date,
    h.delivery_methos,
    h.goods_description,
    h.packages_number,
    h.total_weight,
    h.incoterms,
    h.delivery_charges,
    h.discount_rate,
    h.anagraph_id,
    h.carrier_id,
    h.dest_state_province_id,
    h.dest_region_id,
    h.dest_town_id,
    h.currency_id,
    h.payment_terms_id,
    h.payment_terms_des,
    h.package_description,
    h.payment_term_code,
    h.folder_id,
    h.doc_state,
    h.holder_name,
    h.holder_id,
    h.holder_vat_id,
    h.holder_address,
    h.holder_postal_code,
    h.holder_town,
    h.holder_state_province,
    h.holder_country_iso,
    h.delivery_rate_expense,
    h.holder_group_id,
    h.amount,
    h.net_amount,
    h.financial_year,
    h.doc_origin_id,
    h.delivery_vat_id,
    h.delivery_vat_rate,
    h.accounted,
    h.insert_date,
    h.update_date,
    h.delivery_due_date,
    h.sent,
    h.arrival_date,
    h.payment_due_date,
    h.duties,
    h.paid,
    h.doc_fine,
    h.user_insert,
    h.user_update,
    h.doc_year,
    h.po_number_id,
    h.po_number,
    h.printed,
    h.contact_name,
    h.contact_email,
    h.contact_phone,
    h.office_id,
    h.warehouse_location_id,
    h.jguid,
    h.notes1,
    h.notes2,
    h.notes3,
    h.db_schema_id,
    h.purchase_order_number,
    h.custom_field_1,
    h.custom_field_2,
    h.custom_field_3,
    h.custom_int_1,
    h.custom_int_2,
    h.custom_int_3,
    h.doc_ref_code,
    h.carrier_expenses,
    h.registry_code,
    h.carrier_tracking_number,
    h.carrier_expenses_currency_id,
    h.search_index,
    h.dest_name,
    h.carrier_name,
    h.location_name,
    h.goods_type_id,
    h.importexport,
    h.carrier_invoice_number,
    h.carrier_invoice_date,
    h.workflow_id,
    h.vessel_department_id,
    h.payment_term_id,
    h.an_code,
    h.ref_date,
    h.ref_code,
    h.stamp_duty,
    h.exchange_rate,
    h.conversion_date,
    h.work_code,
    h.work_date,
    h.deleted,
    h.dest_vat_number,
    h.holder_vat_number,
    h.currency_code,
    h.currency_description,
    h.taxable_amount,
    h.vat_taxes,
    h.assigned,
    h.inventory,
    h.location_code,
    h.vessel_id,
    h.vessel_name,
    h.vessel_code,
    cc.currency_code AS carrier_currency_code,
    cc.currency_name AS carrier_currency_name,
    (((s.work_code)::text ||
        CASE
            WHEN (s.pol_name IS NULL) THEN ''::text
            ELSE (' '::text || (COALESCE(s.pol_name, ''::character varying))::text)
        END) ||
        CASE
            WHEN (s.pod_name IS NULL) THEN ''::text
            ELSE (' - '::text || (COALESCE(s.pod_name, ''::character varying))::text)
        END) AS shipment_des
   FROM ((documents.heads h
     LEFT JOIN jpublic.currencies cc ON ((cc.currency_id = h.carrier_expenses_currency_id)))
     LEFT JOIN logistic.shipments s ON ((h.folder_id = s.workflow_id)));]]></view_script>
			<column name="id" type="bigint" />
			<column name="type_id" type="smallint" />
			<column name="in_out" type="smallint" />
			<column name="doc_date" type="date" />
			<column name="doc_number" type="varchar" />
			<column name="reason" type="smallint" />
			<column name="dest_address" type="varchar" />
			<column name="dest_postal_code" type="varchar" />
			<column name="dest_town" type="varchar" />
			<column name="dest_state_province" type="varchar" />
			<column name="dest_country_iso" type="varchar" />
			<column name="departure_date" type="date" />
			<column name="delivery_methos" type="varchar" />
			<column name="goods_description" type="varchar" />
			<column name="packages_number" type="smallint" />
			<column name="total_weight" type="float8" />
			<column name="incoterms" type="varchar" />
			<column name="delivery_charges" type="numeric" />
			<column name="discount_rate" type="numeric" />
			<column name="anagraph_id" type="integer" />
			<column name="carrier_id" type="integer" />
			<column name="dest_state_province_id" type="integer" />
			<column name="dest_region_id" type="integer" />
			<column name="dest_town_id" type="integer" />
			<column name="currency_id" type="smallint" />
			<column name="payment_terms_id" type="smallint" />
			<column name="payment_terms_des" type="varchar" />
			<column name="package_description" type="varchar" />
			<column name="payment_term_code" type="varchar" />
			<column name="folder_id" type="bigint" />
			<column name="doc_state" type="smallint" />
			<column name="holder_name" type="varchar" />
			<column name="holder_id" type="integer" />
			<column name="holder_vat_id" type="varchar" />
			<column name="holder_address" type="varchar" />
			<column name="holder_postal_code" type="varchar" />
			<column name="holder_town" type="varchar" />
			<column name="holder_state_province" type="varchar" />
			<column name="holder_country_iso" type="varchar" />
			<column name="delivery_rate_expense" type="numeric" />
			<column name="holder_group_id" type="smallint" />
			<column name="amount" type="numeric" />
			<column name="net_amount" type="numeric" />
			<column name="financial_year" type="varchar" />
			<column name="doc_origin_id" type="numeric" />
			<column name="delivery_vat_id" type="smallint" />
			<column name="delivery_vat_rate" type="numeric" />
			<column name="accounted" type="boolean" />
			<column name="insert_date" type="date" />
			<column name="update_date" type="date" />
			<column name="delivery_due_date" type="date" />
			<column name="sent" type="boolean" />
			<column name="arrival_date" type="date" />
			<column name="payment_due_date" type="date" />
			<column name="duties" type="numeric" />
			<column name="paid" type="boolean" />
			<column name="doc_fine" type="numeric" />
			<column name="user_insert" type="integer" />
			<column name="user_update" type="integer" />
			<column name="doc_year" type="numeric" />
			<column name="po_number_id" type="bigint" />
			<column name="po_number" type="varchar" />
			<column name="printed" type="boolean" />
			<column name="contact_name" type="varchar" />
			<column name="contact_email" type="varchar" />
			<column name="contact_phone" type="varchar" />
			<column name="office_id" type="integer" />
			<column name="warehouse_location_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="notes1" type="text" />
			<column name="notes2" type="text" />
			<column name="notes3" type="text" />
			<column name="db_schema_id" type="integer" />
			<column name="purchase_order_number" type="varchar" />
			<column name="custom_field_1" type="varchar" />
			<column name="custom_field_2" type="varchar" />
			<column name="custom_field_3" type="varchar" />
			<column name="custom_int_1" type="integer" />
			<column name="custom_int_2" type="integer" />
			<column name="custom_int_3" type="integer" />
			<column name="doc_ref_code" type="varchar" />
			<column name="carrier_expenses" type="real" />
			<column name="registry_code" type="varchar" />
			<column name="carrier_tracking_number" type="varchar" />
			<column name="carrier_expenses_currency_id" type="smallint" />
			<column name="search_index" type="varchar" />
			<column name="dest_name" type="varchar" />
			<column name="carrier_name" type="varchar" />
			<column name="location_name" type="varchar" />
			<column name="goods_type_id" type="smallint" />
			<column name="importexport" type="smallint" />
			<column name="carrier_invoice_number" type="varchar" />
			<column name="carrier_invoice_date" type="date" />
			<column name="workflow_id" type="bigint" />
			<column name="vessel_department_id" type="smallint" />
			<column name="payment_term_id" type="smallint" />
			<column name="an_code" type="varchar" />
			<column name="ref_date" type="date" />
			<column name="ref_code" type="varchar" />
			<column name="stamp_duty" type="numeric" />
			<column name="exchange_rate" type="numeric" />
			<column name="conversion_date" type="date" />
			<column name="work_code" type="varchar" />
			<column name="work_date" type="date" />
			<column name="deleted" type="boolean" />
			<column name="dest_vat_number" type="varchar" />
			<column name="holder_vat_number" type="varchar" />
			<column name="currency_code" type="varchar" />
			<column name="currency_description" type="varchar" />
			<column name="taxable_amount" type="numeric" />
			<column name="vat_taxes" type="numeric" />
			<column name="assigned" type="smallint" />
			<column name="inventory" type="boolean" />
			<column name="location_code" type="varchar" />
			<column name="vessel_id" type="integer" />
			<column name="vessel_name" type="varchar" />
			<column name="vessel_code" type="varchar" />
			<column name="carrier_currency_code" type="varchar" />
			<column name="carrier_currency_name" type="varchar" />
			<column name="shipment_des" type="text" />
		</view>
		<view name="rows_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT r.id,
    r.doc_id,
    r.item_id,
    r.row_date,
    r."inout",
    r.model,
    r.code,
    r.description,
    r.price,
    r.vat_id,
    r.vat_rate,
    r.discount_rate,
    r.discount_comm_rate,
    r.discount_ext_rate,
    r.quantity,
    r.secondhand,
    r.dimension_id1,
    r.dimension_id2,
    r.dimensions_id3,
    r.currency_id,
    r.exchange_rate,
    r."position",
    r.delivery_date,
    r.barcode,
    r.delivered_qty,
    r.sample_qty,
    r.is_sample,
    r.ref_code,
    r.doc_origin_id,
    r.row_origin_id,
    r.anagrams_ref_id,
    r.collector_points,
    r.collector_points_forfait,
    r.package_type_id,
    r.jguid,
    r.ordered_qty,
    r.pallets,
    r.weight_on_delivery,
    r.weight_on_order,
    r.weight_on_shipping,
    r.volume,
    r.doc_origin_number,
    r.doc_origin_date,
    r.customs_doc_ref,
    r.customs_doc_type_id,
    r.purchase_order,
    r.insert_date,
    r.update_date,
    r.user_insert,
    r.user_update,
    r.size_weight,
    r.size_length,
    r.size_height,
    r.inventory_qty,
    r.inventory_weight,
    r.customs_doc_cin,
    r.customs_doc_date,
    r.supplier_id,
    r.doc_origin__number,
    r.db_schema_id,
    r.doc_head_jguid,
    r.item_jguid,
    r.container_status,
    r.rights,
    r.invoice_number,
    r.custom_field_1,
    r.custom_field_2,
    r.invoice_amount,
    r.custom_field_3,
    r.json_nested_table,
    r.invoice_date,
    r.importexport,
    r.type_id,
    r.is_description,
    r.exchange_rage,
    r.freight_qty,
    r.amount,
    r.vat_code,
    r.freight_rate,
    r.vat_description,
    r.currency_code,
    r.currency_description,
    r.flg_description,
    r.haz_class,
    s.an_last_name AS supplier_name
   FROM (documents.rows r
     LEFT JOIN anagraph.anagraphs s ON ((s.anagraph_id = r.supplier_id)));]]></view_script>
			<column name="id" type="bigint" />
			<column name="doc_id" type="bigint" />
			<column name="item_id" type="bigint" />
			<column name="row_date" type="date" />
			<column name="inout" type="smallint" />
			<column name="model" type="varchar" />
			<column name="code" type="varchar" />
			<column name="description" type="text" />
			<column name="price" type="numeric" />
			<column name="vat_id" type="smallint" />
			<column name="vat_rate" type="numeric" />
			<column name="discount_rate" type="numeric" />
			<column name="discount_comm_rate" type="numeric" />
			<column name="discount_ext_rate" type="numeric" />
			<column name="quantity" type="numeric" />
			<column name="secondhand" type="boolean" />
			<column name="dimension_id1" type="smallint" />
			<column name="dimension_id2" type="smallint" />
			<column name="dimensions_id3" type="smallint" />
			<column name="currency_id" type="smallint" />
			<column name="exchange_rate" type="numeric" />
			<column name="position" type="smallint" />
			<column name="delivery_date" type="timestamptz" />
			<column name="barcode" type="varchar" />
			<column name="delivered_qty" type="numeric" />
			<column name="sample_qty" type="numeric" />
			<column name="is_sample" type="boolean" />
			<column name="ref_code" type="varchar" />
			<column name="doc_origin_id" type="bigint" />
			<column name="row_origin_id" type="bigint" />
			<column name="anagrams_ref_id" type="integer" />
			<column name="collector_points" type="smallint" />
			<column name="collector_points_forfait" type="smallint" />
			<column name="package_type_id" type="smallint" />
			<column name="jguid" type="uuid" />
			<column name="ordered_qty" type="numeric" />
			<column name="pallets" type="smallint" />
			<column name="weight_on_delivery" type="numeric" />
			<column name="weight_on_order" type="numeric" />
			<column name="weight_on_shipping" type="numeric" />
			<column name="volume" type="numeric" />
			<column name="doc_origin_number" type="varchar" />
			<column name="doc_origin_date" type="date" />
			<column name="customs_doc_ref" type="varchar" />
			<column name="customs_doc_type_id" type="smallint" />
			<column name="purchase_order" type="varchar" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="integer" />
			<column name="user_update" type="integer" />
			<column name="size_weight" type="numeric" />
			<column name="size_length" type="numeric" />
			<column name="size_height" type="numeric" />
			<column name="inventory_qty" type="numeric" />
			<column name="inventory_weight" type="numeric" />
			<column name="customs_doc_cin" type="char" />
			<column name="customs_doc_date" type="date" />
			<column name="supplier_id" type="integer" />
			<column name="doc_origin__number" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="doc_head_jguid" type="uuid" />
			<column name="item_jguid" type="uuid" />
			<column name="container_status" type="char" />
			<column name="rights" type="numeric" />
			<column name="invoice_number" type="varchar" />
			<column name="custom_field_1" type="varchar" />
			<column name="custom_field_2" type="varchar" />
			<column name="invoice_amount" type="numeric" />
			<column name="custom_field_3" type="varchar" />
			<column name="json_nested_table" type="jsonb" />
			<column name="invoice_date" type="date" />
			<column name="importexport" type="smallint" />
			<column name="type_id" type="smallint" />
			<column name="is_description" type="boolean" />
			<column name="exchange_rage" type="numeric" />
			<column name="freight_qty" type="numeric" />
			<column name="amount" type="money" />
			<column name="vat_code" type="varchar" />
			<column name="freight_rate" type="integer" />
			<column name="vat_description" type="varchar" />
			<column name="currency_code" type="varchar" />
			<column name="currency_description" type="varchar" />
			<column name="flg_description" type="boolean" />
			<column name="haz_class" type="varchar" />
			<column name="supplier_name" type="varchar" />
		</view>
		<sequence name="documents_seq" options="START WITH 1" />
		<sequence name="rows_seq" options="START WITH 1" />
		<sequence name="types_seq" options="START WITH 1" />
		<trigger name="attachments_view_ioi_trg" id="Trigger_259d" isSystem="false" />
		<trigger name="attachments_view_iou_trg" id="Trigger_22d2" isSystem="false" />
		<trigger name="doc_rows_view_ioi_trg" id="Trigger_d4f" isSystem="false" />
		<trigger name="doc_rows_view_iou_trg" id="Trigger_2575" isSystem="false" />
		<trigger name="doctype_bi_trg" table="types" id="Trigger_1af4" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER doctype_bi_trg BEFORE INSERT ON documents.types FOR EACH ROW EXECUTE PROCEDURE documents.doctypes_insert_id_trg()]]></string>
		</trigger>
		<trigger name="doctype_guid_bi_trg" table="types" id="Trigger_da7" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER doctype_guid_bi_trg BEFORE INSERT OR UPDATE ON documents.types FOR EACH ROW EXECUTE PROCEDURE jpublic.guid_trg()]]></string>
		</trigger>
		<trigger name="doctypegrp_bi_trg" table="type_groups" id="Trigger_437" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER doctypegrp_bi_trg BEFORE INSERT ON documents.type_groups FOR EACH ROW EXECUTE PROCEDURE documents.doctypes_insert_id_trg()]]></string>
		</trigger>
		<trigger name="doctypegrp_guid_bi_trg" table="type_groups" id="Trigger_67" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER doctypegrp_guid_bi_trg BEFORE INSERT OR UPDATE ON documents.type_groups FOR EACH ROW EXECUTE PROCEDURE jpublic.guid_trg()]]></string>
		</trigger>
		<trigger name="documents_bi_id_trg" table="heads" id="Trigger_133a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER documents_bi_id_trg BEFORE INSERT ON documents.heads FOR EACH ROW EXECUTE PROCEDURE documents.documents_insert_id_trg()]]></string>
		</trigger>
		<trigger name="heads_assigned_biu" table="heads" id="Trigger_16c1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER heads_assigned_biu BEFORE INSERT OR UPDATE ON documents.heads FOR EACH ROW EXECUTE PROCEDURE documents.heads_assigned()]]></string>
		</trigger>
		<trigger name="heads_view_iod_trg" id="Trigger_128d" isSystem="false" />
		<trigger name="heads_view_ioi_trg" id="Trigger_45b" isSystem="false" />
		<trigger name="heads_view_iou_trg" id="Trigger_14f7" isSystem="false" />
		<trigger name="pkgtypes_guid_bi_trg" table="type_groups" id="Trigger_245c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER pkgtypes_guid_bi_trg BEFORE INSERT OR UPDATE ON documents.type_groups FOR EACH ROW EXECUTE PROCEDURE jpublic.guid_trg()]]></string>
		</trigger>
		<trigger name="rows_bi_id_trg" table="rows" id="Trigger_448" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER rows_bi_id_trg BEFORE INSERT ON documents.rows FOR EACH ROW EXECUTE PROCEDURE documents.rows_insert_id_trg()]]></string>
		</trigger>
		<function name="attachments_view_insert_trg" id="Function_715" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.attachments_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
    if New.blob_id is null then
       New.blob_id:=nextval('cloud.file_seq');
    end if;
	
	if new.isresource is null then
       New.isresource := false; 
    end if;
	
	if new.jguid is null then
       New.jguid := false; 
    end if;
	
  INSERT INTO documents.attachments (
    jguid, 
    doc_id,
    blob_id,
    blob_jguid,
    location,
    filename,
    description,
    context,
    extension,
    db_schema_id
  )
  VALUES (
    new.jguid, 
    new.doc_id,
    new.blob_id,
    new.blob_jguid,
    new.location,
    new.filename,
    new.description,
    new.context,
    new.extension,
    new.db_schema_id
  );
  
  INSERT INTO cloud.blob_files (
    blob_id,
    blob_file,
    blob_size,
    db_schema_id,
    blob_key,
    db_user_id,
    ispublic,
    cblb_jguid,
    cblb_deleted,
    file_ext,
    filename,
    isresource,
    is_external,
    ex_location,
    jguid,
    insert_date,
    description
  )
  VALUES (
    new.blob_id,
    new.blob_file,
    new.blob_size,
    new.db_schema_id,
    new.blob_key,
    new.db_user_id,
    false,
    new.jguid,
    new.cblb_deleted,
    new.extension,
    new.filename,
    new.isresource,
    new.is_external,
    new.location,
    new.jguid,
    new.insert_date,
    new.description
  );  
  
  
  return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="attachments_view_update_trg" id="Function_da3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.attachments_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  UPDATE documents.attachments SET
    doc_id = new.doc_id,
    blob_id = new.blob_id,
    blob_jguid = new.blob_jguid,
    location = new.location,
    filename = new.filename,
    description = new.description,
    context = new.context,
    "extension" = new.extension,
    db_schema_id = new.db_schema_id
  WHERE 
   jguid = old.jguid;
   
   UPDATE cloud.blob_files SET
    blob_id = new.blob_id, 
    blob_file = new.blob_file,
    blob_size = new.blob_size,
    db_schema_id = new.db_schema_id,
    blob_key = new.blob_key,
    db_user_id = new.db_user_id,
    ispublic = new.ispublic,
    file_ext = new.file_ext,
    filename = new.filename,
    isresource = new.isresource,
    is_external = new.is_external,
    ex_location = new.location,
    jguid = new.blob_jguid,
    insert_date = new.insert_date,
    description = new.description
  WHERE 
    jguid = new.jguid;
   return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="doctypes_insert_id_trg" id="Function_2485" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.doctypes_insert_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id:=nextval('documents.types_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="documents_insert_id_trg" id="Function_590" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.documents_insert_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('documents.documents_seq');
      end if; 
	  
  
New.search_index = 
  system.stripstringsearch(New.doc_number, New.doc_year::character varying) 
  || system.stripstringsearch(New.holder_name, New.po_number)
  || system.stripstringsearch(New.location_name, New.registry_code)
  || system.stripstringsearch(New.dest_name, New.work_code);	  
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="heads_assigned" id="Function_1eab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.heads_assigned()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if coalesce (new.workflow_id,0) <> 0 then
    new.assigned := 2;
  else 
    new.assigned := 1; 
  end if; 
	
  return new; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="heads_view_delete_trg" id="Function_908" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.heads_view_delete_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  update documents.heads set deleted = true where id = old.id; 
  return old; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="heads_view_insert_trg" id="Function_aed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.heads_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
    if New.id is null then
        New.id:=nextval('documents.documents_seq');
     end if; 
	 
	 if New.Inventory is null then 
	    New.Inventory := True; 
	 end if; 
	    
	  
  
	New.search_index = 
	  system.stripstringsearch(New.doc_number, New.doc_year::character varying) 
	  || system.stripstringsearch(New.holder_name, New.po_number)
	  || system.stripstringsearch(New.location_name, New.registry_code)
	  || system.stripstringsearch(New.dest_name, New.work_code);	  
	  
	INSERT INTO documents.heads (
		id,
		"type_id",
		in_out,
		doc_date,
		doc_number,
		reason,
		dest_address,
		dest_postal_code,
		dest_town,
		dest_state_province,
		dest_country_iso,
		departure_date,
		delivery_methos,
		goods_description,
		packages_number,
		total_weight,
		incoterms,
		delivery_charges,
		discount_rate,
		anagraph_id,
		carrier_id,
		dest_state_province_id,
		dest_region_id,
		dest_town_id,
		currency_id,
		payment_terms_id,
		payment_terms_des,
		package_description,
		payment_term_code,
		folder_id,
		doc_state,
		holder_name,
		holder_id,
		holder_vat_id,
		holder_address,
		holder_postal_code,
		holder_town,
		holder_state_province,
		holder_country_iso,
		delivery_rate_expense,
		holder_group_id,
		amount,
		net_amount,
		financial_year,
		doc_origin_id,
		delivery_vat_id,
		delivery_vat_rate,
		accounted,
		insert_date,
		update_date,
		delivery_due_date,
		sent,
		arrival_date,
		payment_due_date,
		duties,
		paid,
		doc_fine,
		user_insert,
		user_update,
		doc_year,
		po_number_id,
		po_number,
		printed,
		contact_name,
		contact_email,
		contact_phone,
		office_id,
		warehouse_location_id,
		jguid,
		notes1,
		notes2,
		notes3,
		db_schema_id,
		purchase_order_number,
		custom_field_1,
		custom_field_2,
		custom_field_3,
		custom_int_1,
		custom_int_2,
		custom_int_3,
		doc_ref_code,
		carrier_expenses,
		registry_code,
		carrier_tracking_number,
		carrier_expenses_currency_id,
		search_index,
		dest_name,
		carrier_name,
		location_name,
		goods_type_id,
		importexport,
		carrier_invoice_number,
		carrier_invoice_date,
		workflow_id,
		vessel_department_id,
		payment_term_id,
		an_code,
		ref_date,
		ref_code,
		stamp_duty,
		exchange_rate,
		conversion_date,
		work_code,
		work_date,
		deleted,
		dest_vat_number,
		holder_vat_number,
		currency_code,
		currency_description,
		taxable_amount,
		vat_taxes,
		assigned,
		location_code,
		vessel_id,
		vessel_name,
		vessel_code
	)
	VALUES (
		new.id,
		new.type_id,
		new.in_out,
		new.doc_date,
		new.doc_number,
		new.reason,
		new.dest_address,
		new.dest_postal_code,
		new.dest_town,
		new.dest_state_province,
		new.dest_country_iso,
		new.departure_date,
		new.delivery_methos,
		new.goods_description,
		new.packages_number,
		new.total_weight,
		new.incoterms,
		new.delivery_charges,
		new.discount_rate,
		new.anagraph_id,
		new.carrier_id,
		new.dest_state_province_id,
		new.dest_region_id,
		new.dest_town_id,
		new.currency_id,
		new.payment_terms_id,
		new.payment_terms_des,
		new.package_description,
		new.payment_term_code,
		new.folder_id,
		new.doc_state,
		new.holder_name,
		new.holder_id,
		new.holder_vat_id,
		new.holder_address,
		new.holder_postal_code,
		new.holder_town,
		new.holder_state_province,
		new.holder_country_iso,
		new.delivery_rate_expense,
		new.holder_group_id,
		new.amount,
		new.net_amount,
		new.financial_year,
		new.doc_origin_id,
		new.delivery_vat_id,
		new.delivery_vat_rate,
		new.accounted,
		new.insert_date,
		new.update_date,
		new.delivery_due_date,
		new.sent,
		new.arrival_date,
		new.payment_due_date,
		new.duties,
		new.paid,
		new.doc_fine,
		new.user_insert,
		new.user_update,
		new.doc_year,
		new.po_number_id,
		new.po_number,
		new.printed,
		new.contact_name,
		new.contact_email,
		new.contact_phone,
		new.office_id,
		new.warehouse_location_id,
		new.jguid,
		new.notes1,
		new.notes2,
		new.notes3,
		new.db_schema_id,
		new.purchase_order_number,
		new.custom_field_1,
		new.custom_field_2,
		new.custom_field_3,
		new.custom_int_1,
		new.custom_int_2,
		new.custom_int_3,
		new.doc_ref_code,
		new.carrier_expenses,
		new.registry_code,
		new.carrier_tracking_number,
		new.carrier_expenses_currency_id,
		new.search_index,
		new.dest_name,
		new.carrier_name,
		new.location_name,
		new.goods_type_id,
		new.importexport,
		new.carrier_invoice_number,
		new.carrier_invoice_date,
		new.workflow_id,
		new.vessel_department_id,
		new.payment_term_id,
		new.an_code,
		new.ref_date,
		new.ref_code,
		new.stamp_duty,
		new.exchange_rate,
		new.conversion_date,
		new.work_code,
		new.work_date,
		new.deleted,
		new.dest_vat_number,
		new.holder_vat_number,
		new.currency_code,
		new.currency_description,
		new.taxable_amount,
		new.vat_taxes,
		new.assigned,
		new.inventory,
		new.location_code,
		new.vessel_id,
		new.vessel_name,
		new.vessel_code
	);

  return new;   
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="heads_view_update_trg" id="Function_227" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.heads_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
    if New.id is null then
        New.id:=old.id; 
     end if; 
	 
  UPDATE documents.heads SET
    id = new.id, 
    "type_id" = new.type_id,
    in_out = new.in_out,
    doc_date = new.doc_date,
    doc_number = new.doc_number,
    reason = new.reason,
    dest_address = new.dest_address,
    dest_postal_code = new.dest_postal_code,
    dest_town = new.dest_town,
    dest_state_province = new.dest_state_province,
    dest_country_iso = new.dest_country_iso,
    departure_date = new.departure_date,
    delivery_methos = new.delivery_methos,
    goods_description = new.goods_description,
    packages_number = new.packages_number,
    total_weight = new.total_weight,
    incoterms = new.incoterms,
    delivery_charges = new.delivery_charges,
    discount_rate = new.discount_rate,
    anagraph_id = new.anagraph_id,
    carrier_id = new.carrier_id,
    dest_state_province_id = new.dest_state_province_id,
    dest_region_id = new.dest_region_id,
    dest_town_id = new.dest_town_id,
    currency_id = new.currency_id,
    payment_terms_id = new.payment_terms_id,
    payment_terms_des = new.payment_terms_des,
    package_description = new.package_description,
    payment_term_code = new.payment_term_code,
    folder_id = new.folder_id,
    doc_state = new.doc_state,
    holder_name = new.holder_name,
    holder_id = new.holder_id,
    holder_vat_id = new.holder_vat_id,
    holder_address = new.holder_address,
    holder_postal_code = new.holder_postal_code,
    holder_town = new.holder_town,
    holder_state_province = new.holder_state_province,
    holder_country_iso = new.holder_country_iso,
    delivery_rate_expense = new.delivery_rate_expense,
    holder_group_id = new.holder_group_id,
    amount = new.amount,
    net_amount = new.net_amount,
    financial_year = new.financial_year,
    doc_origin_id = new.doc_origin_id,
    delivery_vat_id = new.delivery_vat_id,
    delivery_vat_rate = new.delivery_vat_rate,
    accounted = new.accounted,
    insert_date = new.insert_date,
    update_date = new.update_date,
    delivery_due_date = new.delivery_due_date,
    sent = new.sent,
    arrival_date = new.arrival_date,
    payment_due_date = new.payment_due_date,
    duties = new.duties,
    paid = new.paid,
    doc_fine = new.doc_fine,
    user_insert = new.user_insert,
    user_update = new.user_update,
    doc_year = new.doc_year,
    po_number_id = new.po_number_id,
    po_number = new.po_number,
    printed = new.printed,
    contact_name = new.contact_name,
    contact_email = new.contact_email,
    contact_phone = new.contact_phone,
    office_id = new.office_id,
    warehouse_location_id = new.warehouse_location_id,
    jguid = new.jguid,
    notes1 = new.notes1,
    notes2 = new.notes2,
    notes3 = new.notes3,
    db_schema_id = new.db_schema_id,
    purchase_order_number = new.purchase_order_number,
    custom_field_1 = new.custom_field_1,
    custom_field_2 = new.custom_field_2,
    custom_field_3 = new.custom_field_3,
    custom_int_1 = new.custom_int_1,
    custom_int_2 = new.custom_int_2,
    custom_int_3 = new.custom_int_3,
    doc_ref_code = new.doc_ref_code,
    carrier_expenses = new.carrier_expenses,
    registry_code = new.registry_code,
    carrier_tracking_number = new.carrier_tracking_number,
    carrier_expenses_currency_id = new.carrier_expenses_currency_id,
    search_index = new.search_index,
    dest_name = new.dest_name,
    carrier_name = new.carrier_name,
    location_name = new.location_name,
    goods_type_id = new.goods_type_id,
    importexport = new.importexport,
    carrier_invoice_number = new.carrier_invoice_number,
    carrier_invoice_date = new.carrier_invoice_date,
    workflow_id = new.workflow_id,
    vessel_department_id = new.vessel_department_id,
    payment_term_id = new.payment_term_id,
    an_code = new.an_code,
    ref_date = new.ref_date,
    ref_code = new.ref_code,
    stamp_duty = new.stamp_duty,
    exchange_rate = new.exchange_rate,
    conversion_date = new.conversion_date,
    work_code = new.work_code,
    work_date = new.work_date,
    deleted = new.deleted,
    dest_vat_number = new.dest_vat_number,
    holder_vat_number = new.holder_vat_number,
    currency_code = new.currency_code,
    currency_description = new.currency_description,
    taxable_amount = new.taxable_amount,
    vat_taxes = new.vat_taxes,
    assigned = new.assigned,
    inventory = new.inventory,
	location_code = new.location_code,
	vessel_id = new.vessel_id,
	vessel_name = new.vessel_name,
	vessel_code = new.vessel_code
  WHERE 
    (id = old.id) ;
  return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="rows_insert_id_trg" id="Function_13dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.rows_insert_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('documents.rows_seq');
      end if; 
     if New.discount_ext_rate is null then
          New.discount_ext_rate:=0;
      end if; 	
     if New.discount_rate is null then
          New.discount_rate:=0;
      end if; 
     if New.discount_comm_rate is null then
          New.discount_comm_rate:=0;
      end if; 
	  
     if New.quantity is null then
          New.quantity :=0;
      end if; 
	  
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="rows_view_insert_trg" id="Function_258d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.rows_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('documents.rows_seq');
      end if; 
	  
     if New.discount_ext_rate is null then
          New.discount_ext_rate:=0;
      end if; 	
	  
     if New.discount_rate is null then
          New.discount_rate:=0;
      end if; 
	  
     if New.discount_comm_rate is null then
          New.discount_comm_rate:=0;
      end if; 
	  
     if New.quantity is null then
          New.quantity :=0;
      end if; 
	  
    INSERT INTO documents.rows (
    id,
    doc_id,
    item_id,
    row_date,
    "inout",
    model,
    code,
    description,
    price,
    vat_id,
    vat_rate,
    discount_rate,
    discount_comm_rate,
    discount_ext_rate,
    quantity,
    secondhand,
    dimension_id1,
    dimension_id2,
    dimensions_id3,
    currency_id,
    exchange_rate,
    position,
    delivery_date,
    barcode,
    delivered_qty,
    sample_qty,
    is_sample,
    ref_code,
    doc_origin_id,
    row_origin_id,
    anagrams_ref_id,
    collector_points,
    collector_points_forfait,
    package_type_id,
    jguid,
    ordered_qty,
    pallets,
    weight_on_delivery,
    weight_on_order,
    weight_on_shipping,
    volume,
    doc_origin_number,
    doc_origin_date,
    customs_doc_ref,
    customs_doc_type_id,
    purchase_order,
    insert_date,
    update_date,
    user_insert,
    user_update,
    size_weight,
    size_length,
    size_height,
    inventory_qty,
    inventory_weight,
    customs_doc_cin,
    customs_doc_date,
    supplier_id,
    doc_origin__number,
    db_schema_id,
    doc_head_jguid,
    item_jguid,
    container_status,
    rights,
    invoice_number,
    custom_field_1,
    custom_field_2,
    invoice_amount,
    custom_field_3,
    json_nested_table,
    invoice_date,
    importexport,
    "type_id",
    is_description,
    exchange_rage,
    freight_qty,
    amount,
    vat_code,
    freight_rate,
    vat_description,
    currency_code,
    currency_description,
    flg_description,
	haz_class
  )
  VALUES (
    new.id,
    new.doc_id,
    new.item_id,
    new.row_date,
    new.inout,
    new.model,
    new.code,
    new.description,
    new.price,
    new.vat_id,
    new.vat_rate,
    new.discount_rate,
    new.discount_comm_rate,
    new.discount_ext_rate,
    new.quantity,
    new.secondhand,
    new.dimension_id1,
    new.dimension_id2,
    new.dimensions_id3,
    new.currency_id,
    new.exchange_rate,
    new.position,
    new.delivery_date,
    new.barcode,
    new.delivered_qty,
    new.sample_qty,
    new.is_sample,
    new.ref_code,
    new.doc_origin_id,
    new.row_origin_id,
    new.anagrams_ref_id,
    new.collector_points,
    new.collector_points_forfait,
    new.package_type_id,
    new.jguid,
    new.ordered_qty,
    new.pallets,
    new.weight_on_delivery,
    new.weight_on_order,
    new.weight_on_shipping,
    new.volume,
    new.doc_origin_number,
    new.doc_origin_date,
    new.customs_doc_ref,
    new.customs_doc_type_id,
    new.purchase_order,
    new.insert_date,
    new.update_date,
    new.user_insert,
    new.user_update,
    new.size_weight,
    new.size_length,
    new.size_height,
    new.inventory_qty,
    new.inventory_weight,
    new.customs_doc_cin,
    new.customs_doc_date,
    new.supplier_id,
    new.doc_origin__number,
    new.db_schema_id,
    new.doc_head_jguid,
    new.item_jguid,
    new.container_status,
    new.rights,
    new.invoice_number,
    new.custom_field_1,
    new.custom_field_2,
    new.invoice_amount,
    new.custom_field_3,
    new.json_nested_table,
    new.invoice_date,
    new.importexport,
    new.type_id,
    new.is_description,
    new.exchange_rage,
    new.freight_qty,
    new.amount,
    new.vat_code,
    new.freight_rate,
    new.vat_description,
    new.currency_code,
    new.currency_description,
    new.flg_description,
	new.haz_class
  );
  return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="rows_view_update_trg" id="Function_208a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.rows_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  UPDATE documents.rows SET
    doc_id = new.doc_id,
    item_id = new.item_id,
    row_date = new.row_date,
    inout = new.inout,
    model = new.model,
    code = new.code,
    description = new.description,
    price = new.price,
    vat_id = new.vat_id,
    vat_rate = new.vat_rate,
    discount_rate = new.discount_rate,
    discount_comm_rate = new.discount_comm_rate,
    discount_ext_rate = new.discount_ext_rate,
    quantity = new.quantity,
    secondhand = new.secondhand,
    dimension_id1 = new.dimension_id1,
    dimension_id2 = new.dimension_id2,
    dimensions_id3 = new.dimensions_id3,
    currency_id = new.currency_id,
    exchange_rate = new.exchange_rate,
    position = new.position,
    delivery_date = new.delivery_date,
    barcode = new.barcode,
    delivered_qty = new.delivered_qty,
    sample_qty = new.sample_qty,
    is_sample = new.is_sample,
    ref_code = new.ref_code,
    doc_origin_id = new.doc_origin_id,
    row_origin_id = new.row_origin_id,
    anagrams_ref_id = new.anagrams_ref_id,
    collector_points = new.collector_points,
    collector_points_forfait = new.collector_points_forfait,
    package_type_id = new.package_type_id,
    jguid = new.jguid,
    ordered_qty = new.ordered_qty,
    pallets = new.pallets,
    weight_on_delivery = new.weight_on_delivery,
    weight_on_order = new.weight_on_order,
    weight_on_shipping = new.weight_on_shipping,
    volume = new.volume,
    doc_origin_number = new.doc_origin_number,
    doc_origin_date = new.doc_origin_date,
    customs_doc_ref = new.customs_doc_ref,
    customs_doc_type_id = new.customs_doc_type_id,
    purchase_order = new.purchase_order,
    insert_date = new.insert_date,
    update_date = new.update_date,
    user_insert = new.user_insert,
    user_update = new.user_update,
    size_weight = new.size_weight,
    size_length = new.size_length,
    size_height = new.size_height,
    inventory_qty = new.inventory_qty,
    inventory_weight = new.inventory_weight,
    customs_doc_cin = new.customs_doc_cin,
    customs_doc_date = new.customs_doc_date,
    supplier_id = new.supplier_id,
    doc_origin__number = new.doc_origin__number,
    db_schema_id = new.db_schema_id,
    doc_head_jguid = new.doc_head_jguid,
    item_jguid = new.item_jguid,
    container_status = new.container_status,
    rights = new.rights,
    invoice_number = new.invoice_number,
    custom_field_1 = new.custom_field_1,
    custom_field_2 = new.custom_field_2,
    invoice_amount = new.invoice_amount,
    custom_field_3 = new.custom_field_3,
    json_nested_table = new.json_nested_table,
    invoice_date = new.invoice_date,
    importexport = new.importexport,
    type_id = new.type_id,
    is_description = new.is_description,
    exchange_rage = new.exchange_rage,
    freight_qty = new.freight_qty,
    amount = new.amount,
    vat_code = new.vat_code,
    freight_rate = new.freight_rate,
    vat_description = new.vat_description,
    currency_code = new.currency_code,
    currency_description = new.currency_description,
    flg_description = new.flg_description,
	haz_class = new.haz_class
  WHERE 
    (jguid = old.jguid) ;
  return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="types_get_id_by_code" id="Function_10b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION documents.types_get_id_by_code(p_code character varying, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R smallint; 
begin
  R := null; 
  select into I count(1)
     from documents.types a
	 where
	    Lower(a.code) = Lower(p_code) 
		and db_schema_id = p_schema_id; 
		
	if I = 1 then
    select into R id 
      from documents.types a
	 where
	    Lower(a.code) = Lower(p_code) 
		and db_schema_id = p_schema_id; 
	end if; 
	
   return R; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="football" catalogname="ergomercator" >
		<comment><![CDATA[This is the football schema for the Leagues]]></comment>
		<table name="arguments_championships" >
			<column name="argument_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="championships_arguments_pk" unique="PRIMARY_KEY" >
				<column name="argument_id" />
				<column name="season_id" />
				<column name="league_id" />
			</index>
			<fk name="arguments_championships_leagues_fk" to_schema="ergomercator.football" to_table="ft_leagues" >
				<fk_column name="league_id" pk="league_id" />
			</fk>
			<fk name="arguments_championships_seasons_fk" to_schema="ergomercator.football" to_table="ft_seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
		</table>
		<table name="ft_calendar" >
			<comment><![CDATA[This is the football Matches Calendar, it should be used for other sports but must be revised]]></comment>
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Unique id for a calendar match and primary Key]]></comment>
			</column>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_date" type="date" length="13" decimal="0" jt="91" />
			<column name="home_team_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="visitors_team_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_visitor" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_visitors" type="smallint" length="5" decimal="0" jt="5" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="confirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="home_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="visitors_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="match_time" type="timestamp" decimal="6" jt="93" />
			<column name="referee_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="referee_second_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="referee_third_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="suspended" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="postponed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="forfeit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="filed_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fcld_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fcld_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="article_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="video_url" type="varchar" length="1024" decimal="0" jt="12" />
			<index name="ft_calendars_pk" unique="PRIMARY_KEY" >
				<column name="match_id" />
			</index>
			<index name="fcld_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fcld_jguid" />
			</index>
			<index name="ft_calendar_home_uk" unique="UNIQUE_KEY" >
				<column name="league_id" />
				<column name="season_id" />
				<column name="match_day_number" />
				<column name="home_team_id" />
			</index>
			<index name="ft_calendar_visitor_uk" unique="UNIQUE_KEY" >
				<column name="league_id" />
				<column name="match_day_number" />
				<column name="season_id" />
				<column name="visitors_team_id" />
			</index>
			<index name="ft_calendar_season_league_cluster" unique="NORMAL" options="clustered" >
				<column name="league_id" />
				<column name="season_id" />
			</index>
			<index name="ft_calendar_home_team_id_ndx" unique="NORMAL" >
				<column name="home_team_id" />
			</index>
			<index name="idx_ft_calendar" unique="NORMAL" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="match_day_number" />
			</index>
			<fk name="ft_calendars_champ_fk" to_schema="ergomercator.football" to_table="ft_championships" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
			</fk>
			<fk name="fk_ft_calendar" to_schema="ergomercator.football" to_table="ft_match_days" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
				<fk_column name="match_day_number" pk="match_day_number" />
			</fk>
		</table>
		<table name="ft_championships" >
			<comment><![CDATA[This is the table of all the Championships]]></comment>
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Unique id for season id]]></comment>
			</column>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[The unique id of the league in this championship]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="promoted" type="smallint" length="5" decimal="0" jt="5" />
			<column name="playoff" type="smallint" length="5" decimal="0" jt="5" />
			<column name="relegation" type="smallint" length="5" decimal="0" jt="5" />
			<column name="champions" type="smallint" length="5" decimal="0" jt="5" />
			<column name="playout" type="smallint" length="5" decimal="0" jt="5" />
			<column name="teams" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="fchm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fchm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_championships_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
			</index>
			<index name="fchm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fchm_jguid" />
			</index>
			<index name="fki_ft_campionships_leagues_fk" unique="NORMAL" >
				<column name="league_id" />
			</index>
			<fk name="ft_campionships_leagues_fk" to_schema="ergomercator.football" to_table="ft_leagues" >
				<fk_column name="league_id" pk="league_id" />
			</fk>
			<fk name="ft_championships_seasons_fk" to_schema="ergomercator.football" to_table="ft_seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
		</table>
		<table name="ft_club_seasons" >
			<column name="club_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="season_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fcls_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fcls_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_club_seasons_pk" unique="PRIMARY_KEY" >
				<column name="club_id" />
				<column name="season_id" />
			</index>
			<index name="fcls_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fcls_jguid" />
			</index>
			<fk name="ft_club_seasons_clubs_fk" to_schema="ergomercator.football" to_table="ft_clubs" >
				<fk_column name="club_id" pk="club_id" />
			</fk>
			<fk name="ft_club_seasons_seasons_fk" to_schema="ergomercator.football" to_table="ft_seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
		</table>
		<table name="ft_clubs" >
			<comment><![CDATA[These are the football or ... well .. sport clubs :)]]></comment>
			<column name="club_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[This is the Football club unique ID....]]></comment>
			</column>
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[The football Club Name]]></comment>
			</column>
			<column name="Foundation_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Date of 'birth' of the football club :)]]></comment>
			</column>
			<column name="president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="stadium_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="vice_president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="team_manager" type="varchar" length="128" decimal="0" jt="12" />
			<column name="athletic_manager" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[direttore sportivo]]></comment>
			</column>
			<column name="colors" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[colori sociali]]></comment>
			</column>
			<column name="website" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="club_image" type="bytea" decimal="0" jt="-2" />
			<column name="fclb_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fclb_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_clubs_pk" unique="PRIMARY_KEY" >
				<column name="club_id" />
			</index>
			<index name="fclb_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fclb_jguid" />
			</index>
		</table>
		<table name="ft_event_types" >
			<column name="event_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[Event type ID]]></comment>
			</column>
			<column name="event_des" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[Short Event Description]]></comment>
			</column>
			<column name="Goal" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="subst" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="save" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="accident" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fvnt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fvnt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_events_pk" unique="PRIMARY_KEY" >
				<column name="event_id" />
			</index>
			<index name="fvnt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fvnt_jguid" />
			</index>
		</table>
		<table name="ft_field_types" >
			<column name="field_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="field_type_des" type="varchar" length="30" decimal="0" jt="12" />
			<column name="players" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftps_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftps_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_field_types_pk" unique="PRIMARY_KEY" >
				<column name="field_type_id" />
			</index>
			<index name="ftps_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftps_jguid" />
			</index>
		</table>
		<table name="ft_fields" >
			<column name="field_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="district_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="telephone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="img_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="ffld_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ffld_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_fields_pkey" unique="PRIMARY_KEY" >
				<column name="field_id" />
			</index>
			<index name="ffld_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ffld_jguid" />
			</index>
		</table>
		<table name="ft_league_groups" >
			<column name="league_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_group_name" type="varchar" length="20" decimal="0" jt="12" />
			<column name="league_group_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="flgp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="flgp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_league_groups_pk" unique="PRIMARY_KEY" >
				<column name="league_group_id" />
			</index>
			<index name="flgp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="flgp_jguid" />
			</index>
			<index name="ft_league_group_codes_uk" unique="UNIQUE_KEY" >
				<column name="league_group_code" />
			</index>
		</table>
		<table name="ft_leagues" >
			<comment><![CDATA[These are all the leagues you can find in all seasons in a Country or Federation or Region]]></comment>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[This is the unique id of a League]]></comment>
			</column>
			<column name="league_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[This is the name of the league]]></comment>
			</column>
			<column name="iso_country_code" type="char" length="3" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA['ITA'::bpchar]]></defo>
				<comment><![CDATA[external iso country code on iso table default 'ITA']]></comment>
			</column>
			<column name="league_position" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[position]]></comment>
			</column>
			<column name="league_code" type="varchar" length="6" decimal="0" jt="12" >
				<comment><![CDATA[The shortcode for the league]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="remote_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="promotedcss" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA['promotion'::character varying]]></defo>
			</column>
			<column name="playoffcss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['playoff'::character varying]]></defo>
			</column>
			<column name="championscss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['champions'::character varying]]></defo>
			</column>
			<column name="playoutcss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['playout'::character varying]]></defo>
			</column>
			<column name="relegationcss" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['retrocession'::character varying]]></defo>
			</column>
			<column name="all_players" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[If all players can enter in the match (like on 5 player's or 7 player's football teams) is true else (on 11 player's leagues is set to false)]]></comment>
			</column>
			<column name="flgs_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="flgs_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_leagues_pk" unique="PRIMARY_KEY" >
				<column name="league_id" />
			</index>
			<index name="flgs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="flgs_jguid" />
			</index>
			<index name="ft_leagues_name_uk" unique="UNIQUE_KEY" >
				<column name="league_name" />
				<column name="iso_country_code" />
			</index>
			<index name="league_name_ndx" unique="NORMAL" >
				<column name="league_name" />
			</index>
		</table>
		<table name="ft_match_days" >
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="match_day_date" type="date" length="13" decimal="0" jt="91" />
			<column name="match_day_played" type="date" length="13" decimal="0" jt="91" />
			<column name="rest_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[32]]></defo>
			</column>
			<column name="fmtd_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fmtd_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="matc_days_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="match_day_number" />
			</index>
			<index name="fmtd_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fmtd_jguid" />
			</index>
			<index name="idx_ft_match_days" unique="NORMAL" >
				<column name="season_id" />
				<column name="league_id" />
			</index>
			<fk name="fk_ft_match_days" to_schema="ergomercator.football" to_table="ft_championships" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
			</fk>
		</table>
		<table name="ft_match_events" >
			<column name="match_events_row_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="player_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="event_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="minute" type="integer" length="10" decimal="0" jt="4" />
			<column name="value" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[The Value inserted to count]]></comment>
			</column>
			<column name="notes" type="varchar" length="256" decimal="0" jt="12" />
			<column name="favor_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="half" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fmth_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fmth_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_match_events_pk" unique="PRIMARY_KEY" >
				<column name="match_events_row_id" />
			</index>
			<index name="fmth_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fmth_jguid" />
			</index>
			<index name="ft_match_events_matches_fk_ndx" unique="NORMAL" >
				<column name="match_id" />
			</index>
			<index name="ft_match_events_player_ndx" unique="NORMAL" >
				<column name="player_id" />
			</index>
			<fk name="ft_matchevent_calendar_fk" to_schema="ergomercator.football" to_table="ft_calendar" >
				<fk_column name="match_id" pk="match_id" />
			</fk>
			<fk name="ft_matchevent_player_fk" to_schema="ergomercator.football" to_table="ft_players" >
				<fk_column name="player_id" pk="anagraph_id" />
			</fk>
			<fk name="ft_matchevent_team_fk" to_schema="ergomercator.football" to_table="ft_teams" >
				<fk_column name="team_id" pk="team_id" />
			</fk>
		</table>
		<table name="ft_match_players" >
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="player_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="minutes" type="smallint" length="5" decimal="0" jt="5" />
			<column name="vote" type="real" length="8" decimal="8" jt="7" />
			<column name="played" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="subst_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="goal" type="smallint" length="5" decimal="0" jt="5" />
			<column name="owngoal" type="smallint" length="5" decimal="0" jt="5" />
			<column name="lostgoal" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="since" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="until" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[90]]></defo>
			</column>
			<column name="sent_off" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[If The player was sent off from the match usually is a 0 value]]></comment>
			</column>
			<column name="injuries" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fmtp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fmtp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_match_players_pk" unique="PRIMARY_KEY" >
				<column name="match_id" />
				<column name="player_id" />
				<column name="team_id" />
			</index>
			<index name="fmtp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fmtp_jguid" />
			</index>
			<index name="ft_match_players_player_team_ndx" unique="NORMAL" options="clustered" >
				<column name="player_id" />
				<column name="team_id" />
			</index>
			<index name="ft_match_players_match_id_fk_ndx" unique="NORMAL" >
				<column name="match_id" />
			</index>
			<index name="ft_match_players_team_id_ndx" unique="NORMAL" >
				<column name="team_id" />
			</index>
			<fk name="ft_matchplayers_match_fk" to_schema="ergomercator.football" to_table="ft_calendar" >
				<fk_column name="match_id" pk="match_id" />
			</fk>
		</table>
		<table name="ft_player_career" >
			<column name="career_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="season_code" type="varchar" length="50" decimal="0" jt="12" />
			<column name="team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="league_code" type="varchar" length="50" decimal="0" jt="12" />
			<column name="league_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="matches" type="varchar" length="50" decimal="0" jt="12" />
			<column name="goals" type="varchar" length="50" decimal="0" jt="12" />
			<column name="player_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="notes" type="varchar" length="255" decimal="0" jt="12" />
			<column name="votes" type="float8" length="17" decimal="17" jt="6" />
			<column name="minutes" type="integer" length="10" decimal="0" jt="4" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="owngoal" type="smallint" length="5" decimal="0" jt="5" />
			<column name="lostgoal" type="smallint" length="5" decimal="0" jt="5" />
			<column name="injuries" type="smallint" length="5" decimal="0" jt="5" />
			<column name="sent_off" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fplc_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fplc_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_player_career_pk" unique="PRIMARY_KEY" >
				<column name="career_id" />
			</index>
			<index name="fplc_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fplc_jguid" />
			</index>
			<index name="fki_ft_player_career_cloud_image_fk" unique="NORMAL" >
				<column name="image_id" />
			</index>
			<index name="ft_playercareer_playerid_ndx" unique="NORMAL" >
				<column name="player_id" />
			</index>
			<index name="ft_playercareer_season_ndx" unique="NORMAL" >
				<column name="season_id" />
			</index>
		</table>
		<table name="ft_players" >
			<comment><![CDATA[The player's table]]></comment>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="birth_date" type="date" length="13" decimal="0" jt="91" />
			<column name="birth_year" type="smallint" length="5" decimal="0" jt="5" />
			<column name="first_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="family_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="birth_place" type="varchar" length="128" decimal="0" jt="12" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="role" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="height" type="smallint" length="5" decimal="0" jt="5" />
			<column name="weight" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pplr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="pplr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_players_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
			</index>
			<index name="pplr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="pplr_jguid" />
			</index>
			<index name="idx_ft_players" unique="NORMAL" >
				<column name="role" />
			</index>
			<fk name="fk_ft_players" to_schema="ergomercator.football" to_table="ft_roles" >
				<fk_column name="role" pk="role_id" />
			</fk>
		</table>
		<table name="ft_ranking_table" >
			<column name="ranking_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="played_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="won_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="lost_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="tied_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_won" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_tied" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_played" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_won" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_tied" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_done" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="frkt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="frkt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_ranking_table_pk" unique="PRIMARY_KEY" >
				<column name="ranking_id" />
			</index>
			<index name="frkt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="frkt_jguid" />
			</index>
			<index name="ft_ranking_table_uk" unique="UNIQUE_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="team_id" />
			</index>
			<fk name="ft_ranking_league_fk" to_schema="ergomercator.football" to_table="ft_leagues" >
				<fk_column name="league_id" pk="league_id" />
			</fk>
			<fk name="ft_ranking_season_fk" to_schema="ergomercator.football" to_table="ft_seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
			<fk name="ft_ranking_team_fk" to_schema="ergomercator.football" to_table="ft_teams" >
				<fk_column name="team_id" pk="team_id" />
			</fk>
		</table>
		<table name="ft_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_code" type="varchar" length="5" decimal="0" jt="12" />
			<column name="role_name" type="varchar" length="30" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="frls_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="frls_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_roles_pk" unique="PRIMARY_KEY" >
				<column name="role_id" />
			</index>
			<index name="frls_jguid_uk" unique="UNIQUE_KEY" >
				<column name="frls_jguid" />
			</index>
		</table>
		<table name="ft_seasons" >
			<comment><![CDATA[This is the football seasons database]]></comment>
			<column name="season_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[This is the Season ID unique identifier. Every Season can have a 'starting date' and 'ending date' but they are quite optional.]]></comment>
			</column>
			<column name="season_des" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[This is the real Description of the season]]></comment>
			</column>
			<column name="season_code" type="char" length="5" decimal="0" jt="1" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[11]]></defo>
			</column>
			<column name="order_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="remote_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fssn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fssn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_seasons_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
			</index>
			<index name="fssn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fssn_jguid" />
			</index>
		</table>
		<table name="ft_teams" >
			<comment><![CDATA[one of the teams of the club that partecipate in a championship]]></comment>
			<column name="team_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Unique id for the team]]></comment>
			</column>
			<column name="club_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="team_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="trainer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[numero id anagrafica allenatore]]></comment>
			</column>
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="image" type="bytea" decimal="0" jt="-2" />
			<column name="ftms_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftms_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_teams_pk" unique="PRIMARY_KEY" >
				<column name="team_id" />
			</index>
			<index name="ftms_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftms_jguid" />
			</index>
			<index name="fki_ft_teams_clubs_fk" unique="NORMAL" >
				<column name="club_id" />
			</index>
			<fk name="ft_teams_clubs_fk" to_schema="ergomercator.football" to_table="ft_clubs" delete_action="cascade" update_action="cascade" >
				<fk_column name="club_id" pk="club_id" />
			</fk>
		</table>
		<table name="ft_teams_championships" >
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" />
			<column name="penalty" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="team_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="remote_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftmc_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftmc_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_teams_champ_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="team_id" />
			</index>
			<index name="ftmc_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftmc_jguid" />
			</index>
			<index name="ft_teamchamp_ft_teams_fk" unique="NORMAL" >
				<column name="team_id" />
			</index>
			<index name="ft_teams_championships_season_fk" unique="NORMAL" >
				<column name="season_id" />
			</index>
			<fk name="ft_teamchamp_champ_fk" to_schema="ergomercator.football" to_table="ft_championships" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
			</fk>
			<fk name="ft_teams_championships_teams_fk" to_schema="ergomercator.football" to_table="ft_teams" >
				<fk_column name="team_id" pk="team_id" />
			</fk>
		</table>
		<table name="ft_teams_history" >
			<column name="team_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_code" type="varchar" length="12" decimal="0" jt="12" mandatory="y" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="varchar" length="3" decimal="0" jt="12" />
			<column name="result_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="rank_code" type="varchar" length="12" decimal="0" jt="12" />
			<column name="team_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftmh_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftmh_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_teams_history_pk" unique="PRIMARY_KEY" >
				<column name="team_id" />
				<column name="season_id" />
				<column name="league_code" />
			</index>
			<index name="ftmh_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftmh_jguid" />
			</index>
		</table>
		<table name="ft_teams_players" >
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Team ID]]></comment>
			</column>
			<column name="player_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[foreing key to player anagraph id]]></comment>
			</column>
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[foreign key to season_id]]></comment>
			</column>
			<column name="since" type="date" length="13" decimal="0" jt="91" />
			<column name="until" type="date" length="13" decimal="0" jt="91" />
			<column name="club_origin_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="goal" type="smallint" length="5" decimal="0" jt="5" />
			<column name="owngoal" type="smallint" length="5" decimal="0" jt="5" />
			<column name="lostgoal" type="smallint" length="5" decimal="0" jt="5" />
			<column name="sent_off" type="smallint" length="5" decimal="0" jt="5" />
			<column name="injuries" type="smallint" length="5" decimal="0" jt="5" />
			<column name="minutes" type="smallint" length="5" decimal="0" jt="5" />
			<column name="matches" type="integer" length="10" decimal="0" jt="4" />
			<column name="goals" type="integer" length="10" decimal="0" jt="4" />
			<column name="votes" type="float8" length="17" decimal="17" jt="6" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftmp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftmp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_team_players_pk" unique="PRIMARY_KEY" >
				<column name="team_id" />
				<column name="player_id" />
				<column name="season_id" />
			</index>
			<index name="ftmp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftmp_jguid" />
			</index>
			<fk name="ft_playerteam_players_fk" to_schema="ergomercator.football" to_table="ft_players" >
				<fk_column name="player_id" pk="anagraph_id" />
			</fk>
			<fk name="ft_playerteam_season_id" to_schema="ergomercator.football" to_table="ft_seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
			<fk name="ft_players_teams_fk" to_schema="ergomercator.football" to_table="ft_teams" >
				<fk_column name="team_id" pk="team_id" />
			</fk>
		</table>
		<table name="ft_teams_trainers" >
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Team ID]]></comment>
			</column>
			<column name="trainer_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[foreing key to trainer anagraph id]]></comment>
			</column>
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[foreign key to season_id]]></comment>
			</column>
			<column name="since" type="date" length="13" decimal="0" jt="91" />
			<column name="until" type="date" length="13" decimal="0" jt="91" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftmt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftmt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_teams_trainers_pk" unique="PRIMARY_KEY" >
				<column name="team_id" />
				<column name="trainer_id" />
				<column name="season_id" />
			</index>
			<index name="ftmt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftmt_jguid" />
			</index>
			<fk name="ft_trainerteam_season_id" to_schema="ergomercator.football" to_table="ft_seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
			<fk name="ft_trainers_teams_fk" to_schema="ergomercator.football" to_table="ft_teams" >
				<fk_column name="team_id" pk="team_id" />
			</fk>
			<fk name="ft_trainerteam_trainers_fk" to_schema="ergomercator.football" to_table="ft_trainers" >
				<fk_column name="trainer_id" pk="trainer_id" />
			</fk>
		</table>
		<table name="ft_trainers" >
			<comment><![CDATA[Football Trainers Table

This table is (or can be) linked to the Anagraph Table in the anagraph schema]]></comment>
			<column name="trainer_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[The unique trainer id is an auto increment column and primary key]]></comment>
			</column>
			<column name="first_name" type="varchar" length="60" decimal="0" jt="12" >
				<comment><![CDATA[First Name of trainer linked to the Anagraph Table]]></comment>
			</column>
			<column name="last_name" type="varchar" length="60" decimal="0" jt="12" >
				<comment><![CDATA[The last name of trainer linked with anagraph Table ....]]></comment>
			</column>
			<column name="birthdate" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[The trainer's  date of birth.]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftrn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftrn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_trainers_pk" unique="PRIMARY_KEY" >
				<column name="trainer_id" />
			</index>
			<index name="ftrn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftrn_jguid" />
			</index>
		</table>
		<table name="ft_trainers_career" >
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Team ID]]></comment>
			</column>
			<column name="trainer_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[foreing key to trainer anagraph id]]></comment>
			</column>
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[foreign key to season_id]]></comment>
			</column>
			<column name="since" type="date" length="13" decimal="0" jt="91" />
			<column name="until" type="date" length="13" decimal="0" jt="91" />
			<column name="ending_reason_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="trainer_role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftrc_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ftrc_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ft_trainers_career_pk" unique="PRIMARY_KEY" >
				<column name="team_id" />
				<column name="trainer_id" />
				<column name="season_id" />
			</index>
			<index name="ftrc_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ftrc_jguid" />
			</index>
			<fk name="ft_rainercareer_season_id" to_schema="ergomercator.football" to_table="ft_seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
			<fk name="ft_rainercareer_teams_fk" to_schema="ergomercator.football" to_table="ft_teams" >
				<fk_column name="team_id" pk="team_id" />
			</fk>
			<fk name="ft_trainercareer_trainers_fk" to_schema="ergomercator.football" to_table="ft_trainers" >
				<fk_column name="trainer_id" pk="trainer_id" />
			</fk>
		</table>
		<table name="json_calendar" >
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="match_day" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="calendar_json" type="json" decimal="0" jt="2000" />
			<column name="calendar_array" type="_json" decimal="0" jt="2003" />
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Unique id for a calendar match and primary Key]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fsnc_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="fsnc_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="json_calendar_pk" unique="PRIMARY_KEY" >
				<column name="league_id" />
				<column name="season_id" />
				<column name="match_day" />
			</index>
			<index name="fsnc_jguid_uk" unique="UNIQUE_KEY" >
				<column name="fsnc_jguid" />
			</index>
		</table>
		<table name="tmpranking" >
			<column name="ranking_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="played_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="won_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="lost_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="tied_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_won" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_tied" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_played" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_won" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_tied" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_done" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="frkt_jguid" type="varchar" length="40" decimal="0" jt="12" />
			<column name="frkt_deleted" type="boolean" length="1" decimal="0" jt="-7" />
		</table>
		<view name="calendar_ranks" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c.club_name,
    m.league_id,
    m.season_id,
    count(m.points_home) AS played_home,
    0 AS played_visitor,
    sum(nvl(m.points_home, 0)) AS points_home,
    0 AS points_visitor,
    sum(nvl(m.goal_home, 0)) AS goal_win_home,
    sum(nvl(m.goal_visitor, 0)) AS goal_lost_home,
    0 AS goal_lost_visitor,
    0 AS goal_win_visitor,
    sum(decode((m.points_home)::bigint, (0)::bigint, (1)::bigint, (0)::bigint)) AS lost_home,
    sum(decode((m.points_home)::bigint, (1)::bigint, (1)::bigint, (0)::bigint)) AS pair_home,
    sum(decode((m.points_home)::bigint, (3)::bigint, (1)::bigint, (0)::bigint)) AS win_home,
    0 AS lost_visitor,
    0 AS pair_visitor,
    0 AS win_visitor,
    t.team_id,
    m.match_day_number
   FROM football.ft_calendar m,
    football.ft_clubs c,
    football.ft_teams t
  WHERE ((t.club_id = c.club_id) AND (m.home_team_id = t.team_id) AND (m.goal_visitor IS NOT NULL) AND (m.goal_home IS NOT NULL))
  GROUP BY c.club_name, m.league_id, m.season_id, t.team_id, m.match_day_number
UNION
 SELECT c.club_name,
    m.league_id,
    m.season_id,
    0 AS played_home,
    count(m.points_visitors) AS played_visitor,
    0 AS points_home,
    sum(nvl(m.points_visitors, 0)) AS points_visitor,
    0 AS goal_win_home,
    0 AS goal_lost_home,
    sum(nvl(m.goal_home, 0)) AS goal_lost_visitor,
    sum(nvl(m.goal_visitor, 0)) AS goal_win_visitor,
    0 AS lost_home,
    0 AS pair_home,
    0 AS win_home,
    sum(decode((m.points_visitors)::bigint, (0)::bigint, (1)::bigint, (0)::bigint)) AS lost_visitor,
    sum(decode((m.points_visitors)::bigint, (1)::bigint, (1)::bigint, (0)::bigint)) AS pair_visitor,
    sum(decode((m.points_visitors)::bigint, (3)::bigint, (1)::bigint, (0)::bigint)) AS win_visitor,
    t.team_id,
    m.match_day_number
   FROM football.ft_calendar m,
    football.ft_clubs c,
    football.ft_teams t
  WHERE ((t.club_id = c.club_id) AND (m.visitors_team_id = t.team_id) AND (m.goal_visitor IS NOT NULL) AND (m.goal_home IS NOT NULL))
  GROUP BY c.club_name, m.league_id, m.season_id, t.team_id, m.match_day_number;]]></view_script>
			<column name="club_name" type="varchar" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="played_home" type="bigint" />
			<column name="played_visitor" type="bigint" />
			<column name="points_home" type="bigint" />
			<column name="points_visitor" type="bigint" />
			<column name="goal_win_home" type="bigint" />
			<column name="goal_lost_home" type="bigint" />
			<column name="goal_lost_visitor" type="bigint" />
			<column name="goal_win_visitor" type="bigint" />
			<column name="lost_home" type="numeric" />
			<column name="pair_home" type="numeric" />
			<column name="win_home" type="numeric" />
			<column name="lost_visitor" type="numeric" />
			<column name="pair_visitor" type="numeric" />
			<column name="win_visitor" type="numeric" />
			<column name="team_id" type="integer" />
			<column name="match_day_number" type="smallint" />
		</view>
		<view name="ft_ranking_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT calendar_ranks.club_name,
    calendar_ranks.league_id,
    calendar_ranks.season_id,
    calendar_ranks.team_id,
    sum(calendar_ranks.played_home) AS played_home,
    sum(calendar_ranks.played_visitor) AS played_visitor,
    sum(calendar_ranks.goal_win_home) AS goal_win_home,
    sum(calendar_ranks.goal_win_visitor) AS goal_win_visitor,
    sum(calendar_ranks.goal_lost_home) AS goal_lost_home,
    sum(calendar_ranks.goal_lost_visitor) AS goal_lost_visitor,
    sum(calendar_ranks.points_home) AS points_home,
    sum(calendar_ranks.points_visitor) AS points_visitor,
    (sum(calendar_ranks.points_home) + sum(calendar_ranks.points_visitor)) AS points,
    ((('-3'::integer)::numeric * sum(calendar_ranks.played_home)) + sum(calendar_ranks.points_home)) AS average_home,
    (sum(calendar_ranks.played_visitor) - sum(calendar_ranks.points_visitor)) AS average_visitor,
    (((('-3'::integer)::numeric * sum(calendar_ranks.played_home)) + sum(calendar_ranks.points_home)) + ((('-1'::integer)::numeric * sum(calendar_ranks.played_visitor)) + sum(calendar_ranks.points_visitor))) AS average,
    (sum(calendar_ranks.goal_win_home) + sum(calendar_ranks.goal_win_visitor)) AS goal_win,
    (sum(calendar_ranks.goal_lost_home) + sum(calendar_ranks.goal_lost_visitor)) AS goal_lost,
    ((sum(calendar_ranks.goal_win_home) + sum(calendar_ranks.goal_win_visitor)) - (sum(calendar_ranks.goal_lost_home) + sum(calendar_ranks.goal_lost_visitor))) AS goal_difference,
    sum(calendar_ranks.win_home) AS win_home,
    sum(calendar_ranks.lost_home) AS lost_home,
    sum(calendar_ranks.pair_home) AS pair_home,
    sum(calendar_ranks.win_visitor) AS win_visitr,
    sum(calendar_ranks.lost_visitor) AS lost_visitor,
    sum(calendar_ranks.pair_home) AS pair_visitor,
    sum((calendar_ranks.lost_home + calendar_ranks.lost_visitor)) AS lost_matches,
    sum((calendar_ranks.win_home + calendar_ranks.win_visitor)) AS win_matches,
    sum((calendar_ranks.pair_home + calendar_ranks.pair_visitor)) AS pair_matches,
    sum((calendar_ranks.played_home + calendar_ranks.played_visitor)) AS played_matches
   FROM football.calendar_ranks
  GROUP BY calendar_ranks.club_name, calendar_ranks.league_id, calendar_ranks.season_id, calendar_ranks.team_id
  ORDER BY (sum(calendar_ranks.points_home) + sum(calendar_ranks.points_visitor)) DESC, ((sum(calendar_ranks.goal_win_home) + sum(calendar_ranks.goal_win_visitor)) - (sum(calendar_ranks.goal_lost_home) + sum(calendar_ranks.goal_lost_visitor))) DESC, (((('-3'::integer)::numeric * sum(calendar_ranks.played_home)) + sum(calendar_ranks.points_home)) + ((('-1'::integer)::numeric * sum(calendar_ranks.played_visitor)) + sum(calendar_ranks.points_visitor))) DESC;]]></view_script>
			<column name="club_name" type="varchar" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="played_home" type="numeric" />
			<column name="played_visitor" type="numeric" />
			<column name="goal_win_home" type="numeric" />
			<column name="goal_win_visitor" type="numeric" />
			<column name="goal_lost_home" type="numeric" />
			<column name="goal_lost_visitor" type="numeric" />
			<column name="points_home" type="numeric" />
			<column name="points_visitor" type="numeric" />
			<column name="points" type="numeric" />
			<column name="average_home" type="numeric" />
			<column name="average_visitor" type="numeric" />
			<column name="average" type="numeric" />
			<column name="goal_win" type="numeric" />
			<column name="goal_lost" type="numeric" />
			<column name="goal_difference" type="numeric" />
			<column name="win_home" type="numeric" />
			<column name="lost_home" type="numeric" />
			<column name="pair_home" type="numeric" />
			<column name="win_visitr" type="numeric" />
			<column name="lost_visitor" type="numeric" />
			<column name="pair_visitor" type="numeric" />
			<column name="lost_matches" type="numeric" />
			<column name="win_matches" type="numeric" />
			<column name="pair_matches" type="numeric" />
			<column name="played_matches" type="numeric" />
		</view>
		<view name="ft_v_calendar" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c.match_id,
    c.league_id,
    c.season_id,
    c.match_day_number,
    c.match_date,
    c.home_team_id,
    c.visitors_team_id,
    c.goal_home,
    c.goal_visitor,
    c.points_home,
    c.points_visitors,
    c.notes,
    c.confirmed,
    hc.club_name AS home_club,
    vc.club_name AS visitor_club
   FROM football.ft_calendar c,
    football.ft_clubs hc,
    football.ft_teams ht,
    football.ft_teams vt,
    football.ft_clubs vc
  WHERE ((ht.team_id = c.home_team_id) AND (ht.club_id = hc.club_id) AND (vt.team_id = c.visitors_team_id) AND (vt.club_id = vc.club_id))
  ORDER BY c.match_day_number;]]></view_script>
			<column name="match_id" type="integer" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="match_day_number" type="smallint" />
			<column name="match_date" type="date" />
			<column name="home_team_id" type="smallint" />
			<column name="visitors_team_id" type="smallint" />
			<column name="goal_home" type="smallint" />
			<column name="goal_visitor" type="smallint" />
			<column name="points_home" type="smallint" />
			<column name="points_visitors" type="smallint" />
			<column name="notes" type="text" />
			<column name="confirmed" type="boolean" />
			<column name="home_club" type="varchar" />
			<column name="visitor_club" type="varchar" />
		</view>
		<view name="ft_v_player_matches" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT m.player_id,
    d.season_id,
    d.league_id,
    m.team_id,
    max(d.match_day_number) AS max_day,
    min(d.match_day_number) AS min_day,
    count(1) AS matches,
    sum(m.goal) AS goals
   FROM football.ft_calendar d,
    football.ft_match_players m
  WHERE ((d.match_id = m.match_id) AND ((m.team_id = d.home_team_id) OR (m.team_id = d.visitors_team_id)))
  GROUP BY m.player_id, d.season_id, d.league_id, m.team_id
 HAVING (count(1) > 1)
  ORDER BY d.season_id, d.league_id;]]></view_script>
			<column name="player_id" type="integer" />
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="team_id" type="smallint" />
			<column name="max_day" type="smallint" />
			<column name="min_day" type="smallint" />
			<column name="matches" type="bigint" />
			<column name="goals" type="bigint" />
		</view>
		<view name="ft_v_rankings" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT calendar_ranks.club_name,
    calendar_ranks.league_id,
    calendar_ranks.season_id,
    calendar_ranks.team_id,
    max(calendar_ranks.match_day_number) AS last_match_day,
    sum(calendar_ranks.played_home) AS played_home,
    sum(calendar_ranks.played_visitor) AS played_visitor,
    sum(calendar_ranks.goal_win_home) AS goal_win_home,
    sum(calendar_ranks.goal_win_visitor) AS goal_win_visitor,
    sum(calendar_ranks.goal_lost_home) AS goal_lost_home,
    sum(calendar_ranks.goal_lost_visitor) AS goal_lost_visitor,
    sum(calendar_ranks.points_home) AS points_home,
    sum(calendar_ranks.points_visitor) AS points_visitor,
    ((sum(calendar_ranks.points_home) + sum(calendar_ranks.points_visitor)) - (ft_teams_championships.penalty)::numeric) AS points,
    ((('-3'::integer)::numeric * sum(calendar_ranks.played_home)) + sum(calendar_ranks.points_home)) AS average_home,
    (sum(calendar_ranks.played_visitor) - sum(calendar_ranks.points_visitor)) AS average_visitor,
    (((('-3'::integer)::numeric * sum(calendar_ranks.played_home)) + sum(calendar_ranks.points_home)) + ((('-1'::integer)::numeric * sum(calendar_ranks.played_visitor)) + sum(calendar_ranks.points_visitor))) AS average,
    (sum(calendar_ranks.goal_win_home) + sum(calendar_ranks.goal_win_visitor)) AS goal_win,
    (sum(calendar_ranks.goal_lost_home) + sum(calendar_ranks.goal_lost_visitor)) AS goal_lost,
    ((sum(calendar_ranks.goal_win_home) + sum(calendar_ranks.goal_win_visitor)) - (sum(calendar_ranks.goal_lost_home) + sum(calendar_ranks.goal_lost_visitor))) AS goal_difference,
    sum(calendar_ranks.lost_home) AS lost_home,
    sum(calendar_ranks.win_home) AS win_home,
    sum(calendar_ranks.pair_home) AS pair_home,
    sum(calendar_ranks.lost_visitor) AS lost_visitor,
    sum(calendar_ranks.win_visitor) AS win_visitor,
    sum(calendar_ranks.pair_visitor) AS pair_visitor,
    sum((calendar_ranks.lost_home + calendar_ranks.lost_visitor)) AS lost_matches,
    sum((calendar_ranks.win_home + calendar_ranks.win_visitor)) AS win_matches,
    sum((calendar_ranks.pair_home + calendar_ranks.pair_visitor)) AS pair_matches,
    sum((calendar_ranks.played_home + calendar_ranks.played_visitor)) AS played_matches,
    (- ft_teams_championships.penalty) AS penalty
   FROM football.calendar_ranks,
    football.ft_teams_championships
  WHERE ((ft_teams_championships.team_id = calendar_ranks.team_id) AND (ft_teams_championships.season_id = calendar_ranks.season_id) AND (ft_teams_championships.league_id = calendar_ranks.league_id))
  GROUP BY calendar_ranks.club_name, calendar_ranks.league_id, calendar_ranks.season_id, calendar_ranks.team_id, ft_teams_championships.penalty
  ORDER BY (nvl((((sum(calendar_ranks.points_home))::integer + (sum(calendar_ranks.points_visitor))::integer) - (ft_teams_championships.penalty)::integer), 0)) DESC, ((sum(calendar_ranks.goal_win_home) + sum(calendar_ranks.goal_win_visitor)) - (sum(calendar_ranks.goal_lost_home) + sum(calendar_ranks.goal_lost_visitor))) DESC, (((('-3'::integer)::numeric * sum(calendar_ranks.played_home)) + sum(calendar_ranks.points_home)) + ((('-1'::integer)::numeric * sum(calendar_ranks.played_visitor)) + sum(calendar_ranks.points_visitor))) DESC;]]></view_script>
			<column name="club_name" type="varchar" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="last_match_day" type="smallint" />
			<column name="played_home" type="numeric" />
			<column name="played_visitor" type="numeric" />
			<column name="goal_win_home" type="numeric" />
			<column name="goal_win_visitor" type="numeric" />
			<column name="goal_lost_home" type="numeric" />
			<column name="goal_lost_visitor" type="numeric" />
			<column name="points_home" type="numeric" />
			<column name="points_visitor" type="numeric" />
			<column name="points" type="numeric" />
			<column name="average_home" type="numeric" />
			<column name="average_visitor" type="numeric" />
			<column name="average" type="numeric" />
			<column name="goal_win" type="numeric" />
			<column name="goal_lost" type="numeric" />
			<column name="goal_difference" type="numeric" />
			<column name="lost_home" type="numeric" />
			<column name="win_home" type="numeric" />
			<column name="pair_home" type="numeric" />
			<column name="lost_visitor" type="numeric" />
			<column name="win_visitor" type="numeric" />
			<column name="pair_visitor" type="numeric" />
			<column name="lost_matches" type="numeric" />
			<column name="win_matches" type="numeric" />
			<column name="pair_matches" type="numeric" />
			<column name="played_matches" type="numeric" />
			<column name="penalty" type="smallint" />
		</view>
		<view name="ft_view_club_teams_championships" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.club_id,
    c.season_id,
    c.league_id,
    c.team_id,
    t.team_name,
    l.league_name
   FROM football.ft_teams_championships c,
    football.ft_teams t,
    football.ft_leagues l
  WHERE ((c.team_id = t.team_id) AND (c.league_id = l.league_id))
  ORDER BY t.team_name;]]></view_script>
			<column name="club_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="team_id" type="smallint" />
			<column name="team_name" type="varchar" />
			<column name="league_name" type="varchar" />
		</view>
		<view name="ft_view_players_careers" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT s.player_id,
    c.league_id,
    c.season_id,
    sum(nvl(s.goal, 0)) AS goal,
    sum(nvl(s.owngoal, 0)) AS owngoal,
    sum(nvl(s.lostgoal, 0)) AS lostgoal,
    sum(nvl(s.minutes, 0)) AS minutes,
    sum(nvl(s.sent_off, 0)) AS sent_off,
    sum(nvl(s.injuries, 0)) AS injuries,
    s.team_id
   FROM football.ft_match_players s,
    football.ft_calendar c
  WHERE ((c.match_id = s.match_id) AND ((s.team_id = c.home_team_id) OR (s.team_id = c.visitors_team_id)))
  GROUP BY s.player_id, c.league_id, c.season_id, s.team_id;]]></view_script>
			<column name="player_id" type="integer" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="goal" type="bigint" />
			<column name="owngoal" type="bigint" />
			<column name="lostgoal" type="bigint" />
			<column name="minutes" type="bigint" />
			<column name="sent_off" type="bigint" />
			<column name="injuries" type="bigint" />
			<column name="team_id" type="smallint" />
		</view>
		<view name="ft_view_players_last_season" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT p.player_id,
    max(p.season_id) AS max
   FROM football.ft_teams_players p,
    football.ft_teams t,
    football.ft_teams_championships tc
  WHERE ((tc.team_id = t.team_id) AND (p.team_id = p.team_id))
  GROUP BY p.player_id;]]></view_script>
			<column name="player_id" type="integer" />
			<column name="max" type="smallint" />
		</view>
		<view name="ft_view_players_seasons" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.db_schema_id,
    a.season_des,
    a.season_code,
    a.league_name,
    a.league_code,
    a.team_name,
    a.player_id,
    a.league_id,
    a.season_id,
    a.team_id,
    sum(a.played) AS played,
    sum(a.minutes) AS minutes,
    sum(a.goal) AS goal,
    sum(a.owngoal) AS owngoal,
    sum(a.lostgoal) AS lostgoal,
    sum(a.injuries) AS injuries,
    sum(a.sent_off) AS sent_off,
    max(a.last_match) AS last_match
   FROM ( SELECT ft_seasons.season_des,
            ft_seasons.season_code,
            ft_leagues.league_name,
            ft_leagues.league_code,
            ft_match_players.player_id,
            ft_calendar.db_schema_id,
            ft_calendar.league_id,
            ft_calendar.season_id,
            ft_teams.team_id,
            ft_teams.team_name,
            count(ft_match_players.minutes) AS played,
            sum(ft_match_players.minutes) AS minutes,
            sum(ft_match_players.goal) AS goal,
            sum(ft_match_players.owngoal) AS owngoal,
            sum(ft_match_players.lostgoal) AS lostgoal,
            sum(nvl(ft_match_players.sent_off, 0)) AS sent_off,
            sum(nvl(ft_match_players.injuries, 0)) AS injuries,
            max(ft_calendar.match_id) AS last_match
           FROM (((football.ft_teams
             JOIN (football.ft_calendar
             JOIN football.ft_match_players ON (((ft_calendar.match_id = ft_match_players.match_id) AND (ft_match_players.team_id = ft_calendar.home_team_id)))) ON ((ft_teams.team_id = ft_calendar.home_team_id)))
             JOIN football.ft_leagues ON ((ft_calendar.league_id = ft_leagues.league_id)))
             JOIN football.ft_seasons ON ((ft_calendar.season_id = ft_seasons.season_id)))
          GROUP BY ft_seasons.season_des, ft_seasons.season_code, ft_leagues.league_name, ft_leagues.league_code, ft_match_players.player_id, ft_calendar.db_schema_id, ft_calendar.league_id, ft_calendar.season_id, ft_teams.team_id, ft_teams.team_name
        UNION ALL
         SELECT ft_seasons.season_des,
            ft_seasons.season_code,
            ft_leagues.league_name,
            ft_leagues.league_code,
            ft_match_players.player_id,
            ft_calendar.db_schema_id,
            ft_calendar.league_id,
            ft_calendar.season_id,
            ft_teams.team_id,
            ft_teams.team_name,
            count(ft_match_players.minutes) AS played,
            sum(ft_match_players.minutes) AS minutes,
            sum(ft_match_players.goal) AS goal,
            sum(ft_match_players.owngoal) AS owngoal,
            sum(ft_match_players.lostgoal) AS lostgoal,
            sum(nvl(ft_match_players.sent_off, 0)) AS sent_off,
            sum(nvl(ft_match_players.injuries, 0)) AS injuries,
            max(ft_calendar.match_id) AS last_match
           FROM (((football.ft_teams
             JOIN (football.ft_calendar
             JOIN football.ft_match_players ON (((ft_calendar.match_id = ft_match_players.match_id) AND (ft_match_players.team_id = ft_calendar.visitors_team_id)))) ON ((ft_teams.team_id = ft_calendar.visitors_team_id)))
             JOIN football.ft_leagues ON ((ft_calendar.league_id = ft_leagues.league_id)))
             JOIN football.ft_seasons ON ((ft_calendar.season_id = ft_seasons.season_id)))
          GROUP BY ft_seasons.season_des, ft_seasons.season_code, ft_leagues.league_name, ft_leagues.league_code, ft_match_players.player_id, ft_calendar.db_schema_id, ft_calendar.league_id, ft_calendar.season_id, ft_teams.team_id, ft_teams.team_name) a
  GROUP BY a.db_schema_id, a.season_des, a.season_code, a.league_name, a.league_code, a.team_name, a.player_id, a.league_id, a.season_id, a.team_id
  ORDER BY (max(a.last_match)) DESC;]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="season_des" type="varchar" />
			<column name="season_code" type="char" />
			<column name="league_name" type="varchar" />
			<column name="league_code" type="varchar" />
			<column name="team_name" type="varchar" />
			<column name="player_id" type="integer" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="played" type="numeric" />
			<column name="minutes" type="numeric" />
			<column name="goal" type="numeric" />
			<column name="owngoal" type="numeric" />
			<column name="lostgoal" type="numeric" />
			<column name="injuries" type="numeric" />
			<column name="sent_off" type="numeric" />
			<column name="last_match" type="integer" />
		</view>
		<view name="match_events_detail" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT e.match_id,
    e.team_id,
    e.player_id,
    e.event_id,
    e.minute,
    e.value,
    e.match_events_row_id,
    e.notes,
    e.favor_team_id,
    e.half,
    e.db_schema_id,
    e.fmth_jguid,
    e.fmth_deleted,
    (((((((p.family_name)::text || ' '::text) || (p.first_name)::text) || ' - '::text) || nvl(to_char((p.birth_date)::timestamp with time zone, 'dd/mm/yy'::text), nvl(p.notes, 'n.d.'::text))) || ' '::text) || (r.role_name)::text) AS teamplayer,
    p.birth_date,
    p.birth_year,
    p.first_name,
    p.family_name,
    p.birth_place,
    p.role,
    t.team_name
   FROM football.ft_match_events e,
    football.ft_players p,
    football.ft_teams t,
    football.ft_roles r
  WHERE ((t.team_id = e.team_id) AND (p.anagraph_id = e.player_id) AND (nvl(p.role, 0) = r.role_id));]]></view_script>
			<column name="match_id" type="integer" />
			<column name="team_id" type="smallint" />
			<column name="player_id" type="integer" />
			<column name="event_id" type="smallint" />
			<column name="minute" type="integer" />
			<column name="value" type="smallint" />
			<column name="match_events_row_id" type="bigint" />
			<column name="notes" type="varchar" />
			<column name="favor_team_id" type="integer" />
			<column name="half" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="fmth_jguid" type="varchar" />
			<column name="fmth_deleted" type="boolean" />
			<column name="teamplayer" type="text" />
			<column name="birth_date" type="date" />
			<column name="birth_year" type="smallint" />
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="birth_place" type="varchar" />
			<column name="role" type="smallint" />
			<column name="team_name" type="varchar" />
		</view>
		<view name="player_careers_with_no_match" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT s.first_name,
    s.family_name,
    r.season_code,
    t.team_name,
    r.league_code,
    r.league_id,
    r.matches,
    r.goals,
    r.player_id,
    r.votes,
    r.minutes,
    r.image_id
   FROM football.ft_player_career r,
    football.ft_players s,
    football.ft_teams t
  WHERE ((s.anagraph_id = r.player_id) AND (r.season_id = 45) AND (r.matches IS NOT NULL) AND (t.team_id = r.team_id) AND (NOT (EXISTS ( SELECT 1
           FROM football.ft_match_players p,
            football.ft_calendar c
          WHERE ((c.match_id = p.match_id) AND (r.team_id = p.team_id) AND (p.player_id = r.player_id))))));]]></view_script>
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="season_code" type="varchar" />
			<column name="team_name" type="varchar" />
			<column name="league_code" type="varchar" />
			<column name="league_id" type="integer" />
			<column name="matches" type="varchar" />
			<column name="goals" type="varchar" />
			<column name="player_id" type="integer" />
			<column name="votes" type="float8" />
			<column name="minutes" type="integer" />
			<column name="image_id" type="bigint" />
		</view>
		<materialized_view name="mv_match_descriptions" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c.match_id,
    c.league_id,
    c.season_id,
    c.match_day_number,
    c.home_team_id,
    c.visitors_team_id,
    s.season_des,
    l.league_name,
    h.team_name AS home_team_name,
    v.team_name AS visitors_team_name
   FROM football.ft_calendar c,
    football.ft_seasons s,
    football.ft_leagues l,
    football.ft_teams h,
    football.ft_teams v
  WHERE ((l.league_id = c.league_id) AND (s.season_id = c.season_id) AND (v.team_id = c.visitors_team_id) AND (h.team_id = c.home_team_id));]]></view_script>
			<column name="match_id" type="integer" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="match_day_number" type="smallint" />
			<column name="home_team_id" type="smallint" />
			<column name="visitors_team_id" type="smallint" />
			<column name="season_des" type="varchar" />
			<column name="league_name" type="varchar" />
			<column name="home_team_name" type="varchar" />
			<column name="visitors_team_name" type="varchar" />
		</materialized_view>
		<materialized_view name="mv_players_championships" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.player_id,
    a.season_id,
    a.league_id,
    a.team_id,
    a.max_day,
    a.min_day,
    a.matches,
    a.goals,
    b.max_max,
    b.min_max,
    b.teams
   FROM football.ft_v_player_matches a,
    ( SELECT m.player_id,
            m.season_id,
            m.league_id,
            max(m.max_day) AS max_max,
            max(m.min_day) AS min_max,
            count(1) AS teams
           FROM football.ft_v_player_matches m
          GROUP BY m.player_id, m.season_id, m.league_id) b
  WHERE ((a.player_id = b.player_id) AND (a.season_id = b.season_id) AND (a.league_id = b.league_id) AND (a.max_day = b.max_max) AND (a.min_day = b.min_max))
  ORDER BY a.player_id, a.season_id, a.league_id;]]></view_script>
			<column name="player_id" type="integer" />
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="team_id" type="smallint" />
			<column name="max_day" type="smallint" />
			<column name="min_day" type="smallint" />
			<column name="matches" type="bigint" />
			<column name="goals" type="bigint" />
			<column name="max_max" type="smallint" />
			<column name="min_max" type="smallint" />
			<column name="teams" type="bigint" />
		</materialized_view>
		<sequence name="ft_calendar_seq" options="START WITH 1" />
		<sequence name="ft_clubs_seq" options="START WITH 2636" />
		<sequence name="ft_league_groups_seq" options="START WITH 1" />
		<sequence name="ft_leagues_seq" options="START WITH 120" />
		<sequence name="ft_matchevents_seq" options="START WITH 1" />
		<sequence name="ft_player_career_seq" options="START WITH 1" />
		<sequence name="ft_ranking_seq" options="START WITH 100000" />
		<sequence name="ft_teams_seq" options="START WITH 2636" />
		<trigger name="fchm_bi_trg" table="ft_championships" id="Trigger_eff" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fchm_bi_trg BEFORE INSERT OR UPDATE ON football.ft_championships FOR EACH ROW EXECUTE PROCEDURE football.fchm_trg()]]></string>
		</trigger>
		<trigger name="fclb_bi_trg" table="ft_clubs" id="Trigger_1a54" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fclb_bi_trg BEFORE INSERT OR UPDATE ON football.ft_clubs FOR EACH ROW EXECUTE PROCEDURE football.fclb_trg()]]></string>
		</trigger>
		<trigger name="fcld_bi_trg" table="ft_calendar" id="Trigger_1303" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fcld_bi_trg BEFORE INSERT OR UPDATE ON football.ft_calendar FOR EACH ROW EXECUTE PROCEDURE football.fcld_trg()]]></string>
		</trigger>
		<trigger name="fcls_bi_trg" table="ft_club_seasons" id="Trigger_fa0" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fcls_bi_trg BEFORE INSERT OR UPDATE ON football.ft_club_seasons FOR EACH ROW EXECUTE PROCEDURE football.fcls_trg()]]></string>
		</trigger>
		<trigger name="ffld_bi_trg" table="ft_fields" id="Trigger_1539" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ffld_bi_trg BEFORE INSERT OR UPDATE ON football.ft_fields FOR EACH ROW EXECUTE PROCEDURE football.ffld_trg()]]></string>
		</trigger>
		<trigger name="flgp_bi_trg" table="ft_league_groups" id="Trigger_1ec3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER flgp_bi_trg BEFORE INSERT OR UPDATE ON football.ft_league_groups FOR EACH ROW EXECUTE PROCEDURE football.flgp_trg()]]></string>
		</trigger>
		<trigger name="flgs_bi_trg" table="ft_leagues" id="Trigger_d04" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER flgs_bi_trg BEFORE INSERT OR UPDATE ON football.ft_leagues FOR EACH ROW EXECUTE PROCEDURE football.flgs_trg()]]></string>
		</trigger>
		<trigger name="fmtd_bi_trg" table="ft_match_days" id="Trigger_b72" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fmtd_bi_trg BEFORE INSERT OR UPDATE ON football.ft_match_days FOR EACH ROW EXECUTE PROCEDURE football.fmtd_trg()]]></string>
		</trigger>
		<trigger name="fmth_bi_trg" table="ft_match_events" id="Trigger_1368" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fmth_bi_trg BEFORE INSERT OR UPDATE ON football.ft_match_events FOR EACH ROW EXECUTE PROCEDURE football.fmth_trg()]]></string>
		</trigger>
		<trigger name="fmtp_bi_trg" table="ft_match_players" id="Trigger_99a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fmtp_bi_trg BEFORE INSERT OR UPDATE ON football.ft_match_players FOR EACH ROW EXECUTE PROCEDURE football.fmtp_trg()]]></string>
		</trigger>
		<trigger name="fplc_bi_trg" table="ft_player_career" id="Trigger_6d1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fplc_bi_trg BEFORE INSERT OR UPDATE ON football.ft_player_career FOR EACH ROW EXECUTE PROCEDURE football.fplc_trg()]]></string>
		</trigger>
		<trigger name="frkt_bi_trg" table="ft_ranking_table" id="Trigger_16a9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER frkt_bi_trg BEFORE INSERT OR UPDATE ON football.ft_ranking_table FOR EACH ROW EXECUTE PROCEDURE football.frkt_trg()]]></string>
		</trigger>
		<trigger name="frls_bi_trg" table="ft_roles" id="Trigger_10e5" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER frls_bi_trg BEFORE INSERT OR UPDATE ON football.ft_roles FOR EACH ROW EXECUTE PROCEDURE football.frls_trg()]]></string>
		</trigger>
		<trigger name="fsnc_bi_trg" table="json_calendar" id="Trigger_4c1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fsnc_bi_trg BEFORE INSERT OR UPDATE ON football.json_calendar FOR EACH ROW EXECUTE PROCEDURE football.fsnc_trg()]]></string>
		</trigger>
		<trigger name="fssn_bi_trg" table="ft_seasons" id="Trigger_158f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fssn_bi_trg BEFORE INSERT OR UPDATE ON football.ft_seasons FOR EACH ROW EXECUTE PROCEDURE football.fssn_trg()]]></string>
		</trigger>
		<trigger name="ft_calendar_bi_trg" table="ft_calendar" id="Trigger_1079" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ft_calendar_bi_trg BEFORE INSERT ON football.ft_calendar FOR EACH ROW EXECUTE PROCEDURE football.ft_calendar_match_id_trg()]]></string>
		</trigger>
		<trigger name="ft_player_career_id_trg" table="ft_player_career" id="Trigger_607" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ft_player_career_id_trg BEFORE INSERT ON football.ft_player_career FOR EACH ROW EXECUTE PROCEDURE football.ft_player_career_id_trg()]]></string>
		</trigger>
		<trigger name="ft_rankings_id_bi_trg" table="ft_ranking_table" id="Trigger_2231" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ft_rankings_id_bi_trg BEFORE INSERT ON football.ft_ranking_table FOR EACH ROW EXECUTE PROCEDURE football.ft_rankings_id_trg()]]></string>
		</trigger>
		<trigger name="ftmc_bi_trg" table="ft_teams_championships" id="Trigger_104d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftmc_bi_trg BEFORE INSERT OR UPDATE ON football.ft_teams_championships FOR EACH ROW EXECUTE PROCEDURE football.ftmc_trg()]]></string>
		</trigger>
		<trigger name="ftmh_bi_trg" table="ft_teams_history" id="Trigger_1b47" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftmh_bi_trg BEFORE INSERT OR UPDATE ON football.ft_teams_history FOR EACH ROW EXECUTE PROCEDURE football.ftmh_trg()]]></string>
		</trigger>
		<trigger name="ftmp_bi_trg" table="ft_teams_players" id="Trigger_dee" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftmp_bi_trg BEFORE INSERT OR UPDATE ON football.ft_teams_players FOR EACH ROW EXECUTE PROCEDURE football.ftmp_trg()]]></string>
		</trigger>
		<trigger name="ftms_bi_trg" table="ft_teams" id="Trigger_19d0" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftms_bi_trg BEFORE INSERT OR UPDATE ON football.ft_teams FOR EACH ROW EXECUTE PROCEDURE football.ftms_trg()]]></string>
		</trigger>
		<trigger name="ftmt_bi_trg" table="ft_teams_trainers" id="Trigger_e36" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftmt_bi_trg BEFORE INSERT OR UPDATE ON football.ft_teams_trainers FOR EACH ROW EXECUTE PROCEDURE football.ftmt_trg()]]></string>
		</trigger>
		<trigger name="ftps_bi_trg" table="ft_field_types" id="Trigger_1de8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftps_bi_trg BEFORE INSERT OR UPDATE ON football.ft_field_types FOR EACH ROW EXECUTE PROCEDURE football.ftps_trg()]]></string>
		</trigger>
		<trigger name="ftrc_bi_trg" table="ft_trainers_career" id="Trigger_433" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftrc_bi_trg BEFORE INSERT OR UPDATE ON football.ft_trainers_career FOR EACH ROW EXECUTE PROCEDURE football.ftrc_trg()]]></string>
		</trigger>
		<trigger name="ftrn_bi_trg" table="ft_trainers" id="Trigger_40a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ftrn_bi_trg BEFORE INSERT OR UPDATE ON football.ft_trainers FOR EACH ROW EXECUTE PROCEDURE football.ftrn_trg()]]></string>
		</trigger>
		<trigger name="fvnt_bi_trg" table="ft_event_types" id="Trigger_898" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fvnt_bi_trg BEFORE INSERT OR UPDATE ON football.ft_event_types FOR EACH ROW EXECUTE PROCEDURE football.fvnt_trg()]]></string>
		</trigger>
		<trigger name="pplr_bi_trg" table="ft_players" id="Trigger_c44" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER pplr_bi_trg BEFORE INSERT OR UPDATE ON football.ft_players FOR EACH ROW EXECUTE PROCEDURE football.pplr_trg()]]></string>
		</trigger>
		<trigger name="roles_biu_trg" table="ft_roles" id="Trigger_b99" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER roles_biu_trg BEFORE INSERT OR UPDATE ON football.ft_roles FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<function name="external_files_id_trg" id="Function_1053" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.external_files_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.external_file_id is null then
          New.club_id:=nextval('cloud.file_seq');
      end if; 
     New.ext_file_key := system.get_key(1,  32);
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fchm_trg" id="Function_40f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fchm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fchm_jguid is null then
     New.fchm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fchm_deleted is null then
     New.fchm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fclb_trg" id="Function_e76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fclb_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fclb_jguid is null then
     New.fclb_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fclb_deleted is null then
     New.fclb_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fcld_trg" id="Function_131b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fcld_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fcld_jguid is null then
     New.fcld_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fcld_deleted is null then
     New.fcld_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fcls_trg" id="Function_23f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fcls_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fcls_jguid is null then
     New.fcls_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fcls_deleted is null then
     New.fcls_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ffld_trg" id="Function_1007" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ffld_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ffld_jguid is null then
     New.ffld_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ffld_deleted is null then
     New.ffld_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="flgp_trg" id="Function_39f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.flgp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.flgp_jguid is null then
     New.flgp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.flgp_deleted is null then
     New.flgp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="flgs_trg" id="Function_1d9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.flgs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.flgs_jguid is null then
     New.flgs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.flgs_deleted is null then
     New.flgs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fmtd_trg" id="Function_8b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fmtd_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fmtd_jguid is null then
     New.fmtd_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fmtd_deleted is null then
     New.fmtd_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fmth_trg" id="Function_479" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fmth_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fmth_jguid is null then
     New.fmth_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fmth_deleted is null then
     New.fmth_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fmtp_trg" id="Function_125e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fmtp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fmtp_jguid is null then
     New.fmtp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fmtp_deleted is null then
     New.fmtp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fplc_trg" id="Function_259d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fplc_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fplc_jguid is null then
     New.fplc_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fplc_deleted is null then
     New.fplc_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="frkt_trg" id="Function_15c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.frkt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.frkt_jguid is null then
     New.frkt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.frkt_deleted is null then
     New.frkt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="frls_trg" id="Function_fb5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.frls_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.frls_jguid is null then
     New.frls_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.frls_deleted is null then
     New.frls_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fsnc_trg" id="Function_7b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fsnc_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fsnc_jguid is null then
     New.fsnc_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fsnc_deleted is null then
     New.fsnc_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fssn_trg" id="Function_14e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fssn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fssn_jguid is null then
     New.fssn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fssn_deleted is null then
     New.fssn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ft_birthdate_players" id="Function_19de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_birthdate_players()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
   x record; 
   y date; 
   i integer; 
begin
  i := 0; 
  
  for x in 
  (select * from  football.ft_players where notes like '%.%.%' and length(trim(notes)) = 8)    
  loop
   begin
     y := to_date(trim(x.notes), 'dd.mm.yy') ; 
     update football.ft_players set 
     birth_date = y 
     where anagraph_id = x.anagraph_id; 
     i := i + 1; 
     
     exception when others then RAISE NOTICE  'Errore riga Giocatore: % % ', x.anagraph_id, SQLERRM; 
     
     
    end; 
  end loop;
  return i; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="ft_calendar_match_id_trg" id="Function_2138" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_calendar_match_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.match_id is null then
          New.match_id:=nextval('football.ft_calendar_seq');
      end if; 
      if New.db_schema_id is null then
          New.db_schema_id:=0;
      end if; 
      
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ft_clubs_id_trg" id="Function_1fc5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_clubs_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.clubid is null then
          New.club_id:=nextval('football.ft_clubs_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ft_gen_calendar_json" id="Function_a99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_gen_calendar_json(p_season_id integer DEFAULT 0, p_league_id integer DEFAULT 0)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$declare 
  x record; 
  i integer; 
begin
   i := 0; 
   
   for x in select * from ft_v_calendar where league_id = p_league_id and season_id = p_season_id loop
       RAISE NOTICE '%s', row_to_json(x) ;
       i := i + 1; 
   end loop; 
   return i; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_season_id" jt="4" type="int4" />
			<input_param name="p_league_id" jt="4" type="int4" />
		</function>
		<function name="ft_generate_all_clubs" id="Function_18c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_generate_all_clubs()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
 x record;
 i integer; 
begin
   for x in (select * from football.ft_clubs where anagraph_id is null)
   loop
      select football.ft_generate_club_anagraph(x.club_id, x.club_name) into i;
      
   end loop;
   return i;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="ft_generate_club_anagraph" id="Function_2140" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_generate_club_anagraph(p_club_id integer, p_club_name character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  i integer; 
begin
  i := nextval('anagraph.an_anagraph_seq');

  insert into anagraph.anagraphs (db_schema_id, anagraph_id, an_last_name, an_sex, 
                                  an_main_language_code, an_main_culture_code )
  values (0, i, p_club_name, 'S', 'IT', 'it_IT');
  
INSERT INTO anagraph.identities(
            db_schema_id, anagraph_id, an_group_id)
    VALUES (0, i, 11);
    return i;
  
  
end; 
   $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_club_id" jt="4" type="int4" />
			<input_param name="p_club_name" jt="12" type="varchar" />
		</function>
		<function name="ft_player_career_id_trg" id="Function_189b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_player_career_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.career_id is null then
          New.career_id:=nextval('football.ft_player_career_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ft_player_origin" id="Function_7ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_player_origin()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
 x record; 
 i integer; 
begin
 i := 0;
for x in (
select p.team_id, p.player_id, p.team_id, o.team_id oid, c.club_id
 from football.ft_teams_players p, football.ft_teams_players o, football.ft_teams c where 
p.season_id = 45 
and o.player_id = p.player_id 
and o.season_id = 44
--and o.team_id <> p.team_id
and c.team_id = o.team_id
)
loop 
   i := i + 1;
   update football.ft_teams_players set club_origin_id =  x.club_id where team_id = x.team_id and player_id = x.player_id and season_id = 45;
end loop; 
return i; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="ft_rankings_id_trg" id="Function_1f2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_rankings_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.ranking_id is null then
          New.ranking_id:=nextval('football.ft_ranking_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ft_rankings_season" id="Function_15a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_rankings_season(p_season_id integer, p_league_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
    x record;
    y record; 
    i integer; 
    t integer; 
begin
     select count(1) into i from football.ft_ranking_table where season_id = p_season_id and league_id = p_league_id; 
     if i = 0 then
         raise notice 'non trovati record per stagione: %' ,  p_season_id; 
         raise notice 'creo calendario : %' ,  p_league_id; 
   
         
   INSERT INTO football.ft_ranking_table(
            season_id, league_id, team_id, pos, played_matches, 
            won_matches, lost_matches, tied_matches, home_matches, home_won, 
            home_lost, home_tied, outside_played, outside_won, outside_lost, 
            outside_tied, goal_done, goal_lost, points)
    select   season_id, league_id, team_id, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0, 0 
            FROM football.ft_teams_championships  where season_id = p_season_id and league_id = p_league_id; 
     end if; 

       i := 0; 

       for x in 
       SELECT   row_number() over() as pos,
		club_name, league_id, season_id, team_id, last_match_day, played_home, 
		played_visitor, goal_win_home, goal_win_visitor, goal_lost_home, 
		goal_lost_visitor, points_home, points_visitor, points, average_home, 
		average_visitor, average, goal_win, goal_lost, goal_difference, 
		lost_home, win_home, pair_home, lost_visitor, win_visitor, pair_visitor, 
		lost_matches, win_matches, pair_matches, played_matches
       FROM football.ft_v_rankings
       where 
           season_id = p_season_id and league_id = p_league_id
       loop
           i := i +1; 
           update   football.ft_ranking_table set 
            season_id = x.season_id, league_id = x.league_id, team_id = x.team_id,  pos = x.pos, played_matches = x.played_matches, 
            won_matches = x.win_matches,  lost_matches = x.lost_matches, tied_matches = x.pair_matches, home_matches =  x.played_home,  home_won = x.win_home, 
            home_lost = x.lost_home,  home_tied = x.pair_home, outside_played = x.played_visitor, outside_won =  x.win_visitor, outside_lost = x.lost_visitor, 
            outside_tied =x.pair_visitor,  goal_done = x.goal_win, goal_lost =  x.goal_lost, points = x.points
            where 
             season_id = x.season_id and league_id = x.league_id and team_id = x.team_id;
            
        end loop; 
        /*
  team_id smallint NOT NULL, -- Team ID
  player_id integer NOT NULL, -- foreing key to player anagraph id
  season_id smallint NOT NULL, -- foreign key to season_id
  since date,
  until date,
  club_origin_id integer,
  goal smallint,
  owngoal smallint,
  lostgoal smallint,
  sent_off smallint,
  injuries smallint,
  minutes smallint,

  SELECT season_id, season_des, season_code, db_schema_id
  FROM football.ft_seasons;
        */
       select football.ft_update_careers (p_season_id, p_league_id) into i; 
 
       return (i);
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_season_id" jt="4" type="int4" />
			<input_param name="p_league_id" jt="4" type="int4" />
		</function>
		<function name="ft_return_matches" id="Function_17cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_return_matches(p_league_id integer DEFAULT 0, p_season_id integer DEFAULT 0)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare 
  x record; 
  i integer; 
  p_days integer;
begin
   i := 0; 
   select count(1) into p_days FROM football.ft_teams_championships 
     where 
     league_id = p_league_id and season_id = p_season_id;
     RAISE NOTICE  'squadre iscritte: %', p_days; 
   
     for x in select * from football.ft_match_days
     where 
     league_id = p_league_id and season_id = p_season_id and match_day_number <= p_days
      loop
        RAISE NOTICE  'Match Andata: %s', x.match_day_number; 
        i := i + 1; 
        
      end loop; 
   return i; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_league_id" jt="4" type="int4" />
			<input_param name="p_season_id" jt="4" type="int4" />
		</function>
		<function name="ft_return_matches" id="Function_956" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_return_matches(p_league_id integer DEFAULT 0, p_season_id integer DEFAULT 0, p_days integer DEFAULT 0)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare 
  x record; 
  i integer; 
begin
   i := 0; 
   
     for x in select * from ft_match_days
     where 
     league_id = p_league_id and season_id = p_season_id and match_day_number <= p_days
      loop
        RAISE NOTICE  '%s', x.match_day_number; 
        i := i + 1; 
        
        
      end loop; 
   return i; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_league_id" jt="4" type="int4" />
			<input_param name="p_season_id" jt="4" type="int4" />
			<input_param name="p_days" jt="4" type="int4" />
		</function>
		<function name="ft_update_al_careers" id="Function_1130" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_update_al_careers(p_test boolean DEFAULT true)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
    x record;
    y record; 
    i integer; 
    t integer; 
begin
  i := 0; 
  for x in 
  (select * 
    from football.ft_teams_championships)
   loop
	   i := i + 
	   football.ft_update_careers(
		 x.season_id, 
	     x.league_id );
	end loop; 
return i; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_test" jt="-7" type="bool" />
		</function>
		<function name="ft_update_careers" id="Function_1ba7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_update_careers(p_season_id integer DEFAULT 0, p_league_id integer DEFAULT 0)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
    x record;
    y record; 
    i integer; 
    t integer; 
begin
    i := 0;
       for y in select * from football.ft_view_players_seasons where season_id = p_season_id and league_id = p_league_id
        loop
           update football.ft_teams_players set
              goal = y.goal, 
			  owngoal = y.owngoal, 
			  lostgoal = y.lostgoal, 
			  sent_off = y.sent_off, 
			  injuries = y.injuries, 
			  minutes = y.minutes, 
			  matches= y.played
              where
              team_id = y.team_id and season_id = y.season_id and player_id = y.player_id; 
        end loop; 
      
       for y in select p.*, z.season_code , l.league_code, l.league_id
          from  
              football.ft_teams_players p, football.ft_teams_championships s, football.ft_seasons z, football.ft_leagues l
          where 
              s.season_id = p_season_id and s.league_id = p_league_id and p.season_id = s.season_id and p.team_id = s.team_id 
              and z.season_id = p_season_id and l.league_id = p_league_id
       loop
            i := i + 1;
            select count(1) into t from football.ft_player_career where season_id = p_season_id and league_id = p_league_id and team_id = y.team_id
                                            and player_id = y.player_id;  
            if t = 0 then
               INSERT INTO football.ft_player_career( season_id, season_code, team_id, league_code, league_id,  matches, goals, player_id, minutes)
             VALUES ( y.season_id, y.season_code, y.team_id, y.league_code, y.league_id,  y.matches, y.goal, y.player_id, y.minutes);
            else
           update football.ft_player_career set
              goals = y.goal, 
              owngoal = y.owngoal, 
              lostgoal = y.lostgoal, 
              sent_off = y.sent_off, 
              injuries = y.injuries, 
              minutes = y.minutes, matches= y.matches
            where
              team_id = y.team_id and season_id = y.season_id and league_id = p_league_id and player_id = y.player_id; 
            end if;
       end loop; 
       return(i); 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_season_id" jt="4" type="int4" />
			<input_param name="p_league_id" jt="4" type="int4" />
		</function>
		<function name="ft_update_ranking" id="Function_503" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ft_update_ranking()
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$begin
INSERT INTO football.ft_ranking_table ( ranking_id, season_id, league_id, team_id, pos, played_matches, won_matches, tied_matches, lost_matches, home_matches, home_won, home_tied, home_lost, outside_played, outside_won, outside_tied, outside_lost, goal_done, goal_lost )
SELECT 
        "IDClassifica", season_id ,  "IDCampionato", "IDSquadra", "Posizione", 
       "PartiteGiocate", "PartiteVinte", "PartitePareggiate", "PartitePerse", 
       "GiocateInCasa", "VinteInCasa", "PareggiateInCasa", "PerseinCasa", 
       "GiocateFuoricasa", "VinteFuoriCasa", "PareggiateFuoriCasa", 
       "PerseFuoriCasa", "RetiRealizzate", "RetiSubite"
FROM classfiche INNER JOIN football.ft_seasons ON classfiche."Stagione" = football.ft_seasons.season_code
where exists
(select 1 from football.ft_teams where football.ft_teams .team_id = classfiche."IDSquadra");
commit;
return 1; 
end; 	$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
		</function>
		<function name="ftmc_trg" id="Function_24ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftmc_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftmc_jguid is null then
     New.ftmc_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftmc_deleted is null then
     New.ftmc_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ftmh_trg" id="Function_26aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftmh_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftmh_jguid is null then
     New.ftmh_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftmh_deleted is null then
     New.ftmh_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ftmp_trg" id="Function_710" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftmp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftmp_jguid is null then
     New.ftmp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftmp_deleted is null then
     New.ftmp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ftms_trg" id="Function_2668" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftms_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftms_jguid is null then
     New.ftms_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftms_deleted is null then
     New.ftms_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ftmt_trg" id="Function_20df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftmt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftmt_jguid is null then
     New.ftmt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftmt_deleted is null then
     New.ftmt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ftps_trg" id="Function_47c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftps_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftps_jguid is null then
     New.ftps_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftps_deleted is null then
     New.ftps_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ftrc_trg" id="Function_1c40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftrc_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftrc_jguid is null then
     New.ftrc_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftrc_deleted is null then
     New.ftrc_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ftrn_trg" id="Function_2425" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.ftrn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ftrn_jguid is null then
     New.ftrn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ftrn_deleted is null then
     New.ftrn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fvnt_trg" id="Function_1d41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.fvnt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.fvnt_jguid is null then
     New.fvnt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.fvnt_deleted is null then
     New.fvnt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="match_level" id="Function_a33" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.match_level(p_confirmed boolean, p_goals smallint)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$begin
  if p_confirmed then return 2; end if; 
  if p_goals is null then return 3; end if; 
  if not p_confirmed and not p_goals is null then return 1; end if;
  return 2;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_confirmed" jt="-7" type="bool" />
			<input_param name="p_goals" jt="5" type="int2" />
		</function>
		<function name="pplr_trg" id="Function_1e17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.pplr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.pplr_jguid is null then
     New.pplr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.pplr_deleted is null then
     New.pplr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="update_clubs" id="Function_b0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.update_clubs()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
   x record;
   i integer; 
begin
i := 0;
for x in (
select c.club_name, a.anagraph_id, c.club_id
from football.ft_clubs c, anagraph.anagraphs a
where
a.an_last_name = c.club_name)
loop
UPDATE football.ft_clubs set anagraph_id = x.anagraph_id where club_id = x.club_id;
i := i +1;
end loop;
return i; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="update_team_logo" id="Function_328" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION football.update_team_logo()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
  x record; 
  i integer; 
 begin
 
 INSERT INTO cloud.images(
	db_schema_id    , db_owner_id, filename            , file_ext, filename_noext, external_file_id,  image_file)
SELECT 
   club.db_schema_id, 13         , team_name || '.jpg', '.jpg'   , team_name     , team_id         ,  club_image 
	FROM  football.ft_clubs club, football.ft_teams team
	where 
	 team.club_id = club.club_id
	 and not exists (select 1 from cloud.images m where external_file_id = team.team_id)
	 and octet_length(club_image) != 0; 
	 
 i := 0; 
 for x in 
    SELECT t.team_id, t.team_name , club_image
	FROM football.ft_clubs c, cloud.images i, football.ft_teams t 
	where 
	external_file_id  = t.team_id 
	and 
	octet_length(club_image) != 0
	and
	octet_length(club_image)  != octet_length(image_file) 
	and
	t.club_id = c.club_id
	loop
	  update cloud.images  set image_file = x.club_image 
	     where 
	     external_file_id = x.team_id; 
		i := i +1; 
	end loop; 
 
    return i; 
	
 end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="gis" catalogname="ergomercator" >
		<table name="osm_categories" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="code" type="varchar" decimal="0" jt="12" mandatory="y" />
			<index name="osm_categories_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="osm_categories_uk" unique="UNIQUE_KEY" >
				<column name="code" />
			</index>
		</table>
		<table name="osm_places" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="visible" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="creation" type="timestamp" decimal="6" jt="93" />
			<column name="uid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="lat" type="float8" length="17" decimal="17" jt="6" mandatory="y" />
			<column name="lon" type="float8" length="17" decimal="17" jt="6" mandatory="y" />
			<column name="distance" type="float8" length="17" decimal="17" jt="6" />
			<column name="mapgroup" type="varchar" length="40" decimal="0" jt="12" mandatory="y" />
			<column name="address" type="varchar" length="40" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="128" decimal="0" jt="12" />
			<column name="brand" type="varchar" length="128" decimal="0" jt="12" />
			<column name="mapoperator" type="varchar" length="128" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="website" type="varchar" length="128" decimal="0" jt="12" />
			<column name="email" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="40" decimal="0" jt="12" />
			<column name="addressfull" type="varchar" length="128" decimal="0" jt="12" />
			<column name="addr_city" type="varchar" length="128" decimal="0" jt="12" />
			<column name="addr_number" type="varchar" length="20" decimal="0" jt="12" />
			<column name="addr_street" type="varchar" length="128" decimal="0" jt="12" />
			<column name="addr_postcode" type="varchar" length="20" decimal="0" jt="12" />
			<column name="tags" type="text" decimal="0" jt="12" />
			<column name="version" type="smallint" length="5" decimal="0" jt="5" />
			<column name="cuisine" type="varchar" length="128" decimal="0" jt="12" />
			<column name="public_transport" type="varchar" length="128" decimal="0" jt="12" />
			<column name="station_type" type="varchar" length="30" decimal="0" jt="12" />
			<index name="osm_places_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<function name="update_categories" id="Function_1851" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION gis.update_categories()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
v_id integer; 
begin
select max(id) from gis.osm_categories into v_id; 
insert into gis.osm_categories 
select row_number() over() + v_id as id, a.* from 
(
SELECT distinct address 
	FROM gis.osm_places order by address
) a
where 
  not exists (select 1 from gis.osm_categories  c where c.code = a.address);
return v_id; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="health" catalogname="ergomercator" >
		<comment><![CDATA[health is studied for companies and laboratories involved in health care systema and applications]]></comment>
		<table name="an_pharmacies_sectors" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="section_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="an_pharmacies_sectors_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="section_id" />
			</index>
		</table>
		<table name="an_pharmacies_services" >
			<column name="anagraph_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="service_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="an_pharmacies_services_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="service_id" />
			</index>
		</table>
		<table name="an_pharmacies_timetable" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="weekday" type="smallint" length="5" decimal="0" jt="5" />
		</table>
		<table name="an_pharmacies_website" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="web_title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="meta_description" type="varchar" length="256" decimal="0" jt="12" />
			<column name="focus_keyword" type="varchar" length="128" decimal="0" jt="12" />
			<column name="slug" type="varchar" length="128" decimal="0" jt="12" />
			<column name="timetable" type="varchar" length="256" decimal="0" jt="12" />
			<column name="districts" type="varchar" length="256" decimal="0" jt="12" />
			<index name="an_pharmacies_websites_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
			</index>
		</table>
		<table name="anagraph_wards" >
			<comment><![CDATA[This Table covers a facility and its divisions (Hospital Wards)]]></comment>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="email" type="varchar" length="20" decimal="0" jt="12" />
			<column name="main_doctor_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="anagraph_wards_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="discipline_id" />
			</index>
			<index name="fki_anagraph_wards_disciplines_fk" unique="NORMAL" >
				<column name="discipline_id" />
			</index>
			<fk name="anagraph_wards_disciplines_fk" to_schema="ergomercator.health" to_table="disciplines" >
				<fk_column name="discipline_id" pk="discipline_id" />
			</fk>
		</table>
		<table name="anagraph_wards_items" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="an_wards_items_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="item_id" />
				<column name="discipline_id" />
			</index>
			<fk name="an_wards_items_wards_fk" to_schema="ergomercator.health" to_table="anagraph_wards" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
				<fk_column name="discipline_id" pk="discipline_id" />
			</fk>
		</table>
		<table name="anagraph_wards_services" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="title" type="varchar" length="1024" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="specification" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="speciality" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="search_index" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="old_item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="searchstring" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="tsv" type="tsvector" decimal="0" jt="1111" />
			<index name="anagraph_wards_services_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="anagraph_wards_services_uk" unique="UNIQUE_KEY" >
				<column name="anagraph_id" />
				<column name="discipline_id" />
				<column name="title" />
				<column name="specification" />
			</index>
			<index name="anagraph_wards_search_ndx" unique="NORMAL" >
				<column name="search_index" />
			</index>
			<index name="anagraph_wards_services_items_ndx" unique="NORMAL" >
				<column name="item_id" />
			</index>
			<index name="anagraph_wards_services_tsv_idx" unique="NORMAL" >
				<column name="tsv" />
			</index>
			<index name="stringsearch_dx" unique="NORMAL" >
				<column name="searchstring" />
			</index>
			<fk name="anagraph_wards_services_anagraph_id_fkey" to_schema="ergomercator.health" to_table="anagraph_wards" >
				<fk_column name="anagraph_id" pk="anagraph_id" />
				<fk_column name="discipline_id" pk="discipline_id" />
			</fk>
		</table>
		<table name="anagraph_wards_services_history" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="title" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="specification" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="speciality" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="search_index" type="varchar" length="1024" decimal="0" jt="12" />
		</table>
		<table name="associations" >
			<column name="association_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="association_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="url" type="varchar" length="512" decimal="0" jt="12" />
			<column name="email" type="varchar" length="512" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="code" type="varchar" length="12" decimal="0" jt="12" />
			<index name="associations_pk" unique="PRIMARY_KEY" >
				<column name="association_id" />
			</index>
			<index name="fki_associations_towns_fk" unique="NORMAL" >
				<column name="town_id" />
			</index>
			<index name="idx_associations" unique="NORMAL" >
				<column name="type_id" />
			</index>
			<index name="idx_associations_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="fk_associations" to_schema="ergomercator.health" to_table="organization_types" >
				<fk_column name="type_id" pk="type_id" />
			</fk>
		</table>
		<table name="bookings" >
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_session_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="book_since" type="date" length="13" decimal="0" jt="91" />
			<column name="book_until" type="date" length="13" decimal="0" jt="91" />
			<column name="notes" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="confirmed" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="opened" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="db_operator_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="closed" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="closed_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="sent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="sent_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="received" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="received_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="active" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="cancelled_by_user" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="level" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="other_person" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="other_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="service_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="prescription" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="relative" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="search_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="insurance" type="varchar" length="256" decimal="0" jt="12" />
			<column name="agreement" type="varchar" length="256" decimal="0" jt="12" />
			<column name="operator_notes" type="varchar" length="1024" decimal="0" jt="12" >
				<comment><![CDATA[Note dell'operatore per il suo controllore]]></comment>
			</column>
			<column name="user_notes" type="varchar" length="1024" decimal="0" jt="12" >
				<comment><![CDATA[note indirizzate all'utente finale]]></comment>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="booking64" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<index name="health_bookings_pk" unique="PRIMARY_KEY" >
				<column name="booking_id" />
			</index>
			<index name="bookings_booking64_uk" unique="UNIQUE_INDEX" >
				<column name="booking64" />
			</index>
			<index name="bookings_db_users_id_fk_ndx" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
		</table>
		<table name="bookings_rows" >
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[id anagrafico struttura richiesta]]></comment>
			</column>
			<column name="since" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[data a partire dalla quale prenotare]]></comment>
			</column>
			<column name="until" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[data massima oltre la quale la prestazione non è prenotabile]]></comment>
			</column>
			<column name="notes" type="varchar" length="2048" decimal="0" jt="12" >
				<comment><![CDATA[campo testuale di 2048 char utente per indicare eventuali annotazioni.]]></comment>
			</column>
			<column name="confirmed" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[confermato dall'utente per invio al call-center (privacy accettata ecc ecc).]]></comment>
			</column>
			<column name="opened" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[preso in carico da un operatore]]></comment>
			</column>
			<column name="db_operator_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[db_user_id dell'operatore che ha preso in caricol]]></comment>
			</column>
			<column name="closed" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[chiuso da operatore]]></comment>
			</column>
			<column name="closed_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<comment><![CDATA[data timestamp di chiusura da operatore]]></comment>
			</column>
			<column name="booked" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[confermato da struttura]]></comment>
			</column>
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[data appuntamento]]></comment>
			</column>
			<column name="booking_hour" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[ora appuntamento]]></comment>
			</column>
			<column name="booking_mins" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[minuti appuntamento]]></comment>
			</column>
			<column name="sent" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[inviato ad utente]]></comment>
			</column>
			<column name="sent_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<comment><![CDATA[ata-ora invio utente]]></comment>
			</column>
			<column name="received" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[ricevuto utente boolean]]></comment>
			</column>
			<column name="received_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<comment><![CDATA[data ora ricezione utente]]></comment>
			</column>
			<column name="alarm_sent" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[smallint inviato allarme utente parte da '0' arriva fino a 3 invii.]]></comment>
			</column>
			<column name="alarm_read" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[utente ha letto allarme? Riporta il numero dell'allarme ricevuto e letto dall'utente medesimo]]></comment>
			</column>
			<column name="distance" type="float8" length="17" decimal="17" jt="6" />
			<column name="ck_confirmed" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Confermata la checkList]]></comment>
			</column>
			<column name="insurance_confirmed" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Confermata Assicurazione se presente]]></comment>
			</column>
			<column name="agreement_confirmed" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Conferma della convenzione]]></comment>
			</column>
			<column name="ck_has_code" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[Has Prescription Code]]></comment>
			</column>
			<column name="ck_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="ck_has_price" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[ha il prezzo della prestazione?]]></comment>
			</column>
			<column name="ck_price" type="float8" length="17" decimal="17" jt="6" />
			<column name="ck_fast" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[Presentarsi a diugno in inglese digiuno = fast]]></comment>
			</column>
			<column name="ck_different_address" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="ck_address" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="ck_has_place" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[Ha un luogo differente?]]></comment>
			</column>
			<column name="ck_place" type="varchar" length="1024" decimal="0" jt="12" >
				<comment><![CDATA[A different place where to go]]></comment>
			</column>
			<column name="ck_take_list" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[Portare esami precendenti o lista di farmaci in uso / terapie o allergie]]></comment>
			</column>
			<column name="ck_notes" type="varchar" decimal="0" jt="12" >
				<comment><![CDATA[Altre annotazioni selezionabili da una lista]]></comment>
			</column>
			<column name="call_center_notes" type="text" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="cancelled" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="booking64" type="varchar" length="64" decimal="0" jt="12" />
			<index name="bookings_rows_pk" unique="PRIMARY_KEY" >
				<column name="booking_id" />
				<column name="anagraph_id" />
			</index>
			<fk name="bookings_rows_bookings_fk" to_schema="ergomercator.health" to_table="bookings" >
				<fk_column name="booking_id" pk="booking_id" />
			</fk>
		</table>
		<table name="branch_specialities" >
			<column name="speciality_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="branch_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="speciality_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="speciality_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<index name="pk_branch_specialities" unique="PRIMARY_KEY" >
				<column name="speciality_id" />
			</index>
			<index name="idx_fk_branch_specialities_branches" unique="NORMAL" >
				<column name="branch_id" />
			</index>
			<fk name="fk_branch_specialities" to_schema="ergomercator.health" to_table="branches" >
				<fk_column name="branch_id" pk="branch_id" />
			</fk>
			<fk name="fk_branch_specialities_specialities" to_schema="ergomercator.health" to_table="specialities" >
				<fk_column name="speciality_id" pk="id" />
			</fk>
		</table>
		<table name="branches" >
			<column name="branch_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="branch_code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="branch_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<index name="pk_branches" unique="PRIMARY_KEY" >
				<column name="branch_id" />
			</index>
		</table>
		<table name="disciplines" >
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="branch_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="discipline_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="auto" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="disciplines_pk" unique="PRIMARY_KEY" >
				<column name="discipline_id" />
			</index>
			<index name="disciplines_names_uk" unique="UNIQUE_KEY" >
				<column name="discipline_name" />
			</index>
			<fk name="disciplines_branches_fk" to_schema="ergomercator.health" to_table="branches" >
				<fk_column name="branch_id" pk="branch_id" />
			</fk>
		</table>
		<table name="disciplines_services" >
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="disciplines_services_pk" unique="PRIMARY_KEY" >
				<column name="discipline_id" />
				<column name="item_id" />
			</index>
		</table>
		<table name="health_profile" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="organization_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="council_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="association_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="association_number" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[This is the association serial subscription number of the member.]]></comment>
			</column>
			<column name="association_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[The date of the registration at association]]></comment>
			</column>
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="speciality_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="sub_speciality_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="district_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="council_number" type="varchar" length="20" decimal="0" jt="12" />
			<column name="council_date" type="date" length="13" decimal="0" jt="91" />
			<index name="idx_health_profile_pk" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="db_user_id" />
			</index>
			<index name="fki_health_profile_specialities" unique="NORMAL" >
				<column name="speciality_id" />
			</index>
			<index name="idx_health_profile" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_health_profile_0" unique="NORMAL" >
				<column name="organization_id" />
			</index>
			<index name="idx_health_profile_1" unique="NORMAL" >
				<column name="council_id" />
			</index>
			<index name="idx_health_profile_2" unique="NORMAL" >
				<column name="association_id" />
			</index>
			<index name="idx_health_profile_3" unique="NORMAL" >
				<column name="town_id" />
			</index>
			<index name="idx_health_profile_4" unique="NORMAL" >
				<column name="group_id" />
			</index>
			<fk name="fk_health_profile_association" to_schema="ergomercator.health" to_table="associations" >
				<fk_column name="association_id" pk="association_id" />
			</fk>
			<fk name="fk_health_profile_council" to_schema="ergomercator.health" to_table="medical_councils" >
				<fk_column name="council_id" pk="council_id" />
			</fk>
			<fk name="fk_health_profile_organization" to_schema="ergomercator.health" to_table="organizations" >
				<fk_column name="organization_id" pk="organization_id" />
			</fk>
			<fk name="fk_health_profile_groups_fk" to_schema="ergomercator.health" to_table="profile_groups" >
				<fk_column name="group_id" pk="group_id" />
			</fk>
			<fk name="fk_health_profile_specialities" to_schema="ergomercator.health" to_table="specialities" >
				<fk_column name="speciality_id" pk="id" />
			</fk>
		</table>
		<table name="instruments" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="code" type="char" length="3" decimal="0" jt="1" />
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="instruments_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="instruments_disciplines_fk" to_schema="ergomercator.health" to_table="specialities" >
				<fk_column name="discipline_id" pk="id" />
			</fk>
		</table>
		<table name="medical_councils" >
			<column name="council_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="council_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="councils_pk" unique="PRIMARY_KEY" >
				<column name="council_id" />
			</index>
			<index name="idx_medical_councils" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<index name="idx_medical_councils_0" unique="NORMAL" >
				<column name="region_id" />
			</index>
		</table>
		<table name="notifications" >
			<comment><![CDATA[Tabelle delle notifiche agli utenti. Questa tabella viene gestita dal call-center]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="message" type="text" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="datetime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="read" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="solved" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="from_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="booking_action" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[La Booking Action indica quale 'form' deve chiamare il nostro utente le actions saranno

1 visualizza riassunto
2 visualizza riassunto annullato
3 visualizza elenco prenotazioni fatte con loro data e tasto conferma o annulla prenotazione. 
4 visualizza l'appuntamento con ore e data che è stato prenotato dal call-center]]></comment>
			</column>
			<index name="health_notifications_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_notifications_notifications_types" to_schema="ergomercator.health" to_table="notifications_types" delete_action="cascade" update_action="cascade" >
				<fk_column name="type_id" pk="id" />
			</fk>
		</table>
		<table name="notifications_groups" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="group_name" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="badge" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="notification_groups_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="notification_badge_ndx" unique="NORMAL" >
				<column name="badge" />
			</index>
		</table>
		<table name="notifications_types" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="type_name" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="message" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="level" type="smallint" length="5" decimal="0" jt="5" />
			<index name="healthnotification_types_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="healthnotification_message_ndx" unique="NORMAL" >
				<column name="message" />
			</index>
		</table>
		<table name="organization_types" >
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="type_des" type="varchar" length="40" decimal="0" jt="12" />
			<index name="organization_types_pk" unique="PRIMARY_KEY" >
				<column name="type_id" />
			</index>
		</table>
		<table name="organizations" >
			<column name="organization_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="organization_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="master_organization_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="organization_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="organizations_pk" unique="PRIMARY_KEY" >
				<column name="organization_id" />
			</index>
			<index name="idx_organizations" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<index name="idx_organizations_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<index name="idx_organizations_1" unique="NORMAL" >
				<column name="district_id" />
			</index>
			<index name="idx_organizations_2" unique="NORMAL" >
				<column name="town_id" />
			</index>
		</table>
		<table name="organizations_branches" >
			<column name="organization_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="branch_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="pk_organizations_branches" unique="PRIMARY_KEY" >
				<column name="organization_id" />
				<column name="branch_id" />
			</index>
			<index name="idx_organizations_branches" unique="NORMAL" >
				<column name="organization_id" />
			</index>
			<index name="idx_organizations_branches_0" unique="NORMAL" >
				<column name="branch_id" />
			</index>
			<fk name="fk_organizations_branches" to_schema="ergomercator.health" to_table="branches" >
				<fk_column name="branch_id" pk="branch_id" />
			</fk>
			<fk name="fk_branches_organizations" to_schema="ergomercator.health" to_table="organizations" >
				<fk_column name="organization_id" pk="organization_id" />
			</fk>
		</table>
		<table name="pharmacy_sections" >
			<column name="section_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="section_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Foreign Key to images locations]]></comment>
			</column>
			<index name="pharmacy_sections_pk" unique="PRIMARY_KEY" >
				<column name="section_id" />
			</index>
		</table>
		<table name="pharmacy_services" >
			<column name="service_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="service_name" type="varchar" length="512" decimal="0" jt="12" />
			<index name="pharmacy_services_pk" unique="PRIMARY_KEY" >
				<column name="service_id" />
			</index>
			<index name="pharmacy_services_ndx" unique="NORMAL" >
				<column name="service_name" />
			</index>
		</table>
		<table name="pharmacy_timetable" >
			<column name="weekday" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="day_part" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="from_hour" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="from_min" type="smallint" length="5" decimal="0" jt="5" />
			<index name="pharmacy_timetable_pk" unique="PRIMARY_KEY" >
				<column name="weekday" />
				<column name="day_part" />
			</index>
			<constraint name="timetable_check" >
				<string><![CDATA[CHECK (((from_hour >= 0) AND (from_hour <= 24)))]]></string>
			</constraint>
		</table>
		<table name="profile_groups" >
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="group_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="pk_profile_groups" unique="PRIMARY_KEY" >
				<column name="group_id" />
			</index>
			<index name="uk_profile_groups" unique="UNIQUE_KEY" >
				<column name="group_name" />
			</index>
		</table>
		<table name="search_index" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="discipline_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="prestazione" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="searchkey" type="varchar" length="1024" decimal="0" jt="12" />
			<index name="search_index_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="search_index_uk" unique="UNIQUE_KEY" >
				<column name="searchkey" />
			</index>
		</table>
		<table name="search_keys" >
			<comment><![CDATA[Tabella delle chiavi base di ricerca su cui costruire le ricerche pre-digerite]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="key" type="varchar" length="512" decimal="0" jt="12" mandatory="y" />
			<column name="key_num" type="smallint" length="5" decimal="0" jt="5" />
			<column name="key1" type="varchar" length="128" decimal="0" jt="12" />
			<column name="key2" type="varchar" length="128" decimal="0" jt="12" />
			<column name="key3" type="varchar" length="128" decimal="0" jt="12" />
			<index name="search_keys_pk" unique="PRIMARY_KEY" >
				<column name="id" />
				<column name="key" />
			</index>
			<index name="search_keys_uk" unique="UNIQUE_KEY" >
				<column name="id" />
				<column name="key_num" />
			</index>
		</table>
		<table name="search_keys_text" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="key_text" type="text" decimal="0" jt="12" />
			<column name="level" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="master_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="health_keys_text_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="keymaster_leveltext_ndx" unique="UNIQUE_INDEX" options="clustered" >
				<column name="level" />
				<column name="key_text" />
			</index>
			<index name="health_keys_uk" unique="UNIQUE_KEY" >
				<column name="key_text" />
				<column name="master_id" />
			</index>
			<index name="keymaster_id_ndx" unique="NORMAL" >
				<column name="master_id" />
			</index>
			<fk name="search_keys_text_master_fk_i" to_schema="ergomercator.health" to_table="search_keys_text" delete_action="cascade" update_action="cascade" >
				<fk_column name="master_id" pk="id" />
			</fk>
		</table>
		<table name="search_services" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="discipline_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="discipline_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="prestazione" type="text" decimal="0" jt="12" />
			<column name="search" type="text" decimal="0" jt="12" />
			<column name="indexed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="managed" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[Managed means an index have been 'observed' if is not managed it is nor indexed or not]]></comment>
			</column>
			<column name="tsv" type="tsvector" decimal="0" jt="1111" />
			<column name="key_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="master_id" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="lower(prestazione)" type="varchar" jt="12" spec="functional" />
			<index name="search_services_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="search_services_uk" unique="UNIQUE_KEY" >
				<column name="search" />
			</index>
			<index name="fki_search_services_items_fk" unique="NORMAL" >
				<column name="item_id" />
			</index>
			<index name="lowerprestazione_ndx" unique="NORMAL" >
				<column name="lower(prestazione)" />
			</index>
			<index name="master_id_ndx" unique="NORMAL" >
				<column name="master_id" />
			</index>
			<index name="search_services_indexed_ndx" unique="NORMAL" >
				<column name="indexed" />
			</index>
			<index name="search_services_key_id_ndx" unique="NORMAL" >
				<column name="key_id" />
			</index>
			<index name="search_services_tsv_idx" unique="NORMAL" >
				<column name="tsv" />
			</index>
		</table>
		<table name="searches" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="item_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="discipline_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="u_latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="u_longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="counter" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="session_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="service_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[This column takes the specific service requested by user]]></comment>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<index name="searches_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="searches_rows" >
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="search_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="distance" type="float8" length="17" decimal="17" jt="6" />
			<index name="searches_rows_pk" unique="PRIMARY_KEY" >
				<column name="anagraph_id" />
				<column name="search_id" />
			</index>
		</table>
		<table name="specialities" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="code" type="varchar" length="12" decimal="0" jt="12" />
			<column name="name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="main_discipline_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="pk_disciplines" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="specialities_groups" >
			<column name="speciality_group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="specialit_group_name" type="varchar" length="128" decimal="0" jt="12" />
			<index name="specialities_groups_pk" unique="PRIMARY_KEY" >
				<column name="speciality_group_id" />
			</index>
		</table>
		<table name="sub_specialities" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="speciality_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<index name="pk_discipline_specialities" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_discipline_specialities" unique="NORMAL" >
				<column name="speciality_id" />
			</index>
			<fk name="fk_discipline_specialities" to_schema="ergomercator.health" to_table="specialities" >
				<fk_column name="speciality_id" pk="id" />
			</fk>
		</table>
		<view name="anagraph_wards_services_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT DISTINCT a.anagraph_id,
    a.disciplina,
    a.prestazione,
    a.item_id,
    a.esame
   FROM ( SELECT s.anagraph_id,
            d.discipline_name AS disciplina,
            i.model AS prestazione,
            i.id AS item_id,
            ''::text AS esame
           FROM health.disciplines d,
            items.definitions i,
            health.anagraph_wards_services s
          WHERE ((i.id = s.item_id) AND (d.discipline_id = s.discipline_id))) a
  ORDER BY a.disciplina, a.prestazione;]]></view_script>
			<column name="anagraph_id" type="integer" />
			<column name="disciplina" type="varchar" />
			<column name="prestazione" type="varchar" />
			<column name="item_id" type="bigint" />
			<column name="esame" type="text" />
		</view>
		<view name="view_search_services" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT anagraph_wards_services.search_index,
    min(anagraph_wards_services.id) AS id,
    min((anagraph_wards_services.title)::text) AS title,
    min(anagraph_wards_services.description) AS description,
    min(anagraph_wards_services.item_id) AS item_id
   FROM health.anagraph_wards_services
  GROUP BY anagraph_wards_services.search_index;]]></view_script>
			<column name="search_index" type="varchar" />
			<column name="id" type="bigint" />
			<column name="title" type="text" />
			<column name="description" type="text" />
			<column name="item_id" type="bigint" />
		</view>
		<view name="wards_services_mview" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT wards_services_view.id,
    wards_services_view.item_id,
    wards_services_view.discipline_id,
    wards_services_view.discipline_name,
    wards_services_view.prestazione,
    wards_services_view.search
   FROM health.wards_services_view;]]></view_script>
			<column name="id" type="bigint" />
			<column name="item_id" type="bigint" />
			<column name="discipline_id" type="smallint" />
			<column name="discipline_name" type="text" />
			<column name="prestazione" type="text" />
			<column name="search" type="text" />
		</view>
		<view name="wards_services_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT min(i.id) AS id,
    min(i.item_id) AS item_id,
    min(d.discipline_id) AS discipline_id,
    min((d.discipline_name)::text) AS discipline_name,
    min((i.title)::text) AS prestazione,
    lower((system.stripstringsearch(i.title, d.discipline_name))::text) AS search
   FROM health.anagraph_wards_services i,
    health.disciplines d
  WHERE ((d.discipline_id = i.discipline_id) AND (i.item_id <> 0))
  GROUP BY (lower((system.stripstringsearch(i.title, d.discipline_name))::text));]]></view_script>
			<column name="id" type="bigint" />
			<column name="item_id" type="bigint" />
			<column name="discipline_id" type="smallint" />
			<column name="discipline_name" type="text" />
			<column name="prestazione" type="text" />
			<column name="search" type="text" />
		</view>
		<sequence name="anagraph_wards_services_seq" options="START WITH 1" />
		<sequence name="associations_seq" options="START WITH 1" />
		<sequence name="booking_seq" options="START WITH 8" />
		<sequence name="branch_specialities_seq" options="START WITH 1" />
		<sequence name="branches_seq" options="START WITH 1" />
		<sequence name="councils_seq" options="START WITH 1" />
		<sequence name="notifications_seq" options="START WITH 1" />
		<sequence name="organizations_seq" options="START WITH 1" />
		<sequence name="searches_seq" options="START WITH 1" />
		<sequence name="sections_id" options="START WITH 1" />
		<sequence name="services_id" options="START WITH 1" />
		<sequence name="specialities_seq" options="START WITH 1" />
		<sequence name="subspecialities_seq" options="START WITH 1" />
		<trigger name="anagraph_wards_services_id_bi_trg" table="anagraph_wards_services" id="Trigger_3a5" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER anagraph_wards_services_id_bi_trg BEFORE INSERT ON health.anagraph_wards_services FOR EACH ROW EXECUTE PROCEDURE health.get_ward_services_id()]]></string>
		</trigger>
		<trigger name="associations_id_bi_trg" table="associations" id="Trigger_1d7d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER associations_id_bi_trg BEFORE INSERT ON health.associations FOR EACH ROW EXECUTE PROCEDURE health.get_association_id()]]></string>
		</trigger>
		<trigger name="booking_id_bi_trg" table="bookings" id="Trigger_186f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER booking_id_bi_trg BEFORE INSERT ON health.bookings FOR EACH ROW EXECUTE PROCEDURE health.get_booking_id()]]></string>
		</trigger>
		<trigger name="booking_rows_biu_trg" table="bookings_rows" id="Trigger_1189" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER booking_rows_biu_trg BEFORE INSERT OR UPDATE ON health.bookings_rows FOR EACH ROW EXECUTE PROCEDURE health.booking_rows_defaults()]]></string>
		</trigger>
		<trigger name="booking_rows_insert_date_trg" table="bookings_rows" id="Trigger_2131" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER booking_rows_insert_date_trg BEFORE INSERT ON health.bookings_rows FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_date_trg()]]></string>
		</trigger>
		<trigger name="booking_rows_update_date_biu_trg" table="bookings_rows" id="Trigger_1f0" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER booking_rows_update_date_biu_trg BEFORE INSERT OR UPDATE ON health.bookings_rows FOR EACH ROW EXECUTE PROCEDURE update_date_trg()]]></string>
		</trigger>
		<trigger name="branche_before_insert_trg" table="branches" id="Trigger_24da" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER branche_before_insert_trg BEFORE INSERT ON health.branches FOR EACH ROW EXECUTE PROCEDURE health.get_new_branch_id()]]></string>
		</trigger>
		<trigger name="council_id_trg" table="medical_councils" id="Trigger_9a0" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER council_id_trg BEFORE INSERT ON health.medical_councils FOR EACH ROW EXECUTE PROCEDURE health.get_council_id()]]></string>
		</trigger>
		<trigger name="notifications_id_bi" table="notifications" id="Trigger_f80" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER notifications_id_bi BEFORE INSERT OR UPDATE ON health.notifications FOR EACH ROW EXECUTE PROCEDURE health.get_notification_id()]]></string>
		</trigger>
		<trigger name="organization_id_trg" table="organizations" id="Trigger_d5c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER organization_id_trg BEFORE INSERT ON health.organizations FOR EACH ROW EXECUTE PROCEDURE health.get_organization_id()]]></string>
		</trigger>
		<trigger name="search_services_bi_trg" table="search_services" id="Trigger_a12" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER search_services_bi_trg BEFORE INSERT ON health.search_services FOR EACH ROW EXECUTE PROCEDURE health.get_ward_services_id()]]></string>
		</trigger>
		<trigger name="searches_insert_date_bi_trg" table="searches" id="Trigger_1261" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER searches_insert_date_bi_trg BEFORE INSERT ON health.searches FOR EACH ROW EXECUTE PROCEDURE insert_date_trg()]]></string>
		</trigger>
		<trigger name="searches_update_date_bi_trg" table="searches" id="Trigger_1c7b" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER searches_update_date_bi_trg BEFORE UPDATE ON health.searches FOR EACH ROW EXECUTE PROCEDURE update_date_trg()]]></string>
		</trigger>
		<trigger name="speciality_id_bi_trg" table="specialities" id="Trigger_1059" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER speciality_id_bi_trg BEFORE INSERT ON health.specialities FOR EACH ROW EXECUTE PROCEDURE health.get_speciality_id()]]></string>
		</trigger>
		<trigger name="subspeciality_id_bi_trg" table="sub_specialities" id="Trigger_2596" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER subspeciality_id_bi_trg BEFORE INSERT ON health.sub_specialities FOR EACH ROW EXECUTE PROCEDURE health.get_subspecialities_id()]]></string>
		</trigger>
		<function name="add_doctor" id="Function_2556" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.add_doctor(p_firstname character varying, p_lastname character varying, p_organisation_number character varying, p_organisation_date date, p_organisation_id smallint, p_district_id smallint, p_council_id smallint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$begin

   return (true); 


end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
			<input_param name="p_organisation_number" jt="12" type="varchar" />
			<input_param name="p_organisation_date" jt="91" type="date" />
			<input_param name="p_organisation_id" jt="5" type="int2" />
			<input_param name="p_district_id" jt="5" type="int2" />
			<input_param name="p_council_id" jt="5" type="int2" />
		</function>
		<function name="anagraph_wards_services_indexing" id="Function_177b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.anagraph_wards_services_indexing()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
rec record; 
i integer; 
begin
  i := 0; 
  for rec in (
    select id,  items.stripstringsearch(title) searchstring
     from health.anagraph_wards_services where
    search_index is null
  )
  loop
    update health.anagraph_wards_services s set 
          search_index = rec.searchstring
     where s.id = rec.id;     
  end loop; 
  
  for rec in (
     select s.id,  d.item_id
     from health.anagraph_wards_services s, items.dimensions d 
     where 
      s.search_index like '%' || d.dimension_des || '%' 
      and
      s.item_id is null
   )
   loop
   i := i + 1; 
   update health.anagraph_wards_services s set 
          item_id = rec.item_id
     where s.id = rec.id;   
   end loop; 
   return i; 
  
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="assignbooking" id="Function_1776" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.assignbooking(p_session_id bigint, p_booking_id bigint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
 v_user_id integer; 
begin
  select db_user_id into v_user_id  from system.db_user_sessions where db_session_id = p_session_id; 
  update health.bookings set
     db_session_id = p_session_id, db_user_id = v_user_id
  where booking_id = p_booking_id;

  return true; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_session_id" jt="-5" type="int8" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="booking_anagraph_confirmation" id="Function_947" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.booking_anagraph_confirmation(p_anagraph_id integer, p_booking_id bigint)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  result varchar;
  v_test integer; 
  r record; 
  b record; 
begin
   result := ''; 
   select count(1) into v_test from health.bookings where 
         booking_id = p_booking_id; 
   raise notice 'OK booking id: % found', p_booking_id;
   if v_test = 0 then 
     raise notice 'ERROR booking id: % not found', p_booking_id;
     result := 'booking id not found'; 
   end if;  
   
   if result = '' then
   		select count(1) into v_test from health.bookings_rows where 
         	anagraph_id = p_anagraph_id and  booking_id = p_booking_id; 
   	 raise notice 'OK anagraph id: % found in booking %', p_anagraph_id, p_booking_id;
   	if v_test = 0 then 
        raise notice 'ERROR anagraph id: % not found in booking %', p_anagraph_id, p_booking_id;
     	result := 'anagraph id ' || p_anagraph_id::varchar || ' not found in booking ' || p_booking_id::varchar; 
   	end if; 
   end if; 
   
   if result = '' then
   	select * into b from health.bookings_rows where 
         anagraph_id = p_anagraph_id and  booking_id = p_booking_id; 
    raise notice 'OK anagraph id: % found in booking % ready to be confirmed', p_anagraph_id, p_booking_id;     
    if b.cancelled = true then 
   		 raise notice 'ERROR anagraph id: % in booking % is cancelled', p_anagraph_id, p_booking_id;     		
        result := 'anagraph id ' || p_anagraph_id::varchar || ' not found in booking ' || p_booking_id::varchar;     
    end if; 
   
   end if; 
      
   if result = '' then
      select * into r from health.bookings where booking_id = p_booking_id; 
      if r.level <> 2 then 
         raise notice 'WARNING anagraph id: % found in booking % cannot be confirmed booking.level=%', p_anagraph_id, p_booking_id, r.level; 
      end if; 
      if r.level = 2 then 
      	update health.bookings set level = 8 where booking_id = p_booking_id; 
      	update health.bookings_rows set confirmed = true 
           where anagraph_id = p_anagraph_id and  booking_id = p_booking_id; 
        raise notice 'OK anagraph id: % found in booking % confirmed and booking closed', p_anagraph_id, p_booking_id; 
      end if; 
   end if; 

   return result; 

end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="booking_rows_defaults" id="Function_39d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.booking_rows_defaults()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ck_confirmed is null then
     New.ck_confirmed := false; 
  end if; 
  
  if New.insurance_confirmed is null then
     New.insurance_confirmed := false; 
  end if;   
  
  if New.agreement_confirmed is null then
     New.agreement_confirmed := false; 
  end if; 
  
  New.booking64 := ENCODE(CONVERT_TO(New.booking_id::VARCHAR, 'UTF-8'), 'base64'); 
  return New; -- always returns trigger
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="booking_undo_anagraph_confirmation" id="Function_1df3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.booking_undo_anagraph_confirmation(p_booking_id bigint)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  result character varying; 
   v_test integer; 
  r record; 
begin
   result := ''; 
   select count(1) into v_test from health.bookings where 
         booking_id = p_booking_id; 
   raise notice 'OK booking id: % found', p_booking_id;  
   
   if result = '' then
      select * into r from health.bookings where booking_id = p_booking_id; 
      if r.level <> 2 then 
         raise notice 'WARNING anagraph id: % found in booking % cannot be confirmed booking.level=%', p_anagraph_id, p_booking_id, r.level; 
      end if; 
      if r.level = 2 then 
      	update health.bookings set level = 8 where booking_id = p_booking_id; 
      	update health.bookings_rows set confirmed = true 
           where anagraph_id = p_anagraph_id and  booking_id = p_booking_id; 
        raise notice 'OK anagraph id: % found in booking % confirmed and booking closed', p_anagraph_id, p_booking_id; 
      end if; 
   end if;    

  return result; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="bookingfinalisation" id="Function_11ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.bookingfinalisation(p_booking_id bigint, p_session_id bigint, p_session_key character varying, p_has_prescription boolean, p_has_relative boolean, p_book_since date, p_book_until date, p_insurance character varying, p_agreement character varying, p_notes character varying, person_firstname character varying, person_lastname character varying, person_fiscalcode character varying, person_address character varying, person_town character varying, person_postalcode character varying, person_stateprovince character varying, person_notes character varying, pr_first_code character varying, pr_second_code character varying, pr_province character varying, pr_first_name character varying, pr_last_name character varying, pr_fiscal_code character varying, pr_exemption boolean, pr_exemption_code character varying, pr_exemption_income boolean, pr_services smallint, pr_date date, pr_priority character)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
brec record; 
arec record; 
aid integer; 
pcheck integer; 
begin
/* IN  bigint DEFAULT 0, IN p_session_id bigint DEFAULT 0, IN p_session_key character varying, 
IN person_firstname character varying, IN person_lastname character varying, 
IN person_fiscalcode character varying, IN person_address character varying, 
IN person_town character varying, IN person_postalcode character varying, 
IN person_stateprovince character varying, IN person_notes character varying, 
IN "pr_first_code" character varying, 
IN "pr_second_code" character varying, 
IN "pr_province " character varying, 
IN "pr_first_name " character varying, 
IN "pr_last_name " character varying, IN "pr_fiscal_code " character varying, IN "pr_exemption " boolean, 
IN pr_exemption_code character varying, IN pr_exemption_income boolean, IN "pr_services " smallint, 
IN "pr_date " date, IN "pr_priority " character
*/
  select * into brec from health.bookings where booking_id = p_booking_id; 
   update health.bookings set 
	book_since=p_book_since, 
	book_until=p_book_until, 
	notes=p_notes, 
	active=false, 
	level=7, 
	other_person=p_has_relative,
	-- other_person_id=?,  
	prescription=p_has_prescription, 
	relative=p_has_relative, 
	insurance=p_insurance, agreement=p_agreement
      where
         booking_id = p_booking_id; 
   if  p_has_relative then
   ------ has relative anagraph creation ----------------------------------
     if brec.other_person_id is not null and brec.other_person_id > 0 then
           update anagraph.anagraphs set 
		an_name = person_firstname, 
		an_last_name = person_lastname,
		an_fiscal_code = person_fiscalcode, 
		an_address = person_address, 
		an_town = person_town,
		an_state_province = person_stateprovince,
		an_notes = person_notes
	 where 
	    anagraph_id =  brec.other_person_id;
      else
           aid:=nextval('anagraph.an_anagraph_seq');
           insert into anagraph.anagraphs 
           (anagraph_id, an_name, an_last_name, an_fiscal_code, an_address, an_town , 
            an_state_province, an_notes)
           values
           (aid, person_firstname, person_lastname, person_fiscalcode, person_address, person_town, 
            person_stateprovince,  person_notes );
      end if;    
   end if;
   
   if p_has_prescription then
      begin
        SELECT count(1) into pcheck   
	       FROM locale.it_it_health_prescription where booking_id = p_booking_id;
        if pcheck > 0 then
           UPDATE locale.it_it_health_prescription
	       SET id=p_booking_id, 
               first_code=pr_first_code, 
               second_code=pr_second_code, 
               province=pr_province, 
               first_name=pr_first_name, 
               last_name=pr_last_name, 
               fiscal_code=pr_fiscal_code, 
               exemption=pr_exemption, 
               exemption_code=pr_exemption_code, 
               exemption_income=pr_exemption_income, 
               services=pr_services, 
               date=pr_date, 
               priority=pr_priority
	        where booking_id = p_booking_id;        
        else
         INSERT INTO locale.it_it_health_prescription(
	      id, first_code, second_code, province, first_name, last_name, fiscal_code, exemption, exemption_code, exemption_income, 
          services, date, priority, booking_id
         )
	     VALUES( 
           p_booking_id, pr_first_code, pr_second_code, pr_province, pr_first_name, pr_last_name, pr_fiscal_code, pr_exemption, pr_exemption_code, 
            pr_exemption_income, pr_services, pr_date, pr_priority, p_booking_id
           );        
        end if; 
      end; 
   end if; 
   
INSERT INTO health.notifications(
	 type_id, title, message, db_schema_id, db_user_id, datetime, read, booking_id, solved)
	VALUES ( 1, -- type id
            'Prenotazione ricevuta', -- title 
            'Gestiremo la tua prenotazione entro 24 ore', -- message 
            31, -- schema id
            brec.db_user_id, -- db_user_id
            Now(), -- datetime
            false, -- read
            p_booking_id,  -- booking_id
            true -- solved 
            );
   
   Return True; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
			<input_param name="p_session_id" jt="-5" type="int8" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_has_prescription" jt="-7" type="bool" />
			<input_param name="p_has_relative" jt="-7" type="bool" />
			<input_param name="p_book_since" jt="91" type="date" />
			<input_param name="p_book_until" jt="91" type="date" />
			<input_param name="p_insurance" jt="12" type="varchar" />
			<input_param name="p_agreement" jt="12" type="varchar" />
			<input_param name="p_notes" jt="12" type="varchar" />
			<input_param name="person_firstname" jt="12" type="varchar" />
			<input_param name="person_lastname" jt="12" type="varchar" />
			<input_param name="person_fiscalcode" jt="12" type="varchar" />
			<input_param name="person_address" jt="12" type="varchar" />
			<input_param name="person_town" jt="12" type="varchar" />
			<input_param name="person_postalcode" jt="12" type="varchar" />
			<input_param name="person_stateprovince" jt="12" type="varchar" />
			<input_param name="person_notes" jt="12" type="varchar" />
			<input_param name="pr_first_code" jt="12" type="varchar" />
			<input_param name="pr_second_code" jt="12" type="varchar" />
			<input_param name="pr_province" jt="12" type="varchar" />
			<input_param name="pr_first_name" jt="12" type="varchar" />
			<input_param name="pr_last_name" jt="12" type="varchar" />
			<input_param name="pr_fiscal_code" jt="12" type="varchar" />
			<input_param name="pr_exemption" jt="-7" type="bool" />
			<input_param name="pr_exemption_code" jt="12" type="varchar" />
			<input_param name="pr_exemption_income" jt="-7" type="bool" />
			<input_param name="pr_services" jt="5" type="int2" />
			<input_param name="pr_date" jt="91" type="date" />
			<input_param name="pr_priority" jt="1" type="bpchar" />
		</function>
		<function name="bookinginstitutes" id="Function_273" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.bookinginstitutes(p_session_id bigint, p_session_key character varying, p_item1 integer, p_item2 integer, p_item3 integer, p_search_id bigint)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  p_id bigint; 
  rsearch record;
  rec record; 
  test integer; 
begin
   p_id:=nextval('health.booking_seq');
   select * from health.searches into rsearch where id = p_search_id; 
   insert into health.bookings  
   (booking_id, db_user_id, db_session_id, discipline_id, item_id, book_since, book_until, service_id, search_id )
   values (
    p_id, 
    rsearch.user_id, 
    rsearch.session_id, 
    rsearch.discipline_id,
    rsearch.item_id,
     now(), 
     now(),
    rsearch.service_id,
    p_search_id
   );
for rec in
(
select 
* 
from health.searches_rows a
where anagraph_id in ( p_item1, p_item2, p_item3 ) 
    and search_id = p_search_id
) loop
   select count(1) into test from health.bookings_rows where booking_id = p_id and anagraph_id = rec.anagraph_id; 
   if test = 0 then
    INSERT INTO health.bookings_rows( booking_id, anagraph_id, since, until, distance)
     VALUES (p_id, rec.anagraph_id,  now(), now(), rec.distance);
   end if; 
end loop; 
/*
  if p_item1 > 0 then
    INSERT INTO health.bookings_rows( booking_id, anagraph_id, since, until, distance)
     VALUES (p_id, p_item1,  now(), now(), 0);
  end if; 
     
  if p_item2 > 0 then
    INSERT INTO health.bookings_rows( booking_id, anagraph_id, since, until, distance)
     VALUES (p_id, p_item3,  now(), now(), 0);
  end if; 
     
  if p_item3 > 0 then
    INSERT INTO health.bookings_rows( booking_id, anagraph_id, since, until, distance)
     VALUES (p_id, p_item3,  now(), now(), 0);
  end if; 
*/
   -- code for procedure
   return p_id; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_session_id" jt="-5" type="int8" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_item1" jt="4" type="int4" />
			<input_param name="p_item2" jt="4" type="int4" />
			<input_param name="p_item3" jt="4" type="int4" />
			<input_param name="p_search_id" jt="-5" type="int8" />
		</function>
		<function name="count_notifications" id="Function_1bde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.count_notifications(p_user_id integer)
 RETURNS TABLE(count bigint, group_name character varying)
 LANGUAGE plpgsql
AS $function$
declare 
  r record; 
begin
for r in 
(
  SELECT count(1) as notecount, g.group_name
  FROM health.notifications n,  health.notifications_types t, health.notifications_groups g
  where 
  t.id = n.type_id
  and
  g.id = t.group_id
  and
  n.db_user_id = p_user_id
  group by g.group_name
) 
loop
  count := r.notecount; 
  group_name := r.group_name;
  return next; 
end loop; 
end; 
$function$
;]]></string>
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="count" jt="-5" type="int8" />
			<input_param name="group_name" jt="12" type="varchar" />
		</function>
		<function name="get_association_id" id="Function_b2b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_association_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.association_id is null then
          New.association_id:=nextval('health.associations_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_booking_id" id="Function_1a97" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_booking_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.booking_id is null then
          New.booking_id:=nextval('health.booking_seq');
      end if; 
      
      New.booking64 := ENCODE(CONVERT_TO(New.booking_id::VARCHAR, 'UTF-8'), 'base64'); 
      
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_council_id" id="Function_ec3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_council_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.council_id is null then
          New.council_id:=nextval('health.councils_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_institutes" id="Function_1ca0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_institutes(p_item_id integer, p_pagination smallint, p_latitude double precision, p_longitude double precision, p_limit smallint, p_user_id integer, p_session_id bigint)
 RETURNS TABLE(id bigint, distance double precision, anagraph_id integer, an_title character varying, an_address character varying, an_last_name character varying, full_address character varying, an_phone character varying, an_fax character varying, an_email character varying, an_postal_code character varying, an_town character varying, an_state_province character varying, latitude double precision, longitude double precision, selected boolean)
 LANGUAGE plpgsql
AS $function$
declare 
  rec record; 
  test integer; 
  v_latitude double precision; 
  v_longitude double precision; 
  v_id bigint; 
  v_item_id bigint; 
  v_pagination smallint; 
  v_limit smallint; 
begin
if p_pagination = 0 then v_pagination := 1; else v_pagination := p_pagination; end if; 
if p_limit = 0 or p_limit is null then v_limit := 10; else v_limit := p_limit; end if; 
PERFORM system.setlog('health.get_institutes v_pagination: ' || v_pagination );
PERFORM system.setlog('health.get_institutes v_limit: ' || v_limit );
-- raise notice 'v_pagination: %', v_pagination;
select item_id into v_item_id from health.anagraph_wards_services s where s.id = p_item_id;
PERFORM system.setlog('health.get_institutes v_item_id: ' || v_item_id );
PERFORM system.setlog('health.get_institutes p_item_id: ' || p_item_id );
-- raise notice ': %', v_item_id;
-- raise notice 'service : %', p_item_id;
if health.nvl(p_latitude::numeric,0.0) > 0.0 then
  v_latitude := p_latitude;
 else
   v_latitude := 45.4655236 ; 
end if; 
PERFORM system.setlog('health.get_institutes v_latitude: ' || v_latitude );
if health.nvl(p_longitude::numeric,0.0) > 0.0 then
 v_longitude := p_longitude;
 else
  v_longitude := 9.2080925 ;  
end if;  
PERFORM system.setlog('health.get_institutes v_longitude: ' || v_longitude );
if v_pagination = 1 then 
v_id:=nextval('health.booking_seq');
PERFORM system.setlog('health.get_institutes v_id: ' || v_id );
INSERT INTO health.searches(
            id, item_id, discipline_id, latitude, longitude, u_latitude, 
            u_longitude, counter, user_id, session_id, service_id)
    VALUES (v_id, v_item_id, 0, p_latitude, p_longitude, v_latitude, 
            v_longitude, p_limit, p_user_id, p_session_id, p_item_id);
            
else
  select 
       max(s.id) into v_id  
  from 
  	health.searches s 
  where 
     item_id = v_item_id and user_id = p_user_id and session_id = p_session_id and service_id = p_item_id;
end if; 
            
PERFORM system.setlog('health.get_institutes search id: ' || v_id );
---------------------------------------------------------------------------------------------
PERFORM system.setlog
    ('health.get_institutes search list: ' || v_id || ', limit: ' || v_limit || ', pagination' || v_pagination || ', offset: ' || p_limit * (v_pagination-1)  );

select
count(1) into test
from anagraph.anagraphs a
where exists 
(select 1 from health.anagraph_wards_services_view v 
  where  
         A.ANAGRAPH_ID = v.anagraph_id
         and
         v.item_id = v_item_id
); 
PERFORM system.setlog
    ('health.get_institutes search list: ' || v_id || ', limit: ' || v_limit || ', pagination' || v_pagination || ', offset: ' || p_limit * (v_pagination-1) 
       || ', records' || test  );
for rec in
(
select
round(jpublic.distance(v_latitude, v_longitude, a.latitude, a.longitude)::numeric, 2) as distance,
a.anagraph_id
from anagraph.anagraphs a
where exists 
(select 1 from health.anagraph_wards_services_view v 
  where  
         A.ANAGRAPH_ID = v.anagraph_id
         and
         v.item_id = v_item_id
)
ORDER BY jpublic.distance(v_latitude, v_longitude, a.latitude, a.longitude)
limit v_limit offset v_limit * (v_pagination - 1)
) loop
    select count(1) into test from health.searches_rows r where r.anagraph_id = rec.anagraph_id and r.search_id = v_id; 
    
    if test = 0 then
    INSERT INTO health.searches_rows(
            anagraph_id, distance, search_id)
     VALUES (rec.anagraph_id, rec.distance, v_id);
     end if; 
end loop; 
---------------------------------------------------------------------------------------------
for rec in
(
select 
r.distance,
a.anagraph_id, a.an_title, a.an_address, a.an_last_name, 
round(r.distance::numeric, 2) 
      || ' - ' || a.an_address || ' ' || a.an_town || '(' || a.an_state_province || ')' as full_address,
a.an_phone, a.an_fax, a.an_email, a.an_postal_code, a.an_town, a.an_postal_code, a.an_state_province,  a.latitude, a.longitude
from anagraph.anagraphs a, health.searches_rows r
where r.anagraph_id = a.anagraph_id and r.search_id = v_id
ORDER BY r.distance
limit v_limit offset v_limit * (v_pagination - 1)
) loop
       id := v_id; 
       distance := rec.distance; 
       anagraph_id  := rec.anagraph_id; 
       an_title  := rec.an_title; 
       an_address  := rec.an_address; 
       an_last_name  := rec.an_last_name; 
       full_address  := rec.full_address; 
       an_phone  := rec.an_phone; 
       an_fax  := rec.an_fax; 
       an_email  := rec.an_email; 
       an_postal_code  := rec.an_postal_code; 
       an_town  := rec.an_town; 
       an_state_province  := rec.an_state_province; 
       latitude  := rec.latitude; 
       longitude  := rec.longitude; 
       selected := false; 
       return next; 
   end loop; 
end; 
$function$
;]]></string>
			<input_param name="p_item_id" jt="4" type="int4" />
			<input_param name="p_pagination" jt="5" type="int2" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_limit" jt="5" type="int2" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_session_id" jt="-5" type="int8" />
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="distance" jt="8" type="float8" />
			<input_param name="anagraph_id" jt="4" type="int4" />
			<input_param name="an_title" jt="12" type="varchar" />
			<input_param name="an_address" jt="12" type="varchar" />
			<input_param name="an_last_name" jt="12" type="varchar" />
			<input_param name="full_address" jt="12" type="varchar" />
			<input_param name="an_phone" jt="12" type="varchar" />
			<input_param name="an_fax" jt="12" type="varchar" />
			<input_param name="an_email" jt="12" type="varchar" />
			<input_param name="an_postal_code" jt="12" type="varchar" />
			<input_param name="an_town" jt="12" type="varchar" />
			<input_param name="an_state_province" jt="12" type="varchar" />
			<input_param name="latitude" jt="8" type="float8" />
			<input_param name="longitude" jt="8" type="float8" />
			<input_param name="selected" jt="-7" type="bool" />
		</function>
		<function name="get_new_branch_id" id="Function_223c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_new_branch_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.branch_id is null then
          New.branch_id:=nextval('health.branches_seq');
          New.insert_date := Now(); 
          New.update_date := Now(); 
      end if; 
      Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_new_branch_speciality_id" id="Function_14fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_new_branch_speciality_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.speciality_id is null then
          New.speciality_id:=nextval('health.branch_specialities_seq');
          New.insert_date := Now(); 
          New.update_date := Now(); 
      end if; 
      Return NEW;
 end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_notification_id" id="Function_970" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_notification_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id:=nextval('health.notifications_seq');
      end if; 
      Return NEW;
end$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_organization_id" id="Function_b81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_organization_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.organization_id is null then
          New.organization_id:=nextval('health.organizations_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_speciality_id" id="Function_cfa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_speciality_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.speciality_id is null then
          New.speciality_id:=nextval('health.specialities_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_subspecialities_id" id="Function_1906" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_subspecialities_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.subspeciality_id is null then
          New.subspeciality_id:=nextval('health.subspecialities_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_ward_services_id" id="Function_410" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.get_ward_services_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id := nextval('health.anagraph_wards_services_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_services" id="Function_1b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.insert_services()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare 
  r record; 
  i integer; 
begin 
i := 0; 
for r in (
select id,  a.discipline_id, d.discipline_name,  prestazione, health.stripstringsearch(prestazione, d.discipline_name) as search 
from
(
SELECT distinct Upper(trim(title)) as prestazione, min(id) as id, discipline_id 
 	FROM health.anagraph_wards_services a where 
    (item_id is null or item_id = 0)
    and not exists
    (select 1 from health.search_services s where Upper(trim(a.title)) = Upper(s.prestazione))
    group by Upper(trim(title)), discipline_id  
 ) a, health.disciplines d where d.discipline_id = a.discipline_id
 )
 loop 
begin
 INSERT INTO health.search_services(
            id, item_id, discipline_id, discipline_name, prestazione, search, 
            indexed, managed)
            values
            (r.id, null, r.discipline_id, r.discipline_name,  r.prestazione, r.search, false, false); 
  i := i + 1; 
EXCEPTION
    WHEN others THEN null; 
end; 
  end loop; 
return (i); 
 end;$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="keys_assign" id="Function_203a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.keys_assign()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
  r record; 
  i integer; 
  s record; 
  j integer; 
begin
   j := 0; 
   PERFORM system.setlog('health.search_service          set key_id = null');
   update health.search_services s 
         set key_id = null where key_id is not null; 
         
   for r in 
    (SELECT M.id, D.key_text, M.level, d.id as detail_id
     FROM health.search_keys_text M , health.search_keys_text D
     WHERE D.master_id = m.id AND D.MASTER_ID <> 0 and M.level is not null
     ORDER BY m.level, d.key_text)
    loop
        
        j := j + 1; 
        PERFORM system.setlog('health.search_service' || r.key_text || ' - row: ' || j || ' - id=' || r.id );
        
        update health.search_services s 
         set key_id = r.id where
            lower(prestazione) like lower(r.key_text) || ' %'; 
            
        update health.search_services s 
         set key_id = r.id where
            lower(prestazione) like  '% ' || lower(r.key_text) ; 
        update health.search_services s 
         set key_id = r.id where
            lower(prestazione) like  '% ' || lower(r.key_text) || ' %';  
    
        update health.search_services s 
         set key_id = r.id where
            trim(lower(prestazione)) = trim(lower(r.key_text));  
            
    end loop; 
    return j; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="keys_assign_id" id="Function_1238" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.keys_assign_id(p_master_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  r record; 
  i integer; 
  s record; 
  j integer; 
begin
   j := 0; 
   PERFORM system.setlog('health.search_service          set key_id = null');
         
   for r in 
    (SELECT M.id, D.key_text, M.level, d.id as detail_id
     FROM health.search_keys_text M , health.search_keys_text D
     WHERE D.master_id = m.id AND D.MASTER_ID = p_master_id and M.level is not null
     ORDER BY m.level, d.key_text)
    loop
        
        j := j + 1; 
        PERFORM system.setlog('health.search_service: ' || r.key_text || ' - row: ' || j || ' - id=' || r.id );
        
        update health.search_services s 
         set key_id = r.id where
            lower(prestazione) like lower(r.key_text) || ' %'; 
            
        update health.search_services s 
         set key_id = r.id where
            lower(prestazione) like  '% ' || lower(r.key_text) ; 
        update health.search_services s 
         set key_id = r.id where
            lower(prestazione) like  '% ' || lower(r.key_text) || ' %';  
    
        update health.search_services s 
         set key_id = r.id where
            trim(lower(prestazione)) like trim(lower(r.key_text));  
            
    end loop; 
    return j; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_master_id" jt="4" type="int4" />
		</function>
		<function name="notification_read" id="Function_1e1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.notification_read(p_notification_id bigint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
  v_check integer; 
begin
  select count(1) into v_check
    from health.notifications n
     where n.id = p_notification_id; 
  update health.notifications n set read = true 
     where n.id = p_notification_id; 
     
   Return (v_check > 0); 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_notification_id" jt="-5" type="int8" />
		</function>
		<function name="nvl" id="Function_156b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.nvl(p_test numeric, p_subst numeric)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$begin
  if p_test is null then return p_subst; else return p_test; end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="2" type="numeric" />
			<input_param name="p_test" jt="2" type="numeric" />
			<input_param name="p_subst" jt="2" type="numeric" />
		</function>
		<function name="rebuild_search_indexes" id="Function_767" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.rebuild_search_indexes()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  i integer; 
begin
  select count(*)  into i
            FROM health.search_services
       where indexed = true;
       
  delete from health.search_index; 
       
  insert into health.search_index 
  SELECT id, item_id,  discipline_name, prestazione, health.stripstringsearch(prestazione, discipline_name) as searchkey
            FROM health.search_services
            where id in 
  (
        SELECT min(id) as id
            FROM health.search_services
            where indexed = true 
        group by health.stripstringsearch(prestazione, discipline_name) 
  ); 
  
  -- VACUUM (full, freeze, analyze) health.search_services;
       
return i; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="search_services" id="Function_eae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.search_services(p_search character varying)
 RETURNS TABLE(discipline character varying, stype character varying, discipline_id integer, service_id integer, description character varying)
 LANGUAGE plpgsql
AS $function$
declare 
  r record; 
begin
for r in 
(
select * from 
(
select
d.discipline_name as discipline, 
'd' as tp, 
d.discipline_id as did, 
0 as sid, 
discipline_name as description 
from health.disciplines d
union
select distinct
d.discipline_name as discipline,
'i' as tp, 
d.discipline_id as did, 
i.id as sid, 
i.model as description
from 
health.disciplines d, items.definitions i, health.disciplines_services s
where
i.id = s.item_id and d.discipline_id = s.discipline_id
union
SELECT distinct 
d.discipline_name as discipline,
's' as tp, 
d.discipline_id as did, 
0 as sid, 
Upper(i.title)  as description
FROM 
health.anagraph_wards_services i, health.disciplines d 
where i.item_id is null
and d.discipline_id = i.discipline_id
) a
where upper(a.description) like '%' || upper(p_search) || '%'
order by a.description
) loop
  discipline := r.discipline; 
  discipline_id := r.did;
  service_id := r.sid; 
  stype := r.tp;
  description := r.description; 
  
  return next; 
end loop; 
end; 
$function$
;]]></string>
			<input_param name="p_search" jt="12" type="varchar" />
			<input_param name="discipline" jt="12" type="varchar" />
			<input_param name="stype" jt="12" type="varchar" />
			<input_param name="discipline_id" jt="4" type="int4" />
			<input_param name="service_id" jt="4" type="int4" />
			<input_param name="description" jt="12" type="varchar" />
		</function>
		<function name="search_services" id="Function_48f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.search_services(p_search character varying, p_limit integer)
 RETURNS TABLE(discipline character varying, stype character varying, discipline_id integer, service_id integer, description character varying)
 LANGUAGE plpgsql
AS $function$
declare 
  r record; 
begin
for r in 
(
select * from 
(
select
d.discipline_name as discipline, 
'd' as tp, 
d.discipline_id as did, 
0 as sid, 
discipline_name as description 
from health.disciplines d
union
select distinct
d.discipline_name as discipline,
'i' as tp, 
d.discipline_id as did, 
i.id as sid, 
i.model as description
from 
health.disciplines d, items.definitions i, health.disciplines_services s
where
i.id = s.item_id and d.discipline_id = s.discipline_id
union
SELECT distinct 
d.discipline_name as discipline,
's' as tp, 
d.discipline_id as did, 
0 as sid, 
Upper(i.title)  as description
FROM 
health.anagraph_wards_services i, health.disciplines d 
where i.item_id is null
and d.discipline_id = i.discipline_id
) a
where upper(a.description) like '%' || upper(p_search) || '%'
order by a.discipline, a.description
limit p_limit
) 
loop
  discipline := r.discipline; 
  discipline_id := r.did;
  service_id := r.sid; 
  stype := r.tp;
  description := r.description; 
  
  return next; 
end loop; 
end; 
$function$
;]]></string>
			<input_param name="p_search" jt="12" type="varchar" />
			<input_param name="p_limit" jt="4" type="int4" />
			<input_param name="discipline" jt="12" type="varchar" />
			<input_param name="stype" jt="12" type="varchar" />
			<input_param name="discipline_id" jt="4" type="int4" />
			<input_param name="service_id" jt="4" type="int4" />
			<input_param name="description" jt="12" type="varchar" />
		</function>
		<function name="search_services_index" id="Function_c71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.search_services_index(p_search character varying, p_limit integer)
 RETURNS TABLE(id bigint, item_id integer, discipline_id integer, prestazione character varying, discipline_name character varying, search character varying, title character varying)
 LANGUAGE plpgsql
AS $function$
-- Spec. 2017-0016
-- id, item_id, discipline_id, discipline_name, prestazione, search, prestazione as title
-- sostuire la vecchia procedura con questa nuova basata sugli indici di ricerca.........
declare 
  r record; 
begin
for r in 
(
 SELECT * from
    (
   SELECT *
	FROM health.search_index 
    where 
    	searchkey like '%' || trim(upper(health.stripstring(p_search))) || '%'
    order by position ( upper(p_search) in searchkey)
    limit p_limit
    ) a
    order by a.prestazione
) 
loop
  id := r.id; 
  item_id = r.item_id; 
  discipline_id := 0::integer; 
  discipline_name := r.discipline_name; 
  prestazione := r.prestazione; 
  title := r.prestazione; 
  search := r.searchkey; 
  
  return next; 
end loop; 
end; 
$function$
;]]></string>
			<input_param name="p_search" jt="12" type="varchar" />
			<input_param name="p_limit" jt="4" type="int4" />
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="item_id" jt="4" type="int4" />
			<input_param name="discipline_id" jt="4" type="int4" />
			<input_param name="prestazione" jt="12" type="varchar" />
			<input_param name="discipline_name" jt="12" type="varchar" />
			<input_param name="search" jt="12" type="varchar" />
			<input_param name="title" jt="12" type="varchar" />
		</function>
		<function name="search_services_indexing" id="Function_16e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.search_services_indexing()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
i integer; 
x record; 
begin 
i := anagraph_wards_services_indexing;
for x in (
select search_index, id, title, description, item_id 
from  health.view_search_services v
where not exists
(select 1 from health.search_services s where s.id = v.id or s.search_index = v.search_index)
)
loop
  insert into health.search_services (search_index, id, title, description, item_id )
               values (x.search_index, x.id, x.title, x.description, x.item_id); 
  i := i + 1;
end loop; 
--------- ora la parte di assegnazione di item_id --------------
return i; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="send_notification" id="Function_1f8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.send_notification(p_session_id bigint, p_user_id integer, p_from_id integer, p_message text, p_title character varying, p_type smallint, p_booking_id bigint)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$declare
  p_id bigint; 
begin
  p_id:=nextval('health.notifications_seq');
  /*
   N p_session_id bigint, IN p_user_id integer, IN p_from_id integer, 
   IN p_message text, IN p_title character varying, IN p_type smallint) RETURNS bigint AS
  */
INSERT INTO health.notifications(
            id, type_id, title, message, db_schema_id, db_user_id, datetime, 
            read, booking_id, solved, from_user_id)
    VALUES (p_id, p_type, p_title, p_message, 31, p_user_id, now(), 
            false, p_booking_id, false, 0);
  return p_id; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_session_id" jt="-5" type="int8" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_from_id" jt="4" type="int4" />
			<input_param name="p_message" jt="12" type="text" />
			<input_param name="p_title" jt="12" type="varchar" />
			<input_param name="p_type" jt="5" type="int2" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
		<function name="services_anagraphs_items_update" id="Function_1c0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.services_anagraphs_items_update(p_update_all boolean)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
x record; 
i integer; 
begin
  i := 0; 
	for x in (
		select s.id, s.item_id, w.item_id as wid
		from 
      		health.search_services s, health.anagraph_wards_services w
		where 
			s.item_id is not null
		and
			w.id = s.id
		and
        (
			(w.item_id <> s.item_id and p_update_all) 
            or 
            (w.item_id is null)
        )
    )
	loop
    	update health.anagraph_wards_services 
            set item_id = x.item_id 
         where 
            id = x.id;     
        i := i + 1; 
      end loop; 
    return i; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_update_all" jt="-7" type="bool" />
		</function>
		<function name="services_anagraphs_searchstring_update" id="Function_1cb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.services_anagraphs_searchstring_update(p_update_all boolean)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
x record; 
i integer; 
begin
  i := 0; 
	for x in (
		select w.id, s.item_id
		from 
      		(
		 select prestazione, count(1), min(item_id) as item_id 
		from 
			(
			select distinct upper(system.stripstringsearch(prestazione, '')) as prestazione, item_id
				from health.search_services s
				where item_id is not null
			) a
		group by a.prestazione
		having count(1) = 1
		order by prestazione
		) s,  health.anagraph_wards_services w
		where 
			s.item_id is not null
		and
			w.searchstring = s.prestazione
		and
        (
			(w.item_id <> s.item_id and p_update_all) 
            or 
            (w.item_id is null)
        )
    )
	loop
    	update health.anagraph_wards_services 
            set item_id = x.item_id 
         where 
            id = x.id;     
        i := i + 1; 
      end loop; 
    return i; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_update_all" jt="-7" type="bool" />
		</function>
		<function name="services_anagraphs_update" id="Function_1c3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.services_anagraphs_update()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  x record; 
  i integer; 
begin
-- per prima cosa andrebbe gestito un aggiornamento degli indici di ricerca partendo dalle anagrafiche istituti. 
-- si tratterrebbe dell'inserimento delle nuove voci nella tabella health.search_services

  i := 0; 
  for x in (select * from health.search_services)
  loop
     update health.anagraph_wards_services set
       item_id = x.item_id, 
       discipline_id = x.discipline_id
       where
       id = x.id; 
     i := i + 1; 
  end loop; 
  return i; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="setbooking" id="Function_17cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.setbooking(p_storedsearch bigint, p_auto boolean)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  p_id bigint; 
  rsearch record;
  rec record; 
begin
   p_id:=nextval('health.booking_seq');
   select * from health.searches into rsearch where id = p_storedsearch; 
   insert into health.bookings  (booking_id, db_user_id, db_session_id, discipline_id, item_id, book_since, book_until, service_id )
   values (
    p_id, 
    rsearch.user_id, 
    rsearch.session_id, 
    rsearch.discipline_id,
    rsearch.item_id,
     now(), 
     now(), 
     service_id
   );

---------------------------------------------------------------------------------------------
for rec in
(
select 
* 
from health.searches_rows a
where search_id = p_storedsearch
ORDER BY distance
limit 3 
) loop
    INSERT INTO health.bookings_rows( booking_id, anagraph_id, since, until, distance)
     VALUES (p_id, rec.anagraph_id,  now(), now(), rec.distance);
end loop; 

---------------------------------------------------------------------------------------------
  
   -- code for procedure

   return p_id; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_storedsearch" jt="-5" type="int8" />
			<input_param name="p_auto" jt="-7" type="bool" />
		</function>
		<function name="stripstring" id="Function_1180" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.stripstring(p_input character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$ 
  DECLARE 
    temp_name CHARACTER varying; 
  BEGIN 
    -- Start of DDL Script for Trigger TTTLINES_PUBLIC.ANAG_NOMERICERCA_TRG 
    -- Generated 17-dic-2007 7.17.39 from TTTLINES_PUBLIC@JANUA 
    -- Modification Spec. 2017-0016 Health Search 
    temp_name := trim(p_input); 
    -- 
    temp_name := replace (temp_name, '^', '%'); 
    temp_name := replace (temp_name, '•', '%'); 
    temp_name := replace (temp_name, '“', '%'); 
    temp_name := replace (temp_name, '”', '%'); 
    temp_name := replace (temp_name, '.', '%'); 
    temp_name := replace (temp_name, ',', '%'); 
    temp_name := replace (temp_name, '@', '%'); 
    temp_name := replace (temp_name, '_', '%'); 
    temp_name := replace (temp_name, '/', '%'); 
    temp_name := replace (temp_name, '(', '%'); 
    temp_name := replace (temp_name, ')', '%'); 
    temp_name := replace (temp_name, '&', '%'); 
    temp_name := replace (temp_name, '*', '%'); 
    temp_name := replace (temp_name, ':', '%'); 
    temp_name := replace (temp_name, '?', '%'); 
    temp_name := replace (temp_name, '#', '%'); 
    temp_name := replace (temp_name, '*', '%'); 
    temp_name := replace (temp_name, '?', '%'); 
    temp_name := replace (temp_name, ';', '%'); 
    temp_name := replace (temp_name, '!', '%'); 
    temp_name := replace (temp_name, '$', '%'); 
    temp_name := replace (temp_name, '"', '%'); 
    temp_name := replace (temp_name, '*', '%'); 
    temp_name := replace (temp_name, '+', '%'); 
    -- TEMP_NAME := replace (TEMP_NAME, '%', ''); 
    temp_name := replace (temp_name, '§', '%'); 
    temp_name := replace (temp_name, '£', '%'); 
    temp_name := replace (temp_name, '°', '%'); 
    temp_name := replace (temp_name, ' ', '%'); 
    RETURN upper(temp_name); 
  END; 
  $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_input" jt="12" type="varchar" />
		</function>
		<function name="stripstringsearch" id="Function_1a2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.stripstringsearch(p_service character varying, p_discipline character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
DECLARE   
   TEMP_NAME                 character varying(2048);
    v_firstname character varying (1024);
    v_lastname character varying (1024);
   -- Declare program variables as shown above
BEGIN 
-- Start of DDL Script for Trigger TTTLINES_PUBLIC.ANAG_NOMERICERCA_TRG
-- Generated 17-dic-2007 7.17.39 from TTTLINES_PUBLIC@JANUA
-- Modification Spec. 2017-0014 Health Search 
       if p_service is null then v_firstname := ' '; else v_firstname := p_service; end if;  
       if p_discipline is null then v_lastname := ' '; else v_lastname := p_discipline; end if; 
       --
       TEMP_NAME := TRIM(v_firstname) || '-' || TRIM(v_lastname);
       --     
       TEMP_NAME := replace (TEMP_NAME, '^', '');
       TEMP_NAME := replace (TEMP_NAME, '•', '');
       TEMP_NAME := replace (TEMP_NAME, '“', '');
       TEMP_NAME := replace (TEMP_NAME, '”', '');
       TEMP_NAME := replace (TEMP_NAME, '.', '-');
       -- TEMP_NAME := replace (TEMP_NAME, '-', '');
       TEMP_NAME := replace (TEMP_NAME, ',', '');
       TEMP_NAME := replace (TEMP_NAME, '@', '');
       TEMP_NAME := replace (TEMP_NAME, '_', '');
       TEMP_NAME := replace (TEMP_NAME, '/', '');
       TEMP_NAME := replace (TEMP_NAME, '(', '');
       TEMP_NAME := replace (TEMP_NAME, ')', '');
       TEMP_NAME := replace (TEMP_NAME, '&', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       -- TEMP_NAME := replace (TEMP_NAME, ' ', '');
       TEMP_NAME := replace (TEMP_NAME, ':', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, '#', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, ';', '');
       TEMP_NAME := replace (TEMP_NAME, '!', '');
       TEMP_NAME := replace (TEMP_NAME, '$', '');
       TEMP_NAME := replace (TEMP_NAME, '"', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, '+', '');
       TEMP_NAME := replace (TEMP_NAME, '%', '');
       TEMP_NAME := replace (TEMP_NAME, '§', '');
       TEMP_NAME := replace (TEMP_NAME, '£', '');
       TEMP_NAME := replace (TEMP_NAME, '°', '');
       return upper(TEMP_NAME); 
 end; 
  
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_service" jt="12" type="varchar" />
			<input_param name="p_discipline" jt="12" type="varchar" />
		</function>
		<function name="update_services" id="Function_13f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.update_services()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  i integer;
  r record;
begin 
i := 0;
for r in (
SELECT distinct s.id, s.item_id 
 	FROM health.anagraph_wards_services a, health.search_services s 
    where 
    (a.item_id is null or a.item_id = 0)
    and 
    Upper(trim(a.title)) = Upper(s.prestazione)
    and 
    s.item_id is not null
    order by s.id
    )
    loop
      update health.anagraph_wards_services  set item_id = r.item_id where id = r.id;
      i := i + 1;
    end loop;
    return i;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="user_booking_confirmation" id="Function_648" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION health.user_booking_confirmation(p_booking_id bigint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
begin
if p_booking_id > 0 and p_booking_id is not null 
then
  update health.bookings 
   set
      confirmed = true, 
      level = 7
   where 
      booking_id = p_booking_id; 
      
   return true; 
   
else
   return false; 
end if; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_booking_id" jt="-5" type="int8" />
		</function>
	</schema>
	<schema name="information_schema" catalogname="ergomercator" >
		<udt name="cardinal_number" udt_java_type="4" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} integer CONSTRAINT cardinal_number_domain_check CHECK (VALUE >= 0)]]></udt_script>
		</udt>
		<udt name="character_data" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying ]]></udt_script>
		</udt>
		<udt name="sql_identifier" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying ]]></udt_script>
		</udt>
		<udt name="time_stamp" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} timestamp(2) with time zone DEFAULT CURRENT_TIMESTAMP(2) ]]></udt_script>
		</udt>
		<udt name="yes_or_no" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} character varying(3) CONSTRAINT yes_or_no_check CHECK (VALUE::text = ANY (ARRAY['YES'::character varying, 'NO'::character varying]::text[]))]]></udt_script>
		</udt>
		<table name="sql_features" type="GLOBAL_TEMPORARY" >
			<column name="feature_id" type="character_data" decimal="0" jt="12" />
			<column name="feature_name" type="character_data" decimal="0" jt="12" />
			<column name="sub_feature_id" type="character_data" decimal="0" jt="12" />
			<column name="sub_feature_name" type="character_data" decimal="0" jt="12" />
			<column name="is_supported" type="yes_or_no" length="7" decimal="0" jt="12" />
			<column name="is_verified_by" type="character_data" decimal="0" jt="12" />
			<column name="comments" type="character_data" decimal="0" jt="12" />
		</table>
		<table name="sql_implementation_info" type="GLOBAL_TEMPORARY" >
			<column name="implementation_info_id" type="character_data" decimal="0" jt="12" />
			<column name="implementation_info_name" type="character_data" decimal="0" jt="12" />
			<column name="integer_value" type="cardinal_number" length="10" decimal="0" jt="4" />
			<column name="character_value" type="character_data" decimal="0" jt="12" />
			<column name="comments" type="character_data" decimal="0" jt="12" />
		</table>
		<table name="sql_languages" type="GLOBAL_TEMPORARY" >
			<column name="sql_language_source" type="character_data" decimal="0" jt="12" />
			<column name="sql_language_year" type="character_data" decimal="0" jt="12" />
			<column name="sql_language_conformance" type="character_data" decimal="0" jt="12" />
			<column name="sql_language_integrity" type="character_data" decimal="0" jt="12" />
			<column name="sql_language_implementation" type="character_data" decimal="0" jt="12" />
			<column name="sql_language_binding_style" type="character_data" decimal="0" jt="12" />
			<column name="sql_language_programming_language" type="character_data" decimal="0" jt="12" />
		</table>
		<table name="sql_packages" type="GLOBAL_TEMPORARY" >
			<column name="feature_id" type="character_data" decimal="0" jt="12" />
			<column name="feature_name" type="character_data" decimal="0" jt="12" />
			<column name="is_supported" type="yes_or_no" length="7" decimal="0" jt="12" />
			<column name="is_verified_by" type="character_data" decimal="0" jt="12" />
			<column name="comments" type="character_data" decimal="0" jt="12" />
		</table>
		<table name="sql_parts" type="GLOBAL_TEMPORARY" >
			<column name="feature_id" type="character_data" decimal="0" jt="12" />
			<column name="feature_name" type="character_data" decimal="0" jt="12" />
			<column name="is_supported" type="yes_or_no" length="7" decimal="0" jt="12" />
			<column name="is_verified_by" type="character_data" decimal="0" jt="12" />
			<column name="comments" type="character_data" decimal="0" jt="12" />
		</table>
		<table name="sql_sizing" type="GLOBAL_TEMPORARY" >
			<column name="sizing_id" type="cardinal_number" length="10" decimal="0" jt="4" />
			<column name="sizing_name" type="character_data" decimal="0" jt="12" />
			<column name="supported_value" type="cardinal_number" length="10" decimal="0" jt="4" />
			<column name="comments" type="character_data" decimal="0" jt="12" />
		</table>
		<table name="sql_sizing_profiles" type="GLOBAL_TEMPORARY" >
			<column name="sizing_id" type="cardinal_number" length="10" decimal="0" jt="4" />
			<column name="sizing_name" type="character_data" decimal="0" jt="12" />
			<column name="profile_id" type="character_data" decimal="0" jt="12" />
			<column name="required_value" type="cardinal_number" length="10" decimal="0" jt="4" />
			<column name="comments" type="character_data" decimal="0" jt="12" />
		</table>
		<function name="_pg_char_max_length" id="Function_15ce" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_char_max_length SELECT
  CASE WHEN $2 = -1 /* default typmod */
       THEN null
       WHEN $1 IN (1042, 1043) /* char, varchar */
       THEN $2 - 4
       WHEN $1 IN (1560, 1562) /* bit, varbit */
       THEN $2
       ELSE null
  END;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
		</function>
		<function name="_pg_char_octet_length" id="Function_5d9" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_char_octet_length SELECT
  CASE WHEN $1 IN (25, 1042, 1043) /* text, char, varchar */
       THEN CASE WHEN $2 = -1 /* default typmod */
                 THEN CAST(2^30 AS integer)
                 ELSE information_schema._pg_char_max_length($1, $2) *
                      pg_catalog.pg_encoding_max_length((SELECT encoding FROM pg_catalog.pg_database WHERE datname = pg_catalog.current_database()))
            END
       ELSE null
  END;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
		</function>
		<function name="_pg_datetime_precision" id="Function_10dc" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_datetime_precision SELECT
  CASE WHEN $1 IN (1082) /* date */
           THEN 0
       WHEN $1 IN (1083, 1114, 1184, 1266) /* time, timestamp, same + tz */
           THEN CASE WHEN $2 < 0 THEN 6 ELSE $2 END
       WHEN $1 IN (1186) /* interval */
           THEN CASE WHEN $2 < 0 OR $2 & 65535 = 65535 THEN 6 ELSE $2 & 65535 END
       ELSE null
  END;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
		</function>
		<function name="_pg_expandarray" id="Function_191b" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_expandarray select $1[s], s - pg_catalog.array_lower($1,1) + 1
        from pg_catalog.generate_series(pg_catalog.array_lower($1,1),
                                        pg_catalog.array_upper($1,1),
                                        1) as g(s);]]></string>
			<input_param name="" jt="1111" type="anyarray" />
			<input_param name="x" jt="1111" type="anyelement" />
			<input_param name="n" jt="4" type="int4" />
		</function>
		<function name="_pg_index_position" id="Function_2425" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_index_position 
SELECT (ss.a).n FROM
  (SELECT information_schema._pg_expandarray(indkey) AS a
   FROM pg_catalog.pg_index WHERE indexrelid = $1) ss
  WHERE (ss.a).x = $2;
]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="5" type="int2" />
		</function>
		<function name="_pg_interval_type" id="Function_47c" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_interval_type SELECT
  CASE WHEN $1 IN (1186) /* interval */
           THEN upper(substring(format_type($1, $2) from 'interval[()0-9]* #"%#"' for '#'))
       ELSE null
  END;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="mod" jt="4" type="int4" />
		</function>
		<function name="_pg_keysequal" id="Function_2415" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_keysequal select $1 operator(pg_catalog.<@) $2 and $2 operator(pg_catalog.<@) $1;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="$1" jt="2003" type="_int2" />
			<input_param name="$2" jt="2003" type="_int2" />
		</function>
		<function name="_pg_numeric_precision" id="Function_18a1" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_numeric_precision SELECT
  CASE $1
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN $2 = -1
                   THEN null
                   ELSE (($2 - 4) >> 16) & 65535
                   END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
  END;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
		</function>
		<function name="_pg_numeric_precision_radix" id="Function_1c3b" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_numeric_precision_radix SELECT
  CASE WHEN $1 IN (21, 23, 20, 700, 701) THEN 2
       WHEN $1 IN (1700) THEN 10
       ELSE null
  END;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
		</function>
		<function name="_pg_numeric_scale" id="Function_16d8" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_numeric_scale SELECT
  CASE WHEN $1 IN (21, 23, 20) THEN 0
       WHEN $1 IN (1700) THEN
            CASE WHEN $2 = -1
                 THEN null
                 ELSE ($2 - 4) & 65535
                 END
       ELSE null
  END;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
		</function>
		<function name="_pg_truetypid" id="Function_621" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_truetypid SELECT CASE WHEN $2.typtype = 'd' THEN $2.typbasetype ELSE $1.atttypid END;]]></string>
			<input_param name="returnValue" jt="-5" type="oid" />
			<input_param name="$1" jt="2002" type="pg_attribute" />
			<input_param name="$2" jt="2002" type="pg_type" />
		</function>
		<function name="_pg_truetypmod" id="Function_1809" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_truetypmod SELECT CASE WHEN $2.typtype = 'd' THEN $2.typtypmod ELSE $1.atttypmod END;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="2002" type="pg_attribute" />
			<input_param name="$2" jt="2002" type="pg_type" />
		</function>
	</schema>
	<schema name="items" catalogname="ergomercator" >
		<table name="branddimensions" >
			<column name="brand_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="dimension_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="pk_branddimensions" unique="PRIMARY_KEY" >
				<column name="brand_id" />
				<column name="dimension_id" />
			</index>
			<fk name="it_branddimensions_brands_fk" to_schema="ergomercator.items" to_table="brands" update_action="cascade" >
				<fk_column name="brand_id" pk="id" />
			</fk>
			<fk name="itdimension_brands_fk" to_schema="ergomercator.items" to_table="dimensions" >
				<fk_column name="dimension_id" pk="dimension_id" />
			</fk>
		</table>
		<table name="brands" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="brand_name" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="brand_order" type="smallint" length="5" decimal="0" jt="5" />
			<column name="brand_icon" type="varchar" length="256" decimal="0" jt="12" />
			<column name="brand_banner" type="varchar" length="256" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="code" type="varchar" length="12" decimal="0" jt="12" />
			<index name="brands_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="brnd_dmn_sizeshapes" >
			<column name="brand_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="dimension_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="sizeshape_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="brnd_dmn_sizeshapes_pk" unique="PRIMARY_KEY" >
				<column name="brand_id" />
				<column name="dimension_id" />
				<column name="sizeshape_id" />
			</index>
			<index name="idx_brnd_dmn_sizeshapes" unique="NORMAL" >
				<column name="dimension_id" />
			</index>
			<fk name="brnddimn_sizeshapes" to_schema="ergomercator.items" to_table="branddimensions" >
				<fk_column name="brand_id" pk="brand_id" />
				<fk_column name="dimension_id" pk="dimension_id" />
			</fk>
			<fk name="fk_brnd_dmn_sizeshapes" to_schema="ergomercator.items" to_table="dimensions" >
				<fk_column name="dimension_id" pk="dimension_id" />
			</fk>
		</table>
		<table name="definitions" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Relation Membership To Schema]]></comment>
			</column>
			<column name="code" type="varchar" length="60" decimal="0" jt="12" />
			<column name="model" type="varchar" length="128" decimal="0" jt="12" />
			<column name="description" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="main_supplier_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="conventions" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="supplier_code" type="varchar" length="60" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="wildcard" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="ref_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pkg_units" type="smallint" length="5" decimal="0" jt="5" />
			<column name="status" type="smallint" length="5" decimal="0" jt="5" />
			<column name="reserved" type="smallint" length="5" decimal="0" jt="5" />
			<column name="extra_flag" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="branch_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="min_heigth" type="smallint" length="5" decimal="0" jt="5" />
			<column name="max_heigth" type="smallint" length="5" decimal="0" jt="5" />
			<column name="repeats" type="smallint" length="5" decimal="0" jt="5" />
			<column name="periodic" type="smallint" length="5" decimal="0" jt="5" />
			<column name="guarantee" type="smallint" length="5" decimal="0" jt="5" />
			<column name="promo_points" type="smallint" length="5" decimal="0" jt="5" />
			<column name="promo_point_forfait" type="smallint" length="5" decimal="0" jt="5" />
			<column name="promo_group" type="smallint" length="5" decimal="0" jt="5" />
			<column name="promo" type="smallint" length="5" decimal="0" jt="5" />
			<column name="brand_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="type_ref_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="munit_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="family_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iconfile" type="varchar" length="256" decimal="0" jt="12" />
			<column name="bannerfile" type="varchar" length="256" decimal="0" jt="12" />
			<column name="imagefile" type="varchar" length="256" decimal="0" jt="12" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="subtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="lefimage" type="varchar" length="256" decimal="0" jt="12" />
			<column name="rightimage" type="varchar" length="256" decimal="0" jt="12" />
			<column name="item_rtftext" type="text" decimal="0" jt="12" />
			<column name="item_text" type="varchar" length="4000" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="main_price" type="money" decimal="0" jt="3" >
				<comment><![CDATA[Main price per product in inventory, usually is just a price definition for the market while local pricelist is used in real world applications]]></comment>
			</column>
			<column name="search_index" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Reference to Items Group ID]]></comment>
			</column>
			<index name="definitions_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="items_code_family_uk" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
				<column name="code" />
				<column name="family_id" />
			</index>
			<fk name="brand_definitions_fk" to_schema="ergomercator.items" to_table="brands" >
				<fk_column name="brand_id" pk="id" />
			</fk>
			<fk name="definitions_fams_fk" to_schema="ergomercator.items" to_table="families" >
				<fk_column name="family_id" pk="id" />
			</fk>
			<fk name="typeref_item_definitions_fk" to_schema="ergomercator.items" to_table="types" delete_action="setNull" >
				<fk_column name="type_ref_id" pk="type_id" />
			</fk>
			<fk name="types_definitions_fk" to_schema="ergomercator.items" to_table="types" delete_action="cascade" >
				<fk_column name="type_id" pk="type_id" />
			</fk>
		</table>
		<table name="dimensions" >
			<column name="dimension_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="dimension_des" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="p_dimension_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="exclude" type="varchar" length="128" decimal="0" jt="12" />
			<index name="dimensions_pk" unique="PRIMARY_KEY" >
				<column name="dimension_id" />
			</index>
			<index name="idx_dimensions" unique="NORMAL" >
				<column name="p_dimension_id" />
			</index>
		</table>
		<table name="discounts" >
			<column name="discount_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="discount_des" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="discount_purcent" type="numeric" length="5" decimal="2" jt="2" mandatory="y" />
			<column name="discount_level" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="discount_total" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="discount_type" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="discount_price" type="numeric" length="12" decimal="4" jt="2" />
			<column name="discount_dues" type="numeric" length="12" decimal="4" jt="2" />
			<column name="discount_load" type="numeric" length="12" decimal="4" jt="2" />
			<index name="discounts_pk" unique="PRIMARY_KEY" >
				<column name="discount_id" />
			</index>
		</table>
		<table name="families" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="family_name" type="varchar" length="60" decimal="0" jt="12" mandatory="y" />
			<column name="level" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="master_family_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="iconfile" type="varchar" length="512" decimal="0" jt="12" />
			<column name="iconfile_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="bannerfile" type="varchar" length="512" decimal="0" jt="12" />
			<column name="bannerfile_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="imagefile" type="varchar" length="512" decimal="0" jt="12" />
			<column name="imagefile_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="pdffile" type="varchar" length="512" decimal="0" jt="12" />
			<column name="pdffile_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="subtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="rtf_text" type="text" decimal="0" jt="12" />
			<column name="fam_text" type="text" decimal="0" jt="12" />
			<column name="ispublic" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="code" type="varchar" length="12" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="families_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="db_masterfamlies_fk_ndx" unique="NORMAL" >
				<column name="master_family_id" />
			</index>
			<index name="db_schema_ndx" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="items_fams_fk" to_schema="ergomercator.items" to_table="families" >
				<fk_column name="master_family_id" pk="id" />
			</fk>
		</table>
		<table name="grids" >
			<column name="fieldname" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="bgcolor" type="integer" length="10" decimal="0" jt="4" />
			<column name="width" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="128" decimal="0" jt="12" />
			<column name="excel" type="smallint" length="5" decimal="0" jt="5" />
			<column name="chart" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="tmp_grids_pk" unique="PRIMARY_KEY" >
				<column name="fieldname" />
			</index>
		</table>
		<table name="groups" >
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="group_des" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="contact_group" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="accounting" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="cod_account" type="varchar" length="10" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="group_cod" type="varchar" length="2" decimal="0" jt="12" />
			<column name="ledger_cod" type="varchar" length="3" decimal="0" jt="12" />
			<column name="subledger_cod" type="varchar" length="10" decimal="0" jt="12" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="icon_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="it_groups_pk" unique="PRIMARY_KEY" >
				<column name="group_id" />
			</index>
			<index name="itgr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="hazamat_divisions" >
			<column name="code" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="128" decimal="0" jt="12" />
			<column name="placard" type="bytea" decimal="0" jt="-2" />
			<index name="hazamat_divisions_pkey" unique="PRIMARY_KEY" >
				<column name="code" />
			</index>
		</table>
		<table name="hazmat" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="symbols" type="varchar" length="8" decimal="0" jt="12" />
			<column name="description" type="varchar" length="255" decimal="0" jt="12" />
			<column name="haz_class" type="varchar" length="20" decimal="0" jt="12" />
			<column name="code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="pg" type="varchar" length="3" decimal="0" jt="12" />
			<column name="label_codes" type="varchar" length="12" decimal="0" jt="12" />
			<column name="cpecial_provisions" type="varchar" length="128" decimal="0" jt="12" />
			<column name="exceptions" type="varchar" length="20" decimal="0" jt="12" />
			<column name="non_bulk" type="varchar" length="20" decimal="0" jt="12" />
			<column name="bulk" type="varchar" length="20" decimal="0" jt="12" />
			<column name="aircraft_passenger" type="varchar" length="20" decimal="0" jt="12" />
			<column name="aircraft_cargo" type="varchar" length="20" decimal="0" jt="12" />
			<column name="vessel_stowage_location" type="varchar" length="2" decimal="0" jt="12" />
			<column name="vessel_stowage_other" type="varchar" length="60" decimal="0" jt="12" />
			<column name="search_index" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
		</table>
		<table name="items_dimensions" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="dimension_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="price" type="money" decimal="0" jt="3" />
			<index name="items_dimensions_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
				<column name="dimension_id" />
			</index>
			<fk name="ititemdimension_fk" to_schema="ergomercator.items" to_table="definitions" >
				<fk_column name="item_id" pk="id" />
			</fk>
			<fk name="dimensions_items_fk" to_schema="ergomercator.items" to_table="dimensions" >
				<fk_column name="dimension_id" pk="dimension_id" />
			</fk>
		</table>
		<table name="package_types" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="code" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_inset" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="document_types_groups_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="pkgtypes_uk" unique="UNIQUE_KEY" >
				<column name="code" />
				<column name="db_schema_id" />
			</index>
		</table>
		<table name="pricelists" >
			<column name="pricelist_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="pricelist_name" type="varchar" length="60" decimal="0" jt="12" />
			<column name="pricelist_since" type="date" length="13" decimal="0" jt="91" />
			<column name="pricelist_until" type="date" length="13" decimal="0" jt="91" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="isdefault" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="it_pricelists_pk" unique="PRIMARY_KEY" >
				<column name="pricelist_id" />
			</index>
			<fk name="pricelists_seasons_fk" to_schema="ergomercator.items" to_table="seasons" >
				<fk_column name="season_id" pk="season_id" />
			</fk>
		</table>
		<table name="pricelists_items" >
			<column name="pricelist_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="former_price" type="numeric" length="10" decimal="4" jt="2" mandatory="y" />
			<column name="actual_price" type="numeric" length="10" decimal="4" jt="2" />
			<column name="discount_purcent" type="numeric" length="5" decimal="2" jt="2" />
			<column name="discount_price" type="numeric" length="10" decimal="4" jt="2" />
			<column name="since_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="unitl_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="discount_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="pricelist_type" type="char" length="1" decimal="0" jt="1" />
			<column name="main_supplier_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<index name="pricelists_pk" unique="PRIMARY_KEY" >
				<column name="pricelist_id" />
				<column name="item_id" />
			</index>
			<index name="idx_pricelists_items" unique="UNIQUE_KEY" >
				<column name="pricelist_id" />
			</index>
			<index name="idx_pricelists_items_0" unique="NORMAL" >
				<column name="discount_id" />
			</index>
			<index name="idx_pricelists_items_1" unique="NORMAL" >
				<column name="main_supplier_id" />
			</index>
			<fk name="item_pricelists_defs_fk" to_schema="ergomercator.items" to_table="definitions" >
				<fk_column name="item_id" pk="id" />
			</fk>
			<fk name="fk_pricelists_items" to_schema="ergomercator.items" to_table="discounts" >
				<fk_column name="discount_id" pk="discount_id" />
			</fk>
			<fk name="fk_items_pricelists" to_schema="ergomercator.items" to_table="pricelists" update_action="cascade" >
				<fk_column name="pricelist_id" pk="pricelist_id" />
			</fk>
		</table>
		<table name="seasons" >
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="season_since" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="season_until" type="date" length="13" decimal="0" jt="91" />
			<index name="seasons_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
			</index>
		</table>
		<table name="type_groups" >
			<column name="group_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="group_type_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="group_type_code" type="varchar" length="15" decimal="0" jt="12" />
			<column name="isstock" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="group_level" type="smallint" length="5" decimal="0" jt="5" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="icon_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Icon Id for type_group]]></comment>
			</column>
			<index name="type_groups_pk" unique="PRIMARY_KEY" >
				<column name="group_type_id" />
			</index>
			<index name="type_groups_uk" unique="UNIQUE_KEY" >
				<column name="group_type_name" />
			</index>
		</table>
		<table name="types" >
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="type_des" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="stock" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="group_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Default always false]]></comment>
			</column>
			<column name="icon_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="types_pk" unique="PRIMARY_KEY" >
				<column name="type_id" />
			</index>
			<index name="types_uk" unique="UNIQUE_KEY" >
				<column name="type_des" />
			</index>
			<fk name="types_type_groups_fk" to_schema="ergomercator.items" to_table="type_groups" >
				<fk_column name="group_type_id" pk="group_type_id" />
			</fk>
		</table>
		<table name="web_items" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="qty_spread" type="real" length="8" decimal="8" jt="7" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Thit field tell the spread against the standard product reserve in company main warehouse]]></comment>
			</column>
			<column name="qty_min" type="real" length="8" decimal="8" jt="7" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="qty_alarm" type="real" length="8" decimal="8" jt="7" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[This is the minimum quantity to be taken for the warehousing 'web' when an alarm is raised an order is taken against the 'main' warehousing.]]></comment>
			</column>
			<column name="long_web_description" type="varchar" length="4000" decimal="0" jt="12" />
			<column name="short_web_description" type="varchar" length="128" decimal="0" jt="12" />
			<column name="pricelist_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="web_items_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
			</index>
			<index name="idx_web_items" unique="NORMAL" >
				<column name="pricelist_id" />
			</index>
			<fk name="fk_web_items_pricelists" to_schema="ergomercator.items" to_table="pricelists_items" >
				<fk_column name="pricelist_id" pk="pricelist_id" />
			</fk>
			<fk name="webitems_pricelists_fk" to_schema="ergomercator.items" to_table="pricelists_items" >
				<fk_column name="pricelist_id" pk="pricelist_id" />
				<fk_column name="item_id" pk="item_id" />
			</fk>
		</table>
		<view name="search_logs_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.id,
    a.item_id,
    w.model,
    a.latitude,
    a.longitude,
    a.counter,
    a.user_id,
    a.session_id,
    s.insert_date AS datetime,
    u.username,
    u.ispublic
   FROM health.searches a,
    system.db_user_sessions s,
    system.db_users u,
    items.definitions w
  WHERE ((s.db_session_id = a.session_id) AND (u.db_user_id = s.db_user_id) AND (w.id = a.item_id))
  ORDER BY a.id DESC;]]></view_script>
			<column name="id" type="bigint" />
			<column name="item_id" type="integer" />
			<column name="model" type="varchar" />
			<column name="latitude" type="float8" />
			<column name="longitude" type="float8" />
			<column name="counter" type="integer" />
			<column name="user_id" type="integer" />
			<column name="session_id" type="integer" />
			<column name="datetime" type="timestamptz" />
			<column name="username" type="varchar" />
			<column name="ispublic" type="boolean" />
		</view>
		<sequence name="default_seq" options="START WITH 1" />
		<sequence name="dimensions_seq" options="START WITH 1" />
		<sequence name="families_seq" options="START WITH 100" />
		<sequence name="items_seq" options="START WITH 1" />
		<trigger name="brands_id_bi_trg" table="brands" id="Trigger_dfa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER brands_id_bi_trg BEFORE INSERT OR UPDATE ON items.brands FOR EACH ROW EXECUTE PROCEDURE items.insert_id_trg()]]></string>
		</trigger>
		<trigger name="definitions_insert_date_bi_trg" table="definitions" id="Trigger_1b6c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER definitions_insert_date_bi_trg BEFORE INSERT ON items.definitions FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_date_trg()]]></string>
		</trigger>
		<trigger name="definitions_item_id_bi_trg" table="definitions" id="Trigger_15d1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER definitions_item_id_bi_trg BEFORE INSERT ON items.definitions FOR EACH ROW EXECUTE PROCEDURE items.items_id_trg()]]></string>
		</trigger>
		<trigger name="dimension_id_bi_trg" table="dimensions" id="Trigger_1d37" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER dimension_id_bi_trg BEFORE INSERT ON items.dimensions FOR EACH ROW EXECUTE PROCEDURE items.dimensions_id_trg()]]></string>
		</trigger>
		<trigger name="families_id_bi_trg" table="families" id="Trigger_851" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER families_id_bi_trg BEFORE INSERT ON items.families FOR EACH ROW EXECUTE PROCEDURE items.families_id_trg()]]></string>
		</trigger>
		<trigger name="pkgtypes_bi_trg" table="package_types" id="Trigger_ccc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER pkgtypes_bi_trg BEFORE INSERT ON items.package_types FOR EACH ROW EXECUTE PROCEDURE items.insert_id_trg()]]></string>
		</trigger>
		<function name="dimensions_id_trg" id="Function_f41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION items.dimensions_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.dimension_id is null then
          New.dimension_id:=nextval('items.dimensions_seq');
      end if; 
      Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="families_id_trg" id="Function_22ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION items.families_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id:=nextval('items.families_seq');
      end if; 
      Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_id_by_code" id="Function_59f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION items.get_id_by_code(p_code character varying, p_schema_id integer)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R smallint; 
begin
  R := null; 
  select into I count(1)
     from items.definitions a
	 where
	    Lower(a.code) = Upper(p_code) 
		and db_schema_id = p_schema_id; 
		
	if I = 1 then
    select into R id 
      from items.definitions a
	 where
	    Lower(a.code) = Upper(p_code) 
		and db_schema_id = p_schema_id; 
	end if; 
	
   return R; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="insert_id_trg" id="Function_dcd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION items.insert_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id:=nextval('items.default_seq');
      end if; 
	  
	  
      Return NEW;
	  
	  
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="items_id_trg" id="Function_25b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION items.items_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.id is null then
          New.id:=nextval('items.items_seq');
      end if; 
	  
     if New.group_id is null then
          New.group_id:=0;
      end if; 
	  
	  
      Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="packages_get_id_by_code" id="Function_2427" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION items.packages_get_id_by_code(p_code character varying, p_schema_id integer)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R smallint; 
begin
  R := null; 
  select into I count(1)
     from items.package_types a
	 where
	    Lower(a.code) = Lower(p_code) 
		and db_schema_id = p_schema_id; 
		
	if I = 1 then
    select into R id 
      from items.package_types a
	 where
	    Lower(a.code) = Lower(p_code) 
		and db_schema_id = p_schema_id; 
	end if; 
	
   return R; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="stripstringsearch" id="Function_71c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION items.stripstringsearch(p_itemdes character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$DECLARE   
   TEMP_NAME                 character varying(2048);
   -- Declare program variables as shown above
BEGIN 
       TEMP_NAME := TRIM(p_itemdes) ;
       TEMP_NAME := replace (TEMP_NAME, '.', '');
       TEMP_NAME := replace (TEMP_NAME, '-', '');
       TEMP_NAME := replace (TEMP_NAME, ',', '');
       TEMP_NAME := replace (TEMP_NAME, '@', '');
       TEMP_NAME := replace (TEMP_NAME, '_', '');
       TEMP_NAME := replace (TEMP_NAME, '/', '');
       TEMP_NAME := replace (TEMP_NAME, '(', '');
       TEMP_NAME := replace (TEMP_NAME, ')', '');
       TEMP_NAME := replace (TEMP_NAME, '&', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, ' ', '');
       TEMP_NAME := replace (TEMP_NAME, ':', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, '#', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, ';', '');
       return upper(TEMP_NAME); 
 end; 
  $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_itemdes" jt="12" type="varchar" />
		</function>
	</schema>
	<schema name="jira" catalogname="ergomercator" />
	<schema name="jpublic" catalogname="ergomercator" >
		<comment><![CDATA[this is the area of the public tables that contain common Datas for all the applications]]></comment>
		<table name="buildings" >
			<column name="building_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[This is the worldwide building unique id]]></comment>
			</column>
			<column name="lat" type="real" length="8" decimal="8" jt="7" >
				<comment><![CDATA[Latitude coordinates]]></comment>
			</column>
			<column name="long" type="real" length="8" decimal="8" jt="7" >
				<comment><![CDATA[longitude Coordinates]]></comment>
			</column>
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="street_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="number" type="varchar" length="20" decimal="0" jt="12" />
			<column name="specification" type="varchar" length="20" decimal="0" jt="12" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="sub_town_area_id" type="integer" jt="4" >
				<comment><![CDATA[direct key to Town Area ID]]></comment>
			</column>
			<index name="buildings_pk" unique="PRIMARY_KEY" >
				<column name="building_id" />
			</index>
			<fk name="buildings_towns_areas_fk" to_schema="ergomercator.jpublic" to_table="town_areas" >
				<fk_column name="town_area_id" pk="town_area_id" />
			</fk>
			<fk name="buildings_towns_fk" to_schema="ergomercator.jpublic" to_table="towns" >
				<fk_column name="town_id" pk="town_id" />
			</fk>
		</table>
		<table name="contiguous_regions" >
			<column name="origin_iso_region_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="dest_iso_region_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="distance_cost" type="smallint" length="5" decimal="0" jt="5" />
			<index name="pk_contiguous_regions" unique="UNIQUE_KEY" >
				<column name="origin_iso_region_id" />
			</index>
			<fk name="fk_contiguous_regions" to_schema="ergomercator.jpublic" to_table="regions" update_action="cascade" >
				<fk_column name="origin_iso_region_id" pk="region_id" />
			</fk>
		</table>
		<table name="countries" >
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_country_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_country_code2" type="char" length="2" decimal="0" jt="1" mandatory="y" />
			<column name="country_year" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="iso_currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_country_number" type="char" length="3" decimal="0" jt="1" >
				<defo><![CDATA['000'::bpchar]]></defo>
			</column>
			<column name="country_flag" type="bytea" decimal="0" jt="-2" >
				<comment><![CDATA[Immagine Bandierina Nazione]]></comment>
			</column>
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="country_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="countries_pk" unique="PRIMARY_KEY" >
				<column name="country_id" />
			</index>
			<index name="countries_iso2_uk" unique="UNIQUE_KEY" >
				<column name="iso_country_code2" />
			</index>
			<index name="countries_iso_uk" unique="UNIQUE_KEY" >
				<column name="iso_country_code" />
			</index>
		</table>
		<table name="countries_trans" >
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="country_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<index name="countries_trans_pk" unique="PRIMARY_KEY" >
				<column name="language_id" />
				<column name="country_id" />
			</index>
			<index name="idx_countries_trans" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_countries_trans_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="lang_countries_fk" to_schema="ergomercator.jpublic" to_table="countries" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
			<fk name="fk_countries_langs" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="country_currencies" >
			<comment><![CDATA[This is the list of the currencies in on country]]></comment>
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="countries_currencies_pk" unique="PRIMARY_KEY" >
				<column name="currency_id" />
				<column name="country_id" />
			</index>
			<index name="idx_country_currencies" unique="NORMAL" >
				<column name="currency_id" />
			</index>
			<index name="idx_country_currencies_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="fk_currencies_countries" to_schema="ergomercator.jpublic" to_table="countries" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
			<fk name="fk_country_currencies" to_schema="ergomercator.jpublic" to_table="currencies" >
				<fk_column name="currency_id" pk="currency_id" />
			</fk>
		</table>
		<table name="cultures" >
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_country_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_language_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_culture_code" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[The culture or locale full name like Italiano Italia]]></comment>
			</column>
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign Key To currencies]]></comment>
			</column>
			<column name="decimal_point" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA['.'::bpchar]]></defo>
				<comment><![CDATA[decimail point]]></comment>
			</column>
			<column name="thousands_separator" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA[','::bpchar]]></defo>
				<comment><![CDATA[thousand separator]]></comment>
			</column>
			<column name="stopwords" type="varchar[]" decimal="0" jt="2003" >
				<comment><![CDATA[array of char]]></comment>
			</column>
			<index name="iso_cultures_pkey" unique="PRIMARY_KEY" >
				<column name="country_id" />
				<column name="language_id" />
			</index>
			<index name="cultures_uk" unique="UNIQUE_KEY" >
				<column name="iso_country_code" />
				<column name="iso_language_code" />
			</index>
			<index name="fki_cultures_currencies" unique="NORMAL" >
				<column name="currency_id" />
			</index>
			<index name="idx_cultures" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_cultures_0" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="fk_cultures_countries" to_schema="ergomercator.jpublic" to_table="countries" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
			<fk name="fk_cultures_currencies" to_schema="ergomercator.jpublic" to_table="currencies" >
				<fk_column name="currency_id" pk="currency_id" />
			</fk>
			<fk name="fk_cultures_languages" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="currencies" >
			<column name="currency_id" type="smallserial" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[nextval('jpublic.currencies_seq'::regclass)]]></defo>
			</column>
			<column name="currency_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="currency_name" type="varchar" length="60" decimal="0" jt="12" />
			<column name="main_country_iso_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="currency_symbol" type="varchar" length="3" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
				<comment><![CDATA[guid universal unique identifier]]></comment>
			</column>
			<index name="currencies_pk" unique="PRIMARY_KEY" >
				<column name="currency_id" />
			</index>
			<index name="currencies_uk" unique="UNIQUE_KEY" >
				<column name="currency_code" />
			</index>
		</table>
		<table name="currencies_trans" >
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="currency_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<index name="currencies_trans_pk" unique="PRIMARY_KEY" >
				<column name="language_id" />
				<column name="currency_id" />
			</index>
			<index name="idx_currencies_trans" unique="NORMAL" >
				<column name="currency_id" />
			</index>
			<index name="idx_currencies_trans_0" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_lang_currencies" to_schema="ergomercator.jpublic" to_table="currencies" >
				<fk_column name="currency_id" pk="currency_id" />
			</fk>
			<fk name="fk_currencies_trans" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="dimension_models" >
			<column name="p_dimension_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="p_dimension_des" type="varchar" length="128" decimal="0" jt="12" />
			<index name="pk_dimensions" unique="PRIMARY_KEY" >
				<column name="p_dimension_id" />
			</index>
		</table>
		<table name="district_trans" >
			<column name="district_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[L`id di una provincia è un numero indica una Provincia Italiana, ma può indicare una contea USA o un Lander Tedesco....]]></comment>
			</column>
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<index name="idx_district_trans" unique="NORMAL" >
				<column name="district_id" />
			</index>
			<index name="idx_district_trans_0" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_district_trans_lang" to_schema="ergomercator.jpublic" to_table="districts" >
				<fk_column name="district_id" pk="district_id" />
			</fk>
			<fk name="fk_district_trans" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
		</table>
		<table name="districts" >
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[L'id di una provincia è un numero indica una Provincia Italiana, ma può indicare una contea USA o un Lander Tedesco....]]></comment>
			</column>
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign Key To iso_regions]]></comment>
			</column>
			<column name="iso_district_code" type="varchar" length="6" decimal="0" jt="12" >
				<comment><![CDATA[The unique iso code for the county]]></comment>
			</column>
			<column name="district_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="local_district_code" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[This can be used for local coding and even for numberplates]]></comment>
			</column>
			<column name="numberplate_code" type="varchar" length="4" decimal="0" jt="12" />
			<index name="districts_pk" unique="PRIMARY_KEY" >
				<column name="district_id" />
			</index>
			<index name="idx_districts" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<fk name="districts_regions_fk" to_schema="ergomercator.jpublic" to_table="regions" >
				<fk_column name="region_id" pk="region_id" />
			</fk>
		</table>
		<table name="gender" >
			<column name="gender_code" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="gender_name" type="varchar" length="10" decimal="0" jt="12" />
			<index name="gender_pk" unique="PRIMARY_KEY" >
				<column name="gender_code" />
			</index>
		</table>
		<table name="lang_translations" >
			<column name="trans_language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="translated_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="pk_lang_translations" unique="PRIMARY_KEY" >
				<column name="trans_language_id" />
				<column name="language_id" />
			</index>
			<index name="idx_lang_translations" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_lang_translations_0" unique="NORMAL" >
				<column name="trans_language_id" />
			</index>
			<fk name="fk_lang_translations_mainlangs" to_schema="ergomercator.jpublic" to_table="languages" update_action="cascade" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
			<fk name="fk_lang_translations_translang" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="trans_language_id" pk="language_id" />
			</fk>
		</table>
		<table name="languages" >
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="iso_language_code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="iso_language_code2" type="char" length="2" decimal="0" jt="1" mandatory="y" />
			<column name="language_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="iso_languages_pkey" unique="PRIMARY_KEY" >
				<column name="language_id" />
			</index>
			<index name="languages_uk" unique="UNIQUE_KEY" >
				<column name="iso_language_code" />
			</index>
		</table>
		<table name="location_types" >
			<column name="type_code" prior="type_id" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="alias_code" prior="alias_id" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="type_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="id" type="smallint" jt="5" mandatory="y" />
			<column name="alias_id" type="smallint" jt="5" />
			<index name="pk_location_types" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_location_types_location_types" to_schema="ergomercator.jpublic" to_table="location_types" >
				<fk_column name="alias_id" pk="id" />
			</fk>
		</table>
		<table name="locations" >
			<column name="place_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="location_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="places_pk" unique="PRIMARY_KEY" >
				<column name="place_id" />
			</index>
			<fk name="fk_locations_location_types" to_schema="ergomercator.jpublic" to_table="location_types" >
				<fk_column name="location_type_id" pk="id" />
			</fk>
			<fk name="fk_locations_towns" to_schema="ergomercator.jpublic" to_table="towns" >
				<fk_column name="town_id" pk="town_id" />
			</fk>
		</table>
		<table name="mail_attach" >
			<column name="ms_send_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="mail_attach_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="mail_attach_filename" type="varchar" length="512" decimal="0" jt="12" />
			<column name="mail_attach_blob" type="bytea" decimal="0" jt="-2" />
		</table>
		<table name="measure_units" >
			<column name="munit_id" type="smallserial" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[nextval('jpublic.munits_seq'::regclass)]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="munit_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="munit_des" type="varchar" length="60" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
				<comment><![CDATA[guid universal unique identifier]]></comment>
			</column>
			<index name="measure_units_pk" unique="PRIMARY_KEY" >
				<column name="munit_id" />
			</index>
		</table>
		<table name="regions" >
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="region_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="iso_region_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="local_region_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="iso_regions_pk" unique="PRIMARY_KEY" >
				<column name="region_id" />
			</index>
			<index name="regions_countries_ndx" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<fk name="fk_regions_countries" to_schema="ergomercator.jpublic" to_table="countries" update_action="cascade" >
				<fk_column name="country_id" pk="country_id" />
			</fk>
		</table>
		<table name="regions_trans" >
			<column name="region_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="idx_regions_trans" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<index name="idx_regions_trans_0" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<fk name="fk_regions_trans" to_schema="ergomercator.jpublic" to_table="languages" >
				<fk_column name="language_id" pk="language_id" />
			</fk>
			<fk name="fk_regions_trans_lang" to_schema="ergomercator.jpublic" to_table="regions" >
				<fk_column name="region_id" pk="region_id" />
			</fk>
		</table>
		<table name="routes" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="type_des" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="short_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="code" type="varchar" length="20" decimal="0" jt="12" />
			<index name="unq_routes_id" unique="UNIQUE_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="social_networks" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="64" decimal="0" jt="12" />
			<index name="socialnetwork_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="socialnetwork_uk" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
		</table>
		<table name="sub_town_areas" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="description" type="varchar" length="256" decimal="0" jt="12" />
			<column name="geojson" type="json" decimal="0" jt="2000" />
			<index name="sub_town_areas_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_sub_town_areas_town_areas" to_schema="ergomercator.jpublic" to_table="town_areas" update_action="cascade" >
				<fk_column name="town_area_id" pk="town_area_id" />
			</fk>
		</table>
		<table name="table_template" >
			<comment><![CDATA[These are the sports or ... well .. sport clubs :)]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[This is the table unique ID....]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="able_template_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="clubs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="town_areas" >
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="town_area_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<index name="town_areas_pk" unique="PRIMARY_KEY" >
				<column name="town_area_id" />
			</index>
			<index name="town_area_name_ndx" unique="NORMAL" >
				<column name="town_area_name" />
			</index>
			<fk name="townareas_towns_fk" to_schema="ergomercator.jpublic" to_table="towns" update_action="cascade" >
				<fk_column name="town_id" pk="town_id" />
			</fk>
		</table>
		<table name="town_areas_routes" >
			<column name="area_id" type="integer" jt="4" mandatory="y" />
			<column name="route_id" type="integer" jt="4" mandatory="y" />
			<index name="pk_town_areas_routes_area_id" unique="PRIMARY_KEY" >
				<column name="area_id" />
				<column name="route_id" />
			</index>
			<fk name="fk_town_areas_routes_town_areas" to_schema="ergomercator.jpublic" to_table="town_areas" >
				<fk_column name="area_id" pk="town_area_id" />
			</fk>
			<fk name="fk_town_areas_routes_routes" to_schema="ergomercator.jpublic" to_table="routes" >
				<fk_column name="route_id" pk="id" />
			</fk>
		</table>
		<table name="towns" >
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="town_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="town_iso_code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="town_local_code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="town_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="towns_pk" unique="PRIMARY_KEY" >
				<column name="town_id" />
			</index>
			<index name="fki_towns_districts_fk" unique="NORMAL" >
				<column name="district_id" />
			</index>
			<fk name="towns_districts_fk" to_schema="ergomercator.jpublic" to_table="districts" >
				<fk_column name="district_id" pk="district_id" />
			</fk>
		</table>
		<table name="urban_units" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="code" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sub_area_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_urban_units_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_urban_units_sub_town_areas" to_schema="ergomercator.jpublic" to_table="sub_town_areas" >
				<fk_column name="sub_area_id" pk="id" />
			</fk>
		</table>
		<table name="vat_id_codes" >
			<comment><![CDATA[Vat Identification Codes]]></comment>
			<column name="guid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[Vat id code guid]]></comment>
			</column>
			<column name="db_schema_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<index name="pk_vat_id_codes_guid" unique="PRIMARY_KEY" >
				<column name="guid" />
			</index>
		</table>
		<view name="towns_regions_countries" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.town_id,
    t.town_name,
    t.town_iso_code,
    t.town_local_code,
    t.town_postal_code,
    d.district_id,
    r.region_id,
    d.iso_district_code,
    d.district_name,
    d.local_district_code,
    d.numberplate_code AS region_name,
    r.iso_region_code,
    r.local_region_code,
    c.country_id,
    c.iso_country_code,
    c.iso_country_code2,
    c.country_year,
    c.country_name,
    c.iso_country_number,
    c.country_flag
   FROM jpublic.towns t,
    jpublic.districts d,
    jpublic.regions r,
    jpublic.countries c
  WHERE ((r.region_id = d.region_id) AND (t.district_id = d.district_id) AND (c.country_id = r.country_id));]]></view_script>
			<column name="town_id" type="integer" />
			<column name="town_name" type="varchar" />
			<column name="town_iso_code" type="varchar" />
			<column name="town_local_code" type="varchar" />
			<column name="town_postal_code" type="varchar" />
			<column name="district_id" type="smallint" />
			<column name="region_id" type="smallint" />
			<column name="iso_district_code" type="varchar" />
			<column name="district_name" type="varchar" />
			<column name="local_district_code" type="varchar" />
			<column name="region_name" type="varchar" />
			<column name="iso_region_code" type="varchar" />
			<column name="local_region_code" type="varchar" />
			<column name="country_id" type="smallint" />
			<column name="iso_country_code" type="char" />
			<column name="iso_country_code2" type="char" />
			<column name="country_year" type="smallint" />
			<column name="country_name" type="varchar" />
			<column name="iso_country_number" type="char" />
			<column name="country_flag" type="bytea" />
		</view>
		<sequence name="currencies_seq" options="START WITH 2" />
		<sequence name="districts_seq" options="START WITH 1" />
		<sequence name="iso_countries_seq" options="START WITH 2" />
		<sequence name="iso_districts_seq" options="START WITH 1" />
		<sequence name="iso_regions_seq" options="START WITH 1" />
		<sequence name="languages_seq" options="START WITH 1" />
		<sequence name="munits_seq" options="START WITH 2" />
		<sequence name="towns_seq" options="START WITH 1" />
		<trigger name="countries_before_insert_trg" table="countries" id="Trigger_b66" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER countries_before_insert_trg BEFORE INSERT ON jpublic.countries FOR EACH ROW EXECUTE PROCEDURE jpublic.get_new_country_id()]]></string>
		</trigger>
		<trigger name="countries_guid_trg" table="countries" id="Trigger_1f4a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER countries_guid_trg BEFORE INSERT ON jpublic.countries FOR EACH ROW EXECUTE PROCEDURE jpublic.guid_trg()]]></string>
		</trigger>
		<trigger name="districts_id_trg" table="districts" id="Trigger_72b" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER districts_id_trg BEFORE INSERT ON jpublic.districts FOR EACH ROW EXECUTE PROCEDURE jpublic.get_district_id_trg()]]></string>
		</trigger>
		<trigger name="regions_id_trg" table="regions" id="Trigger_344" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER regions_id_trg BEFORE INSERT ON jpublic.regions FOR EACH ROW EXECUTE PROCEDURE jpublic.get_isoregionid_trg()]]></string>
		</trigger>
		<trigger name="table_template_bi_trg" table="table_template" id="Trigger_45e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER table_template_bi_trg BEFORE INSERT OR UPDATE ON jpublic.table_template FOR EACH ROW EXECUTE PROCEDURE jpublic.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="towns_id_ins_trg" table="towns" id="Trigger_e51" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER towns_id_ins_trg BEFORE INSERT ON jpublic.towns FOR EACH ROW EXECUTE PROCEDURE jpublic.get_town_id_trg()]]></string>
		</trigger>
		<function name="check_country_id" id="Function_2423" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.check_country_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin

   if new.country_id is null or new.country_id = 0 then
	   new.country_id := 1; 
   end if; 
   
   return NEW; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="check_insert_date" id="Function_ce2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.check_insert_date()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if New.insert_date is null  then 
      if (TG_OP = 'INSERT') then
          New.insert_date := now(); 
       else
          New.insert_date := old.insert_date; 
       end if; 
   end if; 
   RETURN NEW; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="defaults_trg" id="Function_1fb9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:= uuid_generate_v1();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="distance" id="Function_6f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.distance(p_lat1 double precision DEFAULT 0, p_lon1 double precision DEFAULT 0, p_lat2 double precision DEFAULT 0, p_lon2 double precision DEFAULT 0)
 RETURNS double precision
 LANGUAGE plpgsql
AS $function$Declare 
    v_Radians Double Precision; 
    v_lat1 Double Precision; 
    v_lon1 Double Precision; 
    v_lat2 Double Precision; 
    v_lon2 Double Precision;
    
BEGIN    
 v_Radians=180/3.14159265;
 v_lat1 := p_lat1/v_Radians;
 v_lon1 := p_lon1/v_Radians;
 v_lat2 := p_lat2/v_Radians;
 v_lon2  := p_lon2/v_Radians;
Return (6367 *ACOS(SIN(v_lat1)*SIN(v_lat2)+
        COS(v_lat1)*COS(v_lat2 )
        *COS(v_lon2-v_lon1)));
        
END;$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="float8" />
			<input_param name="p_lat1" jt="8" type="float8" />
			<input_param name="p_lon1" jt="8" type="float8" />
			<input_param name="p_lat2" jt="8" type="float8" />
			<input_param name="p_lon2" jt="8" type="float8" />
		</function>
		<function name="get_country_id" id="Function_d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.get_country_id(p_code varchar2)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$declare
  p_result smallint; 
begin
  if length(p_code) = 3 then
      select into p_result country_id from jpublic.countries where
	     is_country_code = p_code; 
  else 
      select into p_result country_id from jpublic.countries where
	     is_country_code2 = p_code;   
  end if; 
  return p_result; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_code" jt="1111" type="varchar2" />
		</function>
		<function name="get_country_id_by_code" id="Function_59b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.get_country_id_by_code(p_code character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
begin
  R := null; 
  select into I count(1)
     from jpublic.countries a
	 where
	    a.iso_country_code2 = p_code; 
		
	if I = 1 then
    select into R  country_id
     from jpublic.countries a
	 where
	    a.iso_country_code2 = p_code; 
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
		</function>
		<function name="get_district_id_trg" id="Function_f56" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.get_district_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.district_id is null then
          New.district_id:=nextval('jpublic.districts_seq');
      end if; 
      Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_isoregionid_trg" id="Function_1482" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.get_isoregionid_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
      New.region_id:=nextval('jpublic.iso_regions_seq');
      Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_new_country_id" id="Function_1734" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.get_new_country_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.country_id is null then
          New.country_id:=nextval('jpublic.iso_countries_seq');
      end if;
  --   if New.country_key is null then
  --        select system.get_key ( New.country_id, 16) into New.country_key;
  --  end if;
     if New.creation_date is null then
          New.creation_date := Now();
     end if;  
     Return NEW;   
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_town_id_trg" id="Function_1bb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.get_town_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.town_id is null then
          New.town_id:=nextval('jpublic.towns_seq');
      end if; 
      Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="guid_trg" id="Function_1b96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.guid_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc();
  end if;
  
  if new.insert_date is null then
     new.insert_date := now(); 
  end if; 
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_date_new" id="Function_196d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.insert_date_new()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if New.insert_date is null then New.insert_date := now(); end if;
  Return New;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_date_trg" id="Function_1d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.insert_date_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
  New.insert_date := now();
  return NEW; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_defaults_trg" id="Function_2508" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.insert_defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_count integer;
 v_sequence character varying; 
begin
	v_sequence := TG_TABLE_NAME || '_' || 'seq'; 
	
	--  SELECT COUNT(*) INTO v_count
	--	FROM information_schema.sequences 
	--	WHERE sequence_schema=TG_TABLE_SCHEMA AND sequence_name=TG_TABLE_NAME || v_sequence;
	 IF TG_OP = 'INSERT' THEN
		 IF New.id IS NULL OR  New.id = 0  THEN
			New.id := nextval(TG_TABLE_SCHEMA || '.' || v_sequence); 	 
		 END IF;
	 ELSE 
		 IF New.id IS NULL OR  New.id = 0  THEN
			New.id := Old.id; 
		 END IF;	 
	 END IF; 
	  if New.jguid is null then
		 New.jguid:= uuid_generate_v4();
	  end if;
	  if New.deleted is null then
		 New.deleted := false;
	  end if;
	  if New.db_schema_id is null OR  New.db_schema_id = 0  then
		 New.db_schema_id := system.GET_schema_id();
	  end if;
	  IF TG_OP = 'INSERT' THEN
		 New.insert_date := now(); 
	  ELSIF TG_OP = 'UPDATE' THEN
	     New.update_date := now();
	  END IF; 
	  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="nvl" id="Function_212" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.nvl(value integer, replace integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$begin
   if value is null then 
	return (replace);
    else
	return(value);
    end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="value" jt="4" type="int4" />
			<input_param name="replace" jt="4" type="int4" />
		</function>
		<function name="random_string" id="Function_1761" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION jpublic.random_string(length integer)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
declare
  chars text[] := '{0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z}';
  result text := '';
  i integer := 0;
begin
  if length <= 0 then
    raise exception 'Given length cannot be less or equal to 0';
  end if;
  for i in 1..length loop
    result := result || chars[1+random()*(array_length(chars, 1)-1)];
  end loop;
  return result;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="length" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="locale" catalogname="ergomercator" >
		<table name="it_it_health_prescription" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="first_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="second_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="province" type="varchar" length="2" decimal="0" jt="12" />
			<column name="first_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="last_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fiscal_code" type="varchar" length="16" decimal="0" jt="12" />
			<column name="exemption" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="exemption_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="exemption_income" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="services" type="smallint" length="5" decimal="0" jt="5" />
			<column name="date" type="date" length="13" decimal="0" jt="91" />
			<column name="priority" type="char" length="1" decimal="0" jt="1" />
			<column name="booking_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="it_it_health_prescription_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="fki_it_health_prescription_booking_id" unique="NORMAL" >
				<column name="booking_id" />
			</index>
		</table>
		<table name="it_it_townscountries_codes" >
			<comment><![CDATA[Elenco dei comuni e stati esteri di nascita per la verifica del codice fiscale.]]></comment>
			<column name="location" type="varchar" length="1024" decimal="0" jt="12" mandatory="y" />
			<column name="code" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<index name="it_it_townscountries_codes_uk" unique="PRIMARY_KEY" >
				<column name="location" />
			</index>
		</table>
	</schema>
	<schema name="logistic" catalogname="ergomercator" >
		<table name="awb" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="year" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="office_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="field1a" type="varchar" length="3" decimal="0" jt="12" />
			<column name="field1b" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field1c" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cin" type="numeric" length="1" decimal="0" jt="2" />
			<column name="field2" type="varchar" length="50" decimal="0" jt="12" />
			<column name="field21" type="varchar" length="35" decimal="0" jt="12" />
			<column name="field22" type="varchar" length="35" decimal="0" jt="12" />
			<column name="field23" type="varchar" length="35" decimal="0" jt="12" />
			<column name="field3" type="varchar" length="50" decimal="0" jt="12" />
			<column name="field31" type="varchar" length="35" decimal="0" jt="12" />
			<column name="field32" type="varchar" length="35" decimal="0" jt="12" />
			<column name="field33" type="varchar" length="35" decimal="0" jt="12" />
			<column name="field4a" type="varchar" length="50" decimal="0" jt="12" />
			<column name="field4b" type="varchar" length="15" decimal="0" jt="12" />
			<column name="field4c" type="varchar" length="20" decimal="0" jt="12" />
			<column name="field4c2" type="varchar" length="200" decimal="0" jt="12" />
			<column name="field4c3" type="varchar" length="20" decimal="0" jt="12" />
			<column name="field5" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field6" type="text" decimal="0" jt="12" />
			<column name="field7" type="text" decimal="0" jt="12" />
			<column name="field8" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8a" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8b" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8c" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8d" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8c1" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8d1" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8e" type="varchar" length="6" decimal="0" jt="12" />
			<column name="field8f" type="varchar" length="20" decimal="0" jt="12" />
			<column name="field8f1" type="timestamp" decimal="6" jt="93" />
			<column name="field9" type="varchar" length="16" decimal="0" jt="12" />
			<column name="field10" type="varchar" length="1" decimal="0" jt="12" />
			<column name="field11" type="varchar" length="3" decimal="0" jt="12" />
			<column name="field12" type="varchar" length="1" decimal="0" jt="12" />
			<column name="field13" type="varchar" length="1" decimal="0" jt="12" />
			<column name="field14" type="varchar" length="1" decimal="0" jt="12" />
			<column name="field15" type="varchar" length="3" decimal="0" jt="12" />
			<column name="field16" type="varchar" length="3" decimal="0" jt="12" />
			<column name="field17" type="varchar" length="10" decimal="0" jt="12" />
			<column name="field28a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field28b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field29a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field29b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field30a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field30b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field31a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field31b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field32a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field32b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field33a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field33b" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field34" type="varchar" length="30" decimal="0" jt="12" />
			<column name="field35" type="varchar" length="30" decimal="0" jt="12" />
			<column name="field36" type="varchar" length="36" decimal="0" jt="12" />
			<column name="field37" type="varchar" length="255" decimal="0" jt="12" />
			<column name="field38" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi1" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi2" type="varchar" length="255" decimal="0" jt="12" />
			<column name="hi3" type="varchar" length="255" decimal="0" jt="12" />
			<column name="codother1" type="char" length="3" decimal="0" jt="1" />
			<column name="codother2" type="char" length="3" decimal="0" jt="1" />
			<column name="codother3" type="char" length="3" decimal="0" jt="1" />
			<column name="codother4" type="char" length="3" decimal="0" jt="1" />
			<column name="codother5" type="char" length="3" decimal="0" jt="1" />
			<column name="codother6" type="char" length="3" decimal="0" jt="1" />
			<column name="codother7" type="char" length="3" decimal="0" jt="1" />
			<column name="codother8" type="char" length="3" decimal="0" jt="1" />
			<column name="codother9" type="char" length="3" decimal="0" jt="1" />
			<column name="amountother9" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother8" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother7" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother6" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother5" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother4" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother3" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother2" type="numeric" length="9" decimal="2" jt="2" />
			<column name="amountother1" type="numeric" length="9" decimal="2" jt="2" />
			<column name="fieldhead" type="varchar" length="50" decimal="0" jt="12" />
			<column name="partialmaster" type="integer" length="10" decimal="0" jt="4" />
			<column name="partialmasteryear" type="char" length="4" decimal="0" jt="1" />
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="awb_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="netamount" type="numeric" length="18" decimal="2" jt="2" />
			<column name="progressive" type="float8" length="17" decimal="17" jt="6" />
			<column name="mawbcosts" type="numeric" length="18" decimal="2" jt="2" />
			<column name="mawbothcosts" type="numeric" length="18" decimal="2" jt="2" />
			<column name="taxableweight" type="numeric" length="18" decimal="2" jt="2" />
			<column name="masterdate" type="timestamp" decimal="6" jt="93" />
			<column name="estimateflight" type="varchar" length="50" decimal="0" jt="12" />
			<column name="effectiveflight" type="varchar" length="50" decimal="0" jt="12" />
			<column name="etdestimate" type="timestamp" decimal="6" jt="93" />
			<column name="etdeffective" type="timestamp" decimal="6" jt="93" />
			<column name="etaestimate" type="timestamp" decimal="6" jt="93" />
			<column name="etaeffective" type="timestamp" decimal="6" jt="93" />
			<column name="transportcost" type="numeric" length="18" decimal="2" jt="2" />
			<column name="containerseals" type="varchar" length="50" decimal="0" jt="12" />
			<column name="masternotes" type="varchar" length="250" decimal="0" jt="12" />
			<column name="awb_type" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<comment><![CDATA[Tell us weather this is an 'house' or 'Master' AWB. Right now can be just 0 or 1]]></comment>
			</column>
			<column name="order_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[Foreign Key to Pickup Oders and to WorkFlows]]></comment>
			</column>
			<column name="customs_doc_type" type="varchar" length="6" decimal="0" jt="12" />
			<column name="palletcost" type="numeric" length="18" decimal="2" jt="2" />
			<column name="year_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="field19a" type="varchar" length="50" decimal="0" jt="12" />
			<column name="branchlog" type="char" length="3" decimal="0" jt="1" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="carrier_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Unique Identifer of the Carrier]]></comment>
			</column>
			<column name="carrier_name" type="varchar" length="100" decimal="0" jt="12" >
				<comment><![CDATA[The Name of the Carrier set by Carrier ID along with Carrier's Code used to Search the  Carrier]]></comment>
			</column>
			<column name="carrier_code" type="varchar" length="15" decimal="0" jt="12" >
				<comment><![CDATA[Foreign key to Carrier's Code in anagraph Table, can differ from IATA Code to be shown in Document]]></comment>
			</column>
			<column name="shipper_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key to anagraph for shipper's id]]></comment>
			</column>
			<column name="shipper_code" type="varchar" length="15" decimal="0" jt="12" >
				<comment><![CDATA[Set by Shipper ID from anagraph]]></comment>
			</column>
			<column name="shipper_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="consignee_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign key to Anagraph for Consignee]]></comment>
			</column>
			<column name="consignee_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Set by Consignee ID maintained for repprinting the Document]]></comment>
			</column>
			<column name="consignee_code" type="varchar" length="15" decimal="0" jt="12" >
				<comment><![CDATA[The code of the consignee set by consignee_id]]></comment>
			</column>
			<column name="iata_agent_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key to IATA Agent ID]]></comment>
			</column>
			<column name="iata_agent_code" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Set by Iata agent unique ID from Anagraph]]></comment>
			</column>
			<column name="iata_agent_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[The Name of Iata Agent. Set by Agent ID]]></comment>
			</column>
			<column name="field2_shipper_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[foreign key to anagraph for shipper]]></comment>
			</column>
			<column name="issuer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Identifier or foreign key for the issuer agency usually is also the air company]]></comment>
			</column>
			<column name="issuer_code" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[code of the issuer or air company]]></comment>
			</column>
			<column name="issuer_name" type="varchar" length="35" decimal="0" jt="12" >
				<comment><![CDATA[Name of the issuer]]></comment>
			</column>
			<column name="issuer_address" type="varchar" length="35" decimal="0" jt="12" >
				<comment><![CDATA[Address of the Issuer]]></comment>
			</column>
			<column name="issuer_town_postal_code" type="varchar" length="60" decimal="0" jt="12" >
				<comment><![CDATA[Postal code and address Town of the Shipper limited to 35 chars]]></comment>
			</column>
			<column name="issuer_vat_code" type="varchar" length="35" decimal="0" jt="12" >
				<comment><![CDATA[European Vat Code with eplaination]]></comment>
			</column>
			<column name="field1b_airport_name" type="varchar" length="60" decimal="0" jt="12" />
			<column name="handling_information" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Handling informations for the carrier]]></comment>
			</column>
			<column name="field1b_location_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="field8_location_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="field8e_location_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="field8a_location_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="field8c_location_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="field8c1_location_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="work_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="awb_house_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="awb_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="awb_year_number_uk" unique="UNIQUE_KEY" >
				<column name="year" />
				<column name="year_number" />
				<column name="awb_type_id" />
			</index>
			<fk name="awb_pickup_orders_fk" to_schema="ergomercator.logistic" to_table="shipments" update_action="cascade" >
				<fk_column name="order_id" pk="id" />
			</fk>
		</table>
		<table name="awb_codes" >
			<column name="code" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="type" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="amount" type="numeric" length="9" decimal="2" jt="2" />
			<column name="description" type="varchar" length="20" decimal="0" jt="12" />
			<column name="house" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_awb_codes" unique="PRIMARY_KEY" >
				<column name="code" />
			</index>
			<index name="uk_awb_codes_jguid" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="awb_rows" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="awb_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="row_pos" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="field19a" type="integer" length="10" decimal="0" jt="4" />
			<column name="field20a" type="numeric" length="9" decimal="2" jt="2" />
			<column name="field21" type="varchar" length="1" decimal="0" jt="12" />
			<column name="field22" type="varchar" length="1" decimal="0" jt="12" />
			<column name="field23" type="varchar" length="10" decimal="0" jt="12" />
			<column name="field24" type="money" decimal="0" jt="3" />
			<column name="field25" type="money" decimal="0" jt="3" />
			<column name="field26a" type="money" decimal="0" jt="3" />
			<column name="field27" type="varchar" length="30" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_awb_rows" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="uid_awb_rows" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="uk_awb_rows" unique="UNIQUE_KEY" >
				<column name="awb_id" />
				<column name="row_pos" />
			</index>
			<fk name="fk_awb_rows_awb" to_schema="ergomercator.logistic" to_table="awb" update_action="cascade" >
				<fk_column name="awb_id" pk="id" />
			</fk>
		</table>
		<table name="awb_surcharges" >
			<comment><![CDATA[Table of othere AWB surcharges or Costs.]]></comment>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="awb_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="code" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="amount" type="money" decimal="0" jt="3" mandatory="y" />
			<index name="awb_surcharges_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<fk name="awb_surcharges_awbs_fk" to_schema="ergomercator.logistic" to_table="awb" >
				<fk_column name="awb_id" pk="id" />
			</fk>
		</table>
		<table name="conditions" >
			<comment><![CDATA[Transportation terms and conditions (Incoterms).]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Unique ID for condition]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="code" type="varchar" length="12" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Unique Code Identifier mandatory]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="description" type="integer" length="10" decimal="0" jt="4" />
			<index name="pk_conditions_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="container_types" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="code" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="40" decimal="0" jt="12" />
			<column name="cntr_size" type="varchar" length="2" decimal="0" jt="12" />
			<column name="franchise_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="rate" type="integer" length="10" decimal="0" jt="4" />
			<column name="thcimp" type="float8" length="17" decimal="17" jt="6" />
			<column name="thcval" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tarifpri" type="integer" length="10" decimal="0" jt="4" />
			<column name="prirate_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="max_weight" type="float8" length="17" decimal="17" jt="6" />
			<column name="max_volume" type="float8" length="17" decimal="17" jt="6" />
			<column name="cntr_length" type="float8" length="17" decimal="17" jt="6" />
			<column name="cntr_width" type="float8" length="17" decimal="17" jt="6" />
			<column name="cntr_height" type="float8" length="17" decimal="17" jt="6" />
			<column name="internal_length" type="float8" length="17" decimal="17" jt="6" />
			<column name="to_door_length" type="float8" length="17" decimal="17" jt="6" />
			<column name="internal_width" type="float8" length="17" decimal="17" jt="6" />
			<column name="to_door_width" type="float8" length="17" decimal="17" jt="6" />
			<column name="internal_heigth" type="float8" length="17" decimal="17" jt="6" />
			<column name="to_door_heigth" type="float8" length="17" decimal="17" jt="6" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="update_date" type="timestamp" decimal="6" jt="93" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="container_types_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="container_types_uk" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
				<column name="code" />
			</index>
			<index name="ix_container_types" unique="NORMAL" >
				<column name="description" />
			</index>
		</table>
		<table name="locations" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="code" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="state_province" type="varchar" length="25" decimal="0" jt="12" />
			<column name="country" type="varchar" length="25" decimal="0" jt="12" />
			<column name="area_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="flgairport" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="iso_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="iata_code" type="char" length="3" decimal="0" jt="1" />
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="search_index" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[search index]]></comment>
			</column>
			<index name="locations_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="location_code_uk" unique="UNIQUE_KEY" >
				<column name="code" />
				<column name="db_schema_id" />
			</index>
		</table>
		<table name="shipment_rows" >
			<column name="year" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="shipment_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="office_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="warehouse_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="quantity" type="smallint" length="5" decimal="0" jt="5" />
			<column name="weight" type="numeric" length="18" decimal="2" jt="2" />
			<column name="volume" type="numeric" length="18" decimal="3" jt="2" />
			<column name="booking" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cntr_type" type="varchar" length="5" decimal="0" jt="12" />
			<column name="cntr_code" type="varchar" length="13" decimal="0" jt="12" />
			<column name="cntr_seal" type="varchar" length="30" decimal="0" jt="12" />
			<column name="pkg_type_code" type="varchar" length="3" decimal="0" jt="12" />
			<column name="po1" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po2" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po3" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po4" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po5" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po6" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po7" type="varchar" length="20" decimal="0" jt="12" />
			<column name="po8" type="varchar" length="20" decimal="0" jt="12" />
			<column name="freight_amount" type="float8" length="17" decimal="17" jt="6" />
			<column name="marks" type="varchar" length="20" decimal="0" jt="12" />
			<column name="description1" type="varchar" length="75" decimal="0" jt="12" />
			<column name="description2" type="varchar" length="75" decimal="0" jt="12" />
			<column name="bol" type="varchar" length="20" decimal="0" jt="12" />
			<column name="bolhouse" type="varchar" length="20" decimal="0" jt="12" />
			<column name="note" type="varchar" length="70" decimal="0" jt="12" />
			<column name="temperature" type="float8" length="17" decimal="17" jt="6" />
			<column name="supplier" type="varchar" length="50" decimal="0" jt="12" />
			<column name="supplier_code" type="varchar" length="6" decimal="0" jt="12" />
			<column name="warehouse_receipt_date" type="timestamp" decimal="6" jt="93" />
			<column name="invoice_number" type="varchar" length="50" decimal="0" jt="12" />
			<column name="invoice_date" type="date" length="13" decimal="0" jt="91" />
			<column name="taxable_weight" type="numeric" length="9" decimal="0" jt="2" />
			<column name="munit_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="value" type="money" decimal="0" jt="3" />
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="invoice_amount" type="numeric" length="18" decimal="2" jt="2" />
			<column name="exchange_rate" type="float8" length="17" decimal="17" jt="6" />
			<column name="dimentions" type="varchar" length="50" decimal="0" jt="12" />
			<column name="remarks" type="varchar" length="50" decimal="0" jt="12" />
			<column name="weght_volume_ratio" type="numeric" length="18" decimal="3" jt="2" />
			<column name="flgnotaxw" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="actual_weight" type="numeric" length="18" decimal="3" jt="2" />
			<column name="actual_volume" type="numeric" length="18" decimal="3" jt="2" />
			<column name="booking_number" type="integer" length="10" decimal="0" jt="4" />
			<column name="customs_tariff" type="varchar" length="50" decimal="0" jt="12" />
			<column name="size_weight" type="numeric" length="18" decimal="3" jt="2" />
			<column name="size_length" type="numeric" length="18" decimal="3" jt="2" />
			<column name="size_height" type="numeric" length="18" decimal="3" jt="2" />
			<column name="supplier_warehouse_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="supplier_warehouse_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Foreign key to Items definitions]]></comment>
			</column>
			<index name="shipment_rows_pk" unique="PRIMARY_KEY" >
				<column name="year" />
				<column name="shipment_id" />
				<column name="office_id" />
				<column name="pos" />
			</index>
			<index name="shipment_rows_jk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<fk name="fk_shipment_rows_shipments" to_schema="ergomercator.logistic" to_table="shipments" update_action="cascade" >
				<fk_column name="shipment_id" pk="id" />
			</fk>
		</table>
		<table name="shipments" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" mandatory="y" />
			<column name="pickup_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[datanave]]></comment>
			</column>
			<column name="delivery_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[datanavearrivo]]></comment>
			</column>
			<column name="office_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="workflow_uid" type="uuid" decimal="0" jt="1111" />
			<column name="agent_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shipper_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shipper_address" type="json" decimal="0" jt="2000" />
			<column name="pickup_address" type="json" decimal="0" jt="2000" />
			<column name="year" type="smallint" length="5" decimal="0" jt="5" />
			<column name="groupage_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="export_type_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[typeexport character varying(1) COLLATE pg_catalog."default" DEFAULT '1':]]></comment>
			</column>
			<column name="fullcontainer" type="char" length="1" decimal="0" jt="1" >
				<comment><![CDATA[tipocompleto]]></comment>
			</column>
			<column name="vessel_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="work_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="travel_identification_code" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[viaggionave]]></comment>
			</column>
			<column name="carrier_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="carrier_code" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[codcompagnia]]></comment>
			</column>
			<column name="workflow_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="pol_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Port/Place  of Loading (POL) Should be and ID . Is connected to UNECE LOCode (literally Locations)]]></comment>
			</column>
			<column name="pol_code" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[unique UNECE code for Locations]]></comment>
			</column>
			<column name="pol_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="pod_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[pod id]]></comment>
			</column>
			<column name="pod_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="pod_code" type="varchar" length="128" decimal="0" jt="12" />
			<column name="customer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Cod Cliente Contabile]]></comment>
			</column>
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="warehouse_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="work_date" type="date" length="13" decimal="0" jt="91" />
			<column name="order_state" type="smallint" length="5" decimal="0" jt="5" />
			<column name="airport_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Destination Airport ID]]></comment>
			</column>
			<column name="airport_code" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[IATA aiport Code]]></comment>
			</column>
			<column name="awb_number" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Number of the AWB numawb]]></comment>
			</column>
			<column name="internal_notes" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Note Interne]]></comment>
			</column>
			<column name="internal_notes2" type="text" decimal="0" jt="12" />
			<column name="warehouse_notes" type="text" decimal="0" jt="12" />
			<column name="route_type" type="char" length="1" decimal="0" jt="1" >
				<comment><![CDATA[Route Type can be Air (A), Ground (G), Sea (S)]]></comment>
			</column>
			<column name="internet_visible" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="flag_air" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="flag_ground" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="departure_date" type="date" length="13" decimal="0" jt="91" />
			<column name="arrival_date" type="date" length="13" decimal="0" jt="91" />
			<column name="po_state" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="po_level" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="final_date" type="date" length="13" decimal="0" jt="91" />
			<column name="flg_house" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="flg_master" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="delivered" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="flg_billable" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="customs_declearer" type="varchar" length="128" decimal="0" jt="12" />
			<column name="customs_date" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="carrier_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Carrier's Name  connected with carrier ID]]></comment>
			</column>
			<column name="work_number" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Number per year o inherited from older applications]]></comment>
			</column>
			<column name="custom_char_1" type="varchar" length="256" decimal="0" jt="12" />
			<index name="pickup orders_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="pickup_orders_jguid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
			<index name="pickup_orders_workflows_uid_fk_ndx" unique="NORMAL" >
				<column name="workflow_uid" />
			</index>
			<fk name="fk_pickup_orders_locations_airport" to_schema="ergomercator.logistic" to_table="locations" update_action="cascade" >
				<fk_column name="airport_id" pk="id" />
			</fk>
			<fk name="fk_pickup_orders_locations_pod" to_schema="ergomercator.logistic" to_table="locations" >
				<fk_column name="pol_id" pk="id" />
			</fk>
			<fk name="fk_pickup_orders_locations_pol" to_schema="ergomercator.logistic" to_table="locations" >
				<fk_column name="pod_id" pk="id" />
			</fk>
		</table>
		<table name="type_of_goods" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="code" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<index name="type_of_goods_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="type_of_goods_des_uk" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
				<column name="description" />
			</index>
			<index name="type_of_goods_uk" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
				<column name="code" />
			</index>
		</table>
		<view name="inventory_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT r.id,
    r.doc_id,
    r.item_id,
    r.row_date,
    r."inout",
    r.model,
    r.price,
    r.delivered_qty,
    r.supplier_id,
    r.inventory_qty,
    h.warehouse_location_id,
    h.office_id,
    h.anagraph_id AS warehouse_id,
    h.holder_id,
    h.location_name,
    h.holder_name
   FROM (documents.rows r
     JOIN documents.heads h ON ((r.doc_id = h.id)))
  WHERE ((h.type_id = 20) AND (r.delivered_qty = r.inventory_qty));]]></view_script>
			<column name="id" type="bigint" />
			<column name="doc_id" type="bigint" />
			<column name="item_id" type="bigint" />
			<column name="row_date" type="date" />
			<column name="inout" type="smallint" />
			<column name="model" type="varchar" />
			<column name="price" type="numeric" />
			<column name="delivered_qty" type="numeric" />
			<column name="supplier_id" type="integer" />
			<column name="inventory_qty" type="numeric" />
			<column name="warehouse_location_id" type="integer" />
			<column name="office_id" type="integer" />
			<column name="warehouse_id" type="integer" />
			<column name="holder_id" type="integer" />
			<column name="location_name" type="varchar" />
			<column name="holder_name" type="varchar" />
		</view>
		<view name="shipments_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT ships.id,
    ships.jguid,
    ships.creation_date,
    ships.pickup_date,
    ships.delivery_date,
    ships.office_id,
    ships.workflow_uid,
    ships.agent_id,
    ships.shipper_id,
    ships.shipper_address,
    ships.pickup_address,
    ships.year,
    ships.groupage_number,
    ships.export_type_id,
    ships.fullcontainer,
    ships.vessel_id,
    ships.work_code,
    ships.travel_identification_code,
    ships.carrier_id,
    ships.carrier_code,
    ships.workflow_id,
    ships.pol_id,
    ships.pol_code,
    ships.pol_name,
    ships.pod_id,
    ships.pod_name,
    ships.pod_code,
    ships.customer_id,
    ships.notes,
    ships.warehouse_id,
    ships.work_date,
    ships.order_state,
    ships.airport_id,
    ships.airport_code,
    ships.awb_number,
    ships.internal_notes,
    ships.internal_notes2,
    ships.warehouse_notes,
    ships.route_type,
    ships.internet_visible,
    ships.flag_air,
    ships.flag_ground,
    ships.departure_date,
    ships.arrival_date,
    ships.po_state,
    ships.po_level,
    ships.final_date,
    ships.flg_house,
    ships.flg_master,
    ships.delivered,
    ships.flg_billable,
    ships.customs_declearer,
    ships.customs_date,
    ships.update_date,
    ships.insert_date,
    ships.deleted,
    ships.db_schema_id,
    ships.carrier_name,
    ships.work_number,
    works.workdate,
    works.code,
    works.type_id,
    works.level_id,
    agents.an_last_name AS agent_name,
    agents.an_code AS agent_code,
    agents.an_town AS agent_town,
    shippers.an_last_name AS shipper_name,
    shippers.an_code AS shipper_code,
    shippers.an_town AS shipper_town,
    vessels.name AS vessel_name,
    airports.name AS airport_name,
    carriers.an_town AS carrier_town,
    customers.an_last_name AS customer_name,
    customers.an_code AS customer_code,
    customers.an_town AS customer_town,
    customers.an_address AS customer_address,
    customers.an_postal_code AS customer_postal_code,
    customers.an_phone AS customer_phone
   FROM (((((((logistic.shipments ships
     JOIN workflow.workflows works ON ((ships.workflow_id = works.id)))
     LEFT JOIN anagraph.anagraphs agents ON ((agents.anagraph_id = ships.agent_id)))
     LEFT JOIN anagraph.anagraphs shippers ON ((shippers.anagraph_id = ships.shipper_id)))
     LEFT JOIN anagraph.anagraphs carriers ON ((carriers.anagraph_id = ships.carrier_id)))
     LEFT JOIN anagraph.anagraphs customers ON ((customers.anagraph_id = ships.shipper_id)))
     LEFT JOIN shipping.vessels vessels ON ((vessels.vessel_id = ships.vessel_id)))
     LEFT JOIN logistic.locations airports ON ((airports.id = ships.airport_id)));]]></view_script>
			<column name="id" type="bigint" />
			<column name="jguid" type="uuid" />
			<column name="creation_date" type="timestamptz" />
			<column name="pickup_date" type="date" />
			<column name="delivery_date" type="date" />
			<column name="office_id" type="integer" />
			<column name="workflow_uid" type="uuid" />
			<column name="agent_id" type="integer" />
			<column name="shipper_id" type="integer" />
			<column name="shipper_address" type="json" />
			<column name="pickup_address" type="json" />
			<column name="year" type="smallint" />
			<column name="groupage_number" type="smallint" />
			<column name="export_type_id" type="smallint" />
			<column name="fullcontainer" type="char" />
			<column name="vessel_id" type="integer" />
			<column name="work_code" type="varchar" />
			<column name="travel_identification_code" type="varchar" />
			<column name="carrier_id" type="integer" />
			<column name="carrier_code" type="varchar" />
			<column name="workflow_id" type="bigint" />
			<column name="pol_id" type="integer" />
			<column name="pol_code" type="varchar" />
			<column name="pol_name" type="varchar" />
			<column name="pod_id" type="integer" />
			<column name="pod_name" type="varchar" />
			<column name="pod_code" type="varchar" />
			<column name="customer_id" type="integer" />
			<column name="notes" type="text" />
			<column name="warehouse_id" type="integer" />
			<column name="work_date" type="date" />
			<column name="order_state" type="smallint" />
			<column name="airport_id" type="integer" />
			<column name="airport_code" type="varchar" />
			<column name="awb_number" type="varchar" />
			<column name="internal_notes" type="text" />
			<column name="internal_notes2" type="text" />
			<column name="warehouse_notes" type="text" />
			<column name="route_type" type="char" />
			<column name="internet_visible" type="boolean" />
			<column name="flag_air" type="boolean" />
			<column name="flag_ground" type="boolean" />
			<column name="departure_date" type="date" />
			<column name="arrival_date" type="date" />
			<column name="po_state" type="smallint" />
			<column name="po_level" type="smallint" />
			<column name="final_date" type="date" />
			<column name="flg_house" type="boolean" />
			<column name="flg_master" type="boolean" />
			<column name="delivered" type="boolean" />
			<column name="flg_billable" type="boolean" />
			<column name="customs_declearer" type="varchar" />
			<column name="customs_date" type="date" />
			<column name="update_date" type="timestamptz" />
			<column name="insert_date" type="timestamptz" />
			<column name="deleted" type="boolean" />
			<column name="db_schema_id" type="integer" />
			<column name="carrier_name" type="varchar" />
			<column name="work_number" type="integer" />
			<column name="workdate" type="timestamptz" />
			<column name="code" type="varchar" />
			<column name="type_id" type="smallint" />
			<column name="level_id" type="smallint" />
			<column name="agent_name" type="varchar" />
			<column name="agent_code" type="varchar" />
			<column name="agent_town" type="varchar" />
			<column name="shipper_name" type="varchar" />
			<column name="shipper_code" type="varchar" />
			<column name="shipper_town" type="varchar" />
			<column name="vessel_name" type="varchar" />
			<column name="airport_name" type="varchar" />
			<column name="carrier_town" type="varchar" />
			<column name="customer_name" type="varchar" />
			<column name="customer_code" type="varchar" />
			<column name="customer_town" type="varchar" />
			<column name="customer_address" type="varchar" />
			<column name="customer_postal_code" type="varchar" />
			<column name="customer_phone" type="varchar" />
		</view>
		<sequence name="awb_rows_seq" options="START WITH 1" />
		<sequence name="awb_seq" options="START WITH 1" />
		<sequence name="locations_seq" options="START WITH 1" />
		<sequence name="pickup_orders_seq" options="START WITH 1" />
		<trigger name="awb_biu_trg" table="awb" id="Trigger_243c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER awb_biu_trg BEFORE INSERT OR UPDATE ON logistic.awb FOR EACH ROW EXECUTE PROCEDURE logistic.awb_id_trg()]]></string>
		</trigger>
		<trigger name="awb_rows_biu_trg" table="awb_rows" id="Trigger_2671" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER awb_rows_biu_trg BEFORE INSERT OR UPDATE ON logistic.awb_rows FOR EACH ROW EXECUTE PROCEDURE logistic.awb_rows_id_trg()]]></string>
		</trigger>
		<trigger name="container_types_biu_trg" table="container_types" id="Trigger_1b7c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER container_types_biu_trg BEFORE INSERT OR UPDATE ON logistic.container_types FOR EACH ROW EXECUTE PROCEDURE logistic.logistic_bi_trg()]]></string>
		</trigger>
		<trigger name="container_types_jguid_trg" table="container_types" id="Trigger_152" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER container_types_jguid_trg BEFORE INSERT ON logistic.container_types FOR EACH ROW EXECUTE PROCEDURE jpublic.guid_trg()]]></string>
		</trigger>
		<trigger name="locations_biu_trg" table="locations" id="Trigger_1b18" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER locations_biu_trg BEFORE INSERT OR UPDATE ON logistic.locations FOR EACH ROW EXECUTE PROCEDURE logistic.locations_bi_trg()]]></string>
		</trigger>
		<trigger name="pickup_orders_biu_trg" table="shipments" id="Trigger_123c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER pickup_orders_biu_trg BEFORE INSERT OR UPDATE ON logistic.shipments FOR EACH ROW EXECUTE PROCEDURE logistic.pickup_orders_trg()]]></string>
		</trigger>
		<trigger name="shipments_view_ioi" id="Trigger_147c" isSystem="false" />
		<function name="awb_id_trg" id="Function_ab7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.awb_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.id is null or new.id = 0 then 
     select nextval('logistic.awb_seq') into new.id; 
  end if; 
  
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc() ;
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  
  Return New; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="awb_rows_id_trg" id="Function_1d27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.awb_rows_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.id is null or new.id = 0 then 
     select nextval('logistic.awb_rows_seq') into new.id; 
  end if; 
  
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc() ;
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  
  Return New; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_location_id_by_code" id="Function_17b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.get_location_id_by_code(p_code character varying, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
begin
  R := null; 
  select into I count(1)
     from logistic.locations a
	 where
	    a.code = Upper(p_code) 
		and 
		db_schema_id = p_schema_id; 
		
	if I = 1 then
    select into R id 
      from logistic.locations a
	 where
	    a.code = Upper(p_code) 
		and 
		db_schema_id = p_schema_id;
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="get_location_name_by_code" id="Function_830" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.get_location_name_by_code(p_code character varying, p_schema_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R character varying; 
begin
  R := null; 
  select into I count(1)
     from logistic.locations a
	 where
	    a.code = Upper(p_code) 
		and 
		db_schema_id = p_schema_id; 
		
	if I = 1 then
    select into R "name" 
      from logistic.locations a
	 where
	    a.code = Upper(p_code) 
		and 
		db_schema_id = p_schema_id;
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="locations_bi_trg" id="Function_ab4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.locations_bi_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.id is null or new.id = 0 then 
     select nextval('logistic.locations_seq') into new.id; 
  end if; 
  
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc() ;
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  
  New.search_index := New.code || ' ' || New.name   || 
        case when New.state_province is null then '' else ' ' || New.state_province end ||
        case when New.country is null then '' else ' ' || New.country end;  
  
  
  Return New; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="logistic_bi_trg" id="Function_1e74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.logistic_bi_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
  if new.id is null or new.id = 0 then 
     select nextval('logistic.logistic_seq') into new.id; 
  end if; 
  
  Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="pickup_orders_trg" id="Function_1c48" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.pickup_orders_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.id is null or new.id = 0 then 
     select nextval('logistic.pickup_orders_seq') into new.id; 
  end if; 
  
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc() ;
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  
  Return New; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shipments_view_ioi_trg" id="Function_1f6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION logistic.shipments_view_ioi_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
declare
  v_id bigint; 
  
begin
v_id := 
workflow.sp_ins_workflows
(
  new.workflow_id   ,
  new.jguid         ,
  new.workdate      ,
  new.code          ,
  new.office_id     ,
  new.customer_id   ,
  new.year          ,
  new.type_id       ,
  new.deleted       ,
  new.db_schema_id  ,
  new.level_id                      
); 
if new.workflow_id  is null then new.workflow_id  := v_id; end if;
 
if new.workflow_uid is null then 
   select 
      jguid
   into 
      new.workflow_uid
   from 
      workflow.workflows where id = v_id;
end if;
v_id := 
logistic.shipments_insert ( 
  new.id ,
  new.jguid ,
  new.creation_date ,
  new.pickup_date ,
  new.delivery_date ,
  new.office_id ,
  new.workflow_uid ,
  new.agent_id ,
  new.shipper_id ,
  new.shipper_address ,
  new.pickup_address ,
  new.year ,
  new.groupage_number ,
  new.export_type_id ,
  new.fullcontainer ,
  new.vessel_id ,
  new.work_code ,
  new.travel_identification_code ,
  new.carrier_id ,
  new.carrier_code ,
  new.workflow_id ,
  new.pol_id ,
  new.pol_code ,
  new.pol_name ,
  new.pod_id ,
  new.pod_name ,
  new.pod_code ,
  new.customer_id ,
  new.notes ,
  new.warehouse_id ,
  new.work_date ,
  new.order_state ,
  new.airport_id ,
  new.airport_code ,
  new.awb_number ,
  new.internal_notes ,
  new.internal_notes2 ,
  new.warehouse_notes ,
  new.route_type ,
  new.internet_visible ,
  new.flag_air ,
  new.flag_ground ,
  new.departure_date ,
  new.arrival_date ,
  new.po_state ,
  new.po_level ,
  new.final_date ,
  new.flg_house ,
  new.flg_master ,
  new.delivered ,
  new.flg_billable ,
  new.customs_declearer ,
  new.customs_date ,
  new.update_date ,
  new.insert_date ,
  new.deleted ,
  new.db_schema_id ,
  new.carrier_name , 
  new.work_number
);
  return new; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="pg_catalog" catalogname="ergomercator" >
		<comment><![CDATA[system catalog schema]]></comment>
		<table name="pg_aggregate" type="GLOBAL_TEMPORARY" >
			<column name="aggfnoid" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggkind" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="aggnumdirectargs" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="aggtransfn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggfinalfn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggcombinefn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggserialfn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggdeserialfn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggmtransfn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggminvtransfn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggmfinalfn" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="aggfinalextra" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="aggmfinalextra" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="aggsortop" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="aggtranstype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="aggtransspace" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="aggmtranstype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="aggmtransspace" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="agginitval" type="text" decimal="0" jt="12" />
			<column name="aggminitval" type="text" decimal="0" jt="12" />
			<index name="pg_aggregate_fnoid_index" unique="UNIQUE_INDEX" >
				<column name="aggfnoid" />
			</index>
		</table>
		<table name="pg_am" type="GLOBAL_TEMPORARY" >
			<column name="amname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="amhandler" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="amtype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_am_name_index" unique="UNIQUE_INDEX" >
				<column name="amname" />
			</index>
			<index name="pg_am_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_amop" type="GLOBAL_TEMPORARY" >
			<column name="amopfamily" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amoplefttype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amoprighttype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amopstrategy" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="amoppurpose" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="amopopr" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amopmethod" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amopsortfamily" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_amop_fam_strat_index" unique="UNIQUE_INDEX" >
				<column name="amopfamily" />
				<column name="amoplefttype" />
				<column name="amoprighttype" />
				<column name="amopstrategy" />
			</index>
			<index name="pg_amop_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_amop_opr_fam_index" unique="UNIQUE_INDEX" >
				<column name="amopopr" />
				<column name="amoppurpose" />
				<column name="amopfamily" />
			</index>
		</table>
		<table name="pg_amproc" type="GLOBAL_TEMPORARY" >
			<column name="amprocfamily" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amproclefttype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amprocrighttype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amprocnum" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="amproc" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_amproc_fam_proc_index" unique="UNIQUE_INDEX" >
				<column name="amprocfamily" />
				<column name="amproclefttype" />
				<column name="amprocrighttype" />
				<column name="amprocnum" />
			</index>
			<index name="pg_amproc_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_attrdef" type="GLOBAL_TEMPORARY" >
			<column name="adrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="adnum" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="adbin" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="adsrc" type="text" decimal="0" jt="12" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_attrdef_adrelid_adnum_index" unique="UNIQUE_INDEX" >
				<column name="adrelid" />
				<column name="adnum" />
			</index>
			<index name="pg_attrdef_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_attribute" type="GLOBAL_TEMPORARY" >
			<column name="attrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="attname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="atttypid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="attstattarget" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="attlen" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="attnum" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="attndims" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="attcacheoff" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="atttypmod" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="attbyval" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="attstorage" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="attalign" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="attnotnull" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="atthasdef" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="attidentity" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="attisdropped" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="attislocal" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="attinhcount" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="attcollation" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="attacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="attoptions" type="text[]" decimal="0" jt="2003" />
			<column name="attfdwoptions" type="text[]" decimal="0" jt="2003" />
			<index name="pg_attribute_relid_attnam_index" unique="UNIQUE_INDEX" >
				<column name="attrelid" />
				<column name="attname" />
			</index>
			<index name="pg_attribute_relid_attnum_index" unique="UNIQUE_INDEX" >
				<column name="attrelid" />
				<column name="attnum" />
			</index>
		</table>
		<table name="pg_auth_members" type="GLOBAL_TEMPORARY" >
			<column name="roleid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="member" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="grantor" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="admin_option" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pg_auth_members_member_role_index" unique="UNIQUE_INDEX" >
				<column name="member" />
				<column name="roleid" />
			</index>
			<index name="pg_auth_members_role_member_index" unique="UNIQUE_INDEX" >
				<column name="roleid" />
				<column name="member" />
			</index>
		</table>
		<table name="pg_authid" type="GLOBAL_TEMPORARY" >
			<column name="rolname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="rolsuper" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="rolinherit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="rolcreaterole" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="rolcreatedb" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="rolcanlogin" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="rolreplication" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="rolbypassrls" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="rolconnlimit" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="rolpassword" type="text" decimal="0" jt="12" />
			<column name="rolvaliduntil" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_authid_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_authid_rolname_index" unique="UNIQUE_INDEX" >
				<column name="rolname" />
			</index>
		</table>
		<table name="pg_cast" type="GLOBAL_TEMPORARY" >
			<column name="castsource" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="casttarget" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="castfunc" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="castcontext" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="castmethod" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_cast_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_cast_source_target_index" unique="UNIQUE_INDEX" >
				<column name="castsource" />
				<column name="casttarget" />
			</index>
		</table>
		<table name="pg_class" type="GLOBAL_TEMPORARY" >
			<column name="relname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="relnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="reltype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="reloftype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relam" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relfilenode" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="reltablespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relpages" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="reltuples" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="relallvisible" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="reltoastrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relhasindex" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relisshared" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relpersistence" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="relkind" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="relnatts" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="relchecks" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="relhasoids" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relhaspkey" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relhasrules" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relhastriggers" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relhassubclass" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relrowsecurity" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relforcerowsecurity" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relispopulated" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relreplident" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="relispartition" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="relfrozenxid" type="xid" decimal="0" jt="1111" mandatory="y" />
			<column name="relminmxid" type="xid" decimal="0" jt="1111" mandatory="y" />
			<column name="relacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="reloptions" type="text[]" decimal="0" jt="2003" />
			<column name="relpartbound" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_class_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_class_relname_nsp_index" unique="UNIQUE_INDEX" >
				<column name="relname" />
				<column name="relnamespace" />
			</index>
			<index name="pg_class_tblspc_relfilenode_index" unique="NORMAL" >
				<column name="reltablespace" />
				<column name="relfilenode" />
			</index>
		</table>
		<table name="pg_collation" type="GLOBAL_TEMPORARY" >
			<column name="collname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="collnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="collowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="collprovider" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="collencoding" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="collcollate" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="collctype" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="collversion" type="text" decimal="0" jt="12" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_collation_name_enc_nsp_index" unique="UNIQUE_INDEX" >
				<column name="collname" />
				<column name="collencoding" />
				<column name="collnamespace" />
			</index>
			<index name="pg_collation_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_constraint" type="GLOBAL_TEMPORARY" >
			<column name="conname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="connamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="condeferrable" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="condeferred" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="convalidated" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="conrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contypid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="conindid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="confrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="confupdtype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="confdeltype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="confmatchtype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="conislocal" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="coninhcount" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="connoinherit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="conkey" type="smallint[]" length="5" decimal="0" jt="2003" />
			<column name="confkey" type="smallint[]" length="5" decimal="0" jt="2003" />
			<column name="conpfeqop" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="conppeqop" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="conffeqop" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="conexclop" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="conbin" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="consrc" type="text" decimal="0" jt="12" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_constraint_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_constraint_conname_nsp_index" unique="NORMAL" >
				<column name="conname" />
				<column name="connamespace" />
			</index>
			<index name="pg_constraint_conrelid_index" unique="NORMAL" >
				<column name="conrelid" />
			</index>
			<index name="pg_constraint_contypid_index" unique="NORMAL" >
				<column name="contypid" />
			</index>
		</table>
		<table name="pg_conversion" type="GLOBAL_TEMPORARY" >
			<column name="conname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="connamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="conowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="conforencoding" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contoencoding" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="conproc" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="condefault" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_conversion_default_index" unique="UNIQUE_INDEX" >
				<column name="connamespace" />
				<column name="conforencoding" />
				<column name="contoencoding" />
				<column name="oid" />
			</index>
			<index name="pg_conversion_name_nsp_index" unique="UNIQUE_INDEX" >
				<column name="conname" />
				<column name="connamespace" />
			</index>
			<index name="pg_conversion_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_database" type="GLOBAL_TEMPORARY" >
			<column name="datname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="datdba" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="encoding" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="datcollate" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="datctype" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="datistemplate" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="datallowconn" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="datconnlimit" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="datlastsysoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="datfrozenxid" type="xid" decimal="0" jt="1111" mandatory="y" />
			<column name="datminmxid" type="xid" decimal="0" jt="1111" mandatory="y" />
			<column name="dattablespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="datacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_database_datname_index" unique="UNIQUE_INDEX" >
				<column name="datname" />
			</index>
			<index name="pg_database_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_db_role_setting" type="GLOBAL_TEMPORARY" >
			<column name="setdatabase" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="setrole" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="setconfig" type="text[]" decimal="0" jt="2003" />
			<index name="pg_db_role_setting_databaseid_rol_index" unique="UNIQUE_INDEX" >
				<column name="setdatabase" />
				<column name="setrole" />
			</index>
		</table>
		<table name="pg_default_acl" type="GLOBAL_TEMPORARY" >
			<column name="defaclrole" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="defaclnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="defaclobjtype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="defaclacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_default_acl_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_default_acl_role_nsp_obj_index" unique="UNIQUE_INDEX" >
				<column name="defaclrole" />
				<column name="defaclnamespace" />
				<column name="defaclobjtype" />
			</index>
		</table>
		<table name="pg_depend" type="GLOBAL_TEMPORARY" >
			<column name="classid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="objid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="refclassid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="refobjid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="refobjsubid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deptype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<index name="pg_depend_depender_index" unique="NORMAL" >
				<column name="classid" />
				<column name="objid" />
				<column name="objsubid" />
			</index>
			<index name="pg_depend_reference_index" unique="NORMAL" >
				<column name="refclassid" />
				<column name="refobjid" />
				<column name="refobjsubid" />
			</index>
		</table>
		<table name="pg_description" type="GLOBAL_TEMPORARY" >
			<column name="objoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="classoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pg_description_o_c_o_index" unique="UNIQUE_INDEX" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
			</index>
		</table>
		<table name="pg_enum" type="GLOBAL_TEMPORARY" >
			<column name="enumtypid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="enumsortorder" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="enumlabel" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_enum_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_enum_typid_label_index" unique="UNIQUE_INDEX" >
				<column name="enumtypid" />
				<column name="enumlabel" />
			</index>
			<index name="pg_enum_typid_sortorder_index" unique="UNIQUE_INDEX" >
				<column name="enumtypid" />
				<column name="enumsortorder" />
			</index>
		</table>
		<table name="pg_event_trigger" type="GLOBAL_TEMPORARY" >
			<column name="evtname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="evtevent" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="evtowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="evtfoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="evtenabled" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="evttags" type="text[]" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_event_trigger_evtname_index" unique="UNIQUE_INDEX" >
				<column name="evtname" />
			</index>
			<index name="pg_event_trigger_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_extension" type="GLOBAL_TEMPORARY" >
			<column name="extname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="extowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="extnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="extrelocatable" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="extversion" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="extconfig" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="extcondition" type="text[]" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_extension_name_index" unique="UNIQUE_INDEX" >
				<column name="extname" />
			</index>
			<index name="pg_extension_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_foreign_data_wrapper" type="GLOBAL_TEMPORARY" >
			<column name="fdwname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="fdwowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fdwhandler" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fdwvalidator" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fdwacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="fdwoptions" type="text[]" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_foreign_data_wrapper_name_index" unique="UNIQUE_INDEX" >
				<column name="fdwname" />
			</index>
			<index name="pg_foreign_data_wrapper_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_foreign_server" type="GLOBAL_TEMPORARY" >
			<column name="srvname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="srvowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="srvfdw" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="srvtype" type="text" decimal="0" jt="12" />
			<column name="srvversion" type="text" decimal="0" jt="12" />
			<column name="srvacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="srvoptions" type="text[]" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_foreign_server_name_index" unique="UNIQUE_INDEX" >
				<column name="srvname" />
			</index>
			<index name="pg_foreign_server_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_foreign_table" type="GLOBAL_TEMPORARY" >
			<column name="ftrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ftserver" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ftoptions" type="text[]" decimal="0" jt="2003" />
			<index name="pg_foreign_table_relid_index" unique="UNIQUE_INDEX" >
				<column name="ftrelid" />
			</index>
		</table>
		<table name="pg_index" type="GLOBAL_TEMPORARY" >
			<column name="indexrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="indrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="indnatts" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="indisunique" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indisprimary" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indisexclusion" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indimmediate" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indisclustered" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indisvalid" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indcheckxmin" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indisready" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indislive" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indisreplident" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="indkey" type="int2vector" decimal="0" jt="1111" mandatory="y" />
			<column name="indcollation" type="oidvector" decimal="0" jt="1111" mandatory="y" />
			<column name="indclass" type="oidvector" decimal="0" jt="1111" mandatory="y" />
			<column name="indoption" type="int2vector" decimal="0" jt="1111" mandatory="y" />
			<column name="indexprs" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="indpred" type="pg_node_tree" decimal="0" jt="1111" />
			<index name="pg_index_indexrelid_index" unique="UNIQUE_INDEX" >
				<column name="indexrelid" />
			</index>
			<index name="pg_index_indrelid_index" unique="NORMAL" >
				<column name="indrelid" />
			</index>
		</table>
		<table name="pg_inherits" type="GLOBAL_TEMPORARY" >
			<column name="inhrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inhparent" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inhseqno" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pg_inherits_relid_seqno_index" unique="UNIQUE_INDEX" >
				<column name="inhrelid" />
				<column name="inhseqno" />
			</index>
			<index name="pg_inherits_parent_index" unique="NORMAL" >
				<column name="inhparent" />
			</index>
		</table>
		<table name="pg_init_privs" type="GLOBAL_TEMPORARY" >
			<column name="objoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="classoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="privtype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="initprivs" type="_aclitem" decimal="0" jt="2003" mandatory="y" />
			<index name="pg_init_privs_o_c_o_index" unique="UNIQUE_INDEX" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
			</index>
		</table>
		<table name="pg_language" type="GLOBAL_TEMPORARY" >
			<column name="lanname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="lanowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="lanispl" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="lanpltrusted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="lanplcallfoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="laninline" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="lanvalidator" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="lanacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_language_name_index" unique="UNIQUE_INDEX" >
				<column name="lanname" />
			</index>
			<index name="pg_language_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_largeobject" type="GLOBAL_TEMPORARY" >
			<column name="loid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pageno" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="data" type="bytea" decimal="0" jt="-2" mandatory="y" />
			<index name="pg_largeobject_loid_pn_index" unique="UNIQUE_INDEX" >
				<column name="loid" />
				<column name="pageno" />
			</index>
		</table>
		<table name="pg_largeobject_metadata" type="GLOBAL_TEMPORARY" >
			<column name="lomowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="lomacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_largeobject_metadata_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_namespace" type="GLOBAL_TEMPORARY" >
			<column name="nspname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="nspowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="nspacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_namespace_nspname_index" unique="UNIQUE_INDEX" >
				<column name="nspname" />
			</index>
			<index name="pg_namespace_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_opclass" type="GLOBAL_TEMPORARY" >
			<column name="opcmethod" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opcname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="opcnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opcowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opcfamily" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opcintype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opcdefault" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="opckeytype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_opclass_am_name_nsp_index" unique="UNIQUE_INDEX" >
				<column name="opcmethod" />
				<column name="opcname" />
				<column name="opcnamespace" />
			</index>
			<index name="pg_opclass_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_operator" type="GLOBAL_TEMPORARY" >
			<column name="oprname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="oprnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oprowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oprkind" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="oprcanmerge" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="oprcanhash" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="oprleft" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oprright" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oprresult" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oprcom" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oprnegate" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oprcode" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="oprrest" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="oprjoin" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_operator_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_operator_oprname_l_r_n_index" unique="UNIQUE_INDEX" >
				<column name="oprname" />
				<column name="oprleft" />
				<column name="oprright" />
				<column name="oprnamespace" />
			</index>
		</table>
		<table name="pg_opfamily" type="GLOBAL_TEMPORARY" >
			<column name="opfmethod" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opfname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="opfnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opfowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_opfamily_am_name_nsp_index" unique="UNIQUE_INDEX" >
				<column name="opfmethod" />
				<column name="opfname" />
				<column name="opfnamespace" />
			</index>
			<index name="pg_opfamily_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_partitioned_table" type="GLOBAL_TEMPORARY" >
			<column name="partrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="partstrat" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="partnatts" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="partattrs" type="int2vector" decimal="0" jt="1111" mandatory="y" />
			<column name="partclass" type="oidvector" decimal="0" jt="1111" mandatory="y" />
			<column name="partcollation" type="oidvector" decimal="0" jt="1111" mandatory="y" />
			<column name="partexprs" type="pg_node_tree" decimal="0" jt="1111" />
			<index name="pg_partitioned_table_partrelid_index" unique="UNIQUE_INDEX" >
				<column name="partrelid" />
			</index>
		</table>
		<table name="pg_pltemplate" type="GLOBAL_TEMPORARY" >
			<column name="tmplname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="tmpltrusted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tmpldbacreate" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tmplhandler" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tmplinline" type="text" decimal="0" jt="12" />
			<column name="tmplvalidator" type="text" decimal="0" jt="12" />
			<column name="tmpllibrary" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tmplacl" type="_aclitem" decimal="0" jt="2003" />
			<index name="pg_pltemplate_name_index" unique="UNIQUE_INDEX" >
				<column name="tmplname" />
			</index>
		</table>
		<table name="pg_policy" type="GLOBAL_TEMPORARY" >
			<column name="polname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="polrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="polcmd" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="polpermissive" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="polroles" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="polqual" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="polwithcheck" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_policy_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_policy_polrelid_polname_index" unique="UNIQUE_INDEX" >
				<column name="polrelid" />
				<column name="polname" />
			</index>
		</table>
		<table name="pg_proc" type="GLOBAL_TEMPORARY" >
			<column name="proname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="pronamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="proowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="prolang" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="procost" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="prorows" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="provariadic" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="protransform" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="proisagg" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="proiswindow" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="prosecdef" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="proleakproof" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="proisstrict" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="proretset" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="provolatile" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="proparallel" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="pronargs" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="pronargdefaults" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="prorettype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="proargtypes" type="oidvector" decimal="0" jt="1111" mandatory="y" />
			<column name="proallargtypes" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="proargmodes" type="_char" length="1" decimal="0" jt="2003" />
			<column name="proargnames" type="text[]" decimal="0" jt="2003" />
			<column name="proargdefaults" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="protrftypes" type="_oid" length="10" decimal="0" jt="2003" />
			<column name="prosrc" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="probin" type="text" decimal="0" jt="12" />
			<column name="proconfig" type="text[]" decimal="0" jt="2003" />
			<column name="proacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_proc_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_proc_proname_args_nsp_index" unique="UNIQUE_INDEX" >
				<column name="proname" />
				<column name="proargtypes" />
				<column name="pronamespace" />
			</index>
		</table>
		<table name="pg_publication" type="GLOBAL_TEMPORARY" >
			<column name="pubname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="pubowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="puballtables" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pubinsert" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pubupdate" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pubdelete" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_publication_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_publication_pubname_index" unique="UNIQUE_INDEX" >
				<column name="pubname" />
			</index>
		</table>
		<table name="pg_publication_rel" type="GLOBAL_TEMPORARY" >
			<column name="prpubid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="prrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_publication_rel_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_publication_rel_prrelid_prpubid_index" unique="UNIQUE_INDEX" >
				<column name="prrelid" />
				<column name="prpubid" />
			</index>
		</table>
		<table name="pg_range" type="GLOBAL_TEMPORARY" >
			<column name="rngtypid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="rngsubtype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="rngcollation" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="rngsubopc" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="rngcanonical" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="rngsubdiff" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<index name="pg_range_rngtypid_index" unique="UNIQUE_INDEX" >
				<column name="rngtypid" />
			</index>
		</table>
		<table name="pg_replication_origin" type="GLOBAL_TEMPORARY" >
			<column name="roident" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="roname" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pg_replication_origin_roiident_index" unique="UNIQUE_INDEX" >
				<column name="roident" />
			</index>
			<index name="pg_replication_origin_roname_index" unique="UNIQUE_INDEX" >
				<column name="roname" />
			</index>
		</table>
		<table name="pg_rewrite" type="GLOBAL_TEMPORARY" >
			<column name="rulename" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="ev_class" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ev_type" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="ev_enabled" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="is_instead" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="ev_qual" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="ev_action" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_rewrite_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_rewrite_rel_rulename_index" unique="UNIQUE_INDEX" >
				<column name="ev_class" />
				<column name="rulename" />
			</index>
		</table>
		<table name="pg_seclabel" type="GLOBAL_TEMPORARY" >
			<column name="objoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="classoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="provider" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="label" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pg_seclabel_object_index" unique="UNIQUE_INDEX" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
				<column name="provider" />
			</index>
		</table>
		<table name="pg_sequence" type="GLOBAL_TEMPORARY" >
			<column name="seqrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="seqtypid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="seqstart" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="seqincrement" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="seqmax" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="seqmin" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="seqcache" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="seqcycle" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pg_sequence_seqrelid_index" unique="UNIQUE_INDEX" >
				<column name="seqrelid" />
			</index>
		</table>
		<table name="pg_shdepend" type="GLOBAL_TEMPORARY" >
			<column name="dbid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="classid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="objid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="refclassid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="refobjid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deptype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<index name="pg_shdepend_depender_index" unique="NORMAL" >
				<column name="dbid" />
				<column name="classid" />
				<column name="objid" />
				<column name="objsubid" />
			</index>
			<index name="pg_shdepend_reference_index" unique="NORMAL" >
				<column name="refclassid" />
				<column name="refobjid" />
			</index>
		</table>
		<table name="pg_shdescription" type="GLOBAL_TEMPORARY" >
			<column name="objoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="classoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pg_shdescription_o_c_index" unique="UNIQUE_INDEX" >
				<column name="objoid" />
				<column name="classoid" />
			</index>
		</table>
		<table name="pg_shseclabel" type="GLOBAL_TEMPORARY" >
			<column name="objoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="classoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="provider" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="label" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pg_shseclabel_object_index" unique="UNIQUE_INDEX" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="provider" />
			</index>
		</table>
		<table name="pg_statistic" type="GLOBAL_TEMPORARY" >
			<column name="starelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="staattnum" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="stainherit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="stanullfrac" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="stawidth" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="stadistinct" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="stakind1" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="stakind2" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="stakind3" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="stakind4" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="stakind5" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="staop1" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="staop2" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="staop3" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="staop4" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="staop5" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="stanumbers1" type="_float4" length="8" decimal="8" jt="2003" />
			<column name="stanumbers2" type="_float4" length="8" decimal="8" jt="2003" />
			<column name="stanumbers3" type="_float4" length="8" decimal="8" jt="2003" />
			<column name="stanumbers4" type="_float4" length="8" decimal="8" jt="2003" />
			<column name="stanumbers5" type="_float4" length="8" decimal="8" jt="2003" />
			<column name="stavalues1" type="anyarray" decimal="0" jt="1111" />
			<column name="stavalues2" type="anyarray" decimal="0" jt="1111" />
			<column name="stavalues3" type="anyarray" decimal="0" jt="1111" />
			<column name="stavalues4" type="anyarray" decimal="0" jt="1111" />
			<column name="stavalues5" type="anyarray" decimal="0" jt="1111" />
			<index name="pg_statistic_relid_att_inh_index" unique="UNIQUE_INDEX" >
				<column name="starelid" />
				<column name="staattnum" />
				<column name="stainherit" />
			</index>
		</table>
		<table name="pg_statistic_ext" type="GLOBAL_TEMPORARY" >
			<column name="stxrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="stxname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="stxnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="stxowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="stxkeys" type="int2vector" decimal="0" jt="1111" mandatory="y" />
			<column name="stxkind" type="_char" length="1" decimal="0" jt="2003" mandatory="y" />
			<column name="stxndistinct" type="pg_ndistinct" decimal="0" jt="1111" />
			<column name="stxdependencies" type="pg_dependencies" decimal="0" jt="1111" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_statistic_ext_name_index" unique="UNIQUE_INDEX" >
				<column name="stxname" />
				<column name="stxnamespace" />
			</index>
			<index name="pg_statistic_ext_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_statistic_ext_relid_index" unique="NORMAL" >
				<column name="stxrelid" />
			</index>
		</table>
		<table name="pg_subscription" type="GLOBAL_TEMPORARY" >
			<column name="subdbid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="subowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subenabled" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="subconninfo" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subslotname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="subsynccommit" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subpublications" type="text[]" decimal="0" jt="2003" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_subscription_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_subscription_subname_index" unique="UNIQUE_INDEX" >
				<column name="subdbid" />
				<column name="subname" />
			</index>
		</table>
		<table name="pg_subscription_rel" type="GLOBAL_TEMPORARY" >
			<column name="srsubid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="srrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="srsubstate" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="srsublsn" type="pg_lsn" decimal="0" jt="1111" mandatory="y" />
			<index name="pg_subscription_rel_srrelid_srsubid_index" unique="UNIQUE_INDEX" >
				<column name="srrelid" />
				<column name="srsubid" />
			</index>
		</table>
		<table name="pg_tablespace" type="GLOBAL_TEMPORARY" >
			<column name="spcname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="spcowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="spcacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="spcoptions" type="text[]" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_tablespace_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_tablespace_spcname_index" unique="UNIQUE_INDEX" >
				<column name="spcname" />
			</index>
		</table>
		<table name="pg_transform" type="GLOBAL_TEMPORARY" >
			<column name="trftype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="trflang" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="trffromsql" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="trftosql" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_transform_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_transform_type_lang_index" unique="UNIQUE_INDEX" >
				<column name="trftype" />
				<column name="trflang" />
			</index>
		</table>
		<table name="pg_trigger" type="GLOBAL_TEMPORARY" >
			<column name="tgrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tgname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="tgfoid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tgtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="tgenabled" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="tgisinternal" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tgconstrrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tgconstrindid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tgconstraint" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tgdeferrable" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tginitdeferred" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tgnargs" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="tgattr" type="int2vector" decimal="0" jt="1111" mandatory="y" />
			<column name="tgargs" type="bytea" decimal="0" jt="-2" mandatory="y" />
			<column name="tgqual" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="tgoldtable" type="name" decimal="0" jt="12" />
			<column name="tgnewtable" type="name" decimal="0" jt="12" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_trigger_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_trigger_tgrelid_tgname_index" unique="UNIQUE_INDEX" >
				<column name="tgrelid" />
				<column name="tgname" />
			</index>
			<index name="pg_trigger_tgconstraint_index" unique="NORMAL" >
				<column name="tgconstraint" />
			</index>
		</table>
		<table name="pg_ts_config" type="GLOBAL_TEMPORARY" >
			<column name="cfgname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="cfgnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cfgowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cfgparser" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_ts_config_cfgname_index" unique="UNIQUE_INDEX" >
				<column name="cfgname" />
				<column name="cfgnamespace" />
			</index>
			<index name="pg_ts_config_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_ts_config_map" type="GLOBAL_TEMPORARY" >
			<column name="mapcfg" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="maptokentype" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mapseqno" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mapdict" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pg_ts_config_map_index" unique="UNIQUE_INDEX" >
				<column name="mapcfg" />
				<column name="maptokentype" />
				<column name="mapseqno" />
			</index>
		</table>
		<table name="pg_ts_dict" type="GLOBAL_TEMPORARY" >
			<column name="dictname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="dictnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="dictowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="dicttemplate" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="dictinitoption" type="text" decimal="0" jt="12" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_ts_dict_dictname_index" unique="UNIQUE_INDEX" >
				<column name="dictname" />
				<column name="dictnamespace" />
			</index>
			<index name="pg_ts_dict_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_ts_parser" type="GLOBAL_TEMPORARY" >
			<column name="prsname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="prsnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="prsstart" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="prstoken" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="prsend" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="prsheadline" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="prslextype" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_ts_parser_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_ts_parser_prsname_index" unique="UNIQUE_INDEX" >
				<column name="prsname" />
				<column name="prsnamespace" />
			</index>
		</table>
		<table name="pg_ts_template" type="GLOBAL_TEMPORARY" >
			<column name="tmplname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="tmplnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tmplinit" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="tmpllexize" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_ts_template_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_ts_template_tmplname_index" unique="UNIQUE_INDEX" >
				<column name="tmplname" />
				<column name="tmplnamespace" />
			</index>
		</table>
		<table name="pg_type" type="GLOBAL_TEMPORARY" >
			<column name="typname" type="name" decimal="0" jt="12" mandatory="y" />
			<column name="typnamespace" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typowner" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typlen" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="typbyval" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="typtype" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="typcategory" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="typispreferred" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="typisdefined" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="typdelim" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="typrelid" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typelem" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typarray" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typinput" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="typoutput" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="typreceive" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="typsend" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="typmodin" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="typmodout" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="typanalyze" type="regproc" decimal="0" jt="1111" mandatory="y" />
			<column name="typalign" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="typstorage" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="typnotnull" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="typbasetype" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typtypmod" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typndims" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typcollation" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="typdefaultbin" type="pg_node_tree" decimal="0" jt="1111" />
			<column name="typdefault" type="text" decimal="0" jt="12" />
			<column name="typacl" type="_aclitem" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_type_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_type_typname_nsp_index" unique="UNIQUE_INDEX" >
				<column name="typname" />
				<column name="typnamespace" />
			</index>
		</table>
		<table name="pg_user_mapping" type="GLOBAL_TEMPORARY" >
			<column name="umuser" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="umserver" type="oid" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="umoptions" type="text[]" decimal="0" jt="2003" />
			<column name="oid" type="varchar" jt="12" spec="functional" />
			<index name="pg_user_mapping_oid_index" unique="UNIQUE_INDEX" >
				<column name="oid" />
			</index>
			<index name="pg_user_mapping_user_server_index" unique="UNIQUE_INDEX" >
				<column name="umuser" />
				<column name="umserver" />
			</index>
		</table>
	</schema>
	<schema name="public" catalogname="ergomercator" >
		<comment><![CDATA[standard public schema]]></comment>
		<table name="AO_187CCC_SIDEBAR_LINK" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_187CCC_SIDEBAR_LINK_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CATEGORY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="CUSTOM_ICON_CLASS" type="varchar" length="255" decimal="0" jt="12" />
			<column name="CUSTOM_TITLE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="DEST_PAGE_ID" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="HARDCODED_URL" type="varchar" length="255" decimal="0" jt="12" />
			<column name="HIDDEN" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="POSITION" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="SPACE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="TYPE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="WEB_ITEM_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_187CCC_SIDEBAR_LINK_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_21D670_WHITELIST_RULES" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_21D670_WHITELIST_RULES_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="ALLOWINBOUND" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="EXPRESSION" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="TYPE" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="AO_21D670_WHITELIST_RULES_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_26DB7F_ENTITIES_TO_ROOMS" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_26DB7F_ENTITIES_TO_ROOMS_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="ENTITY_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="MESSAGE_TYPE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ROOM_ID" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_26DB7F_ENTITIES_TO_ROOMS_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_26db7f_ent831223480" unique="NORMAL" >
				<column name="ROOM_ID" />
			</index>
			<index name="index_ao_26db7f_ent940053222" unique="NORMAL" >
				<column name="ENTITY_KEY" />
			</index>
		</table>
		<table name="AO_26DB7F_ENTITIES_TO_ROOM_CFG" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_26DB7F_ENTITIES_TO_ROOM_CFG_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="ENTITY_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="NOTIFY_CLIENT" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="ROOM_ID" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_26DB7F_ENTITIES_TO_ROOM_CFG_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_26db7f_ent1247500752" unique="NORMAL" >
				<column name="ROOM_ID" />
			</index>
			<index name="index_ao_26db7f_ent1609287474" unique="NORMAL" >
				<column name="ENTITY_KEY" />
			</index>
		</table>
		<table name="AO_38321B_CUSTOM_CONTENT_LINK" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_38321B_CUSTOM_CONTENT_LINK_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CONTENT_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="LINK_LABEL" type="varchar" length="255" decimal="0" jt="12" />
			<column name="LINK_URL" type="varchar" length="255" decimal="0" jt="12" />
			<column name="SEQUENCE" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="AO_38321B_CUSTOM_CONTENT_LINK_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_38321b_cus1828044926" unique="NORMAL" >
				<column name="CONTENT_KEY" />
			</index>
		</table>
		<table name="AO_42E351_HEALTH_CHECK_ENTITY" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_42E351_HEALTH_CHECK_ENTITY_ID_seq"'::regclass)]]></defo>
			</column>
			<index name="AO_42E351_HEALTH_CHECK_ENTITY_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_54C900_CONTENT_BLUEPRINT_AO" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_54C900_CONTENT_BLUEPRINT_AO_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CREATE_RESULT" type="varchar" length="255" decimal="0" jt="12" />
			<column name="HOW_TO_USE_TEMPLATE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="INDEX_DISABLED" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="INDEX_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="INDEX_TITLE_I18N_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="NAME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PLUGIN_CLONE" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="PLUGIN_MODULE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="SPACE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="UUID" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_54C900_CONTENT_BLUEPRINT_AO_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_54C900_C_TEMPLATE_REF" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_54C900_C_TEMPLATE_REF_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CB_INDEX_PARENTID" type="integer" length="10" decimal="0" jt="4" />
			<column name="CB_PARENTID" type="integer" length="10" decimal="0" jt="4" />
			<column name="NAME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PARENT_ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="PLUGIN_CLONE" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="PLUGIN_MODULE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="TEMPLATE_ID" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="UUID" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_54C900_C_TEMPLATE_REF_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_54c900_c_t667820477" unique="NORMAL" >
				<column name="CB_INDEX_PARENTID" />
			</index>
			<index name="index_ao_54c900_c_t757546442" unique="NORMAL" >
				<column name="CB_PARENTID" />
			</index>
			<index name="index_ao_54c900_c_t852152353" unique="NORMAL" >
				<column name="PARENT_ID" />
			</index>
			<fk name="fk_ao_54c900_c_template_ref_cb_index_parentid" to_schema="ergomercator.public" to_table="AO_54C900_CONTENT_BLUEPRINT_AO" >
				<fk_column name="CB_INDEX_PARENTID" pk="ID" />
			</fk>
			<fk name="fk_ao_54c900_c_template_ref_cb_parentid" to_schema="ergomercator.public" to_table="AO_54C900_CONTENT_BLUEPRINT_AO" >
				<fk_column name="CB_PARENTID" pk="ID" />
			</fk>
			<fk name="fk_ao_54c900_c_template_ref_parent_id" to_schema="ergomercator.public" to_table="AO_54C900_C_TEMPLATE_REF" >
				<fk_column name="PARENT_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_54C900_SPACE_BLUEPRINT_AO" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_54C900_SPACE_BLUEPRINT_AO_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CATEGORY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="HOME_PAGE_ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="NAME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PLUGIN_CLONE" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="PLUGIN_MODULE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PROMOTED_BPS" type="text" decimal="0" jt="12" />
			<column name="UUID" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_54C900_SPACE_BLUEPRINT_AO_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_54c900_spa357134289" unique="NORMAL" >
				<column name="HOME_PAGE_ID" />
			</index>
			<fk name="fk_ao_54c900_space_blueprint_ao_home_page_id" to_schema="ergomercator.public" to_table="AO_54C900_C_TEMPLATE_REF" >
				<fk_column name="HOME_PAGE_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_5F3884_FEATURE_DISCOVERY" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_5F3884_FEATURE_DISCOVERY_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="DISCOVERED" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_5F3884_FEATURE_DISCOVERY_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_5FB9D7_AOHIP_CHAT_LINK" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_5FB9D7_AOHIP_CHAT_LINK_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="ADDON_TOKEN_EXPIRY" type="timestamp" decimal="6" jt="93" />
			<column name="API_URL" type="varchar" length="255" decimal="0" jt="12" />
			<column name="CONNECT_DESCRIPTOR" type="text" decimal="0" jt="12" />
			<column name="GROUP_ID" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="GROUP_NAME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="OAUTH_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="SECRET_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="SYSTEM_PASSWORD" type="varchar" length="255" decimal="0" jt="12" />
			<column name="SYSTEM_TOKEN_EXPIRY" type="timestamp" decimal="6" jt="93" />
			<column name="SYSTEM_USER" type="varchar" length="255" decimal="0" jt="12" />
			<column name="SYSTEM_USER_TOKEN" type="varchar" length="255" decimal="0" jt="12" />
			<column name="TOKEN" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_5FB9D7_AOHIP_CHAT_LINK_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_5FB9D7_AOHIP_CHAT_USER" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_5FB9D7_AOHIP_CHAT_USER_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="HIP_CHAT_LINK_ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="HIP_CHAT_USER_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="HIP_CHAT_USER_NAME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="REFRESH_CODE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="USER_SCOPES" type="varchar" length="255" decimal="0" jt="12" />
			<column name="USER_TOKEN" type="varchar" length="255" decimal="0" jt="12" />
			<column name="USER_TOKEN_EXPIRY" type="timestamp" decimal="6" jt="93" />
			<index name="AO_5FB9D7_AOHIP_CHAT_USER_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_5fb9d7_aoh1981563178" unique="NORMAL" >
				<column name="USER_KEY" />
			</index>
			<index name="index_ao_5fb9d7_aoh49772492" unique="NORMAL" >
				<column name="HIP_CHAT_LINK_ID" />
			</index>
			<fk name="fk_ao_5fb9d7_aohip_chat_user_hip_chat_link_id" to_schema="ergomercator.public" to_table="AO_5FB9D7_AOHIP_CHAT_LINK" >
				<fk_column name="HIP_CHAT_LINK_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_6384AB_DISCOVERED" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_6384AB_DISCOVERED_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="DATE" type="timestamp" decimal="6" jt="93" />
			<column name="KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PLUGIN_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_6384AB_DISCOVERED_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_6384AB_FEATURE_METADATA_AO" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_6384AB_FEATURE_METADATA_AO_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CONTEXT" type="varchar" length="255" decimal="0" jt="12" />
			<column name="INSTALLATION_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="KEY" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_6384AB_FEATURE_METADATA_AO_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_7CDE43_EVENT" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_7CDE43_EVENT_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="EVENT_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="NOTIFICATION_ID" type="integer" length="10" decimal="0" jt="4" />
			<index name="AO_7CDE43_EVENT_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_7cde43_eve1433596955" unique="NORMAL" >
				<column name="NOTIFICATION_ID" />
			</index>
			<fk name="fk_ao_7cde43_event_notification_id" to_schema="ergomercator.public" to_table="AO_7CDE43_NOTIFICATION" >
				<fk_column name="NOTIFICATION_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_7CDE43_FILTER_PARAM" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_7CDE43_FILTER_PARAM_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="NOTIFICATION_ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="PARAM_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PARAM_VALUE" type="text" decimal="0" jt="12" />
			<index name="AO_7CDE43_FILTER_PARAM_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_7cde43_fil1140550715" unique="NORMAL" >
				<column name="NOTIFICATION_ID" />
			</index>
			<fk name="fk_ao_7cde43_filter_param_notification_id" to_schema="ergomercator.public" to_table="AO_7CDE43_NOTIFICATION" >
				<fk_column name="NOTIFICATION_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_7CDE43_NOTIFICATION" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_7CDE43_NOTIFICATION_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="NOTIFICATION_SCHEME_ID" type="integer" length="10" decimal="0" jt="4" />
			<index name="AO_7CDE43_NOTIFICATION_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_7cde43_not7362182" unique="NORMAL" >
				<column name="NOTIFICATION_SCHEME_ID" />
			</index>
			<fk name="fk_ao_7cde43_notification_notification_scheme_id" to_schema="ergomercator.public" to_table="AO_7CDE43_NOTIFICATION_SCHEME" >
				<fk_column name="NOTIFICATION_SCHEME_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_7CDE43_NOTIFICATION_SCHEME" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_7CDE43_NOTIFICATION_SCHEME_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="DESCRIPTION" type="text" decimal="0" jt="12" />
			<column name="SCHEME_NAME" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_7CDE43_NOTIFICATION_SCHEME_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_7CDE43_RECIPIENT" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_7CDE43_RECIPIENT_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="INDIVIDUAL" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="NOTIFICATION_ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="PARAM_DISPLAY" type="text" decimal="0" jt="12" />
			<column name="PARAM_VALUE" type="text" decimal="0" jt="12" />
			<column name="SERVER_ID" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="TYPE" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_7CDE43_RECIPIENT_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_7cde43_rec1271577318" unique="NORMAL" >
				<column name="NOTIFICATION_ID" />
			</index>
			<fk name="fk_ao_7cde43_recipient_notification_id" to_schema="ergomercator.public" to_table="AO_7CDE43_NOTIFICATION" >
				<fk_column name="NOTIFICATION_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_7CDE43_SERVER_CONFIG" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_7CDE43_SERVER_CONFIG_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CUSTOM_TEMPLATE_PATH" type="text" decimal="0" jt="12" />
			<column name="DEFAULT_USER_ID_TEMPLATE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ENABLED_FOR_ALL_USERS" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="GROUPS_WITH_ACCESS" type="text" decimal="0" jt="12" />
			<column name="NOTIFICATION_MEDIUM_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="SERVER_NAME" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_7CDE43_SERVER_CONFIG_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_7CDE43_SERVER_PARAM" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_7CDE43_SERVER_PARAM_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="PARAM_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PARAM_VALUE" type="text" decimal="0" jt="12" />
			<column name="SERVER_CONFIG_ID" type="integer" length="10" decimal="0" jt="4" />
			<index name="AO_7CDE43_SERVER_PARAM_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_7cde43_ser828034299" unique="NORMAL" >
				<column name="SERVER_CONFIG_ID" />
			</index>
			<fk name="fk_ao_7cde43_server_param_server_config_id" to_schema="ergomercator.public" to_table="AO_7CDE43_SERVER_CONFIG" >
				<fk_column name="SERVER_CONFIG_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_88263F_HEALTH_CHECK_STATUS" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_88263F_HEALTH_CHECK_STATUS_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="APPLICATION_NAME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="COMPLETE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="DESCRIPTION" type="varchar" length="255" decimal="0" jt="12" />
			<column name="FAILED_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="FAILURE_REASON" type="varchar" length="450" decimal="0" jt="12" />
			<column name="IS_HEALTHY" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="IS_RESOLVED" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="RESOLVED_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="SEVERITY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="STATUS_NAME" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="AO_88263F_HEALTH_CHECK_STATUS_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_88263F_PROPERTIES" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_88263F_PROPERTIES_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="PROPERTY_NAME" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="PROPERTY_VALUE" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="AO_88263F_PROPERTIES_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_88263F_READ_NOTIFICATIONS" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_88263F_READ_NOTIFICATIONS_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="IS_SNOOZED" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="NOTIFICATION_ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="SNOOZE_COUNT" type="integer" length="10" decimal="0" jt="4" />
			<column name="SNOOZE_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="USER_KEY" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="AO_88263F_READ_NOTIFICATIONS_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_88BB94_BATCH_NOTIFICATION" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_88BB94_BATCH_NOTIFICATION_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="BATCHING_COLUMN" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="CONTENT_TYPE" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="NOTIFICATION_KEY" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="PAYLOAD" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="AO_88BB94_BATCH_NOTIFICATION_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_92296B_AORECENTLY_VIEWED" >
			<column name="ID" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[nextval('"AO_92296B_AORECENTLY_VIEWED_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CONTENT_ID" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="CONTENT_TYPE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="LAST_VIEW_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="SPACE_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_92296B_AORECENTLY_VIEWED_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_92296b_aor1216492770" unique="NORMAL" >
				<column name="CONTENT_ID" />
			</index>
			<index name="index_ao_92296b_aor1615591099" unique="NORMAL" >
				<column name="SPACE_KEY" />
			</index>
			<index name="index_ao_92296b_aor205355936" unique="NORMAL" >
				<column name="LAST_VIEW_DATE" />
			</index>
			<index name="index_ao_92296b_aor426054036" unique="NORMAL" >
				<column name="USER_KEY" />
			</index>
			<index name="index_ao_92296b_aor818798913" unique="NORMAL" >
				<column name="CONTENT_TYPE" />
			</index>
		</table>
		<table name="AO_9412A1_AONOTIFICATION" >
			<column name="ID" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[nextval('"AO_9412A1_AONOTIFICATION_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="ACTION" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ACTION_ICON_URL" type="text" decimal="0" jt="12" />
			<column name="APPLICATION" type="varchar" length="255" decimal="0" jt="12" />
			<column name="APPLICATION_LINK_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="CREATED" type="timestamp" decimal="6" jt="93" />
			<column name="DESCRIPTION" type="text" decimal="0" jt="12" />
			<column name="ENTITY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="GLOBAL_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="GROUPING_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ICON_URL" type="text" decimal="0" jt="12" />
			<column name="ITEM_ICON_URL" type="text" decimal="0" jt="12" />
			<column name="ITEM_TITLE" type="text" decimal="0" jt="12" />
			<column name="ITEM_URL" type="text" decimal="0" jt="12" />
			<column name="METADATA" type="text" decimal="0" jt="12" />
			<column name="PINNED" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="READ" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="STATUS" type="varchar" length="255" decimal="0" jt="12" />
			<column name="TITLE" type="text" decimal="0" jt="12" />
			<column name="UPDATED" type="timestamp" decimal="6" jt="93" />
			<column name="URL" type="text" decimal="0" jt="12" />
			<column name="USER" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_9412A1_AONOTIFICATION_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_9412a1_aon1547032463" unique="NORMAL" >
				<column name="CREATED" />
			</index>
			<index name="index_ao_9412a1_aon648423710" unique="NORMAL" >
				<column name="USER" />
			</index>
			<index name="index_ao_9412a1_aon849931648" unique="NORMAL" >
				<column name="GLOBAL_ID" />
			</index>
		</table>
		<table name="AO_9412A1_AOREGISTRATION" >
			<column name="ID" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="DATA" type="text" decimal="0" jt="12" />
			<column name="UPDATED" type="timestamp" decimal="6" jt="93" />
			<index name="AO_9412A1_AOREGISTRATION_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_9412A1_AOTASK" >
			<column name="ID" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[nextval('"AO_9412A1_AOTASK_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="APPLICATION" type="varchar" length="255" decimal="0" jt="12" />
			<column name="APPLICATION_LINK_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="CREATED" type="timestamp" decimal="6" jt="93" />
			<column name="DESCRIPTION" type="text" decimal="0" jt="12" />
			<column name="ENTITY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="GLOBAL_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ITEM_ICON_URL" type="text" decimal="0" jt="12" />
			<column name="ITEM_TITLE" type="text" decimal="0" jt="12" />
			<column name="METADATA" type="text" decimal="0" jt="12" />
			<column name="STATUS" type="varchar" length="255" decimal="0" jt="12" />
			<column name="TITLE" type="text" decimal="0" jt="12" />
			<column name="UPDATED" type="timestamp" decimal="6" jt="93" />
			<column name="URL" type="text" decimal="0" jt="12" />
			<column name="USER" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_9412A1_AOTASK_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_9412a1_aot1465568358" unique="NORMAL" >
				<column name="GLOBAL_ID" />
			</index>
			<index name="index_ao_9412a1_aotask_user" unique="NORMAL" >
				<column name="USER" />
			</index>
		</table>
		<table name="AO_9412A1_AOUSER" >
			<column name="ID" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[nextval('"AO_9412A1_AOUSER_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="CREATED" type="timestamp" decimal="6" jt="93" />
			<column name="LAST_READ_NOTIFICATION_ID" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="TASK_ORDERING" type="text" decimal="0" jt="12" />
			<column name="UPDATED" type="timestamp" decimal="6" jt="93" />
			<column name="USERNAME" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="AO_9412A1_AOUSER_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="u_ao_9412a1_aouser_username" unique="UNIQUE_KEY" >
				<column name="USERNAME" />
			</index>
		</table>
		<table name="AO_9412A1_USER_APP_LINK" >
			<column name="ID" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[nextval('"AO_9412A1_USER_APP_LINK_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="APPLICATION_LINK_ID" type="varchar" length="255" decimal="0" jt="12" />
			<column name="AUTH_VERIFIED" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="CREATED" type="timestamp" decimal="6" jt="93" />
			<column name="UPDATED" type="timestamp" decimal="6" jt="93" />
			<column name="USER_ID" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="AO_9412A1_USER_APP_LINK_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_9412a1_use1222319987" unique="NORMAL" >
				<column name="USER_ID" />
			</index>
			<index name="index_ao_9412a1_use643533071" unique="NORMAL" >
				<column name="APPLICATION_LINK_ID" />
			</index>
			<fk name="fk_ao_9412a1_user_app_link_user_id" to_schema="ergomercator.public" to_table="AO_9412A1_AOUSER" >
				<fk_column name="USER_ID" pk="ID" />
			</fk>
		</table>
		<table name="AO_A0B856_WEB_HOOK_LISTENER_AO" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_A0B856_WEB_HOOK_LISTENER_AO_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="DESCRIPTION" type="text" decimal="0" jt="12" />
			<column name="ENABLED" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="EVENTS" type="text" decimal="0" jt="12" />
			<column name="EXCLUDE_BODY" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="FILTERS" type="text" decimal="0" jt="12" />
			<column name="LAST_UPDATED" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="LAST_UPDATED_USER" type="varchar" length="255" decimal="0" jt="12" />
			<column name="NAME" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="PARAMETERS" type="text" decimal="0" jt="12" />
			<column name="REGISTRATION_METHOD" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="URL" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="AO_A0B856_WEB_HOOK_LISTENER_AO_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
		</table>
		<table name="AO_BAF3AA_AOINLINE_TASK" >
			<column name="GLOBAL_ID" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[nextval('"AO_BAF3AA_AOINLINE_TASK_GLOBAL_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="ASSIGNEE_USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="BODY" type="text" decimal="0" jt="12" />
			<column name="COMPLETE_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="COMPLETE_USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="CONTENT_ID" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="CREATE_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="CREATOR_USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<column name="DUE_DATE" type="timestamp" decimal="6" jt="93" />
			<column name="ID" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="TASK_STATUS" type="varchar" length="255" decimal="0" jt="12" />
			<column name="UPDATE_DATE" type="timestamp" decimal="6" jt="93" />
			<index name="AO_BAF3AA_AOINLINE_TASK_pkey" unique="PRIMARY_KEY" >
				<column name="GLOBAL_ID" />
			</index>
			<index name="index_ao_baf3aa_aoi1066945234" unique="NORMAL" >
				<column name="CONTENT_ID" />
			</index>
			<index name="index_ao_baf3aa_aoi1143751131" unique="NORMAL" >
				<column name="TASK_STATUS" />
			</index>
			<index name="index_ao_baf3aa_aoi1389674752" unique="NORMAL" >
				<column name="CREATE_DATE" />
			</index>
			<index name="index_ao_baf3aa_aoi1395974671" unique="NORMAL" >
				<column name="CREATOR_USER_KEY" />
			</index>
			<index name="index_ao_baf3aa_aoi1978441610" unique="NORMAL" >
				<column name="DUE_DATE" />
			</index>
			<index name="index_ao_baf3aa_aoi866493194" unique="NORMAL" >
				<column name="ASSIGNEE_USER_KEY" />
			</index>
		</table>
		<table name="AO_DC98AE_AOHELP_TIP" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('"AO_DC98AE_AOHELP_TIP_ID_seq"'::regclass)]]></defo>
			</column>
			<column name="DISMISSED_HELP_TIP" type="varchar" length="255" decimal="0" jt="12" />
			<column name="USER_KEY" type="varchar" length="255" decimal="0" jt="12" />
			<index name="AO_DC98AE_AOHELP_TIP_pkey" unique="PRIMARY_KEY" >
				<column name="ID" />
			</index>
			<index name="index_ao_dc98ae_aoh1533992358" unique="NORMAL" >
				<column name="USER_KEY" />
			</index>
			<index name="index_ao_dc98ae_aoh411805038" unique="NORMAL" >
				<column name="DISMISSED_HELP_TIP" />
			</index>
		</table>
		<table name="CIRCOSCRIZIONI" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="MUNICIPIO_ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="CIRCOSCRIZIONE" type="varchar" length="255" decimal="0" jt="12" />
		</table>
		<table name="MUNICIPI" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="MUNICIPIO" type="varchar" length="255" decimal="0" jt="12" />
		</table>
		<table name="PRESTAZ_2002" >
			<column name="COD_PRESTAZIONE" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="DES_PRESTAZIONE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="TARIFFA_EURO" type="varchar" length="20" decimal="0" jt="12" />
			<column name="STRAORDINARIA" type="char" length="1" decimal="0" jt="1" />
			<index name="prestaz_2002_pk" unique="PRIMARY_KEY" >
				<column name="COD_PRESTAZIONE" />
			</index>
		</table>
		<table name="STRUTTURE_PRESTAZIONI" >
			<column name="ID_OSPEDALE" type="integer" length="10" decimal="0" jt="4" />
			<column name="BRANCA" type="float8" length="17" decimal="17" jt="6" />
			<column name="BRANCA_NOME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="DISCIPLINA" type="float8" length="17" decimal="17" jt="6" />
			<column name="DISCIPLINA_NOME" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PRESTAZIONE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="NOTE" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ESAME" type="varchar" length="255" decimal="0" jt="12" />
			<index name="discipline_prestazioni_uk" unique="UNIQUE_KEY" >
				<column name="ID_OSPEDALE" />
				<column name="DISCIPLINA" />
				<column name="PRESTAZIONE" />
				<column name="NOTE" />
			</index>
			<index name="strutture_prestazioni_uk" unique="NORMAL" >
				<column name="ID_OSPEDALE" />
				<column name="BRANCA" />
				<column name="BRANCA_NOME" />
				<column name="DISCIPLINA" />
				<column name="DISCIPLINA_NOME" />
				<column name="PRESTAZIONE" />
			</index>
		</table>
		<table name="asili" >
			<column name="code" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="an_group" type="varchar" length="255" decimal="0" jt="12" />
			<column name="category" type="varchar" length="255" decimal="0" jt="12" />
			<column name="municipio" type="varchar" length="255" decimal="0" jt="12" />
			<column name="circoscrizione" type="varchar" length="255" decimal="0" jt="12" />
			<column name="istituto" type="varchar" length="255" decimal="0" jt="12" />
			<column name="indirizzo" type="varchar" length="255" decimal="0" jt="12" />
			<column name="telephone" type="varchar" length="255" decimal="0" jt="12" />
			<column name="email" type="varchar" length="255" decimal="0" jt="12" />
			<column name="web" type="varchar" length="255" decimal="0" jt="12" />
			<column name="latitude" type="real" length="8" decimal="8" jt="7" />
			<column name="longitude" type="real" length="8" decimal="8" jt="7" />
			<column name="distance" type="real" length="8" decimal="8" jt="7" />
			<index name="asili_pk" unique="PRIMARY_KEY" >
				<column name="code" />
			</index>
		</table>
		<table name="attachmentdata" >
			<column name="attachmentdataid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="hibernateversion" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="attversion" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="data" type="bytea" decimal="0" jt="-2" />
			<column name="attachmentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="attachmentdata_pkey" unique="PRIMARY_KEY" >
				<column name="attachmentdataid" />
			</index>
			<index name="attachmentdata_attachmentid_key" unique="UNIQUE_KEY" >
				<column name="attachmentid" />
			</index>
			<index name="attch_idver_idx" unique="NORMAL" >
				<column name="attversion" />
				<column name="attachmentid" />
			</index>
			<fk name="fk9dc3e34d34a4917e" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="attachmentid" pk="contentid" />
			</fk>
		</table>
		<table name="audit_affected_object" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="type" type="varchar" length="255" decimal="0" jt="12" />
			<column name="auditrecordid" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="audit_affected_object_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="a_objects_parent_index" unique="NORMAL" >
				<column name="auditrecordid" />
			</index>
			<fk name="fk_affected_object_record" to_schema="ergomercator.public" to_table="auditrecord" >
				<fk_column name="auditrecordid" pk="auditrecordid" />
			</fk>
		</table>
		<table name="audit_changed_value" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="oldvalue" type="varchar" length="255" decimal="0" jt="12" />
			<column name="newvalue" type="varchar" length="255" decimal="0" jt="12" />
			<column name="auditrecordid" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="audit_changed_value_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="a_values_parent_index" unique="NORMAL" >
				<column name="auditrecordid" />
			</index>
			<fk name="fk_changed_value_record" to_schema="ergomercator.public" to_table="auditrecord" >
				<fk_column name="auditrecordid" pk="auditrecordid" />
			</fk>
		</table>
		<table name="auditrecord" >
			<column name="auditrecordid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="summary" type="varchar" length="255" decimal="0" jt="12" />
			<column name="description" type="varchar" length="255" decimal="0" jt="12" />
			<column name="category" type="varchar" length="255" decimal="0" jt="12" />
			<column name="address" type="varchar" length="255" decimal="0" jt="12" />
			<column name="sysamdin" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="authorname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="authorfullname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="authorkey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="objectname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="objecttype" type="varchar" length="255" decimal="0" jt="12" />
			<column name="searchstring" type="varchar" length="4000" decimal="0" jt="12" />
			<column name="creationdate" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="auditrecord_pkey" unique="PRIMARY_KEY" >
				<column name="auditrecordid" />
			</index>
			<index name="a_author_key_idx" unique="NORMAL" >
				<column name="authorkey" />
			</index>
			<index name="a_category_idx" unique="NORMAL" >
				<column name="category" />
			</index>
			<index name="a_date_idx" unique="NORMAL" >
				<column name="creationdate" />
			</index>
		</table>
		<table name="bandana" >
			<column name="bandanaid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="bandanacontext" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="bandanakey" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="bandanavalue" type="text" decimal="0" jt="12" />
			<index name="bandana_pkey" unique="PRIMARY_KEY" >
				<column name="bandanaid" />
			</index>
			<index name="band_cont_key_idx" unique="NORMAL" >
				<column name="bandanacontext" />
				<column name="bandanakey" />
			</index>
			<index name="band_context_idx" unique="NORMAL" >
				<column name="bandanacontext" />
			</index>
		</table>
		<table name="bodycontent" >
			<column name="bodycontentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="body" type="text" decimal="0" jt="12" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="bodytypeid" type="smallint" length="5" decimal="0" jt="5" />
			<index name="bodycontent_pkey" unique="PRIMARY_KEY" >
				<column name="bodycontentid" />
			</index>
			<index name="body_content_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<fk name="fka898d4778dd41734" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
		</table>
		<table name="character_entity" >
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="ch" type="char" length="1" decimal="0" jt="1" />
			<index name="character_entity_pkey" unique="PRIMARY_KEY" >
				<column name="name" />
			</index>
			<index name="character_entity_ch_key" unique="UNIQUE_KEY" >
				<column name="ch" />
			</index>
		</table>
		<table name="clustersafety" >
			<column name="clustersafetyid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="safetynumber" type="integer" length="10" decimal="0" jt="4" />
			<index name="clustersafety_pkey" unique="PRIMARY_KEY" >
				<column name="clustersafetyid" />
			</index>
		</table>
		<table name="confancestors" >
			<column name="descendentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="ancestorposition" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ancestorid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="confancestors_pkey" unique="PRIMARY_KEY" >
				<column name="descendentid" />
				<column name="ancestorposition" />
			</index>
			<index name="c_ancestorid_idx" unique="NORMAL" >
				<column name="ancestorid" />
			</index>
			<fk name="fk9494e23c37e35a2e" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="ancestorid" pk="contentid" />
			</fk>
			<fk name="fk9494e23cc45e94dc" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="descendentid" pk="contentid" />
			</fk>
		</table>
		<table name="confversion" >
			<column name="confversionid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="buildnumber" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="installdate" type="timestamp" decimal="6" jt="93" />
			<column name="versiontag" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="confversion_pkey" unique="PRIMARY_KEY" >
				<column name="confversionid" />
			</index>
			<index name="confversion_buildnumber_key" unique="UNIQUE_KEY" >
				<column name="buildnumber" />
			</index>
		</table>
		<table name="content" >
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="contenttype" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="hibernateversion" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="title" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lowertitle" type="varchar" length="255" decimal="0" jt="12" />
			<column name="version" type="integer" length="10" decimal="0" jt="4" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<column name="versioncomment" type="text" decimal="0" jt="12" />
			<column name="prevver" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="content_status" type="varchar" length="255" decimal="0" jt="12" />
			<column name="pageid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="spaceid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="child_position" type="integer" length="10" decimal="0" jt="4" />
			<column name="parentid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="messageid" type="varchar" length="255" decimal="0" jt="12" />
			<column name="pluginkey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="pluginver" type="varchar" length="255" decimal="0" jt="12" />
			<column name="parentccid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="draftpageid" type="varchar" length="255" decimal="0" jt="12" />
			<column name="draftspacekey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="drafttype" type="varchar" length="255" decimal="0" jt="12" />
			<column name="draftpageversion" type="integer" length="10" decimal="0" jt="4" />
			<column name="parentcommentid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" />
			<index name="content_pkey" unique="PRIMARY_KEY" >
				<column name="contentid" />
			</index>
			<index name="c_contenttype_idx" unique="NORMAL" >
				<column name="contenttype" />
			</index>
			<index name="c_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="c_draftpageid_idx" unique="NORMAL" >
				<column name="draftpageid" />
			</index>
			<index name="c_drafttype_idx" unique="NORMAL" >
				<column name="drafttype" />
			</index>
			<index name="c_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="c_ltitle_idx" unique="NORMAL" >
				<column name="lowertitle" />
			</index>
			<index name="c_messageid_idx" unique="NORMAL" >
				<column name="messageid" />
			</index>
			<index name="c_pageid_idx" unique="NORMAL" >
				<column name="pageid" />
			</index>
			<index name="c_parentccid_idx" unique="NORMAL" >
				<column name="parentccid" />
			</index>
			<index name="c_parentcommid_idx" unique="NORMAL" >
				<column name="parentcommentid" />
			</index>
			<index name="c_parentid_idx" unique="NORMAL" >
				<column name="parentid" />
			</index>
			<index name="c_prevver_idx" unique="NORMAL" >
				<column name="prevver" />
			</index>
			<index name="c_si_ct_pv_cs_cd_idx" unique="NORMAL" >
				<column name="spaceid" />
				<column name="contenttype" />
				<column name="prevver" />
				<column name="content_status" />
				<column name="creationdate" />
			</index>
			<index name="c_spaceid_idx" unique="NORMAL" >
				<column name="spaceid" />
			</index>
			<index name="c_status_idx" unique="NORMAL" >
				<column name="content_status" />
			</index>
			<index name="c_title_idx" unique="NORMAL" >
				<column name="title" />
			</index>
			<index name="c_username_idx" unique="NORMAL" >
				<column name="username" />
			</index>
			<fk name="fk6382c05917d4a070" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="prevver" pk="contentid" />
			</fk>
			<fk name="fk6382c05974b18345" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="parentid" pk="contentid" />
			</fk>
			<fk name="fk6382c0598c38fbea" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="pageid" pk="contentid" />
			</fk>
			<fk name="fk6382c059b97e9230" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="parentcommentid" pk="contentid" />
			</fk>
			<fk name="fk6382c059e5b1125" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="parentccid" pk="contentid" />
			</fk>
			<fk name="fk6382c059b2dc6081" to_schema="ergomercator.public" to_table="spaces" >
				<fk_column name="spaceid" pk="spaceid" />
			</fk>
			<fk name="fk_content_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_content_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
			<fk name="fk_content_username" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="username" pk="user_key" />
			</fk>
		</table>
		<table name="content_label" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="labelid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="pagetemplateid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="owner" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<column name="labelableid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="labelabletype" type="varchar" length="255" decimal="0" jt="12" />
			<index name="content_label_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cl_contentid_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<index name="cl_labelable_idx" unique="NORMAL" >
				<column name="labelableid" />
				<column name="labelabletype" />
			</index>
			<index name="cl_labelid_idx" unique="NORMAL" >
				<column name="labelid" />
			</index>
			<index name="cl_lastmoddate_idx" unique="NORMAL" >
				<column name="lastmoddate" />
			</index>
			<index name="cl_owner_idx" unique="NORMAL" >
				<column name="owner" />
			</index>
			<index name="cl_pagetemplateid_idx" unique="NORMAL" >
				<column name="pagetemplateid" />
			</index>
			<fk name="fkf0e7436e8dd41734" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
			<fk name="fkf0e7436e27072aef" to_schema="ergomercator.public" to_table="label" >
				<fk_column name="labelid" pk="labelid" />
			</fk>
			<fk name="fkf0e7436ed32042e4" to_schema="ergomercator.public" to_table="pagetemplates" >
				<fk_column name="pagetemplateid" pk="templateid" />
			</fk>
			<fk name="fk_content_label_owner" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="owner" pk="user_key" />
			</fk>
		</table>
		<table name="content_perm" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="cp_type" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" />
			<column name="groupname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cps_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="content_perm_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cp_unique_group" unique="UNIQUE_KEY" >
				<column name="cps_id" />
				<column name="cp_type" />
				<column name="groupname" />
			</index>
			<index name="cp_unique_user" unique="UNIQUE_KEY" >
				<column name="cps_id" />
				<column name="cp_type" />
				<column name="username" />
			</index>
			<index name="cp_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="cp_gn_idx" unique="NORMAL" >
				<column name="groupname" />
			</index>
			<index name="cp_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="cp_os_idx" unique="NORMAL" >
				<column name="cps_id" />
			</index>
			<index name="cp_un_idx" unique="NORMAL" >
				<column name="username" />
			</index>
			<fk name="fkbd74b31676e33274" to_schema="ergomercator.public" to_table="content_perm_set" >
				<fk_column name="cps_id" pk="id" />
			</fk>
			<fk name="fk_content_perm_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_content_perm_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
			<fk name="fk_content_perm_username" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="username" pk="user_key" />
			</fk>
		</table>
		<table name="content_perm_set" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="cont_perm_type" type="varchar" length="10" decimal="0" jt="12" mandatory="y" />
			<column name="content_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="content_perm_set_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cps_unique_type" unique="UNIQUE_KEY" >
				<column name="content_id" />
				<column name="cont_perm_type" />
			</index>
			<index name="cps_content_idx" unique="NORMAL" >
				<column name="content_id" />
			</index>
			<index name="cps_permtype_idx" unique="NORMAL" >
				<column name="cont_perm_type" />
			</index>
			<fk name="fkbf45a7992caf22c1" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="content_id" pk="contentid" />
			</fk>
		</table>
		<table name="content_relation" >
			<column name="relationid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="targetcontentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sourcecontentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="targettype" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="sourcetype" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="relationname" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="content_relation_pkey" unique="PRIMARY_KEY" >
				<column name="relationid" />
			</index>
			<index name="c2c_relation_unique" unique="UNIQUE_KEY" >
				<column name="targetcontentid" />
				<column name="sourcecontentid" />
				<column name="relationname" />
			</index>
			<index name="r_c2c_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="r_c2c_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="relation_c2c_cdate_idx" unique="NORMAL" >
				<column name="creationdate" />
			</index>
			<index name="relation_c2c_relationname_idx" unique="NORMAL" >
				<column name="relationname" />
			</index>
			<index name="relation_c2c_sourcecontent_idx" unique="NORMAL" >
				<column name="sourcecontentid" />
			</index>
			<index name="relation_c2c_sourcetype_idx" unique="NORMAL" >
				<column name="sourcetype" />
			</index>
			<index name="relation_c2c_targetcontent_idx" unique="NORMAL" >
				<column name="targetcontentid" />
			</index>
			<index name="relation_c2c_targettype_idx" unique="NORMAL" >
				<column name="targettype" />
			</index>
			<fk name="fk841caf22351d64c3" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="targetcontentid" pk="contentid" />
			</fk>
			<fk name="fk841caf22db772979" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="sourcecontentid" pk="contentid" />
			</fk>
			<fk name="fk_c2crelation_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_c2crelation_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="contentproperties" >
			<column name="propertyid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="propertyname" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="stringval" type="varchar" length="255" decimal="0" jt="12" />
			<column name="longval" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="dateval" type="timestamp" decimal="6" jt="93" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="contentproperties_pkey" unique="PRIMARY_KEY" >
				<column name="propertyid" />
			</index>
			<index name="c_contentproperties_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<index name="content_prop_date_idx" unique="NORMAL" >
				<column name="dateval" />
			</index>
			<index name="content_prop_long_idx" unique="NORMAL" >
				<column name="longval" />
			</index>
			<index name="content_prop_name_idx" unique="NORMAL" >
				<column name="propertyname" />
			</index>
			<index name="content_prop_str_idx" unique="NORMAL" >
				<column name="stringval" />
			</index>
			<fk name="fk984c5e4c8dd41734" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
		</table>
		<table name="costipredefiniti" >
			<column name="codattivita" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="numerorigacosto" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="codvoce" type="varchar" length="13" decimal="0" jt="12" />
			<column name="desvoce" type="varchar" length="40" decimal="0" jt="12" />
			<column name="tipocalcolo" type="varchar" length="2" decimal="0" jt="12" />
			<column name="um" type="varchar" length="3" decimal="0" jt="12" />
			<column name="importo" type="float8" length="17" decimal="17" jt="6" />
			<column name="importobase" type="float8" length="17" decimal="17" jt="6" />
			<column name="quantita" type="float8" length="17" decimal="17" jt="6" />
			<column name="importobasepresunto" type="float8" length="17" decimal="17" jt="6" />
			<column name="quantitapresunta" type="varchar" length="50" decimal="0" jt="12" />
			<column name="codfornitore" type="varchar" length="10" decimal="0" jt="12" />
			<column name="ragsocialefornitore" type="varchar" length="250" decimal="0" jt="12" />
			<column name="numprotocollo" type="varchar" length="15" decimal="0" jt="12" />
			<column name="flginprefattura" type="varchar" length="1" decimal="0" jt="12" />
			<column name="flgprefattura" type="varchar" length="1" decimal="0" jt="12" />
			<column name="numerol" type="float8" length="17" decimal="17" jt="6" />
			<column name="datadoc" type="timestamp" decimal="6" jt="93" />
			<column name="nreg" type="integer" length="10" decimal="0" jt="4" />
			<column name="flginviato" type="varchar" length="1" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
		</table>
		<table name="crgrid_test" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('crgrid_test_id_seq'::regclass)]]></defo>
			</column>
			<column name="name" type="varchar" length="10" decimal="0" jt="12" />
			<column name="country" type="varchar" length="30" decimal="0" jt="12" />
			<column name="city" type="varchar" length="30" decimal="0" jt="12" />
			<column name="street" type="varchar" length="30" decimal="0" jt="12" />
			<column name="birthdate" type="date" length="13" decimal="0" jt="91" />
			<column name="job" type="varchar" length="9" decimal="0" jt="12" />
			<column name="hiredate" type="date" length="13" decimal="0" jt="91" />
			<column name="sal" type="numeric" length="7" decimal="2" jt="2" />
			<column name="remarks" type="text" decimal="0" jt="12" />
			<index name="crgrid_test_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="cwd_app_dir_group_mapping" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="app_dir_mapping_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="application_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="group_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="cwd_app_dir_group_mapping_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_app_dir_group_app" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<index name="idx_app_dir_group_group_dir" unique="NORMAL" >
				<column name="directory_id" />
				<column name="group_name" />
			</index>
			<index name="idx_app_dir_group_mapping" unique="NORMAL" >
				<column name="app_dir_mapping_id" />
			</index>
			<fk name="fk_app_dir_group_mapping" to_schema="ergomercator.public" to_table="cwd_app_dir_mapping" >
				<fk_column name="app_dir_mapping_id" pk="id" />
			</fk>
			<fk name="fk_app_dir_group_app" to_schema="ergomercator.public" to_table="cwd_application" >
				<fk_column name="application_id" pk="id" />
			</fk>
			<fk name="fk_app_dir_group_dir" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_app_dir_mapping" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="application_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="allow_all" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="list_index" type="integer" length="10" decimal="0" jt="4" />
			<index name="cwd_app_dir_mapping_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_app_dir_app" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<index name="idx_app_dir_dir" unique="NORMAL" >
				<column name="directory_id" />
			</index>
			<fk name="fk52050e2fb347aa6a" to_schema="ergomercator.public" to_table="cwd_application" >
				<fk_column name="application_id" pk="id" />
			</fk>
			<fk name="fk_app_dir_dir" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_app_dir_operation" >
			<column name="app_dir_mapping_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="operation_type" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<index name="cwd_app_dir_operation_pkey" unique="PRIMARY_KEY" >
				<column name="app_dir_mapping_id" />
				<column name="operation_type" />
			</index>
			<fk name="fk_app_dir_mapping" to_schema="ergomercator.public" to_table="cwd_app_dir_mapping" >
				<fk_column name="app_dir_mapping_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_application" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="application_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lower_application_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="created_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="updated_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="active" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="description" type="varchar" length="255" decimal="0" jt="12" />
			<column name="application_type" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<column name="credential" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="cwd_application_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cwd_application_lower_application_name_key" unique="UNIQUE_KEY" >
				<column name="lower_application_name" />
			</index>
			<index name="idx_app_active" unique="NORMAL" >
				<column name="active" />
			</index>
			<index name="idx_app_type" unique="NORMAL" >
				<column name="application_type" />
			</index>
		</table>
		<table name="cwd_application_address" >
			<column name="application_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="remote_address" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="cwd_application_address_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="remote_address" />
			</index>
			<fk name="fk_application_address" to_schema="ergomercator.public" to_table="cwd_application" >
				<fk_column name="application_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_application_attribute" >
			<column name="application_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="attribute_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="attribute_value" type="varchar" length="4000" decimal="0" jt="12" />
			<index name="cwd_application_attribute_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="attribute_name" />
			</index>
			<fk name="fk_application_attribute" to_schema="ergomercator.public" to_table="cwd_application" >
				<fk_column name="application_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_directory" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="directory_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lower_directory_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="created_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="updated_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="active" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="description" type="varchar" length="255" decimal="0" jt="12" />
			<column name="impl_class" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lower_impl_class" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="directory_type" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<index name="cwd_directory_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cwd_directory_lower_directory_name_key" unique="UNIQUE_KEY" >
				<column name="lower_directory_name" />
			</index>
			<index name="idx_dir_active" unique="NORMAL" >
				<column name="active" />
			</index>
			<index name="idx_dir_l_impl_class" unique="NORMAL" >
				<column name="lower_impl_class" />
			</index>
			<index name="idx_dir_type" unique="NORMAL" >
				<column name="directory_type" />
			</index>
		</table>
		<table name="cwd_directory_attribute" >
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="attribute_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="attribute_value" type="varchar" length="4000" decimal="0" jt="12" />
			<index name="cwd_directory_attribute_pkey" unique="PRIMARY_KEY" >
				<column name="directory_id" />
				<column name="attribute_name" />
			</index>
			<fk name="fk_directory_attribute" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_directory_operation" >
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="operation_type" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<index name="cwd_directory_operation_pkey" unique="PRIMARY_KEY" >
				<column name="directory_id" />
				<column name="operation_type" />
			</index>
			<fk name="fk_directory_operation" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_group" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="group_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lower_group_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="active" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="local" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="created_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="updated_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="description" type="varchar" length="255" decimal="0" jt="12" />
			<column name="group_type" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="cwd_group_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cwd_group_name_dir_id" unique="UNIQUE_KEY" >
				<column name="lower_group_name" />
				<column name="directory_id" />
			</index>
			<index name="idx_group_active" unique="NORMAL" >
				<column name="active" />
				<column name="directory_id" />
			</index>
			<index name="idx_group_dir_id" unique="NORMAL" >
				<column name="directory_id" />
			</index>
			<fk name="fk_directory_id" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_group_attribute" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="group_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="attribute_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="attribute_value" type="varchar" length="255" decimal="0" jt="12" />
			<column name="attribute_lower_value" type="varchar" length="255" decimal="0" jt="12" />
			<index name="cwd_group_attribute_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cwd_unique_grp_attr" unique="UNIQUE_KEY" >
				<column name="directory_id" />
				<column name="group_id" />
				<column name="attribute_name" />
				<column name="attribute_lower_value" />
			</index>
			<index name="idx_group_attr_dir_name_lval" unique="NORMAL" >
				<column name="directory_id" />
				<column name="attribute_name" />
				<column name="attribute_lower_value" />
			</index>
			<index name="idx_group_attr_group_id" unique="NORMAL" >
				<column name="group_id" />
			</index>
			<fk name="fk_group_attr_dir_id" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
			<fk name="fk_group_attr_id_group_id" to_schema="ergomercator.public" to_table="cwd_group" >
				<fk_column name="group_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_membership" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="parent_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="child_group_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="child_user_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="cwd_membership_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cwd_unique_group_membership" unique="UNIQUE_KEY" >
				<column name="parent_id" />
				<column name="child_group_id" />
			</index>
			<index name="cwd_unique_user_membership" unique="UNIQUE_KEY" >
				<column name="parent_id" />
				<column name="child_user_id" />
			</index>
			<index name="idx_mem_dir_child" unique="NORMAL" >
				<column name="child_group_id" />
				<column name="child_user_id" />
			</index>
			<index name="idx_mem_dir_child_user" unique="NORMAL" >
				<column name="child_user_id" />
			</index>
			<index name="idx_mem_dir_parent" unique="NORMAL" >
				<column name="parent_id" />
			</index>
			<index name="idx_mem_dir_parent_child" unique="NORMAL" >
				<column name="parent_id" />
				<column name="child_group_id" />
				<column name="child_user_id" />
			</index>
			<fk name="fk_child_grp" to_schema="ergomercator.public" to_table="cwd_group" >
				<fk_column name="child_group_id" pk="id" />
			</fk>
			<fk name="fk_parent_grp" to_schema="ergomercator.public" to_table="cwd_group" >
				<fk_column name="parent_id" pk="id" />
			</fk>
			<fk name="fk_child_user" to_schema="ergomercator.public" to_table="cwd_user" >
				<fk_column name="child_user_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_user" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="user_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lower_user_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="active" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="created_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="updated_date" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="first_name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lower_first_name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="last_name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lower_last_name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="display_name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lower_display_name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="email_address" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lower_email_address" type="varchar" length="255" decimal="0" jt="12" />
			<column name="external_id" type="varchar" length="255" decimal="0" jt="12" />
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="credential" type="varchar" length="255" decimal="0" jt="12" />
			<index name="cwd_user_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cwd_user_name_dir_id" unique="UNIQUE_KEY" >
				<column name="lower_user_name" />
				<column name="directory_id" />
			</index>
			<index name="idx_user_active" unique="NORMAL" >
				<column name="active" />
				<column name="directory_id" />
			</index>
			<index name="idx_user_external_id" unique="NORMAL" >
				<column name="external_id" />
			</index>
			<index name="idx_user_lower_display_name" unique="NORMAL" >
				<column name="lower_display_name" />
				<column name="directory_id" />
			</index>
			<index name="idx_user_lower_email_address" unique="NORMAL" >
				<column name="lower_email_address" />
				<column name="directory_id" />
			</index>
			<index name="idx_user_lower_first_name" unique="NORMAL" >
				<column name="lower_first_name" />
				<column name="directory_id" />
			</index>
			<index name="idx_user_lower_last_name" unique="NORMAL" >
				<column name="lower_last_name" />
				<column name="directory_id" />
			</index>
			<index name="idx_user_name_dir_id" unique="NORMAL" >
				<column name="directory_id" />
			</index>
			<fk name="fk_user_dir_id" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_user_attribute" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="user_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="directory_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="attribute_name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="attribute_value" type="varchar" length="255" decimal="0" jt="12" />
			<column name="attribute_lower_value" type="varchar" length="255" decimal="0" jt="12" />
			<index name="cwd_user_attribute_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="cwd_unique_usr_attr" unique="UNIQUE_KEY" >
				<column name="directory_id" />
				<column name="user_id" />
				<column name="attribute_name" />
				<column name="attribute_lower_value" />
			</index>
			<index name="idx_user_attr_dir_name_lval" unique="NORMAL" >
				<column name="directory_id" />
				<column name="attribute_name" />
				<column name="attribute_lower_value" />
			</index>
			<index name="idx_user_attr_user_id" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<fk name="fk_user_attr_dir_id" to_schema="ergomercator.public" to_table="cwd_directory" >
				<fk_column name="directory_id" pk="id" />
			</fk>
			<fk name="fk_user_attribute_id_user_id" to_schema="ergomercator.public" to_table="cwd_user" >
				<fk_column name="user_id" pk="id" />
			</fk>
		</table>
		<table name="cwd_user_credential_record" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="user_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="password_hash" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="list_index" type="integer" length="10" decimal="0" jt="4" />
			<index name="cwd_user_credential_record_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_user_cred_record_user_id" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<fk name="fk76f874f73aee0f" to_schema="ergomercator.public" to_table="cwd_user" >
				<fk_column name="user_id" pk="id" />
			</fk>
		</table>
		<table name="decorator" >
			<column name="decoratorid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="spacekey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="decoratorname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="body" type="text" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="decorator_pkey" unique="PRIMARY_KEY" >
				<column name="decoratorid" />
			</index>
			<index name="dec_key_idx" unique="NORMAL" >
				<column name="spacekey" />
			</index>
			<index name="dec_name_idx" unique="NORMAL" >
				<column name="decoratorname" />
			</index>
		</table>
		<table name="dept" >
			<column name="deptno" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('dept_deptno_seq'::regclass)]]></defo>
			</column>
			<column name="dname" type="varchar" length="14" decimal="0" jt="12" />
			<column name="loc" type="varchar" length="13" decimal="0" jt="12" />
			<index name="dept_pkey" unique="PRIMARY_KEY" >
				<column name="deptno" />
			</index>
		</table>
		<table name="emp" >
			<column name="empno" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('emp_empno_seq'::regclass)]]></defo>
			</column>
			<column name="ename" type="varchar" length="10" decimal="0" jt="12" />
			<column name="job" type="varchar" length="9" decimal="0" jt="12" />
			<column name="mgr" type="integer" length="10" decimal="0" jt="4" />
			<column name="hiredate" type="timestamp" decimal="6" jt="93" />
			<column name="sal" type="real" length="8" decimal="8" jt="7" />
			<column name="comm" type="real" length="8" decimal="8" jt="7" />
			<column name="deptno" type="integer" length="10" decimal="0" jt="4" />
			<index name="emp_pkey" unique="PRIMARY_KEY" >
				<column name="empno" />
			</index>
			<fk name="emp_deptno_fkey" to_schema="ergomercator.public" to_table="dept" >
				<fk_column name="deptno" pk="deptno" />
			</fk>
		</table>
		<table name="external_entities" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="type" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="external_entities_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="ext_ent_name" unique="NORMAL" >
				<column name="name" />
			</index>
		</table>
		<table name="external_members" >
			<column name="groupid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="extentityid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="external_members_pkey" unique="PRIMARY_KEY" >
				<column name="groupid" />
				<column name="extentityid" />
			</index>
			<index name="c_extentityid_idx" unique="NORMAL" >
				<column name="extentityid" />
			</index>
			<fk name="fkd8c8d8a5f25e5d5f" to_schema="ergomercator.public" to_table="external_entities" >
				<fk_column name="extentityid" pk="id" />
			</fk>
			<fk name="fkd8c8d8a5117d5fda" to_schema="ergomercator.public" to_table="groups" >
				<fk_column name="groupid" pk="id" />
			</fk>
		</table>
		<table name="extrnlnks" >
			<column name="linkid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="contenttype" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="viewcount" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="url" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lowerurl" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="extrnlnks_pkey" unique="PRIMARY_KEY" >
				<column name="linkid" />
			</index>
			<index name="el_contentid_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<index name="el_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="el_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<fk name="fk97c10fe78dd41734" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
			<fk name="fk_extrnlnks_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_extrnlnks_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="follow_connections" >
			<column name="connectionid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="follower" type="varchar" length="255" decimal="0" jt="12" />
			<column name="followee" type="varchar" length="255" decimal="0" jt="12" />
			<index name="follow_connections_pkey" unique="PRIMARY_KEY" >
				<column name="connectionid" />
			</index>
			<index name="cn_followee_idx" unique="NORMAL" >
				<column name="followee" />
			</index>
			<index name="cn_follower_idx" unique="NORMAL" >
				<column name="follower" />
			</index>
			<fk name="fk_follow_connections_followee" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="followee" pk="user_key" />
			</fk>
			<fk name="fk_follow_connections_follower" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="follower" pk="user_key" />
			</fk>
		</table>
		<table name="ft_clubs_backup" >
			<column name="club_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="Foundation_date" type="date" length="13" decimal="0" jt="91" />
			<column name="president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="stadium_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="vice_president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="team_manager" type="varchar" length="128" decimal="0" jt="12" />
			<column name="athletic_manager" type="varchar" length="128" decimal="0" jt="12" />
			<column name="colors" type="varchar" length="128" decimal="0" jt="12" />
			<column name="website" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="club_image" type="bytea" decimal="0" jt="-2" />
		</table>
		<table name="ft_teams_championship_not_match" >
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" />
			<column name="penalty" type="smallint" length="5" decimal="0" jt="5" />
			<column name="team_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="remote_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ftmc_jguid" type="varchar" length="40" decimal="0" jt="12" />
			<column name="ftmc_deleted" type="boolean" length="1" decimal="0" jt="-7" />
		</table>
		<table name="groups" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="groupname" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="groups_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="groups_groupname_key" unique="UNIQUE_KEY" >
				<column name="groupname" />
			</index>
		</table>
		<table name="hazmat" >
			<column name="ID" type="integer" length="10" decimal="0" jt="4" />
			<column name="symbols" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Class" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Code" type="varchar" length="255" decimal="0" jt="12" />
			<column name="PG" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Label_Codes" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cpecial_provisions" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Exceptions" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Non-bulk" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Bulk" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Passenger" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Cargo_Aircraft" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Other" type="varchar" length="255" decimal="0" jt="12" />
			<column name="c1" type="varchar" length="255" decimal="0" jt="12" />
			<column name="c2" type="varchar" length="255" decimal="0" jt="12" />
			<column name="c3" type="varchar" length="255" decimal="0" jt="12" />
		</table>
		<table name="hibernate_unique_key" >
			<column name="next_hi" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="imagedetails" >
			<column name="attachmentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="height" type="integer" length="10" decimal="0" jt="4" />
			<column name="width" type="integer" length="10" decimal="0" jt="4" />
			<column name="mimetype" type="varchar" length="30" decimal="0" jt="12" />
			<index name="imagedetails_pkey" unique="PRIMARY_KEY" >
				<column name="attachmentid" />
			</index>
			<fk name="fka768048734a4917e" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="attachmentid" pk="contentid" />
			</fk>
		</table>
		<table name="indexqueueentries" >
			<column name="entryid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="type" type="integer" length="10" decimal="0" jt="4" />
			<column name="handle" type="varchar" length="255" decimal="0" jt="12" />
			<index name="indexqueueentries_pkey" unique="PRIMARY_KEY" >
				<column name="entryid" />
			</index>
		</table>
		<table name="items_archived" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="description" type="varchar" decimal="0" jt="12" />
			<column name="url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="available" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="swapped" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="likes" type="smallint" length="5" decimal="0" jt="5" />
		</table>
		<table name="items_likes_archived" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
		</table>
		<table name="journalentry" >
			<column name="entry_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="journal_name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="type" type="varchar" length="255" decimal="0" jt="12" />
			<column name="message" type="varchar" length="2047" decimal="0" jt="12" />
			<index name="journalentry_pkey" unique="PRIMARY_KEY" >
				<column name="entry_id" />
			</index>
			<index name="j_creationdate_idx" unique="NORMAL" >
				<column name="creationdate" />
			</index>
			<index name="j_j_name_idx" unique="NORMAL" >
				<column name="journal_name" />
			</index>
		</table>
		<table name="keystore" >
			<column name="keyid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="alias" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="type" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<column name="algorithm" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<column name="keyspec" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="keystore_pkey" unique="PRIMARY_KEY" >
				<column name="keyid" />
			</index>
		</table>
		<table name="label" >
			<column name="labelid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" />
			<column name="owner" type="varchar" length="255" decimal="0" jt="12" />
			<column name="namespace" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="label_pkey" unique="PRIMARY_KEY" >
				<column name="labelid" />
			</index>
			<index name="l_name_idx" unique="NORMAL" >
				<column name="name" />
			</index>
			<index name="l_namespace_idx" unique="NORMAL" >
				<column name="namespace" />
			</index>
			<index name="l_owner_idx" unique="NORMAL" >
				<column name="owner" />
			</index>
			<fk name="fk_label_owner" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="owner" pk="user_key" />
			</fk>
		</table>
		<table name="likes" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<index name="likes_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="like_cdate_idx" unique="NORMAL" >
				<column name="creationdate" />
			</index>
			<index name="like_cid_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<index name="like_username_idx" unique="NORMAL" >
				<column name="username" />
			</index>
			<fk name="fk4514b9c8dd41734" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
			<fk name="fk_likes_username" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="username" pk="user_key" />
			</fk>
		</table>
		<table name="links" >
			<column name="linkid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="destpagetitle" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lowerdestpagetitle" type="varchar" length="255" decimal="0" jt="12" />
			<column name="destspacekey" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lowerdestspacekey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="links_pkey" unique="PRIMARY_KEY" >
				<column name="linkid" />
			</index>
			<index name="l_contentid_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<index name="l_destpgtitle_idx" unique="NORMAL" >
				<column name="destpagetitle" />
			</index>
			<index name="l_destspacekey_idx" unique="NORMAL" >
				<column name="destspacekey" />
			</index>
			<index name="l_ldestpgtitle_idx" unique="NORMAL" >
				<column name="lowerdestpagetitle" />
			</index>
			<index name="l_ldestspacekey_idx" unique="NORMAL" >
				<column name="lowerdestspacekey" />
			</index>
			<index name="links_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="links_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<fk name="fk45157998dd41734" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
			<fk name="fk_links_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_links_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="local_members" >
			<column name="groupid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="userid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="local_members_pkey" unique="PRIMARY_KEY" >
				<column name="groupid" />
				<column name="userid" />
			</index>
			<index name="c_userid_idx" unique="NORMAL" >
				<column name="userid" />
			</index>
			<fk name="fk6b8fb445117d5fda" to_schema="ergomercator.public" to_table="groups" >
				<fk_column name="groupid" pk="id" />
			</fk>
			<fk name="fk6b8fb445ce2b3226" to_schema="ergomercator.public" to_table="users" >
				<fk_column name="userid" pk="id" />
			</fk>
		</table>
		<table name="locations" >
			<column name="sampleid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[nextval('locations_sampleid_seq'::regclass)]]></defo>
			</column>
			<index name="locations_pkey" unique="PRIMARY_KEY" >
				<column name="sampleid" />
			</index>
		</table>
		<table name="logininfo" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="curfailed" type="integer" length="10" decimal="0" jt="4" />
			<column name="totalfailed" type="integer" length="10" decimal="0" jt="4" />
			<column name="successdate" type="timestamp" decimal="6" jt="93" />
			<column name="prevsuccessdate" type="timestamp" decimal="6" jt="93" />
			<column name="faileddate" type="timestamp" decimal="6" jt="93" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="logininfo_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="logininfo_username_key" unique="UNIQUE_KEY" >
				<column name="username" />
			</index>
			<fk name="fk_logininfo_username" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="username" pk="user_key" />
			</fk>
		</table>
		<table name="mail.campaign_members" >
			<column name="campaign_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="member_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="sent_datetime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="clicked" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="opens" type="smallint" length="5" decimal="0" jt="5" />
			<column name="clicks" type="smallint" length="5" decimal="0" jt="5" />
			<index name="campaign_members_pk" unique="PRIMARY_KEY" >
				<column name="campaign_id" />
				<column name="member_id" />
			</index>
		</table>
		<table name="mail.campaigns" >
			<column name="campaign_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="campaign_name" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="mail_campaigns_pk" unique="PRIMARY_KEY" >
				<column name="campaign_id" />
			</index>
		</table>
		<table name="notifications" >
			<column name="notificationid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="labelid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="spaceid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<column name="digest" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="network" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="contenttype" type="varchar" length="255" decimal="0" jt="12" />
			<index name="notifications_pkey" unique="PRIMARY_KEY" >
				<column name="notificationid" />
			</index>
			<index name="n_contentid_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<index name="n_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="n_labelid_idx" unique="NORMAL" >
				<column name="labelid" />
			</index>
			<index name="n_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="n_spaceid_idx" unique="NORMAL" >
				<column name="spaceid" />
			</index>
			<index name="n_username_idx" unique="NORMAL" >
				<column name="username" />
			</index>
			<fk name="fk_notifications_content" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
			<fk name="fk594acc827072aef" to_schema="ergomercator.public" to_table="label" >
				<fk_column name="labelid" pk="labelid" />
			</fk>
			<fk name="fk594acc8b2dc6081" to_schema="ergomercator.public" to_table="spaces" >
				<fk_column name="spaceid" pk="spaceid" />
			</fk>
			<fk name="fk_notifications_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_notifications_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
			<fk name="fk_notifications_username" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="username" pk="user_key" />
			</fk>
		</table>
		<table name="os_group" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="groupname" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="os_group_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="os_group_groupname_key" unique="UNIQUE_KEY" >
				<column name="groupname" />
			</index>
		</table>
		<table name="os_propertyentry" >
			<column name="entity_name" type="varchar" length="125" decimal="0" jt="12" mandatory="y" />
			<column name="entity_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="entity_key" type="varchar" length="200" decimal="0" jt="12" mandatory="y" />
			<column name="key_type" type="integer" length="10" decimal="0" jt="4" />
			<column name="boolean_val" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="double_val" type="float8" length="17" decimal="17" jt="6" />
			<column name="string_val" type="varchar" length="255" decimal="0" jt="12" />
			<column name="text_val" type="text" decimal="0" jt="12" />
			<column name="long_val" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="int_val" type="integer" length="10" decimal="0" jt="4" />
			<column name="date_val" type="timestamp" decimal="6" jt="93" />
			<index name="os_propertyentry_pkey" unique="PRIMARY_KEY" >
				<column name="entity_name" />
				<column name="entity_id" />
				<column name="entity_key" />
			</index>
			<index name="ospe_entityid_idx" unique="NORMAL" >
				<column name="entity_id" />
			</index>
		</table>
		<table name="os_user" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="passwd" type="varchar" length="255" decimal="0" jt="12" />
			<index name="os_user_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="os_user_username_key" unique="UNIQUE_KEY" >
				<column name="username" />
			</index>
		</table>
		<table name="os_user_group" >
			<column name="user_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="group_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="os_user_group_pkey" unique="PRIMARY_KEY" >
				<column name="user_id" />
				<column name="group_id" />
			</index>
			<index name="c_groupdid_idx" unique="NORMAL" >
				<column name="group_id" />
			</index>
			<fk name="fk932472461e2e76db" to_schema="ergomercator.public" to_table="os_group" >
				<fk_column name="group_id" pk="id" />
			</fk>
			<fk name="fk93247246f73aee0f" to_schema="ergomercator.public" to_table="os_user" >
				<fk_column name="user_id" pk="id" />
			</fk>
		</table>
		<table name="pagetemplates" >
			<column name="templateid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="hibernateversion" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="templatename" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="templatedesc" type="varchar" length="255" decimal="0" jt="12" />
			<column name="pluginkey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="modulekey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="refpluginkey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="refmodulekey" type="varchar" length="255" decimal="0" jt="12" />
			<column name="content" type="text" decimal="0" jt="12" />
			<column name="spaceid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="prevver" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="version" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<column name="bodytypeid" type="smallint" length="5" decimal="0" jt="5" />
			<index name="pagetemplates_pkey" unique="PRIMARY_KEY" >
				<column name="templateid" />
			</index>
			<index name="pt_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="pt_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="pt_prevver_idx" unique="NORMAL" >
				<column name="prevver" />
			</index>
			<index name="pt_spaceid_idx" unique="NORMAL" >
				<column name="spaceid" />
			</index>
			<fk name="fkbc7ce96a17d4a070" to_schema="ergomercator.public" to_table="pagetemplates" >
				<fk_column name="prevver" pk="templateid" />
			</fk>
			<fk name="fkbc7ce96ab2dc6081" to_schema="ergomercator.public" to_table="spaces" >
				<fk_column name="spaceid" pk="spaceid" />
			</fk>
			<fk name="fk_pagetemplates_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_pagetemplates_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="pgdac_blob" >
			<column name="uid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('pgdac_blob_uid_seq'::regclass)]]></defo>
			</column>
			<column name="name" type="varchar" length="50" decimal="0" jt="12" />
			<column name="picture" type="bytea" decimal="0" jt="-2" />
			<index name="pgdac_blob_pkey" unique="PRIMARY_KEY" >
				<column name="uid" />
			</index>
		</table>
		<table name="pgdac_loaded" >
			<column name="code" type="integer" length="10" decimal="0" jt="4" />
			<column name="num" type="integer" length="10" decimal="0" jt="4" />
			<column name="num1" type="float8" length="17" decimal="17" jt="6" />
			<column name="str" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dat" type="timestamp" decimal="6" jt="93" />
		</table>
		<table name="pgdac_text" >
			<column name="uid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('pgdac_text_uid_seq'::regclass)]]></defo>
			</column>
			<column name="name" type="varchar" length="50" decimal="0" jt="12" />
			<column name="textfield" type="text" decimal="0" jt="12" />
			<index name="pgdac_text_pkey" unique="PRIMARY_KEY" >
				<column name="uid" />
			</index>
		</table>
		<table name="plugindata" >
			<column name="plugindataid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="pluginkey" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="filename" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<column name="data" type="bytea" decimal="0" jt="-2" />
			<index name="plugindata_pkey" unique="PRIMARY_KEY" >
				<column name="plugindataid" />
			</index>
			<index name="plugindata_filename_key" unique="UNIQUE_KEY" >
				<column name="filename" />
			</index>
			<index name="plugindata_pluginkey_key" unique="UNIQUE_KEY" >
				<column name="pluginkey" />
			</index>
		</table>
		<table name="queries_params" >
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="query_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="param_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="param_des" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[descrizione parametro nome]]></comment>
			</column>
			<column name="param_type" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[tipo paramtro: INT, STR, DATE]]></comment>
			</column>
			<column name="int_value" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[valore intero]]></comment>
			</column>
			<column name="string_value" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[valore stringa]]></comment>
			</column>
			<column name="date_value" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[valore data]]></comment>
			</column>
			<column name="lov" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[lista di valori? (Y;N)]]></comment>
			</column>
			<column name="lov_text" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Testo della query lista di valori]]></comment>
			</column>
			<column name="lov_field" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[Campo da cui prende il valore]]></comment>
			</column>
			<column name="param_text" type="varchar" length="60" decimal="0" jt="12" >
				<comment><![CDATA[Testo per gli utenti]]></comment>
			</column>
			<index name="qryparms_pk" unique="PRIMARY_KEY" >
				<column name="group_id" />
				<column name="query_id" />
				<column name="param_id" />
			</index>
		</table>
		<table name="query_grids" >
			<comment><![CDATA[this is the grid sample table, it contains the grid configurationo for web and win clients...]]></comment>
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="query_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fieldname" type="varchar" length="30" decimal="0" jt="12" />
			<column name="title" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bgcolor" type="integer" length="10" decimal="0" jt="4" />
			<column name="width" type="smallint" length="5" decimal="0" jt="5" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="255" decimal="0" jt="12" />
			<column name="usergroup" type="varchar" length="30" decimal="0" jt="12" >
				<defo><![CDATA['ALL'::character varying]]></defo>
			</column>
			<column name="lang" type="varchar" length="3" decimal="0" jt="12" >
				<defo><![CDATA['ALL'::character varying]]></defo>
			</column>
			<column name="adminonly" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="isgroup" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="date" length="13" decimal="0" jt="91" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="excel" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[this is the tag for excel export utility]]></comment>
			</column>
			<column name="chart" type="boolean" length="1" decimal="0" jt="-7" />
		</table>
		<table name="remembermetoken" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="created" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="token" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="remembermetoken_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="rmt_username_idx" unique="NORMAL" >
				<column name="username" />
			</index>
		</table>
		<table name="scheduler_clustered_jobs" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="job_id" type="varchar" length="255" decimal="0" jt="12" />
			<column name="next_run_time" type="timestamp" decimal="6" jt="93" />
			<column name="version" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="job_runner_key" type="varchar" length="255" decimal="0" jt="12" />
			<column name="raw_parameters" type="bytea" decimal="0" jt="-2" />
			<column name="sched_type" type="char" length="1" decimal="0" jt="1" />
			<column name="cron_expression" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cron_time_zone" type="varchar" length="60" decimal="0" jt="12" />
			<column name="interval_first_run_time" type="timestamp" decimal="6" jt="93" />
			<column name="interval_millis" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="scheduler_clustered_jobs_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="scheduler_clustered_jobs_job_id_key" unique="UNIQUE_KEY" >
				<column name="job_id" />
			</index>
			<index name="job_runner_key_idx" unique="NORMAL" >
				<column name="job_runner_key" />
			</index>
			<index name="next_run_time_idx" unique="NORMAL" >
				<column name="next_run_time" />
			</index>
		</table>
		<table name="scheduler_run_details" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="job_id" type="varchar" length="255" decimal="0" jt="12" />
			<column name="start_time" type="timestamp" decimal="6" jt="93" />
			<column name="duration" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="outcome" type="char" length="1" decimal="0" jt="1" />
			<column name="message" type="varchar" length="255" decimal="0" jt="12" />
			<index name="scheduler_run_details_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="job_id_idx" unique="NORMAL" >
				<column name="job_id" />
			</index>
			<index name="start_time_idx" unique="NORMAL" >
				<column name="start_time" />
			</index>
		</table>
		<table name="search_services" >
			<column name="search_index" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="title" type="text" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
		</table>
		<table name="spacepermissions" >
			<column name="permid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="spaceid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="permtype" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="permgroupname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="permusername" type="varchar" length="255" decimal="0" jt="12" />
			<column name="permalluserssubject" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="spacepermissions_pkey" unique="PRIMARY_KEY" >
				<column name="permid" />
			</index>
			<index name="sp_comp_idx" unique="NORMAL" >
				<column name="permtype" />
				<column name="permgroupname" />
			</index>
			<index name="sp_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="sp_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="sp_permtype_idx" unique="NORMAL" >
				<column name="permtype" />
			</index>
			<index name="sp_pgname_idx" unique="NORMAL" >
				<column name="permgroupname" />
			</index>
			<index name="sp_puname_idx" unique="NORMAL" >
				<column name="permusername" />
			</index>
			<index name="sp_spaceid_idx" unique="NORMAL" >
				<column name="spaceid" />
			</index>
			<fk name="fkd33f23beb2dc6081" to_schema="ergomercator.public" to_table="spaces" >
				<fk_column name="spaceid" pk="spaceid" />
			</fk>
			<fk name="fk_spacepermissions_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_spacepermissions_lastmodifi" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
			<fk name="fk_spacepermissions_permuserna" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="permusername" pk="user_key" />
			</fk>
		</table>
		<table name="spaces" >
			<column name="spaceid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="spacename" type="varchar" length="255" decimal="0" jt="12" />
			<column name="spacekey" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lowerspacekey" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="spacedescid" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="homepage" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<column name="spacetype" type="varchar" length="255" decimal="0" jt="12" />
			<column name="spacestatus" type="varchar" length="255" decimal="0" jt="12" />
			<index name="spaces_pkey" unique="PRIMARY_KEY" >
				<column name="spaceid" />
			</index>
			<index name="spaces_spacekey_key" unique="UNIQUE_KEY" >
				<column name="spacekey" />
			</index>
			<index name="s_creationdate_idx" unique="NORMAL" >
				<column name="creationdate" />
			</index>
			<index name="s_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="s_homepage_idx" unique="NORMAL" >
				<column name="homepage" />
			</index>
			<index name="s_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="s_lspacekey_idx" unique="NORMAL" >
				<column name="lowerspacekey" />
			</index>
			<index name="s_spacedescid_idx" unique="NORMAL" >
				<column name="spacedescid" />
			</index>
			<index name="s_spacestatus_idx" unique="NORMAL" >
				<column name="spacestatus" />
			</index>
			<fk name="fk9228242d11b7bfee" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="homepage" pk="contentid" />
			</fk>
			<fk name="fk9228242d2c72d3d2" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="spacedescid" pk="contentid" />
			</fk>
			<fk name="fk_spaces_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_spaces_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="spatial_ref_sys" >
			<column name="srid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="auth_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="auth_srid" type="integer" length="10" decimal="0" jt="4" />
			<column name="srtext" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="proj4text" type="varchar" length="2048" decimal="0" jt="12" />
			<index name="spatial_ref_sys_pkey" unique="PRIMARY_KEY" >
				<column name="srid" />
			</index>
			<constraint name="spatial_ref_sys_srid_check" >
				<string><![CDATA[CHECK (((srid > 0) AND (srid <= 998999)))]]></string>
			</constraint>
		</table>
		<table name="squadre" >
			<column name="IDSquadra" type="integer" length="10" decimal="0" jt="4" />
			<column name="NomeSquadra" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Alias" type="varchar" length="255" decimal="0" jt="12" />
		</table>
		<table name="stagioni" >
			<column name="STAGIONE" type="varchar" length="7" decimal="0" jt="12" />
			<column name="ORDINAMENTO" type="integer" length="10" decimal="0" jt="4" />
			<column name="ST_Stampa" type="varchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="stat_queries" >
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="query_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="query_des" type="varchar" length="30" decimal="0" jt="12" />
			<column name="query_text" type="text" decimal="0" jt="12" />
			<column name="user_insert" type="integer" length="10" decimal="0" jt="4" />
			<column name="query_update" type="text" decimal="0" jt="12" />
		</table>
		<table name="storia_squadre" >
			<column name="IDStoriaSquadre" type="integer" length="10" decimal="0" jt="4" />
			<column name="IDSquadra" type="integer" length="10" decimal="0" jt="4" />
			<column name="Stagione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Categoria" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Finale" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Posizione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Annotazioni" type="varchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="storico_incontri" >
			<column name="IDStoricoIncontri" type="integer" length="10" decimal="0" jt="4" />
			<column name="IDIncontro" type="integer" length="10" decimal="0" jt="4" />
			<column name="IDSquadra" type="integer" length="10" decimal="0" jt="4" />
			<column name="Momento" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Evento" type="varchar" length="50" decimal="0" jt="12" />
			<column name="IDAtleta" type="integer" length="10" decimal="0" jt="4" />
			<column name="Annotazioni" type="varchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="t_carriera_giocatore" >
			<column name="IDCarrieraGiocatore" type="integer" length="10" decimal="0" jt="4" />
			<column name="STAGIONE" type="varchar" length="50" decimal="0" jt="12" />
			<column name="SQUADRA" type="integer" length="10" decimal="0" jt="4" />
			<column name="CATEGORIA" type="varchar" length="50" decimal="0" jt="12" />
			<column name="PRESENZE" type="varchar" length="50" decimal="0" jt="12" />
			<column name="GOL" type="varchar" length="50" decimal="0" jt="12" />
			<column name="RIFGIOCATORE" type="integer" length="10" decimal="0" jt="4" />
			<column name="ANNOTAZIONI" type="varchar" length="255" decimal="0" jt="12" />
			<column name="Somma_Voti" type="float8" length="17" decimal="17" jt="6" />
			<column name="Somma_Minuti" type="float8" length="17" decimal="17" jt="6" />
		</table>
		<table name="tabellini_partite" >
			<column name="IDTabellino" type="integer" length="10" decimal="0" jt="4" />
			<column name="Stagione" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Giornata" type="integer" length="10" decimal="0" jt="4" />
			<column name="IDSquadra" type="integer" length="10" decimal="0" jt="4" />
			<column name="IDAtleta" type="integer" length="10" decimal="0" jt="4" />
			<column name="Presenza" type="char" length="1" decimal="0" jt="1" />
			<column name="MinutiGiocati" type="integer" length="10" decimal="0" jt="4" />
			<column name="Voto" type="float8" length="17" decimal="17" jt="6" />
		</table>
		<table name="tmp_ft_calendar" >
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_date" type="date" length="13" decimal="0" jt="91" />
			<column name="home_team_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="visitors_team_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="goal_visitor" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_visitors" type="smallint" length="5" decimal="0" jt="5" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="confirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="home_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="visitors_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="match_time" type="timestamp" decimal="6" jt="93" />
			<column name="referee_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="referee_second_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="referee_third_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="suspended" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="postponed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="forfeit" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="filed_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fcld_jguid" type="varchar" length="40" decimal="0" jt="12" />
			<column name="fcld_deleted" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="article_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="video_url" type="varchar" length="1024" decimal="0" jt="12" />
		</table>
		<table name="trackbacklinks" >
			<column name="linkid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="contenttype" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="viewcount" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="url" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lowerurl" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="255" decimal="0" jt="12" />
			<column name="blogname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="excerpt" type="varchar" length="255" decimal="0" jt="12" />
			<column name="contentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" />
			<index name="trackbacklinks_pkey" unique="PRIMARY_KEY" >
				<column name="linkid" />
			</index>
			<index name="tbl_contentid_idx" unique="NORMAL" >
				<column name="contentid" />
			</index>
			<index name="tbl_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="tbl_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<fk name="fkf6977a478dd41734" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="contentid" pk="contentid" />
			</fk>
			<fk name="fk_trackbacklinks_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_trackbacklinks_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="trustedapp" >
			<column name="trustedappid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="timeout" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="public_key_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="trustedapp_pkey" unique="PRIMARY_KEY" >
				<column name="trustedappid" />
			</index>
			<index name="trustedapp_name_key" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
			<index name="trustedapp_public_key_id_key" unique="UNIQUE_KEY" >
				<column name="public_key_id" />
			</index>
			<fk name="fkddb119ca9c85adb1" to_schema="ergomercator.public" to_table="keystore" >
				<fk_column name="public_key_id" pk="keyid" />
			</fk>
		</table>
		<table name="trustedapprestriction" >
			<column name="trustedapprestrictionid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="type" type="varchar" length="32" decimal="0" jt="12" mandatory="y" />
			<column name="restriction" type="varchar" length="255" decimal="0" jt="12" />
			<column name="trustedappid" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="trustedapprestriction_pkey" unique="PRIMARY_KEY" >
				<column name="trustedapprestrictionid" />
			</index>
			<index name="c_trustedappid_idx" unique="NORMAL" >
				<column name="trustedappid" />
			</index>
			<fk name="fke8496ba235d1d865" to_schema="ergomercator.public" to_table="trustedapp" >
				<fk_column name="trustedappid" pk="trustedappid" />
			</fk>
		</table>
		<table name="unidac_blob" >
			<column name="uid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('unidac_blob_uid_seq'::regclass)]]></defo>
			</column>
			<column name="name" type="varchar" length="50" decimal="0" jt="12" />
			<column name="picture" type="bytea" decimal="0" jt="-2" />
			<index name="unidac_blob_pkey" unique="PRIMARY_KEY" >
				<column name="uid" />
			</index>
		</table>
		<table name="unidac_loaded" >
			<column name="intg" type="integer" length="10" decimal="0" jt="4" />
			<column name="dbl" type="float8" length="17" decimal="17" jt="6" />
			<column name="str" type="varchar" length="50" decimal="0" jt="12" />
			<column name="dat" type="timestamp" decimal="6" jt="93" />
		</table>
		<table name="unidac_text" >
			<column name="uid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('unidac_text_uid_seq'::regclass)]]></defo>
			</column>
			<column name="name" type="varchar" length="50" decimal="0" jt="12" />
			<column name="textfield" type="text" decimal="0" jt="12" />
			<index name="unidac_text_pkey" unique="PRIMARY_KEY" >
				<column name="uid" />
			</index>
		</table>
		<table name="user_mapping" >
			<column name="user_key" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="username" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lower_username" type="varchar" length="255" decimal="0" jt="12" />
			<index name="user_mapping_pkey" unique="PRIMARY_KEY" >
				<column name="user_key" />
			</index>
			<index name="unq_lwr_username" unique="UNIQUE_KEY" >
				<column name="lower_username" />
			</index>
		</table>
		<table name="user_relation" >
			<column name="relationid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sourceuser" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="targetuser" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="relationname" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="user_relation_pkey" unique="PRIMARY_KEY" >
				<column name="relationid" />
			</index>
			<index name="u2u_relation_unique" unique="UNIQUE_KEY" >
				<column name="sourceuser" />
				<column name="targetuser" />
				<column name="relationname" />
			</index>
			<index name="r_u2u_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="r_u2u_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="relation_u2u_cdate_idx" unique="NORMAL" >
				<column name="creationdate" />
			</index>
			<index name="relation_u2u_relationname_idx" unique="NORMAL" >
				<column name="relationname" />
			</index>
			<index name="relation_u2u_sourceuser_idx" unique="NORMAL" >
				<column name="sourceuser" />
			</index>
			<index name="relation_u2u_targetuser_idx" unique="NORMAL" >
				<column name="targetuser" />
			</index>
			<fk name="fk_relation_u2ususer" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="sourceuser" pk="user_key" />
			</fk>
			<fk name="fk_relation_u2utuser" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="targetuser" pk="user_key" />
			</fk>
			<fk name="fk_u2urelation_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_u2urelation_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="usercontent_relation" >
			<column name="relationid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="targetcontentid" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sourceuser" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="targettype" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="relationname" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="creationdate" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="lastmoddate" type="timestamp" decimal="6" jt="93" mandatory="y" />
			<column name="creator" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="lastmodifier" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<index name="usercontent_relation_pkey" unique="PRIMARY_KEY" >
				<column name="relationid" />
			</index>
			<index name="u2c_relation_unique" unique="UNIQUE_KEY" >
				<column name="targetcontentid" />
				<column name="sourceuser" />
				<column name="relationname" />
			</index>
			<index name="r_u2c_creator_idx" unique="NORMAL" >
				<column name="creator" />
			</index>
			<index name="r_u2c_lastmodifier_idx" unique="NORMAL" >
				<column name="lastmodifier" />
			</index>
			<index name="relation_u2c_cdate_idx" unique="NORMAL" >
				<column name="creationdate" />
			</index>
			<index name="relation_u2c_relationname_idx" unique="NORMAL" >
				<column name="relationname" />
			</index>
			<index name="relation_u2c_sourceuser_idx" unique="NORMAL" >
				<column name="sourceuser" />
			</index>
			<index name="relation_u2c_targetcontent_idx" unique="NORMAL" >
				<column name="targetcontentid" />
			</index>
			<index name="relation_u2c_targettype_idx" unique="NORMAL" >
				<column name="targettype" />
			</index>
			<fk name="fkecd19ced351d64c3" to_schema="ergomercator.public" to_table="content" >
				<fk_column name="targetcontentid" pk="contentid" />
			</fk>
			<fk name="fk_relation_u2cuser" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="sourceuser" pk="user_key" />
			</fk>
			<fk name="fk_u2crelation_creator" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="creator" pk="user_key" />
			</fk>
			<fk name="fk_u2crelation_lastmodifier" to_schema="ergomercator.public" to_table="user_mapping" >
				<fk_column name="lastmodifier" pk="user_key" />
			</fk>
		</table>
		<table name="users" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="varchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="password" type="varchar" length="255" decimal="0" jt="12" />
			<column name="email" type="varchar" length="255" decimal="0" jt="12" />
			<column name="created" type="timestamp" decimal="6" jt="93" />
			<column name="fullname" type="varchar" length="255" decimal="0" jt="12" />
			<index name="users_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="users_name_key" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
		</table>
		<table name="v_item_id" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
		</table>
		<table name="vtest" >
			<column name="count" type="bigint" length="19" decimal="0" jt="-5" />
		</table>
		<view name="clubs_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT clubs.id,
    clubs.club_name,
    clubs.foundation_date,
    clubs.president,
    clubs.stadium_id,
    clubs.town,
    clubs.vice_president,
    clubs.team_manager,
    clubs.athletic_manager,
    clubs.colors,
    clubs.website,
    clubs.remote_id,
    clubs.anagraph_id,
    clubs.club_image,
    clubs.db_schema_id,
    clubs.jguid,
    clubs.deleted,
    clubs.insert_date,
    clubs.update_date,
    clubs.user_insert,
    clubs.user_update
   FROM sports.clubs
  WHERE (clubs.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="integer" />
			<column name="club_name" type="varchar" />
			<column name="foundation_date" type="date" />
			<column name="president" type="varchar" />
			<column name="stadium_id" type="smallint" />
			<column name="town" type="varchar" />
			<column name="vice_president" type="varchar" />
			<column name="team_manager" type="varchar" />
			<column name="athletic_manager" type="varchar" />
			<column name="colors" type="varchar" />
			<column name="website" type="varchar" />
			<column name="remote_id" type="integer" />
			<column name="anagraph_id" type="integer" />
			<column name="club_image" type="bytea" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
		</view>
		<view name="documents_folders" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT DISTINCT (((('documents'::text || '/'::text) || date_part('year'::text, d.doc_date)) || '/'::text) || lpad((date_part('month'::text, d.doc_date))::text, 2, '0'::text)) AS path
   FROM documents.heads d
  WHERE (d.doc_date IS NOT NULL)
  ORDER BY (((('documents'::text || '/'::text) || date_part('year'::text, d.doc_date)) || '/'::text) || lpad((date_part('month'::text, d.doc_date))::text, 2, '0'::text));]]></view_script>
			<column name="path" type="text" />
		</view>
		<view name="dual" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT 'X'::character varying AS dummy;]]></view_script>
			<column name="dummy" type="varchar" />
		</view>
		<view name="followers_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT f.user_id,
    f.follower_id,
    f.insert_date,
    p.first_name,
    p.last_name,
    p.address_full,
    p.latitude,
    p.longitude,
    u.image_url,
    p.db_user_id,
    swap.isfollowed(161, f.follower_id) AS isfollowed,
    swap.isfollowing(161, f.follower_id) AS isfollowing
   FROM system.db_users_profiles p,
    swap.followers f,
    system.db_users u
  WHERE ((f.follower_id = p.db_user_id) AND (f.user_id = 162) AND (u.db_user_id = p.db_user_id));]]></view_script>
			<column name="user_id" type="integer" />
			<column name="follower_id" type="integer" />
			<column name="insert_date" type="timestamptz" />
			<column name="first_name" type="varchar" />
			<column name="last_name" type="varchar" />
			<column name="address_full" type="varchar" />
			<column name="latitude" type="float8" />
			<column name="longitude" type="float8" />
			<column name="image_url" type="varchar" />
			<column name="db_user_id" type="integer" />
			<column name="isfollowed" type="boolean" />
			<column name="isfollowing" type="boolean" />
		</view>
		<view name="ft_view_club_teams_championships" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.club_id,
    c.season_id,
    c.league_id,
    c.team_id,
    t.team_name,
    l.league_name
   FROM football.ft_teams_championships c,
    football.ft_teams t,
    football.ft_leagues l
  WHERE ((c.team_id = t.team_id) AND (c.league_id = l.league_id))
  ORDER BY t.team_name;]]></view_script>
			<column name="club_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="team_id" type="smallint" />
			<column name="team_name" type="varchar" />
			<column name="league_name" type="varchar" />
		</view>
		<view name="ft_view_players_last_season" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT p.player_id,
    max(p.season_id) AS max
   FROM football.ft_teams_players p,
    football.ft_teams t,
    football.ft_teams_championships tc
  WHERE ((tc.team_id = t.team_id) AND (p.team_id = p.team_id))
  GROUP BY p.player_id;]]></view_script>
			<column name="player_id" type="integer" />
			<column name="max" type="smallint" />
		</view>
		<view name="geography_columns" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT current_database() AS f_table_catalog,
    n.nspname AS f_table_schema,
    c.relname AS f_table_name,
    a.attname AS f_geography_column,
    postgis_typmod_dims(a.atttypmod) AS coord_dimension,
    postgis_typmod_srid(a.atttypmod) AS srid,
    postgis_typmod_type(a.atttypmod) AS type
   FROM pg_class c,
    pg_attribute a,
    pg_type t,
    pg_namespace n
  WHERE ((t.typname = 'geography'::name) AND (a.attisdropped = false) AND (a.atttypid = t.oid) AND (a.attrelid = c.oid) AND (c.relnamespace = n.oid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'm'::"char", 'f'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(c.relnamespace)) AND has_table_privilege(c.oid, 'SELECT'::text));]]></view_script>
			<column name="f_table_catalog" type="name" />
			<column name="f_table_schema" type="name" />
			<column name="f_table_name" type="name" />
			<column name="f_geography_column" type="name" />
			<column name="coord_dimension" type="integer" />
			<column name="srid" type="integer" />
			<column name="type" type="text" />
		</view>
		<view name="geometry_columns" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT (current_database())::character varying(256) AS f_table_catalog,
    n.nspname AS f_table_schema,
    c.relname AS f_table_name,
    a.attname AS f_geometry_column,
    COALESCE(postgis_typmod_dims(a.atttypmod), sn.ndims, 2) AS coord_dimension,
    COALESCE(NULLIF(postgis_typmod_srid(a.atttypmod), 0), sr.srid, 0) AS srid,
    (replace(replace(COALESCE(NULLIF(upper(postgis_typmod_type(a.atttypmod)), 'GEOMETRY'::text), st.type, 'GEOMETRY'::text), 'ZM'::text, ''::text), 'Z'::text, ''::text))::character varying(30) AS type
   FROM ((((((pg_class c
     JOIN pg_attribute a ON (((a.attrelid = c.oid) AND (NOT a.attisdropped))))
     JOIN pg_namespace n ON ((c.relnamespace = n.oid)))
     JOIN pg_type t ON ((a.atttypid = t.oid)))
     LEFT JOIN ( SELECT s.connamespace,
            s.conrelid,
            s.conkey,
            replace(split_part(s.consrc, ''''::text, 2), ')'::text, ''::text) AS type
           FROM pg_constraint s
          WHERE (s.consrc ~~* '%geometrytype(% = %'::text)) st ON (((st.connamespace = n.oid) AND (st.conrelid = c.oid) AND (a.attnum = ANY (st.conkey)))))
     LEFT JOIN ( SELECT s.connamespace,
            s.conrelid,
            s.conkey,
            (replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text))::integer AS ndims
           FROM pg_constraint s
          WHERE (s.consrc ~~* '%ndims(% = %'::text)) sn ON (((sn.connamespace = n.oid) AND (sn.conrelid = c.oid) AND (a.attnum = ANY (sn.conkey)))))
     LEFT JOIN ( SELECT s.connamespace,
            s.conrelid,
            s.conkey,
            (replace(replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text), '('::text, ''::text))::integer AS srid
           FROM pg_constraint s
          WHERE (s.consrc ~~* '%srid(% = %'::text)) sr ON (((sr.connamespace = n.oid) AND (sr.conrelid = c.oid) AND (a.attnum = ANY (sr.conkey)))))
  WHERE ((c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'm'::"char", 'f'::"char", 'p'::"char"])) AND (NOT (c.relname = 'raster_columns'::name)) AND (t.typname = 'geometry'::name) AND (NOT pg_is_other_temp_schema(c.relnamespace)) AND has_table_privilege(c.oid, 'SELECT'::text));]]></view_script>
			<column name="f_table_catalog" type="varchar" />
			<column name="f_table_schema" type="name" />
			<column name="f_table_name" type="name" />
			<column name="f_geometry_column" type="name" />
			<column name="coord_dimension" type="integer" />
			<column name="srid" type="integer" />
			<column name="type" type="varchar" />
		</view>
		<view name="goal_ranking" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT row_number() OVER () AS rownum,
    a.first_name,
    a.family_name,
    a.team_name,
    a.league_id,
    a.season_id,
    a.team_id,
    a.player_id,
    a.goals,
    a.goals AS goal
   FROM ( SELECT s.first_name,
            s.family_name,
            t.team_name,
            m.league_id,
            m.season_id,
            e.team_id,
            e.player_id,
            count(1) AS goals
           FROM football.ft_match_events e,
            football.ft_calendar m,
            football.ft_teams t,
            football.ft_players s
          WHERE ((t.team_id = e.team_id) AND (s.anagraph_id = e.player_id) AND (m.match_id = e.match_id) AND (e.event_id = 1))
          GROUP BY s.first_name, s.family_name, m.league_id, m.season_id, e.team_id, e.player_id, t.team_name
          ORDER BY m.season_id, m.league_id, (count(1)) DESC) a;]]></view_script>
			<column name="rownum" type="bigint" />
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="team_name" type="varchar" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="team_id" type="smallint" />
			<column name="player_id" type="integer" />
			<column name="goals" type="bigint" />
			<column name="goal" type="bigint" />
		</view>
		<view name="match_events_detail" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT e.match_id,
    e.team_id,
    e.player_id,
    e.event_id,
    e.minute,
    e.value,
    e.match_events_row_id,
    e.notes,
    e.favor_team_id,
    e.half,
    e.db_schema_id,
    e.fmth_jguid,
    e.fmth_deleted,
    (((((((p.family_name)::text || ' '::text) || (p.first_name)::text) || ' - '::text) || nvl(to_char((p.birth_date)::timestamp with time zone, 'dd/mm/yy'::text), nvl(p.notes, 'n.d.'::text))) || ' '::text) || (r.role_name)::text) AS teamplayer,
    p.birth_date,
    p.birth_year,
    p.first_name,
    p.family_name,
    p.birth_place,
    p.role,
    t.team_name
   FROM football.ft_match_events e,
    football.ft_players p,
    football.ft_teams t,
    football.ft_roles r
  WHERE ((t.team_id = e.team_id) AND (p.anagraph_id = e.player_id) AND (nvl(p.role, 0) = r.role_id));]]></view_script>
			<column name="match_id" type="integer" />
			<column name="team_id" type="smallint" />
			<column name="player_id" type="integer" />
			<column name="event_id" type="smallint" />
			<column name="minute" type="integer" />
			<column name="value" type="smallint" />
			<column name="match_events_row_id" type="bigint" />
			<column name="notes" type="varchar" />
			<column name="favor_team_id" type="integer" />
			<column name="half" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="fmth_jguid" type="varchar" />
			<column name="fmth_deleted" type="boolean" />
			<column name="teamplayer" type="text" />
			<column name="birth_date" type="date" />
			<column name="birth_year" type="smallint" />
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="birth_place" type="varchar" />
			<column name="role" type="smallint" />
			<column name="team_name" type="varchar" />
		</view>
		<view name="ranking_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT v.season_id,
    v.league_id,
    v.matchday,
    v.pos,
    v.team_id,
    v.won_matches,
    v.lost_matches,
    v.tied_matches,
    v.home_matches,
    v.home_won,
    v.home_lost,
    v.home_tied,
    v.outside_played,
    v.outside_won,
    v.outside_lost,
    v.outside_tied,
    v.points,
    v.points_home,
    v.points_outside,
    v.scored,
    v.scored_home,
    v.scored_outside,
    v.conceded,
    v.conceded_home,
    v.conceded_outside,
    v.aggregate_points,
    v.aggregate_group,
    v.rownum,
    v.db_schema_id,
    v.delta,
    v.games_scored,
    v.games_conceded,
    v.delta_games,
    v.team_name,
    v.club_name,
    v.played
   FROM (sports.matchday_ranking_view v
     JOIN sports.last_match_day l ON (((v.season_id = l.season_id) AND (v.league_id = l.league_id) AND (v.matchday = l.max_match_day))));]]></view_script>
			<column name="season_id" type="integer" />
			<column name="league_id" type="integer" />
			<column name="matchday" type="smallint" />
			<column name="pos" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="won_matches" type="smallint" />
			<column name="lost_matches" type="smallint" />
			<column name="tied_matches" type="smallint" />
			<column name="home_matches" type="smallint" />
			<column name="home_won" type="smallint" />
			<column name="home_lost" type="smallint" />
			<column name="home_tied" type="smallint" />
			<column name="outside_played" type="smallint" />
			<column name="outside_won" type="smallint" />
			<column name="outside_lost" type="smallint" />
			<column name="outside_tied" type="smallint" />
			<column name="points" type="smallint" />
			<column name="points_home" type="smallint" />
			<column name="points_outside" type="smallint" />
			<column name="scored" type="smallint" />
			<column name="scored_home" type="smallint" />
			<column name="scored_outside" type="smallint" />
			<column name="conceded" type="smallint" />
			<column name="conceded_home" type="smallint" />
			<column name="conceded_outside" type="smallint" />
			<column name="aggregate_points" type="smallint" />
			<column name="aggregate_group" type="smallint" />
			<column name="rownum" type="smallint" />
			<column name="db_schema_id" type="integer" />
			<column name="delta" type="smallint" />
			<column name="games_scored" type="smallint" />
			<column name="games_conceded" type="smallint" />
			<column name="delta_games" type="smallint" />
			<column name="team_name" type="varchar" />
			<column name="club_name" type="varchar" />
			<column name="played" type="smallint" />
		</view>
		<view name="raster_columns" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT current_database() AS r_table_catalog,
    n.nspname AS r_table_schema,
    c.relname AS r_table_name,
    a.attname AS r_raster_column,
    COALESCE(_raster_constraint_info_srid(n.nspname, c.relname, a.attname), ( SELECT st_srid('010100000000000000000000000000000000000000'::geometry) AS st_srid)) AS srid,
    _raster_constraint_info_scale(n.nspname, c.relname, a.attname, 'x'::bpchar) AS scale_x,
    _raster_constraint_info_scale(n.nspname, c.relname, a.attname, 'y'::bpchar) AS scale_y,
    _raster_constraint_info_blocksize(n.nspname, c.relname, a.attname, 'width'::text) AS blocksize_x,
    _raster_constraint_info_blocksize(n.nspname, c.relname, a.attname, 'height'::text) AS blocksize_y,
    COALESCE(_raster_constraint_info_alignment(n.nspname, c.relname, a.attname), false) AS same_alignment,
    COALESCE(_raster_constraint_info_regular_blocking(n.nspname, c.relname, a.attname), false) AS regular_blocking,
    _raster_constraint_info_num_bands(n.nspname, c.relname, a.attname) AS num_bands,
    _raster_constraint_info_pixel_types(n.nspname, c.relname, a.attname) AS pixel_types,
    _raster_constraint_info_nodata_values(n.nspname, c.relname, a.attname) AS nodata_values,
    _raster_constraint_info_out_db(n.nspname, c.relname, a.attname) AS out_db,
    _raster_constraint_info_extent(n.nspname, c.relname, a.attname) AS extent,
    COALESCE(_raster_constraint_info_index(n.nspname, c.relname, a.attname), false) AS spatial_index
   FROM pg_class c,
    pg_attribute a,
    pg_type t,
    pg_namespace n
  WHERE ((t.typname = 'raster'::name) AND (a.attisdropped = false) AND (a.atttypid = t.oid) AND (a.attrelid = c.oid) AND (c.relnamespace = n.oid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'm'::"char", 'f'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(c.relnamespace)) AND has_table_privilege(c.oid, 'SELECT'::text));]]></view_script>
			<column name="r_table_catalog" type="name" />
			<column name="r_table_schema" type="name" />
			<column name="r_table_name" type="name" />
			<column name="r_raster_column" type="name" />
			<column name="srid" type="integer" />
			<column name="scale_x" type="float8" />
			<column name="scale_y" type="float8" />
			<column name="blocksize_x" type="integer" />
			<column name="blocksize_y" type="integer" />
			<column name="same_alignment" type="boolean" />
			<column name="regular_blocking" type="boolean" />
			<column name="num_bands" type="integer" />
			<column name="pixel_types" type="text[]" />
			<column name="nodata_values" type="_float8" />
			<column name="out_db" type="_bool" />
			<column name="extent" type="geometry" />
			<column name="spatial_index" type="boolean" />
		</view>
		<view name="raster_overviews" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT current_database() AS o_table_catalog,
    n.nspname AS o_table_schema,
    c.relname AS o_table_name,
    a.attname AS o_raster_column,
    current_database() AS r_table_catalog,
    (split_part(split_part(s.consrc, '''::name'::text, 1), ''''::text, 2))::name AS r_table_schema,
    (split_part(split_part(s.consrc, '''::name'::text, 2), ''''::text, 2))::name AS r_table_name,
    (split_part(split_part(s.consrc, '''::name'::text, 3), ''''::text, 2))::name AS r_raster_column,
    (btrim(split_part(s.consrc, ','::text, 2)))::integer AS overview_factor
   FROM pg_class c,
    pg_attribute a,
    pg_type t,
    pg_namespace n,
    pg_constraint s
  WHERE ((t.typname = 'raster'::name) AND (a.attisdropped = false) AND (a.atttypid = t.oid) AND (a.attrelid = c.oid) AND (c.relnamespace = n.oid) AND ((c.relkind)::text = ANY ((ARRAY['r'::character(1), 'v'::character(1), 'm'::character(1), 'f'::character(1)])::text[])) AND (s.connamespace = n.oid) AND (s.conrelid = c.oid) AND (s.consrc ~~ '%_overview_constraint(%'::text) AND (NOT pg_is_other_temp_schema(c.relnamespace)) AND has_table_privilege(c.oid, 'SELECT'::text));]]></view_script>
			<column name="o_table_catalog" type="name" />
			<column name="o_table_schema" type="name" />
			<column name="o_table_name" type="name" />
			<column name="o_raster_column" type="name" />
			<column name="r_table_catalog" type="name" />
			<column name="r_table_schema" type="name" />
			<column name="r_table_name" type="name" />
			<column name="r_raster_column" type="name" />
			<column name="overview_factor" type="integer" />
		</view>
		<view name="sampleview" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT e.match_id,
    e.team_id,
    e.player_id,
    e.event_id,
    e.minute,
    e.value,
    e.match_events_row_id,
    e.notes,
    e.favor_team_id,
    e.half,
    e.db_schema_id,
    e.fmth_jguid,
    e.fmth_deleted,
    (((t.family_name)::text || ' '::text) || (t.team_name)::text) AS teamplayer,
    t.family_name
   FROM (football.ft_match_events e
     JOIN sports.team_players_view t ON (((t.team_id = e.team_id) AND (t.player_id = e.player_id))));]]></view_script>
			<column name="match_id" type="integer" />
			<column name="team_id" type="smallint" />
			<column name="player_id" type="integer" />
			<column name="event_id" type="smallint" />
			<column name="minute" type="integer" />
			<column name="value" type="smallint" />
			<column name="match_events_row_id" type="bigint" />
			<column name="notes" type="varchar" />
			<column name="favor_team_id" type="integer" />
			<column name="half" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="fmth_jguid" type="varchar" />
			<column name="fmth_deleted" type="boolean" />
			<column name="teamplayer" type="text" />
			<column name="family_name" type="varchar" />
		</view>
		<view name="team_players_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.id,
    t.team_id,
    t.player_id,
    t.season_id,
    t.since,
    t.until,
    t.club_origin_id,
    t.scored,
    t.self_scored,
    t.conceded,
    t.sent_off,
    t.injuries,
    t.minutes,
    t.matches,
    t.score,
    t.votes,
    t.remote_id,
    t.db_schema_id,
    t.jguid,
    t.deleted,
    t.insert_date,
    t.update_date,
    t.user_insert,
    t.user_update,
    p.anagraph_id,
    p.first_name,
    p.family_name,
    p.birth_date,
    p.an_cellular,
    p.an_email,
    p.role_name,
    p.role_code,
    p.birth_year,
    p.birth_place,
    p.notes,
    p.height,
    p.weight,
    p.role_id
   FROM (sports.team_players t
     JOIN sports.players_view p ON ((p.id = t.player_id)))
  WHERE (p.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="bigint" />
			<column name="team_id" type="smallint" />
			<column name="player_id" type="integer" />
			<column name="season_id" type="smallint" />
			<column name="since" type="date" />
			<column name="until" type="date" />
			<column name="club_origin_id" type="integer" />
			<column name="scored" type="smallint" />
			<column name="self_scored" type="smallint" />
			<column name="conceded" type="smallint" />
			<column name="sent_off" type="smallint" />
			<column name="injuries" type="smallint" />
			<column name="minutes" type="smallint" />
			<column name="matches" type="integer" />
			<column name="score" type="integer" />
			<column name="votes" type="float8" />
			<column name="remote_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="anagraph_id" type="integer" />
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="birth_date" type="date" />
			<column name="an_cellular" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="role_name" type="varchar" />
			<column name="role_code" type="varchar" />
			<column name="birth_year" type="smallint" />
			<column name="birth_place" type="varchar" />
			<column name="notes" type="text" />
			<column name="height" type="smallint" />
			<column name="weight" type="smallint" />
			<column name="role_id" type="smallint" />
		</view>
		<sequence name="AO_187CCC_SIDEBAR_LINK_ID_seq" options="START WITH 1" />
		<sequence name="AO_21D670_WHITELIST_RULES_ID_seq" options="START WITH 1" />
		<sequence name="AO_26DB7F_ENTITIES_TO_ROOMS_ID_seq" options="START WITH 1" />
		<sequence name="AO_26DB7F_ENTITIES_TO_ROOM_CFG_ID_seq" options="START WITH 1" />
		<sequence name="AO_38321B_CUSTOM_CONTENT_LINK_ID_seq" options="START WITH 1" />
		<sequence name="AO_42E351_HEALTH_CHECK_ENTITY_ID_seq" options="START WITH 1" />
		<sequence name="AO_54C900_CONTENT_BLUEPRINT_AO_ID_seq" options="START WITH 1" />
		<sequence name="AO_54C900_C_TEMPLATE_REF_ID_seq" options="START WITH 1" />
		<sequence name="AO_54C900_SPACE_BLUEPRINT_AO_ID_seq" options="START WITH 1" />
		<sequence name="AO_5F3884_FEATURE_DISCOVERY_ID_seq" options="START WITH 1" />
		<sequence name="AO_5FB9D7_AOHIP_CHAT_LINK_ID_seq" options="START WITH 1" />
		<sequence name="AO_5FB9D7_AOHIP_CHAT_USER_ID_seq" options="START WITH 1" />
		<sequence name="AO_6384AB_DISCOVERED_ID_seq" options="START WITH 1" />
		<sequence name="AO_6384AB_FEATURE_METADATA_AO_ID_seq" options="START WITH 1" />
		<sequence name="AO_7CDE43_EVENT_ID_seq" options="START WITH 1" />
		<sequence name="AO_7CDE43_FILTER_PARAM_ID_seq" options="START WITH 1" />
		<sequence name="AO_7CDE43_NOTIFICATION_ID_seq" options="START WITH 1" />
		<sequence name="AO_7CDE43_NOTIFICATION_SCHEME_ID_seq" options="START WITH 1" />
		<sequence name="AO_7CDE43_RECIPIENT_ID_seq" options="START WITH 1" />
		<sequence name="AO_7CDE43_SERVER_CONFIG_ID_seq" options="START WITH 1" />
		<sequence name="AO_7CDE43_SERVER_PARAM_ID_seq" options="START WITH 1" />
		<sequence name="AO_88263F_HEALTH_CHECK_STATUS_ID_seq" options="START WITH 1" />
		<sequence name="AO_88263F_PROPERTIES_ID_seq" options="START WITH 1" />
		<sequence name="AO_88263F_READ_NOTIFICATIONS_ID_seq" options="START WITH 1" />
		<sequence name="AO_88BB94_BATCH_NOTIFICATION_ID_seq" options="START WITH 1" />
		<sequence name="AO_92296B_AORECENTLY_VIEWED_ID_seq" options="START WITH 1" />
		<sequence name="AO_9412A1_AONOTIFICATION_ID_seq" options="START WITH 1" />
		<sequence name="AO_9412A1_AOTASK_ID_seq" options="START WITH 1" />
		<sequence name="AO_9412A1_AOUSER_ID_seq" options="START WITH 1" />
		<sequence name="AO_9412A1_USER_APP_LINK_ID_seq" options="START WITH 1" />
		<sequence name="AO_A0B856_WEB_HOOK_LISTENER_AO_ID_seq" options="START WITH 1" />
		<sequence name="AO_BAF3AA_AOINLINE_TASK_GLOBAL_ID_seq" options="START WITH 1" />
		<sequence name="AO_DC98AE_AOHELP_TIP_ID_seq" options="START WITH 1" />
		<sequence name="crgrid_test_id_seq" options="START WITH 1" />
		<sequence name="dept_deptno_seq" options="START WITH 1" />
		<sequence name="emp_empno_seq" options="START WITH 1" />
		<sequence name="locations_sampleid_seq" options="START WITH 1" />
		<sequence name="pgdac_blob_uid_seq" options="START WITH 1" />
		<sequence name="pgdac_text_uid_seq" options="START WITH 1" />
		<sequence name="seq_journal_entry_id" options="START WITH 1" />
		<sequence name="unidac_blob_uid_seq" options="START WITH 1" />
		<sequence name="unidac_text_uid_seq" options="START WITH 1" />
	</schema>
	<schema name="re" catalogname="ergomercator" >
		<table name="buildings" >
			<comment><![CDATA[This is the List of the buildins in a Town Area that can belong to a property]]></comment>
			<column name="building_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="town_area_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_buildings" unique="PRIMARY_KEY" >
				<column name="building_id" />
			</index>
			<index name="idx_buildings" unique="NORMAL" >
				<column name="town_area_id" />
			</index>
			<index name="idx_buildings_0" unique="NORMAL" >
				<column name="town_id" />
			</index>
		</table>
		<table name="properties" >
			<column name="property_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="door_number" type="varchar" length="20" decimal="0" jt="12" />
			<column name="serial" type="smallint" length="5" decimal="0" jt="5" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[unique id and pk]]></comment>
			</column>
			<column name="building_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="pk_properties" unique="PRIMARY_KEY" >
				<column name="property_id" />
			</index>
			<index name="idx_properties" unique="NORMAL" >
				<column name="type_id" />
			</index>
			<index name="idx_properties_0" unique="NORMAL" >
				<column name="building_id" />
			</index>
			<index name="idx_properties_1" unique="NORMAL" >
				<column name="image_id" />
			</index>
			<index name="idx_properties_2" unique="NORMAL" >
				<column name="owner_id" />
			</index>
			<fk name="fk_properties_buildings" to_schema="ergomercator.re" to_table="buildings" delete_action="cascade" update_action="cascade" >
				<fk_column name="building_id" pk="building_id" />
			</fk>
			<fk name="fk_properties" to_schema="ergomercator.re" to_table="property_types" update_action="cascade" >
				<fk_column name="type_id" pk="type_id" />
			</fk>
		</table>
		<table name="properties_galleries" >
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="property_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_properties_galleries" unique="PRIMARY_KEY" >
				<column name="image_id" />
				<column name="property_id" />
			</index>
			<index name="idx_properties_galleries" unique="NORMAL" >
				<column name="image_id" />
			</index>
			<index name="idx_properties_galleries_0" unique="NORMAL" >
				<column name="property_id" />
			</index>
			<fk name="fk_properties_galleries" to_schema="ergomercator.re" to_table="properties" >
				<fk_column name="property_id" pk="property_id" />
			</fk>
		</table>
		<table name="property_types" >
			<comment><![CDATA[This is the list of all properties types .... 

Rooms (Camere)

Apartments or Buildings 

Probably they can be grouped by contracts-subtypes]]></comment>
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[unique id and pk]]></comment>
			</column>
			<column name="type_name" type="varchar" length="20" decimal="0" jt="12" />
			<index name="pk_property_types" unique="UNIQUE_KEY" >
				<column name="type_id" />
			</index>
		</table>
		<table name="rooms" >
			<column name="room_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="beds" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="property_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_rooms" unique="PRIMARY_KEY" >
				<column name="room_id" />
			</index>
			<index name="idx_rooms" unique="NORMAL" >
				<column name="property_id" />
			</index>
			<index name="idx_rooms_0" unique="NORMAL" >
				<column name="image_id" />
			</index>
			<fk name="fk_rooms_properties" to_schema="ergomercator.re" to_table="properties" update_action="cascade" >
				<fk_column name="property_id" pk="property_id" />
			</fk>
		</table>
		<table name="rooms_offers" >
			<column name="offer_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="valid_since" type="date" length="13" decimal="0" jt="91" />
			<column name="valid_until" type="date" length="13" decimal="0" jt="91" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="room_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ended" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="beds_total" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="beds_rent" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="pk_rooms_offers" unique="PRIMARY_KEY" >
				<column name="offer_id" />
			</index>
			<index name="idx_rooms_offers" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_rooms_offers_0" unique="NORMAL" >
				<column name="room_id" />
			</index>
			<fk name="fk_rooms_offers" to_schema="ergomercator.re" to_table="rooms" >
				<fk_column name="room_id" pk="room_id" />
			</fk>
		</table>
		<table name="rooms_tenants" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="since" type="date" length="13" decimal="0" jt="91" mandatory="y" >
				<defo><![CDATA[('now'::text)::date]]></defo>
			</column>
			<column name="room_until" type="date" length="13" decimal="0" jt="91" />
			<column name="room_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tenant_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_rooms_tenants" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_rooms_tenants" unique="NORMAL" >
				<column name="room_id" />
			</index>
			<index name="idx_rooms_tenants_0" unique="NORMAL" >
				<column name="tenant_id" />
			</index>
			<fk name="fk_rooms_tenants" to_schema="ergomercator.re" to_table="rooms" >
				<fk_column name="room_id" pk="room_id" />
			</fk>
		</table>
	</schema>
	<schema name="repository" catalogname="ergomercator" >
		<comment><![CDATA[This is the repository Schema that holds all the updates to the server]]></comment>
		<table name="entities" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="schema" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="singular" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="plural" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="isvirtual" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="model_uid" type="uuid" decimal="0" jt="1111" />
			<column name="query_text" type="text" decimal="0" jt="12" />
			<column name="schema_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[Foreign key to Schema Table]]></comment>
			</column>
			<index name="entities_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="entities_uk" unique="UNIQUE_KEY" >
				<column name="schema" />
				<column name="name" />
			</index>
			<index name="fki_entities_schemas_fk" unique="NORMAL" >
				<column name="schema_jguid" />
			</index>
			<fk name="entities_schemas_fk" to_schema="ergomercator.repository" to_table="schemas" update_action="cascade" >
				<fk_column name="schema_jguid" pk="jguid" />
			</fk>
		</table>
		<table name="fields" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[This UID is an important link to the interface structure and localization of all applications according to this field]]></comment>
			</column>
			<column name="entity_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="fieldname" type="varchar" length="64" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Field Name as registered in Database and in Jorm Structure]]></comment>
			</column>
			<column name="fieldtitle" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The on-screen Field Title this field can be localized using its GUID. Appears both on Grid Title and on LabelTitle a different GridTitle should be implemented]]></comment>
			</column>
			<column name="ongrid" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<comment><![CDATA[this exactly reports if by default the field is on grid or not]]></comment>
			</column>
			<column name="pxwidth" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Pixel Width uses for Grids (not dinamic adapts to hdpi screen)]]></comment>
			</column>
			<column name="db_fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[This is the 'Delphi' DataType not exactly the Native DB DataType]]></comment>
			</column>
			<column name="rs_fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="gridgroup" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[many fields can be grouped in some kind of Grids this example 'groups' the field types together]]></comment>
			</column>
			<column name="exportfield" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="exporttype" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[if different from -1 sets a different type conversion for export]]></comment>
			</column>
			<column name="mask" type="varchar" length="32" decimal="0" jt="12" >
				<comment><![CDATA[if set is used to show the field with a 'mask' format on screen or grid]]></comment>
			</column>
			<column name="gridtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlabel" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlength" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fieldprecisoin" type="smallint" length="5" decimal="0" jt="5" />
			<column name="gridpos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="required" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_table_fields_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="db_table_fields_uk" unique="UNIQUE_KEY" >
				<column name="fieldname" />
				<column name="entity_guid" />
			</index>
			<fk name="fk_fields_entities" to_schema="ergomercator.repository" to_table="entities" update_action="cascade" >
				<fk_column name="entity_guid" pk="jguid" />
			</fk>
			<fk name="fk_fields_fieldtypes" to_schema="ergomercator.repository" to_table="fieldtypes" >
				<fk_column name="db_fieldtype" pk="id" />
			</fk>
			<fk name="fk_fields_fieldtypes_0" to_schema="ergomercator.repository" to_table="fieldtypes" >
				<fk_column name="rs_fieldtype" pk="id" />
			</fk>
			<fk name="fk_fields_fieldtypes_1" to_schema="ergomercator.repository" to_table="fieldtypes" >
				<fk_column name="exporttype" pk="id" />
			</fk>
		</table>
		<table name="fieldtypes" >
			<comment><![CDATA[Field Types according to JanuaProject or Delphi Field Kind Enumerators]]></comment>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="group_id" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="fieldtypes_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="fieldtypes_id_uk" unique="UNIQUE_KEY" >
				<column name="group_id" />
				<column name="id" />
			</index>
			<index name="fieldtypes_name_uk" unique="UNIQUE_KEY" >
				<column name="group_id" />
				<column name="name" />
			</index>
			<index name="unq_fieldtypes_id" unique="UNIQUE_KEY" >
				<column name="id" />
			</index>
			<index name="fki_fieldtypes_groups_fk" unique="NORMAL" >
				<column name="group_id" />
			</index>
			<fk name="fieldtypes_groups_fk" to_schema="ergomercator.repository" to_table="fieldtypes_groups" update_action="cascade" >
				<fk_column name="group_id" pk="jguid" />
			</fk>
		</table>
		<table name="fieldtypes_groups" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="name" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<index name="fieldtypes_groups_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="fieldtypes_groups_uk" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
		</table>
		<table name="params" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="entity_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="fieldname" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="fieldtitle" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="ongrid" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pxwidth" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="rs_fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="gridgroup" type="varchar" length="128" decimal="0" jt="12" />
			<column name="exportfield" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="exporttype" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="32" decimal="0" jt="12" />
			<column name="gridtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlabel" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlength" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fieldprecisoin" type="smallint" length="5" decimal="0" jt="5" />
			<column name="gridpos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="required" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="condition" type="varchar" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['='::character varying]]></defo>
				<comment><![CDATA[Explain the SQL condition operator for the param should be > >= < <= <> like = not like]]></comment>
			</column>
			<fk name="fk_params_entities" to_schema="ergomercator.repository" to_table="entities" update_action="cascade" >
				<fk_column name="entity_guid" pk="jguid" />
			</fk>
		</table>
		<table name="schemas" >
			<comment><![CDATA[List of Logical Schemas]]></comment>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="name" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="prefix" type="char" length="2" decimal="0" jt="1" mandatory="y" />
			<index name="schemas_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="schemas_uk" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
		</table>
	</schema>
	<schema name="school" catalogname="ergomercator" >
		<comment><![CDATA[The School schema for the school Database System]]></comment>
	</schema>
	<schema name="shipping" catalogname="ergomercator" >
		<table name="companies" >
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="company_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_rights" type="varchar" length="3" decimal="0" jt="12" mandatory="y" >
				<defo><![CDATA['321'::character varying]]></defo>
			</column>
			<column name="scm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="scm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="companies_pk" unique="PRIMARY_KEY" >
				<column name="company_id" />
			</index>
			<index name="companies_uk" unique="UNIQUE_KEY" >
				<column name="company_name" />
			</index>
			<index name="scm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="scm_jguid" />
			</index>
		</table>
		<table name="ferry_pricelist" >
			<column name="period_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="line_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="std_price" type="numeric" length="12" decimal="4" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shfp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shfp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ferry_pricelist_pk" unique="PRIMARY_KEY" >
				<column name="period_id" />
				<column name="item_id" />
				<column name="line_id" />
			</index>
			<index name="shfp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shfp_jguid" />
			</index>
			<index name="idx_ferry_pricelist" unique="NORMAL" >
				<column name="item_id" />
			</index>
			<index name="idx_ferry_pricelist_0" unique="NORMAL" >
				<column name="line_id" />
			</index>
			<index name="idx_ferry_pricelist_1" unique="NORMAL" >
				<column name="period_id" />
			</index>
			<fk name="fk_ferry_pricelist" to_schema="ergomercator.shipping" to_table="items_ferry_definitions" >
				<fk_column name="item_id" pk="item_id" />
			</fk>
			<fk name="fk_ferry_pricelist_lines" to_schema="ergomercator.shipping" to_table="lines" >
				<fk_column name="line_id" pk="line_id" />
			</fk>
			<fk name="fk_ferry_pricelist_periods" to_schema="ergomercator.shipping" to_table="lines_periods" >
				<fk_column name="period_id" pk="period_id" />
			</fk>
		</table>
		<table name="ferry_types" >
			<column name="ferry_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="ferry_type_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shft_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shft_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_ferry_types" unique="PRIMARY_KEY" >
				<column name="ferry_type_id" />
			</index>
			<index name="shft_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shft_jguid" />
			</index>
		</table>
		<table name="items_ferry_definitions" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="passenger" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="vehicle" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="min_age" type="smallint" length="5" decimal="0" jt="5" />
			<column name="max_age" type="smallint" length="5" decimal="0" jt="5" />
			<column name="max_length" type="numeric" length="5" decimal="2" jt="2" />
			<column name="min_length" type="numeric" length="5" decimal="2" jt="2" />
			<column name="ferry_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shfd_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shfd_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="items_ferry_definitions_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
			</index>
			<index name="shfd_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shfd_jguid" />
			</index>
			<index name="idx_items_ferry_definitions" unique="NORMAL" >
				<column name="ferry_type_id" />
			</index>
			<fk name="fk_items_ferry_definitions_types" to_schema="ergomercator.shipping" to_table="ferry_types" update_action="cascade" >
				<fk_column name="ferry_type_id" pk="ferry_type_id" />
			</fk>
		</table>
		<table name="lines" >
			<comment><![CDATA[Tabella che indica le linee aziendali]]></comment>
			<column name="line_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="main_port_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="terminal_port_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="line_code" type="varchar" length="4" decimal="0" jt="12" />
			<column name="line_des" type="varchar" length="30" decimal="0" jt="12" />
			<column name="line_type" type="varchar" length="3" decimal="0" jt="12" >
				<defo><![CDATA['T'::character varying]]></defo>
			</column>
			<column name="local" type="varchar" length="3" decimal="0" jt="12" />
			<column name="users" type="varchar" length="3" decimal="0" jt="12" >
				<defo><![CDATA['A'::character varying]]></defo>
			</column>
			<column name="visible" type="varchar" length="3" decimal="0" jt="12" />
			<column name="web" type="varchar" length="3" decimal="0" jt="12" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shln_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shln_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="lines_pk" unique="PRIMARY_KEY" >
				<column name="line_id" />
			</index>
			<index name="shln_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shln_jguid" />
			</index>
			<fk name="line_mainport_fk" to_schema="ergomercator.shipping" to_table="ports" >
				<fk_column name="main_port_id" pk="port_id" />
			</fk>
			<fk name="line_termport_fk" to_schema="ergomercator.shipping" to_table="ports" >
				<fk_column name="terminal_port_id" pk="port_id" />
			</fk>
		</table>
		<table name="lines_periods" >
			<column name="period_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="since" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="until" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="season_code" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="line_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shlp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shlp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_periods" unique="PRIMARY_KEY" >
				<column name="period_id" />
			</index>
			<index name="shlp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shlp_jguid" />
			</index>
			<index name="idx_periods" unique="NORMAL" >
				<column name="season_code" />
			</index>
			<index name="idx_periods_0" unique="NORMAL" >
				<column name="line_id" />
			</index>
			<fk name="fk_periods_lines" to_schema="ergomercator.shipping" to_table="lines" >
				<fk_column name="line_id" pk="line_id" />
			</fk>
			<fk name="fk_periods_seasons" to_schema="ergomercator.shipping" to_table="seasons" >
				<fk_column name="season_code" pk="season_code" />
			</fk>
		</table>
		<table name="lines_ports" >
			<comment><![CDATA[group of port of call per line without timeperiods]]></comment>
			<column name="line_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="port_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="date" length="13" decimal="0" jt="91" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="pk_lines_ports" unique="UNIQUE_KEY" >
				<column name="port_id" />
			</index>
			<index name="idx_lines_ports" unique="NORMAL" >
				<column name="line_id" />
			</index>
			<index name="lines_portsidate_ndx" unique="NORMAL" >
				<column name="insert_date" />
			</index>
			<fk name="fk_lines_ports" to_schema="ergomercator.shipping" to_table="lines" update_action="cascade" >
				<fk_column name="line_id" pk="line_id" />
			</fk>
			<fk name="fk_lines_ports_ports" to_schema="ergomercator.shipping" to_table="ports" >
				<fk_column name="port_id" pk="port_id" />
			</fk>
		</table>
		<table name="lines_routes" >
			<comment><![CDATA[Tabella che indica le linee aziendali]]></comment>
			<column name="route_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Primary Key]]></comment>
			</column>
			<column name="line_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Numero   identificativo della linea]]></comment>
			</column>
			<column name="from_port_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Porto di  
    partenza]]></comment>
			</column>
			<column name="to_port_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Porto di   Destino]]></comment>
			</column>
			<column name="line_code" type="varchar" length="6" decimal="0" jt="12" >
				<comment><![CDATA[Codice Abbreviativo Linea es GOANAP]]></comment>
			</column>
			<column name="line_des" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[Descrizione Linea Estesa es: GENOVA-PALERMO]]></comment>
			</column>
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Data Inserimento]]></comment>
			</column>
			<column name="update_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Data Aggiornamento]]></comment>
			</column>
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Id Inserimento]]></comment>
			</column>
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[Id Aggiornamento]]></comment>
			</column>
			<column name="line_type" type="char" length="1" decimal="0" jt="1" >
				<defo><![CDATA['T'::bpchar]]></defo>
				<comment><![CDATA[Indica se la linea-rotta indicata e una linea L, tratta T, somma di + tratte S: solo le 'T' portano ad una verifica posti]]></comment>
			</column>
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[Utente Creatore]]></comment>
			</column>
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[Ultimo accesso]]></comment>
			</column>
			<column name="local" type="varchar" length="3" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Tabella Locale]]></comment>
			</column>
			<column name="db_role_level" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="visible" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[Righs 'linux way' 3 = owner can do all, 3 group can do all, 3 guests public can do all or 0 not public visible]]></comment>
			</column>
			<column name="web" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[true]]></defo>
				<comment><![CDATA[is web Visible? (e.g. Public Visibly)]]></comment>
			</column>
			<column name="return_route_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[The Retouring Route]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shlr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shlr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="shlinroutes_pk" unique="PRIMARY_KEY" >
				<column name="route_id" />
			</index>
			<index name="line_code_uk" unique="UNIQUE_INDEX" >
				<column name="line_code" />
			</index>
			<index name="lines_i_from_port_id" unique="UNIQUE_KEY" >
				<column name="from_port_id" />
			</index>
			<index name="lines_i_to_port_id" unique="UNIQUE_KEY" >
				<column name="to_port_id" />
			</index>
			<index name="shlinroutes_uk" unique="UNIQUE_KEY" >
				<column name="line_id" />
				<column name="from_port_id" />
				<column name="to_port_id" />
			</index>
			<index name="shlr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shlr_jguid" />
			</index>
			<index name="idx_lines_routes" unique="NORMAL" >
				<column name="line_id" />
			</index>
			<index name="linesidate_ndx" unique="NORMAL" >
				<column name="insert_date" />
			</index>
			<fk name="fk_lines_routes" to_schema="ergomercator.shipping" to_table="lines" >
				<fk_column name="line_id" pk="line_id" />
			</fk>
		</table>
		<table name="ports" >
			<comment><![CDATA[All the ports served by our vessels, we can add even a thousand ports]]></comment>
			<column name="port_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[internal autoinc numeric]]></comment>
			</column>
			<column name="name" type="varchar" length="40" decimal="0" jt="12" >
				<comment><![CDATA[short name description]]></comment>
			</column>
			<column name="code" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[international port code]]></comment>
			</column>
			<column name="country" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[the iso code of the country]]></comment>
			</column>
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[insert date]]></comment>
			</column>
			<column name="update_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[update date]]></comment>
			</column>
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[local (owner) ins id]]></comment>
			</column>
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" >
				<comment><![CDATA[local (owner) upd_id]]></comment>
			</column>
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[user insert]]></comment>
			</column>
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[user update]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shpr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shpr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ports_pk" unique="PRIMARY_KEY" >
				<column name="port_id" />
			</index>
			<index name="shpr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shpr_jguid" />
			</index>
			<index name="portsidate_ndx" unique="NORMAL" >
				<column name="insert_date" />
			</index>
			<fk name="fk_ports_lines" to_schema="ergomercator.shipping" to_table="lines_ports" >
				<fk_column name="port_id" pk="port_id" />
			</fk>
			<fk name="fk_ports" to_schema="ergomercator.shipping" to_table="lines_routes" >
				<fk_column name="port_id" pk="from_port_id" />
			</fk>
			<fk name="fk_ports_0" to_schema="ergomercator.shipping" to_table="lines_routes" >
				<fk_column name="port_id" pk="to_port_id" />
			</fk>
		</table>
		<table name="seasons" >
			<column name="season_code" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shsn_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shsn_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_seasons" unique="PRIMARY_KEY" >
				<column name="season_code" />
			</index>
			<index name="shsn_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shsn_jguid" />
			</index>
		</table>
		<table name="timetable" >
			<column name="timetable_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="route_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="vessel_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Foreign key to Vessels Table]]></comment>
			</column>
			<column name="departure_day" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Departure Day]]></comment>
			</column>
			<column name="departure_hours" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Departure Hours]]></comment>
			</column>
			<column name="departure_mins" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Departure Mins]]></comment>
			</column>
			<column name="period_id" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[Period (Season) foreign key to Periods-Lines]]></comment>
			</column>
			<column name="arrival_hours" type="smallint" length="5" decimal="0" jt="5" />
			<column name="arrival_mins" type="smallint" length="5" decimal="0" jt="5" />
			<column name="available_length" type="smallint" length="5" decimal="0" jt="5" />
			<column name="maximum_length" type="smallint" length="5" decimal="0" jt="5" />
			<column name="avalable_space" type="smallint" length="5" decimal="0" jt="5" />
			<column name="maximum_space" type="smallint" length="5" decimal="0" jt="5" />
			<column name="available_places" type="smallint" length="5" decimal="0" jt="5" />
			<column name="maximum_places" type="smallint" length="5" decimal="0" jt="5" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="date" length="13" decimal="0" jt="91" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="weekday" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pairunpair" type="smallint" length="5" decimal="0" jt="5" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="year" type="smallint" length="5" decimal="0" jt="5" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="delay_days" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[2]]></defo>
			</column>
			<column name="stopsales" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="doctor" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[this field ('N' or 'Y') indicates if a doctor is required on board .. using a limit on passengers (the limit is on a field on vessels table)]]></comment>
			</column>
			<column name="season" type="char" length="1" decimal="0" jt="1" />
			<column name="tmt_note" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="card" type="varchar" length="6" decimal="0" jt="12" />
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="season_code" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shtm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shtm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_timetable" unique="PRIMARY_KEY" >
				<column name="timetable_id" />
			</index>
			<index name="shtm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shtm_jguid" />
			</index>
			<index name="idx_timetable" unique="NORMAL" >
				<column name="route_id" />
			</index>
			<index name="idx_timetable_0" unique="NORMAL" >
				<column name="company_id" />
			</index>
			<index name="idx_timetable_1" unique="NORMAL" >
				<column name="season_code" />
			</index>
			<index name="time_vess_fk_i" unique="NORMAL" >
				<column name="vessel_id" />
			</index>
			<index name="timetable_year" unique="NORMAL" >
				<column name="year" />
			</index>
			<index name="timetableidate_ndx" unique="NORMAL" >
				<column name="insert_date" />
			</index>
			<fk name="fk_timetable_companies" to_schema="ergomercator.shipping" to_table="companies" >
				<fk_column name="company_id" pk="company_id" />
			</fk>
			<fk name="fk_timetable" to_schema="ergomercator.shipping" to_table="lines_routes" >
				<fk_column name="route_id" pk="route_id" />
			</fk>
			<fk name="fk_timetable_seasons" to_schema="ergomercator.shipping" to_table="seasons" >
				<fk_column name="season_code" pk="season_code" />
			</fk>
			<fk name="fk_timetable_vessels" to_schema="ergomercator.shipping" to_table="vessels" >
				<fk_column name="vessel_id" pk="vessel_id" />
			</fk>
		</table>
		<table name="timetable_places" >
			<column name="timetable_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="ferry_type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="places" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="allocated_places" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="shtp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="shtp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="timetable_places_pk" unique="PRIMARY_KEY" >
				<column name="timetable_id" />
				<column name="ferry_type_id" />
			</index>
			<index name="shtp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="shtp_jguid" />
			</index>
			<index name="idx_timetable_places" unique="NORMAL" >
				<column name="ferry_type_id" />
			</index>
			<index name="idx_timetable_places_0" unique="NORMAL" >
				<column name="timetable_id" />
			</index>
			<fk name="fk_timetable_places_types" to_schema="ergomercator.shipping" to_table="ferry_types" >
				<fk_column name="ferry_type_id" pk="ferry_type_id" />
			</fk>
			<fk name="fk_timetable_places" to_schema="ergomercator.shipping" to_table="timetable" delete_action="cascade" update_action="cascade" >
				<fk_column name="timetable_id" pk="timetable_id" />
			</fk>
		</table>
		<table name="timetable_prices" >
			<column name="std_price" type="numeric" length="12" decimal="4" jt="2" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="timetable_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="idx_timetable_prices" unique="NORMAL" >
				<column name="timetable_id" />
			</index>
			<index name="idx_timetable_prices_0" unique="NORMAL" >
				<column name="item_id" />
			</index>
			<fk name="fk_timetable_prices_0" to_schema="ergomercator.shipping" to_table="items_ferry_definitions" >
				<fk_column name="item_id" pk="item_id" />
			</fk>
			<fk name="fk_timetable_prices" to_schema="ergomercator.shipping" to_table="timetable" >
				<fk_column name="timetable_id" pk="timetable_id" />
			</fk>
		</table>
		<table name="vessel_departments" >
			<comment><![CDATA[A Vessel can be organized into departements]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Vessel Department identification]]></comment>
			</column>
			<column name="description" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Vessel Department basic description]]></comment>
			</column>
			<column name="guid" type="uuid" decimal="0" jt="1111" >
				<comment><![CDATA[GUID identifier for description]]></comment>
			</column>
			<index name="pk_vessel_departments_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="vessels" >
			<comment><![CDATA[All the ships owned by the carrier]]></comment>
			<column name="vessel_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<type_extra><![CDATA[GENERATED ALWAYS AS IDENTITY]]></type_extra>
			</column>
			<column name="name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[short name of the vessel]]></comment>
			</column>
			<column name="code" type="varchar" length="15" decimal="0" jt="12" >
				<comment><![CDATA[Code of the vessel]]></comment>
			</column>
			<column name="net_tonnage" type="numeric" length="7" decimal="2" jt="2" >
				<comment><![CDATA[Net vessel tonnage]]></comment>
			</column>
			<column name="gross_tonnage" type="numeric" length="7" decimal="2" jt="2" >
				<comment><![CDATA[Gross vessel tonnage, in tonnellate di mare, volume]]></comment>
			</column>
			<column name="deadweight" type="numeric" length="7" decimal="2" jt="2" >
				<comment><![CDATA[Dead Weight  (Portata lorda espressa in tonnellate di peso)]]></comment>
			</column>
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="date" length="13" decimal="0" jt="91" />
			<column name="ins_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="upd_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_insert_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_update_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="passenger_limit" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[This field contains the limit passenger numeric that tells us if a ship requires a doctor on board]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="notes" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_char_1" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_char_2" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_char_3" type="varchar" length="128" decimal="0" jt="12" />
			<column name="custom_int_1" type="integer" length="10" decimal="0" jt="4" />
			<column name="custom_int_2" type="integer" length="10" decimal="0" jt="4" />
			<column name="custom_int_3" type="integer" length="10" decimal="0" jt="4" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="vessels_pk" unique="PRIMARY_KEY" >
				<column name="vessel_id" />
			</index>
			<index name="vessels_codes_uk" unique="UNIQUE_KEY" >
				<column name="vessel_id" />
				<column name="db_schema_id" />
			</index>
			<index name="vessels_code_ndx" unique="NORMAL" >
				<column name="code" />
			</index>
			<index name="vesselsidate_ndx" unique="NORMAL" >
				<column name="insert_date" />
			</index>
		</table>
		<sequence name="vessels_seq" options="START WITH 1" />
		<trigger name="scm_bi_trg" table="companies" id="Trigger_1f54" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER scm_bi_trg BEFORE INSERT OR UPDATE ON shipping.companies FOR EACH ROW EXECUTE PROCEDURE shipping.scm_trg()]]></string>
		</trigger>
		<trigger name="shfd_bi_trg" table="items_ferry_definitions" id="Trigger_20fb" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shfd_bi_trg BEFORE INSERT OR UPDATE ON shipping.items_ferry_definitions FOR EACH ROW EXECUTE PROCEDURE shipping.shfd_trg()]]></string>
		</trigger>
		<trigger name="shfp_bi_trg" table="ferry_pricelist" id="Trigger_24e9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shfp_bi_trg BEFORE INSERT OR UPDATE ON shipping.ferry_pricelist FOR EACH ROW EXECUTE PROCEDURE shipping.shfp_trg()]]></string>
		</trigger>
		<trigger name="shft_bi_trg" table="ferry_types" id="Trigger_187f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shft_bi_trg BEFORE INSERT OR UPDATE ON shipping.ferry_types FOR EACH ROW EXECUTE PROCEDURE shipping.shft_trg()]]></string>
		</trigger>
		<trigger name="shln_bi_trg" table="lines" id="Trigger_20c9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shln_bi_trg BEFORE INSERT OR UPDATE ON shipping.lines FOR EACH ROW EXECUTE PROCEDURE shipping.shln_trg()]]></string>
		</trigger>
		<trigger name="shlp_bi_trg" table="lines_periods" id="Trigger_1334" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shlp_bi_trg BEFORE INSERT OR UPDATE ON shipping.lines_periods FOR EACH ROW EXECUTE PROCEDURE shipping.shlp_trg()]]></string>
		</trigger>
		<trigger name="shlr_bi_trg" table="lines_routes" id="Trigger_1fea" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shlr_bi_trg BEFORE INSERT OR UPDATE ON shipping.lines_routes FOR EACH ROW EXECUTE PROCEDURE shipping.shlr_trg()]]></string>
		</trigger>
		<trigger name="shpr_bi_trg" table="ports" id="Trigger_1ff7" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shpr_bi_trg BEFORE INSERT OR UPDATE ON shipping.ports FOR EACH ROW EXECUTE PROCEDURE shipping.shpr_trg()]]></string>
		</trigger>
		<trigger name="shsn_bi_trg" table="seasons" id="Trigger_209e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shsn_bi_trg BEFORE INSERT OR UPDATE ON shipping.seasons FOR EACH ROW EXECUTE PROCEDURE shipping.shsn_trg()]]></string>
		</trigger>
		<trigger name="shtm_bi_trg" table="timetable" id="Trigger_15b1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shtm_bi_trg BEFORE INSERT OR UPDATE ON shipping.timetable FOR EACH ROW EXECUTE PROCEDURE shipping.shtm_trg()]]></string>
		</trigger>
		<trigger name="shtp_bi_trg" table="timetable_places" id="Trigger_12b" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER shtp_bi_trg BEFORE INSERT OR UPDATE ON shipping.timetable_places FOR EACH ROW EXECUTE PROCEDURE shipping.shtp_trg()]]></string>
		</trigger>
		<function name="get_vesselname_by_id" id="Function_93b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.get_vesselname_by_id(p_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R character varying; 
begin
  R := null; 
  select into I count(1)
     from shipping.vessels a
	 where
	  a.vessel_id = p_id;
		
	if I = 1 then
    select into R  name
      from shipping.vessels a
	 where
	    a.vessel_id = p_id;
	end if; 
	
   return R; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
		</function>
		<function name="scm_trg" id="Function_d9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.scm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.scm_jguid is null then
     New.scm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.scm_deleted is null then
     New.scm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shfd_trg" id="Function_1569" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shfd_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shfd_jguid is null then
     New.shfd_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shfd_deleted is null then
     New.shfd_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shfp_trg" id="Function_1cde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shfp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shfp_jguid is null then
     New.shfp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shfp_deleted is null then
     New.shfp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shft_trg" id="Function_1327" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shft_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shft_jguid is null then
     New.shft_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shft_deleted is null then
     New.shft_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shln_trg" id="Function_211c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shln_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shln_jguid is null then
     New.shln_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shln_deleted is null then
     New.shln_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shlp_trg" id="Function_1af1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shlp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shlp_jguid is null then
     New.shlp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shlp_deleted is null then
     New.shlp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shlr_trg" id="Function_a77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shlr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shlr_jguid is null then
     New.shlr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shlr_deleted is null then
     New.shlr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shpr_trg" id="Function_24c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shpr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shpr_jguid is null then
     New.shpr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shpr_deleted is null then
     New.shpr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shsn_trg" id="Function_c65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shsn_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shsn_jguid is null then
     New.shsn_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shsn_deleted is null then
     New.shsn_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shtm_trg" id="Function_a55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shtm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shtm_jguid is null then
     New.shtm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shtm_deleted is null then
     New.shtm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shtp_trg" id="Function_2687" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shtp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shtp_jguid is null then
     New.shtp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shtp_deleted is null then
     New.shtp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shvessels_id_trg" id="Function_2380" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shvessels_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if new.vessel_id is null or new.vessel_id = 0 then 
     new.vessel_id := nextval('shipping.vessels_seq') ; 
  end if;  
  return new;  
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="shvs_trg" id="Function_22d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.shvs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.shvs_jguid is null then
     New.shvs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.shvs_deleted is null then
     New.shvs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="vessels_get_id_by_code" id="Function_12b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION shipping.vessels_get_id_by_code(p_code character varying, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
begin
  R := null; 
  select into I count(1)
     from shipping.vessels a
	 where
	    Lower(a.code) = Lower(p_code) 
		and db_schema_id = p_schema_id; 
		
	if I = 1 then
    select into R vessel_id 
     from shipping.vessels a
	 where
	    Lower(a.code) = Lower(p_code) 
		and db_schema_id = p_schema_id; 	
	end if; 
	
   return R; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="social" catalogname="ergomercator" >
		<table name="messages" >
			<column name="message_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="from_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="to_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subject" type="varchar" length="512" decimal="0" jt="12" />
			<column name="msg_text" type="text" decimal="0" jt="12" />
			<column name="shorttext" type="varchar" length="4000" decimal="0" jt="12" />
			<column name="msg_datetime" type="timestamptz" length="12" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="msg_read" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="msg_sent" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="messages_pk" unique="PRIMARY_KEY" >
				<column name="message_id" />
			</index>
			<index name="idx_messages" unique="NORMAL" >
				<column name="from_id" />
			</index>
			<index name="idx_messages_0" unique="NORMAL" >
				<column name="to_id" />
			</index>
		</table>
		<table name="msg_attachments" >
			<column name="external_file_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="message_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="readonly" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="msg_attachments_pk" unique="PRIMARY_KEY" >
				<column name="external_file_id" />
				<column name="message_id" />
			</index>
			<index name="idx_msg_attachments" unique="NORMAL" >
				<column name="message_id" />
			</index>
			<index name="idx_msg_attachments_0" unique="NORMAL" >
				<column name="external_file_id" />
			</index>
			<fk name="fk_msg_attachments_msg" to_schema="ergomercator.social" to_table="messages" >
				<fk_column name="message_id" pk="message_id" />
			</fk>
		</table>
		<sequence name="messages_seq" options="START WITH 1" />
		<function name="insert_message" id="Function_d70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION social.insert_message(in_from_id integer, in_to_id integer, in_subject character varying, in_text character varying)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$declare
	i bigint; 
begin
  i := nextval('social.messages_seq');
/*
  self.spInsertMessage.ParamByName('').Value := aMessage.from_id;
  self.spInsertMessage.ParamByName('').Value := aMessage.to_id;
  self.spInsertMessage.ParamByName('').Value := aMessage.subject;
  self.spInsertMessage.ParamByName('').Value := aMessage.Text;
*/
  
  insert into messages(message_id, from_id, to_id, subject, msg_text, msg_datetime, msg_read, msg_sent)
  values (i, in_from_id, in_to_id, in_subject, in_text, Now(), false, true);
   return i; 
end;  
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="in_from_id" jt="4" type="int4" />
			<input_param name="in_to_id" jt="4" type="int4" />
			<input_param name="in_subject" jt="12" type="varchar" />
			<input_param name="in_text" jt="12" type="varchar" />
		</function>
	</schema>
	<schema name="sportmedia" catalogname="ergomercator" >
		<table name="allenatori" >
			<column name="IDAllenatore" type="integer" length="10" decimal="0" jt="4" />
			<column name="Nome" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Cognome" type="varchar" length="50" decimal="0" jt="12" />
			<column name="DataDiNascita" type="timestamptz" length="12" decimal="6" jt="93" />
		</table>
		<table name="atleti" >
			<column name="idatleta" type="integer" length="10" decimal="0" jt="4" />
			<column name="nome" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cognome" type="varchar" length="255" decimal="0" jt="12" />
			<column name="nascita" type="varchar" length="255" decimal="0" jt="12" />
			<column name="luogo_nascita" type="varchar" length="50" decimal="0" jt="12" />
			<column name="ruolo" type="varchar" length="255" decimal="0" jt="12" />
			<column name="nota" type="varchar" length="255" decimal="0" jt="12" />
			<column name="foto" type="varchar" length="255" decimal="0" jt="12" />
		</table>
		<sequence name="allenatori_seq" options="START WITH 1" />
	</schema>
	<schema name="swap" catalogname="ergomercator" >
		<table name="events" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="creator_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="title" type="varchar" decimal="0" jt="12" />
			<column name="address" type="varchar" length="512" decimal="0" jt="12" />
			<column name="main_picture_url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="event_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="description" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="hour" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mins" type="smallint" length="5" decimal="0" jt="5" />
			<column name="price" type="real" length="8" decimal="8" jt="7" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="currency_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="active" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<column name="participants" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="events_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="fki_events_creator_fk" unique="NORMAL" >
				<column name="creator_id" />
			</index>
		</table>
		<table name="events_users" >
			<column name="event_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="isadmin" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="events_participants_pk" unique="PRIMARY_KEY" >
				<column name="event_id" />
				<column name="user_id" />
			</index>
			<fk name="events_participants_events_fk" to_schema="ergomercator.swap" to_table="events" >
				<fk_column name="event_id" pk="id" />
			</fk>
		</table>
		<table name="followers" >
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="follower_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<index name="followers_pk" unique="PRIMARY_KEY" >
				<column name="user_id" />
				<column name="follower_id" />
			</index>
			<index name="db_followers_follower_fk_ndx" unique="NORMAL" >
				<column name="follower_id" />
			</index>
			<index name="db_followers_users_fk_ndx" unique="NORMAL" >
				<column name="user_id" />
			</index>
		</table>
		<table name="items" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="description" type="varchar" decimal="0" jt="12" />
			<column name="url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="available" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="swapped" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="likes" type="smallint" length="5" decimal="0" jt="5" />
			<index name="items_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="items_owners_fk_ndx" unique="NORMAL" >
				<column name="owner_id" />
			</index>
		</table>
		<table name="items_archived" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="description" type="varchar" decimal="0" jt="12" />
			<column name="url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="available" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="swapped" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="likes" type="smallint" length="5" decimal="0" jt="5" />
		</table>
		<table name="items_discovered" >
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<index name="items_discovered_pk" unique="PRIMARY_KEY" >
				<column name="user_id" />
				<column name="item_id" />
			</index>
			<fk name="items_discovered_items_fk" to_schema="ergomercator.swap" to_table="items" >
				<fk_column name="item_id" pk="id" />
			</fk>
		</table>
		<table name="items_dislikes" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<index name="items_dislikes_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
				<column name="user_id" />
			</index>
		</table>
		<table name="items_images" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<index name="items_images_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="items_images_items_fk" to_schema="ergomercator.swap" to_table="items" >
				<fk_column name="item_id" pk="id" />
			</fk>
		</table>
		<table name="items_likes" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<index name="items_likes_pk" unique="PRIMARY_KEY" >
				<column name="item_id" />
				<column name="user_id" />
			</index>
		</table>
		<table name="items_likes_archived" >
			<column name="item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
		</table>
		<table name="notifications" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The notification Title]]></comment>
			</column>
			<column name="other_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="user_item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="swap_item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="user_name" type="varchar" decimal="0" jt="12" />
			<column name="user_avatar_img" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="swap_item_image" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="user_item_image" type="varchar" decimal="0" jt="12" />
			<column name="swap_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="nread" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Boolean Read Notification when it is read it becomes true]]></comment>
			</column>
			<column name="event_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="event_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="event_date" type="date" length="13" decimal="0" jt="91" />
			<column name="event_address" type="varchar" length="128" decimal="0" jt="12" />
			<column name="item_description" type="varchar" length="256" decimal="0" jt="12" />
			<index name="notifications_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="fki_notification_swap_item_fk" unique="NORMAL" >
				<column name="swap_item_id" />
			</index>
			<index name="fki_notification_user_fk" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<index name="fki_notification_user_item_fk" unique="NORMAL" >
				<column name="user_item_id" />
			</index>
			<index name="notification_types_fk_ndx" unique="NORMAL" >
				<column name="type_id" />
			</index>
			<fk name="notification_swap_item_fk" to_schema="ergomercator.swap" to_table="items" >
				<fk_column name="swap_item_id" pk="id" />
			</fk>
			<fk name="notification_user_item_fk" to_schema="ergomercator.swap" to_table="items" >
				<fk_column name="user_item_id" pk="id" />
			</fk>
		</table>
		<table name="notifications_profiles" >
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="active" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="notifications_profiles_pk" unique="PRIMARY_KEY" >
				<column name="type_id" />
				<column name="user_id" />
			</index>
			<fk name="notifications_profiles_types_fk" to_schema="ergomercator.swap" to_table="notifications_types" >
				<fk_column name="type_id" pk="id" />
			</fk>
		</table>
		<table name="notifications_types" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="feed" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<column name="group_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="notification_types_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="notification_feed_ndx" unique="NORMAL" >
				<column name="feed" />
			</index>
		</table>
		<table name="profiles" >
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="following" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="followers" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="swaps" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="notifications" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="unread" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="likes" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="followingyou" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
				<comment><![CDATA[New Followers will appear in Notifications]]></comment>
			</column>
			<column name="likewantobject" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<column name="eventupdates" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="followaddeditem" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="privateaccount" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="subcriptionvalid" type="date" length="13" decimal="0" jt="91" />
			<column name="privacypolicy" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<column name="termsofservice" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<index name="profiles_pk" unique="PRIMARY_KEY" >
				<column name="user_id" />
			</index>
		</table>
		<table name="swaps" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="to_item_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="completed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="closed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="to_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="status" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<index name="swaps_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="swaps_items_uk" unique="UNIQUE_KEY" >
				<column name="from_item_id" />
				<column name="to_item_id" />
			</index>
			<index name="fki_swap_status_fk" unique="NORMAL" >
				<column name="status" />
			</index>
			<index name="swaps_user_fk_ndx" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<fk name="swap_from_items_fk" to_schema="ergomercator.swap" to_table="items" >
				<fk_column name="from_item_id" pk="id" />
			</fk>
			<fk name="swap_status_fk" to_schema="ergomercator.swap" to_table="swaps_status" >
				<fk_column name="status" pk="id" />
			</fk>
		</table>
		<table name="swaps_messages" >
			<column name="message_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="swap_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="message" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="image_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="from_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="insert_date" type="timestamp" decimal="6" jt="93" />
			<index name="swaps_messages_pk" unique="PRIMARY_KEY" >
				<column name="message_id" />
			</index>
			<index name="fki_swaps_messages_swaps_fk" unique="NORMAL" >
				<column name="swap_id" />
			</index>
			<fk name="swaps_messages_swaps_fk" to_schema="ergomercator.swap" to_table="swaps" >
				<fk_column name="swap_id" pk="id" />
			</fk>
		</table>
		<table name="swaps_status" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="30" decimal="0" jt="12" />
			<index name="swap_status_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<view name="swaps_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT s.user_id,
    s.user_id AS from_user_id,
    false AS canclose,
    s.to_user_id AS other_user_id,
    (((d.user_first_name)::text || ' '::text) || (d.user_family_name)::text) AS other_user,
    d.image_url AS other_user_img,
    s.from_item_id AS item_id,
    s.to_item_id AS other_item_id,
    i.url AS item_image_url,
    i2.url AS other_image_url,
    s.id AS swap_id,
    s.insert_date,
    swap.isfollowed(s.user_id, s.to_user_id) AS isfollowed,
    swap.isfollowing(s.user_id, s.to_user_id) AS isfollowing,
    s.status
   FROM swap.swaps s,
    system.db_users d,
    swap.items i,
    swap.items i2
  WHERE ((s.to_user_id = d.db_user_id) AND (i.id = s.from_item_id) AND (i2.id = s.to_item_id))
UNION
 SELECT s.to_user_id AS user_id,
    s.user_id AS from_user_id,
    true AS canclose,
    s.user_id AS other_user_id,
    (((d.user_first_name)::text || ' '::text) || (d.user_family_name)::text) AS other_user,
    d.image_url AS other_user_img,
    s.to_item_id AS item_id,
    s.from_item_id AS other_item_id,
    i.url AS item_image_url,
    i2.url AS other_image_url,
    s.id AS swap_id,
    s.insert_date,
    swap.isfollowed(s.to_user_id, s.user_id) AS isfollowed,
    swap.isfollowing(s.to_user_id, s.user_id) AS isfollowing,
    s.status
   FROM swap.swaps s,
    system.db_users d,
    swap.items i,
    swap.items i2
  WHERE ((s.user_id = d.db_user_id) AND (i.id = s.to_item_id) AND (i2.id = s.from_item_id));]]></view_script>
			<column name="user_id" type="integer" />
			<column name="from_user_id" type="integer" />
			<column name="canclose" type="boolean" />
			<column name="other_user_id" type="integer" />
			<column name="other_user" type="text" />
			<column name="other_user_img" type="varchar" />
			<column name="item_id" type="bigint" />
			<column name="other_item_id" type="bigint" />
			<column name="item_image_url" type="varchar" />
			<column name="other_image_url" type="varchar" />
			<column name="swap_id" type="bigint" />
			<column name="insert_date" type="timestamptz" />
			<column name="isfollowed" type="boolean" />
			<column name="isfollowing" type="boolean" />
			<column name="status" type="smallint" />
		</view>
		<sequence name="events_seq" options="START WITH 1" />
		<sequence name="items_images_seq" options="START WITH 1" />
		<sequence name="items_seq" options="START WITH 1" />
		<sequence name="messages_seq" options="START WITH 1" />
		<sequence name="notifications_seq" options="START WITH 1" />
		<sequence name="swaps_seq" options="START WITH 1" />
		<trigger name="events_insert_date_bi_trg" table="events" id="Trigger_14b3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER events_insert_date_bi_trg BEFORE INSERT ON swap.events FOR EACH ROW EXECUTE PROCEDURE swap.insert_date_new()]]></string>
		</trigger>
		<trigger name="events_new_id_bi_trg" table="events" id="Trigger_10f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER events_new_id_bi_trg BEFORE INSERT ON swap.events FOR EACH ROW EXECUTE PROCEDURE swap.events_new_id()]]></string>
		</trigger>
		<trigger name="followers_ad_trg" table="followers" id="Trigger_742" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER followers_ad_trg AFTER DELETE ON swap.followers FOR EACH ROW EXECUTE PROCEDURE swap.followers_adel_trg()]]></string>
		</trigger>
		<trigger name="followers_ai_trg" table="followers" id="Trigger_1645" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER followers_ai_trg AFTER INSERT ON swap.followers FOR EACH ROW EXECUTE PROCEDURE swap.followers_afterins_trg()]]></string>
		</trigger>
		<trigger name="items_delete_bd_trg" table="items" id="Trigger_d80" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER items_delete_bd_trg BEFORE DELETE ON swap.items FOR EACH ROW EXECUTE PROCEDURE swap.items_delete()]]></string>
		</trigger>
		<trigger name="items_images_new_id_bi_trg" table="items_images" id="Trigger_1e0e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER items_images_new_id_bi_trg BEFORE INSERT ON swap.items_images FOR EACH ROW EXECUTE PROCEDURE swap.items_images_new_id()]]></string>
		</trigger>
		<trigger name="items_insert_date_bi_trg" table="items" id="Trigger_a58" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER items_insert_date_bi_trg BEFORE INSERT ON swap.items FOR EACH ROW EXECUTE PROCEDURE swap.insert_date_new()]]></string>
		</trigger>
		<trigger name="items_likes_ai_trg" table="items_likes" id="Trigger_26ae" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER items_likes_ai_trg AFTER INSERT ON swap.items_likes FOR EACH ROW EXECUTE PROCEDURE swap.likes_update_ai_trg()]]></string>
		</trigger>
		<trigger name="items_new_id_bi_trg" table="items" id="Trigger_2671" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER items_new_id_bi_trg BEFORE INSERT ON swap.items FOR EACH ROW EXECUTE PROCEDURE swap.items_new_id()]]></string>
		</trigger>
		<trigger name="notifications_count_ai_trg" table="notifications" id="Trigger_1cfd" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER notifications_count_ai_trg AFTER INSERT ON swap.notifications FOR EACH ROW EXECUTE PROCEDURE swap.notifications_ainsert_trg()]]></string>
		</trigger>
		<trigger name="notifications_delete_ad_trg" table="notifications" id="Trigger_74" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER notifications_delete_ad_trg AFTER DELETE ON swap.notifications FOR EACH ROW EXECUTE PROCEDURE swap.notifications_adel_trg()]]></string>
		</trigger>
		<trigger name="notifications_new_id_bi_trg" table="notifications" id="Trigger_d9d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER notifications_new_id_bi_trg BEFORE INSERT ON swap.notifications FOR EACH ROW EXECUTE PROCEDURE swap.notifications_new_id()]]></string>
		</trigger>
		<trigger name="notifications_update_bu_trg" table="notifications" id="Trigger_156d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER notifications_update_bu_trg BEFORE UPDATE ON swap.notifications FOR EACH ROW EXECUTE PROCEDURE swap.notifications_bupd_trg()]]></string>
		</trigger>
		<trigger name="swaps_new_bi_trg" table="swaps" id="Trigger_1d8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER swaps_new_bi_trg BEFORE INSERT OR UPDATE ON swap.swaps FOR EACH ROW EXECUTE PROCEDURE swap.swaps_new_id()]]></string>
		</trigger>
		<trigger name="swaps_status_bu_trg" table="swaps" id="Trigger_33" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER swaps_status_bu_trg BEFORE UPDATE ON swap.swaps FOR EACH ROW EXECUTE PROCEDURE swap.swaps_bupdate_trg()]]></string>
		</trigger>
		<function name="clean" id="Function_309" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.clean()
 RETURNS void
 LANGUAGE plpgsql
AS $function$
begin
delete from swap.notifications; 
delete from swap.swaps_messages;
delete from swap.swaps; 
delete from swap.events_users; 
delete from swap.events;
delete from swap.followers;
delete from swap.items_images;
delete from swap.items_likes;
delete from swap.items_discovered;
delete from swap.items;
delete from swap.profiles;
delete from system.db_user_sessions;
delete from system.db_users_profiles where db_user_id >= 200;
delete from system.db_users_schemas where db_user_id >= 200;
delete from system.db_users where db_user_id >= 200;
end
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="event_add_user" id="Function_4cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.event_add_user(p_event_id integer, p_user_id integer, isadmin boolean, OUT result boolean, OUT errormessage character varying, OUT errorcode character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  btest boolean; 
  r_event record; 
begin
   
   --- checks if user is participating to event ................................
   btest := not swap.participate(p_event_id, p_user_id); 
   
   if not btest then 
   
     errormessage := 'User Already added to Event'; 
     errorcode := 'SW-EV-R02';   
   
   end if; 
       
   select e.result, e.errormessage, e.errorcode into 
          result, errormessage, errorcode 
         from swap.event_check (p_event_id) e;
         
   if Result then 
      -- select result, errormessage, errorcode from system.db_users_check (213)
      select e.result, e.errormessage, e.errorcode into 
             result, errormessage, errorcode 
         from system.db_users_check (p_user_id) e;   
   
   end if; 
       
  if btest and Result  then 
      
     insert into swap.events_users  (event_id, user_id, insert_date)
             values (p_event_id, p_user_id, now() );
             
     errormessage := 'User added to Event'; 
     errorcode := 'SW-EV-R01';
                          
  end if;
  
  
  
  
   

end
$function$
;]]></string>
			<input_param name="p_event_id" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="isadmin" jt="-7" type="bool" />
			<input_param name="result" jt="-7" type="bool" />
			<input_param name="errormessage" jt="12" type="varchar" />
			<input_param name="errorcode" jt="12" type="varchar" />
		</function>
		<function name="event_check" id="Function_632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.event_check(p_event_id integer, OUT result boolean, OUT errormessage character varying, OUT errorcode character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  vtest smallint; 
begin
  /* Insert real code here */
  
   select count(1) into vtest from swap.events e where
       e.id = p_event_id;
       
   Result := vtest = 1;
   
   if not Result then
   
     errormessage := 'Event does not Exist';
     errorcode := 'SW-EW-001';
        
   end if; 
       
end
$function$
;]]></string>
			<input_param name="p_event_id" jt="4" type="int4" />
			<input_param name="result" jt="-7" type="bool" />
			<input_param name="errormessage" jt="12" type="varchar" />
			<input_param name="errorcode" jt="12" type="varchar" />
		</function>
		<function name="event_insert" id="Function_131d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.event_insert(p_creator_id integer, p_title character varying, p_description character varying, p_location character varying, p_main_picture_url character varying, p_latitude double precision, p_longitude double precision, p_hour smallint, p_mins smallint, p_date timestamp without time zone, p_currency_code character varying, p_price real, OUT p_error character varying, OUT p_id integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare 
  vcheck smallint;
  vcurrency_id smallint;  
  --------------------------------
  v_note_id bigint; 
  -- variables to create and insert notification .............
  v_to_user_id integer; 
  v_from_user_id integer; 
  v_type_id smallint; 
  v_item_id bigint; 
  v_swap_id bigint; 
  v_swap_item_id bigint; 
  v_other_user_item_id bigint; 
  v_db_schema_id integer; 
  v_event_id integer; 
  v_event_title character varying;
  
  x record; 
begin
   select count(1) into vcheck from system.db_users where db_user_id = p_creator_id; 
   
   if p_currency_code <> '' then
      select currency_id into vcurrency_id from jpublic.currencies 
           where currency_code = p_currency_code;
   else
      vcurrency_id := 1;
   end if;
   if vcheck = 0 then p_error := 'user id does not exist'; end if;
   p_id := -1; 
   if vcheck > 0 then
	p_id := nextval('swap.events_seq');
	INSERT INTO swap.events(
            id, creator_id, title, address, main_picture_url, 
		description, latitude, longitude, "hour", mins, event_date,
        currency_id, price)
	VALUES (p_id, p_creator_id, p_title, p_location, p_main_picture_url,
            p_description, p_latitude, p_longitude, p_hour, p_mins, p_date,
            vcurrency_id, p_price); 
            
    for x in select user_id from swap.profiles loop
   
      v_to_user_id := x.user_id; 
      v_from_user_id := p_creator_id; 
      v_type_id := 8;
      v_item_id := null;
      v_swap_id := null;
      v_swap_item_id := null;
      v_other_user_item_id := null;
      v_db_schema_id := 0;
      v_event_id := p_id;
      v_event_title := p_title;
       v_note_id := swap.notification_insert (
                 v_to_user_id , 
                 v_from_user_id , 
                 v_type_id , 
                 v_item_id , 
                 v_swap_id , 
                 v_swap_item_id , 
                 v_other_user_item_id , 
                 v_db_schema_id , 
                 v_event_id , 
                 v_event_title     
                 );
    
    end loop; 
   end if;  
--	return v_id; 
   return; 

end;
$function$
;]]></string>
			<input_param name="p_creator_id" jt="4" type="int4" />
			<input_param name="p_title" jt="12" type="varchar" />
			<input_param name="p_description" jt="12" type="varchar" />
			<input_param name="p_location" jt="12" type="varchar" />
			<input_param name="p_main_picture_url" jt="12" type="varchar" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_hour" jt="5" type="int2" />
			<input_param name="p_mins" jt="5" type="int2" />
			<input_param name="p_date" jt="93" type="timestamp" />
			<input_param name="p_currency_code" jt="12" type="varchar" />
			<input_param name="p_price" jt="7" type="float4" />
			<input_param name="p_error" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
		</function>
		<function name="events_add_user" id="Function_255e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.events_add_user(p_event_id integer DEFAULT 0, p_user_id integer DEFAULT 0, p_isadmin boolean DEFAULT false)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
  vcheck smallint; 
  result boolean; 
begin
  select count(1) into vcheck from swap.events where id = p_event_id;
  result := vcheck > 0; 
  
  PERFORM system.setlog('Insert Event user. User ID = ' || p_user_id || ', Event ID = '
                || p_event_id  || '. Check = ' || vcheck);  
  if result then
     select count(1) into vcheck from swap.events_users 
            where event_id = p_event_id  and user_id = p_user_id;
      result :=  vcheck = 0; 
  end if; 
  if result then 
  INSERT INTO swap.events_users(
            event_id, user_id, insert_date, isadmin)
    VALUES (p_event_id, p_user_id, now(), p_isadmin);
  update swap.events set participants = participants  + 1  
         where id = p_event_id;
  end if;
  return true; 

end;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_event_id" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_isadmin" jt="-7" type="bool" />
		</function>
		<function name="events_del_user" id="Function_2436" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.events_del_user(p_event_id integer DEFAULT 0, p_user_id integer DEFAULT 0)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
  vcheck smallint; 
  result boolean; 
begin
  select count(1) into vcheck from swap.events_users 
         where event_id = p_event_id and user_id = p_user_id;
         
  PERFORM system.setlog('Delete Event user. User ID = ' || p_user_id || ', Event ID = '
                || p_event_id  || '. Check = ' || vcheck);  
  if  vcheck > 0 then 
      delete from  swap.events_users 
             where event_id = p_event_id and user_id = p_user_id;
      update swap.events set participants = participants  -1  
             where id = p_event_id;
  end if; 

  Return (true); 

end;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_event_id" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="events_delete" id="Function_1a2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.events_delete(p_id integer, p_user_id integer, OUT result boolean, OUT errormessage character varying, OUT errorcode character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  x record;
  r_event swap.events%ROWTYPE; 
begin

  select e.result, e.errormessage, e.errorcode into 
         result, errormessage, errorcode 
       from swap.event_check (p_id) e;
    
  if result then   
    select e.result, e.errormessage, e.errorcode 
    into result, errormessage, errorcode 
    from "system".db_users_check (p_user_id) e;
  end if; 
  if result then 
     select * into r_event from swap.events e where e.id = p_id; 
     if r_event.active then 
        update swap.events set active = false where id = p_id;
  
        for x in select * from swap.events_users u where u.event_id = p_id 
        loop
         PERFORM swap.notification_insert
         (
          x.user_id,             --IN  p_to_user_id          integer,
          r_event.creator_id,    --IN  p_from_user_id        integer,
          13::smallint, -- event cancelled --IN  p_type_id             smallint,
          null::bigint, --    IN  p_item_id             bigint,
          null::bigint, --    IN  p_swap_id             bigint,
          null::bigint, --    IN  p_swap_item_id        bigint,
          null::bigint, --    IN  p_other_user_item_id  bigint,
          nvl(r_event.db_schema_id, 0)::integer, --    IN  p_db_schema_id        integer,
          p_id, --    IN  p_event_id            integer  = NULL::integer,
          r_event.title --    IN  p_event_title         varchar  = NULL::character varying
         );
         end loop;
     
         errormessage := 'Event Cancelled';
         errorcode := 'SW-EV-010';
         
     else
     
         errormessage := 'Event Already Cancelled';
         errorcode := 'SW-EV-011';     
         
     end if; 

        if errormessage = '' then 
         errormessage := 'Event Not Found';
         errorcode := 'SW-EV-012';  
        end if;    
              
   end if;  

end;
$function$
;]]></string>
			<input_param name="p_id" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="result" jt="-7" type="bool" />
			<input_param name="errormessage" jt="12" type="varchar" />
			<input_param name="errorcode" jt="12" type="varchar" />
		</function>
		<function name="events_insert" id="Function_1be8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.events_insert(p_creator_id integer, p_title character varying, p_description character varying, p_location character varying, p_main_picture_url character varying, p_latitude double precision, p_longitude double precision, OUT p_error character varying, OUT p_id integer, p_hour smallint, p_mins smallint, p_date date)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare 
  vcheck smallint;
  v_note_id bigint; 
  -- variables to create and insert notification .............
  v_to_user_id integer; 
  v_from_user_id integer; 
  v_type_id smallint; 
  v_item_id bigint; 
  v_swap_id bigint; 
  v_swap_item_id bigint; 
  v_other_user_item_id bigint; 
  v_db_schema_id integer; 
  v_event_id integer; 
  v_event_title character varying;
  
  x record; 
begin
   select count(1) into vcheck from system.db_users where db_user_id = p_creator_id; 
   if vcheck = 0 then p_error := 'user id does not exist'; end if;
   p_id := -1; 
   if vcheck > 0 then
	p_id := nextval('swap.events_seq');
	INSERT INTO swap.events(
            id, creator_id, title, address, main_picture_url, 
		description, latitude, longitude, "hour", mins, event_date)
	VALUES (p_id, p_creator_id, p_title, p_location, p_main_picture_url,
            p_description, p_latitude, p_longitude, p_hour, p_mins, p_date); 
            
   for x in select user_id from swap.profiles loop
   
      v_to_user_id := x.user_id; 
      v_from_user_id := p_creator_id; 
      v_type_id := 8;
      v_item_id := null;
      v_swap_id := null;
      v_swap_item_id := null;
      v_other_user_item_id := null;
      v_db_schema_id := 0;
      v_event_id := p_id;
      v_event_title := p_title;
       v_note_id := swap.notification_insert (
                 v_to_user_id , 
                 v_from_user_id , 
                 v_type_id , 
                 v_item_id , 
                 v_swap_id , 
                 v_swap_item_id , 
                 v_other_user_item_id , 
                 v_db_schema_id , 
                 v_event_id , 
                 v_event_title     
                 );
    
    end loop; 
   end if;  
--	return v_id; 
   return; 

end;
$function$
;]]></string>
			<input_param name="p_creator_id" jt="4" type="int4" />
			<input_param name="p_title" jt="12" type="varchar" />
			<input_param name="p_description" jt="12" type="varchar" />
			<input_param name="p_location" jt="12" type="varchar" />
			<input_param name="p_main_picture_url" jt="12" type="varchar" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_error" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
			<input_param name="p_hour" jt="5" type="int2" />
			<input_param name="p_mins" jt="5" type="int2" />
			<input_param name="p_date" jt="91" type="date" />
		</function>
		<function name="events_new_id" id="Function_26e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.events_new_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
      if New.id is null then
          New.id:=nextval('swap.events_seq');
      end if; 
      Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="f_event" id="Function_1d33" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.f_event(event_id integer, OUT event swap.events)
 RETURNS swap.events
 LANGUAGE plpgsql
AS $function$begin
   if event_id is not null and event_id > 0 then
        select * into event from swap.events where id = event_id;
   end if; 
end; $function$
;]]></string>
			<input_param name="event_id" jt="4" type="int4" />
			<input_param name="event" jt="1111" type="&quot;swap&quot;.&quot;events&quot;" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="creator_id" jt="4" type="int4" />
			<result_param name="title" jt="12" type="varchar" />
			<result_param name="address" jt="12" type="varchar" />
			<result_param name="main_picture_url" jt="12" type="varchar" />
			<result_param name="insert_date" jt="93" type="timestamptz" />
			<result_param name="event_date" jt="93" type="timestamptz" />
			<result_param name="latitude" jt="8" type="float8" />
			<result_param name="longitude" jt="8" type="float8" />
			<result_param name="description" jt="12" type="varchar" />
			<result_param name="hour" jt="5" type="int2" />
			<result_param name="mins" jt="5" type="int2" />
			<result_param name="price" jt="7" type="float4" />
			<result_param name="currency_id" jt="5" type="int2" />
			<result_param name="active" jt="-7" type="bool" />
			<result_param name="participants" jt="4" type="int4" />
			<result_param name="db_schema_id" jt="4" type="int4" />
		</function>
		<function name="f_likes" id="Function_1465" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.f_likes(p_item_id bigint)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
  i integer; 
begin
   select count(1) into i as item_likes 
     from 
      swap.items_likes l 
     where 
       l.item_id = p_item_id;
     Return i;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_item_id" jt="-5" type="int8" />
		</function>
		<function name="f_profile" id="Function_2434" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.f_profile(OUT notifications integer, OUT notificationsunread integer, OUT feeds integer, OUT feedsunread integer, OUT followings integer, OUT followers integer, OUT likes integer, OUT swaps integer, OUT swapsactive integer, p_user_id integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$begin
     notifications := 0;
     notificationsunread := 0;
     feeds := 0;
     feedsunread := 0;
     followings := 0;
     followers := 0;
     likes := 0;
     swaps := 0;
     swapsactive := 0;
    
   select count(1) into notifications from swap.notifications n, swap.notifications_types t
          where 
           n.user_id = p_user_id and t.feed = false and t.id = n.type_id;
   select count(1) into notificationsunread from swap.notifications n, swap.notifications_types t
          where 
           n.user_id = p_user_id and nread = false and t.feed = false and t.id = n.type_id;

   select count(1) into feeds from swap.notifications n, swap.notifications_types t
          where 
           n.user_id = p_user_id and t.feed = true and t.id = n.type_id;
   select count(1) into feedsunread from swap.notifications n, swap.notifications_types t
          where 
           n.user_id = p_user_id and nread = false and t.feed = true and t.id = n.type_id;
           
   SELECT count(1) into likes 
      FROM swap.items_likes where user_id = p_user_id;
   SELECT count(1) into followings 
    FROM swap.followers where follower_id = p_user_id; 
   SELECT count(1) into followers 
    FROM swap.followers where user_id = p_user_id;  
  SELECT count(1) into swaps
      FROM swap.swaps where ( user_id = p_user_id or  to_user_id = p_user_id);   

  SELECT count(1) into swapsactive
      FROM swap.swaps where ( user_id = p_user_id or  to_user_id = p_user_id);    
end$function$
;]]></string>
			<input_param name="notifications" jt="4" type="int4" />
			<input_param name="notificationsunread" jt="4" type="int4" />
			<input_param name="feeds" jt="4" type="int4" />
			<input_param name="feedsunread" jt="4" type="int4" />
			<input_param name="followings" jt="4" type="int4" />
			<input_param name="followers" jt="4" type="int4" />
			<input_param name="likes" jt="4" type="int4" />
			<input_param name="swaps" jt="4" type="int4" />
			<input_param name="swapsactive" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="follow" id="Function_21cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.follow(p_user_id integer, p_follower_id integer, p_status boolean)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare 
  Result boolean; 
  vtest smallint; 
begin
  if p_status then
   --INSERT INTO swap.followers(
   --         user_id, follower_id, insert_date)
   -- VALUES (p_user_id, p_follower_id, now());
   
   select count(1) into vtest from swap.followers f where
          f.user_id = p_user_id and f.follower_id = p_follower_id;
          
    if vtest = 0 then 
    	Result := swap.user_add_followers( p_user_id, p_follower_id);
   	else
   	    Result := True; -- does nothing at all already in
    end if; 
    
  else
    delete from swap.followers 
    where 
    user_id = p_user_id and follower_id = p_follower_id; 

    Result := True; 
  end if; 

  return true; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_follower_id" jt="4" type="int4" />
			<input_param name="p_status" jt="-7" type="bool" />
		</function>
		<function name="followers_adel_trg" id="Function_843" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.followers_adel_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
  update swap.profiles set followers = followers - 1 where 
         user_id = Old.user_id;
  
  update swap.profiles set following = following - 1 where 
         user_id = Old.follower_id;  
  Return Old; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="followers_afterins_trg" id="Function_9aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.followers_afterins_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  /* Insert real code here */
  
  update swap.profiles set followers = followers + 1 where 
         user_id = New.user_id;
  
  update swap.profiles set following = following + 1 where 
         user_id = New.follower_id;  
        Return New; 
end
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_date_new" id="Function_1461" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.insert_date_new()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if New.insert_date is null then New.insert_date := now(); end if;
  Return New;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="isfollowed" id="Function_1db1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.isfollowed(p_user_id integer, p_other_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  vtest smallint; 
begin

   select count(1) into vtest from swap.followers where
       follower_id = p_other_id
       and
       user_id = p_user_id ;

  if vtest = 1 then 
     return true; 
  else
     return false; 
  end if;

end $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_other_id" jt="4" type="int4" />
		</function>
		<function name="isfollowing" id="Function_24ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.isfollowing(p_user_id integer, p_other_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  vtest smallint; 
begin

   select count(1) into vtest from swap.followers where
       follower_id = p_user_id
       and
       user_id = p_other_id;
  if vtest = 1 then 
     return true; 
  else
     return false; 
  end if;

end $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_other_id" jt="4" type="int4" />
		</function>
		<function name="item_images_insert" id="Function_1328" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.item_images_insert(p_item_id bigint, p_url character varying, p_title character varying)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$declare
  v_id bigint; 
begin
    v_id := 0; 
     v_id:=nextval('swap.items_images_seq');
    
    INSERT INTO swap.items_images(
            id, url, title, item_id, insert_date)
    VALUES (v_id, p_url, p_title, p_item_id, now() );
    return v_id;

end;$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_item_id" jt="-5" type="int8" />
			<input_param name="p_url" jt="12" type="varchar" />
			<input_param name="p_title" jt="12" type="varchar" />
		</function>
		<function name="items_delete" id="Function_2432" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_delete()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
INSERT INTO swap.items_archived(
            id, owner_id, insert_date, description, url, available, swapped, 
            likes)
    VALUES (Old.id, Old.owner_id, Old.insert_date, Old.description, Old.url, Old.available, Old.swapped, 
            Old.likes);
  delete from swap.items_likes where item_id = Old.id;
  delete from swap.items_images where item_id = Old.id;
  delete from swap.items_discovered where item_id = Old.id;  
  Return Old;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="items_delete" id="Function_1592" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_delete(p_user_id integer, p_item_id bigint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
   p_check smallint;
begin
 
    select count(1) into p_check from swap.items 
           where 
              id = p_item_id and 
              owner_id = p_user_id;
   
    if p_check = 1 then
        update swap.items set available = false
           where 
              id = p_item_id and 
              owner_id = p_user_id;
          return true;
     else
     
        return false; 

     end if; 
   
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_item_id" jt="-5" type="int8" />
		</function>
		<function name="items_discovered" id="Function_2693" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_discovered(p_user_id integer, p_item_id bigint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  v_test integer;
  v_test_item integer; 
  v_test_user integer; 
begin
    select count(1) into v_test from swap.items_discovered
           where item_id = p_item_id and p_user_id = user_id;
           
    select count(1) into v_test_item from swap.items
           where id = p_item_id;
    select count(1) into v_test_user from system.db_users  
           where db_user_id = p_user_id;
  if v_test = 0 and v_test_item = 1 and v_test_user = 1 then
    INSERT INTO swap.items_discovered(
            item_id, user_id, insert_date)
    VALUES (p_item_id, p_user_id, now());
    return true;
   else
     return false; 
   end if; 
   
end;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_item_id" jt="-5" type="int8" />
		</function>
		<function name="items_dislikes" id="Function_d84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_dislikes(p_user_id integer, p_item_id bigint, p_state boolean DEFAULT true)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
  v_test integer; 
  v_test_item integer; 
  v_test_user integer; 
begin
    select count(1) into v_test from swap.items_dislikes
           where item_id = p_item_id and p_user_id = user_id;
    select count(1) into v_test_item from swap.items
           where id = p_item_id;
    select count(1) into v_test_user from system.db_users  
           where db_user_id = p_user_id;
  if v_test = 0 and v_test_item = 1 and v_test_user = 1 and p_state then
    INSERT INTO swap.items_dislikes(
            item_id, user_id, insert_date)
    VALUES (p_item_id, p_user_id, now());
    return true;
  end if;
  
  if v_test = 1 and v_test_item = 1 and v_test_user = 1 and not p_state then
    delete from  swap.items_dislikes where user_id = p_user_id and item_id = p_item_id;
       return true;
  end if; 
     return false; 
   
end;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_item_id" jt="-5" type="int8" />
			<input_param name="p_state" jt="-7" type="bool" />
		</function>
		<function name="items_images_new_id" id="Function_ddc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_images_new_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id:=nextval('swap.items_images_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="items_insert" id="Function_7d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_insert(p_user_id integer DEFAULT 0, p_des character varying DEFAULT 0, p_url character varying DEFAULT 0)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  v_id bigint; 
begin
    v_id := 0; 
     v_id:=nextval('swap.items_seq');
    
    INSERT INTO swap.items
         (id, owner_id, insert_date, description, url, available, swapped, likes)
    VALUES 
         (v_id, p_user_id, now(), p_des, p_url, true, false, 0);
    return v_id;

end; $function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_des" jt="12" type="varchar" />
			<input_param name="p_url" jt="12" type="varchar" />
		</function>
		<function name="items_likes" id="Function_25d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_likes(p_user_id integer, p_item_id bigint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
  v_test integer;
  v_test_item integer; 
  v_test_user integer; 
begin
   return swap.items_likes(p_user_id, p_item_id, true);
   
end;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_item_id" jt="-5" type="int8" />
		</function>
		<function name="items_likes" id="Function_175c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_likes(p_user_id integer, p_item_id bigint, p_state boolean DEFAULT true)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
   v_test        integer;
   v_test_item   integer;
   v_test_user   integer;
   user_r        record;
   item_r        record;
   v_type        smallint;
BEGIN
   v_type := 2;                          -- item like type to be set correctlz
   SELECT count (1)
     INTO v_test
     FROM swap.items_likes
    WHERE item_id = p_item_id AND p_user_id = user_id;
   SELECT count (1)
     INTO v_test_item
     FROM swap.items
    WHERE id = p_item_id;
   SELECT count (1)
     INTO v_test_user
     FROM system.db_users
    WHERE db_user_id = p_user_id;
   IF v_test = 0 AND v_test_item = 1 AND v_test_user = 1 AND p_state
   THEN
      BEGIN
         INSERT INTO swap.items_likes (item_id, user_id, insert_date)
              VALUES (p_item_id, p_user_id, now ());
         SELECT *
           INTO item_r
           FROM swap.items
          WHERE id = p_item_id;
         SELECT p.first_name, p.last_name, image_url
           INTO user_r
           FROM system.db_users_profiles p, system.db_users u
          WHERE u.db_user_id = p_user_id AND p_user_id = p.db_user_id;
         INSERT INTO swap.notifications (user_id,
                                         db_schema_id,
                                         title,
                                         other_user_id,
                                         swap_item_id,
                                         insert_date,
                                         swap_item_image,
                                         user_avatar_img,
                                         user_name, 
										 type_id)
                 VALUES (
                           item_r.owner_id,                          --user_id
                           0,                                  --db_schema_id,
                              'User '
                           || user_r.first_name
                           || ' '
                           || user_r.last_name
                           || ' likes your Item',                      --title
                           p_user_id,                         -- other_user_id
                           p_item_id,                          -- swap_item_id
                           now (),                               --insert_date
                           item_r.url,
                           user_r.image_url,
                           user_r.first_name || ' ' || user_r.last_name,
						   v_type);
         UPDATE swap.profiles
            SET notifications = notifications + 1
          WHERE user_id = item_r.owner_id;
         RETURN TRUE;
      END;
   END IF;
   IF v_test = 1 AND v_test_item = 1 AND v_test_user = 1 AND NOT p_state
   THEN
      DELETE FROM swap.items_likes
            WHERE user_id = p_user_id AND item_id = p_item_id;
      SELECT *
        INTO item_r
        FROM swap.items
       WHERE id = p_item_id;
       
      delete from swap.notifications n where
             n.user_id = item_r.owner_id
             and
             n.swap_item_id = item_r.id
             and
             n.other_user_id = p_user_id
             and
             n.type_id = v_type;
             
      UPDATE swap.profiles 
         SET likes = likes -1 
       WHERE user_id = p_user_id
             and
             likes > 0;
      UPDATE swap.profiles
         SET notifications = notifications - 1
       WHERE user_id = item_r.owner_id;
      RETURN TRUE;
   END IF;
   RETURN TRUE;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_item_id" jt="-5" type="int8" />
			<input_param name="p_state" jt="-7" type="bool" />
		</function>
		<function name="items_new_id" id="Function_72a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.items_new_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.id is null then
          New.id:=nextval('swap.items_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="likes_delete_ai_trg" id="Function_17b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.likes_delete_ai_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
   update swap.profiles set likes = likes - 1 where user_id = New.user_id; 
   update swap.items i set likes = likes - 1 where id = New.item_id; 
   Return New; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="likes_update_ai_trg" id="Function_1967" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.likes_update_ai_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
   update swap.profiles set likes = likes + 1 where user_id = New.user_id; 
   update swap.items i set likes = likes + 1 where id = New.item_id; 
   Return New; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="message_insert" id="Function_1a3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.message_insert(p_swap_id bigint, p_text character varying, p_image_url character varying, p_from_user_id integer, OUT message_id bigint, OUT result boolean, OUT errormessage character varying, OUT errorcode character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  r_swap record; 
  v_to_user_id integer; 
  v_test smallint; 
begin
  select e.result, e.errormessage, e.errorcode into 
         result, errormessage, errorcode 
       from swap.swap_check (p_swap_id) e;
  
  --result := True; 
  message_id := 0; 
  if result then
   select * into r_swap from swap.swaps  where id = p_swap_id;
   
   -- check who is sender and who is the receiver of the message
    
   if r_swap.user_id = p_from_user_id then
      v_to_user_id := r_swap.to_user_id;
   else
      v_to_user_id := r_swap.user_id;
   end if; 
      
   message_id := nextval('swap.messages_seq');
   
    INSERT INTO swap.swaps_messages(
            swap_id, message_id, "message", image_url, from_user_id, to_user_id, 
            insert_date)
    VALUES (p_swap_id, message_id, p_text, p_image_url, p_from_user_id, v_to_user_id, 
            now()); 
            
    select count(1) into v_test from swap.notifications n 
            where n.user_id = v_to_user_id and n.nread = false and n.type_id = 5; 
    
    if v_test = 0 then         
    perform    swap.notification_insert(
                v_to_user_id,  -- p_to_user_id integer,
                p_from_user_id,  -- p_from_user_id integer,
                5::smallint,  -- p_type_id smallint,
                r_swap.to_item_id,  -- p_item_id bigint,
                r_swap.id,  -- p_swap_id bigint,
                r_swap.from_item_id,   -- p_swap_item_id bigint,
                r_swap.to_item_id,  -- p_other_user_item_id bigint,
                0, -- p_db_schema_id integer,
                null::integer , -- p_event_id integer, 
                null::varchar -- p_event_title varchar
                );  
    end if;          
       
   end if; 

end;
$function$
;]]></string>
			<input_param name="p_swap_id" jt="-5" type="int8" />
			<input_param name="p_text" jt="12" type="varchar" />
			<input_param name="p_image_url" jt="12" type="varchar" />
			<input_param name="p_from_user_id" jt="4" type="int4" />
			<input_param name="message_id" jt="-5" type="int8" />
			<input_param name="result" jt="-7" type="bool" />
			<input_param name="errormessage" jt="12" type="varchar" />
			<input_param name="errorcode" jt="12" type="varchar" />
		</function>
		<function name="notification_insert" id="Function_2063" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.notification_insert(p_to_user_id integer, p_from_user_id integer, p_type_id smallint, p_item_id bigint, p_swap_id bigint, p_swap_item_id bigint, p_other_user_item_id bigint, p_db_schema_id integer, p_event_id integer DEFAULT NULL::integer, p_event_title character varying DEFAULT NULL::character varying)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
declare
  v_user_id integer;
  v_id bigint;
  v_db_schema_id integer;
  v_title character varying; -- The notification Title
  v_other_user_id integer;
  v_user_item_id bigint;
  v_swap_item_id bigint;
  v_insert_date timestamp with time zone;
  v_type_id smallint;
  v_user_name character varying;
  v_user_avatar_img character varying;
  v_swap_item_image character varying;
  v_user_item_image character varying;
  v_swap_id bigint;
  v_event_id integer; 
  r_user record;
  r_item record;
  v_test smallint;  
  
begin
  /* Insert real code here */
  v_user_id := p_to_user_id; 
  v_db_schema_id := p_db_schema_id; 
  v_id := nextval('swap.notifications_seq');
  v_other_user_id := p_from_user_id;
  v_type_id := p_type_id; 
  v_user_item_id := p_other_user_item_id; 
  v_swap_item_id := p_swap_item_id; 
  v_insert_date := now();
  v_swap_id := p_swap_id; 
  v_test := 0; 
  
   
  select * into r_user from system.db_users where db_user_id = p_from_user_id; 
  v_user_name := r_user.user_first_name || ' ' || r_user.user_family_name ;
  v_user_avatar_img := r_user.image_url; 
  
  if public.nvl(p_event_id, 0) > 0 and p_event_id is not null then
     v_event_id := p_event_id;
    -- select * into r_event from swap.events where id = p_event_id;
  end if; 
  
  if public.nvl(p_swap_item_id, 0) > 0 then
     select i.url into v_swap_item_image 
            from swap.items i where i.id = p_swap_item_id;
  end if;  
  
  if public.nvl(v_user_item_id, 0) > 0 then
     select i.url into v_user_item_image  
            from swap.items i where i.id = v_user_item_id;
  end if;  
  
  case p_type_id 
  
   when  1 then 
      v_title := v_user_name || ' started to follow you';
              
   when  2 then 
      v_title := v_user_name || ' likes your Item';
              
              
   when  3 then 
      v_title := v_user_name || ' wants to swap with you';
              
   when  4 then 
      v_title := v_user_name || ' agreed your swap';  
              
   when  5 then -- message
   
      v_title := v_user_name || ' leaved a messate to you'; 
      
      select count(1) into v_test 
             from swap.notifications 
             where type_id = 5 and user_id = v_user_id and nread = false;  
              
   when  6 then 
      v_title := v_user_name || ' agreed the swap meeting';  
              
   when  7 then 
      v_title := v_user_name || ' revoked the swap';    
   when  8 then 
    if nvl(p_event_id, 0) > 0 and p_event_id is not null then
    
      v_title := p_event_title || ' A new event near you!';   
    end if; 
    
    
   when  9 then 
    if nvl(p_event_id, 0) > 0 and p_event_id is not null then
    
      v_title := p_event_title || ' You participate is scheduled tomorrow';   
    end if; 
    
   when  10 then 
    if nvl(p_other_user_item_id, 0) > 0  then
    
      v_title := ' Item has been Removed';   
    end if; 
    
   when  11 then -- itemadded
    if public.nvl(p_other_user_item_id, 0) > 0  then
    
      v_title := ' New Item added by ' || v_user_name ;   
    end if; 
    
   when  12 then --eventparticipate
    if public.nvl(p_event_id, 0) > 0  then
    
      v_title := v_user_name || ' will participate to ' || p_event_title ; 
        
    end if; 
    
   when  13 then --eventcancelled
    if public.nvl(p_event_id, 0) > 0  then
    
      v_title := p_event_title || ' has been cancelled '; 
        
    end if; 
    
   when  14 then --eventdelayed
    if public.nvl(p_event_id, 0) > 0  then
    
      v_title := p_event_title || ' has been delayed. '; 
        
    end if; 
          
              
   else
   
       null;
   
   end case; 
   
  RAISE NOTICE 'Title is -- %',   v_title;
  
  
  if v_test = 0 then 
  
  INSERT INTO swap.notifications(
            user_id, id, db_schema_id, title, other_user_id, user_item_id, 
            swap_item_id, insert_date, type_id, user_name, user_avatar_img, 
            swap_item_image, user_item_image, swap_id, nread, event_id)
  VALUES (v_user_id, v_id, v_db_schema_id, v_title, v_other_user_id, v_user_item_id, 
            v_swap_item_id, v_insert_date, v_type_id, v_user_name, v_user_avatar_img, 
            v_swap_item_image, v_user_item_image, v_swap_id, False, v_event_id);
            
  end if; 
  
  
  
  return v_db_schema_id;
  
  
  
end
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_to_user_id" jt="4" type="int4" />
			<input_param name="p_from_user_id" jt="4" type="int4" />
			<input_param name="p_type_id" jt="5" type="int2" />
			<input_param name="p_item_id" jt="-5" type="int8" />
			<input_param name="p_swap_id" jt="-5" type="int8" />
			<input_param name="p_swap_item_id" jt="-5" type="int8" />
			<input_param name="p_other_user_item_id" jt="-5" type="int8" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_event_id" jt="4" type="int4" />
			<input_param name="p_event_title" jt="12" type="varchar" />
		</function>
		<function name="notification_read" id="Function_1d7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.notification_read(p_user_id integer DEFAULT 0, p_notification_id bigint DEFAULT 0)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
 vtest smallint; 
begin
   select count(1) into vtest from swap.notifications
         where user_id = p_user_id
               and
               id = p_notification_id; 
   if vtest = 1 then
       update notifications set nread = true 
         where user_id = p_user_id
               and
               id = p_notification_id; 
       return true; 
   else
       return false;
   end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_notification_id" jt="-5" type="int8" />
		</function>
		<function name="notifications_adel_trg" id="Function_2142" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.notifications_adel_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  /* Insert real code here */
      UPDATE swap.profiles
         SET notifications = notifications - 1
       WHERE user_id = Old.user_id and notifications > 0;
       
       if Old.nread = False then
      UPDATE swap.profiles
         SET unread = unread - 1
       WHERE user_id = Old.user_id and unread > 0;       
       
       end if; 
       
       Return Old; 
end
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="notifications_ainsert_trg" id="Function_1c86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.notifications_ainsert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin

      UPDATE swap.profiles
         SET notifications = notifications + 1
       WHERE user_id = New.user_id;
       
       if New.nread = False then
      UPDATE swap.profiles
         SET unread = unread + 1
       WHERE user_id = New.user_id;       
       
       end if; 
       
       Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="notifications_bupd_trg" id="Function_f8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.notifications_bupd_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  /* Insert real code here */
  
  if New.nread = True and Old.nread = False then
     update swap.profiles set unread = unread -1 
            where user_id = New.user_id and unread > 0;
  end if; 
     Return New; 
end
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="notifications_new_id" id="Function_26eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.notifications_new_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
   if New.id is null then
          New.id:=nextval('swap.notifications_seq');
   end if; 
   
   if New.insert_date is null then 
      New.insert_date := Now(); 
   
   end if; 
   
   Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="notifications_unread" id="Function_1b66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.notifications_unread()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  Result integer; 
  x record; 
begin
for x in (
select user_id, count(1) as nread from swap.notifications where nread = false and user_id is not null
 group by user_id )
 loop
    Result := Result + 1;
   update swap.profiles set unread = x.nread where user_id = x.user_id; 
 end loop; 
    Return result; 
 end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="nvl" id="Function_1de8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.nvl(value integer, replace integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
begin
   if value is null then 
	return (replace);
    else
	return(value);
    end if; 
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="value" jt="4" type="int4" />
			<input_param name="replace" jt="4" type="int4" />
		</function>
		<function name="participate" id="Function_1406" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.participate(p_event_id integer, p_user_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare
  vtest smallint; 
begin

   select count(1) into vtest from swap.events_users where
       event_id = p_event_id
       and
       user_id = p_user_id;
  if vtest = 1 then 
     return true; 
  else
     return false; 
  end if;

end
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_event_id" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="record_date_biu" id="Function_3b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.record_date_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.insert_date is null then
          New.insert_date := Now();
     end if; 
     New.update_date := Now();

     Return New; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="swap_action" id="Function_1b91" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swap_action(p_user_id integer, p_swap_id bigint, p_action_id smallint, OUT p_error character varying, OUT result boolean)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  v_status smallint;
  v_user_id integer;  
begin
  case p_action_id 
   when  -1 then 
     update swap.swaps set status = 0 where id = p_swap_id;
     p_error := 'Swap deleted';
     result := true ;
     
   when  0 then 
     select status into v_status from swap.swaps where id = p_swap_id; 
     if v_status = 9 then 
         update swap.swaps set status = 3 where id = p_swap_id;
     end if; 
     
     if (v_status = 3) or (v_status = 0) then 
         update swap.swaps set status = 1 where id = p_swap_id;
     end if; 
     
     p_error := 'Swap Undone';
     result := true ;
     
   when  1 then 
     select status, to_user_id into v_status, v_user_id 
         from swap.swaps where id = p_swap_id;
    
     if v_status = 1 and p_user_id = v_user_id then
        
        update swap.swaps set status = 3 where id = p_swap_id;
        Result := True;
        
     end if;  
      
     if p_user_id = v_user_id then
        Result := True; 
     else
        Result := False; 
        p_error := 'User ' || p_user_id || ' cannot agree the swap';
     end if;     
     
   when  9 then 
     select status, user_id into v_status, v_user_id 
         from swap.swaps where id = p_swap_id;
   
     if v_status = 3 and p_user_id = v_user_id then
        
        update swap.swaps set status = 9 where id = p_swap_id;
        Result := True;
        
     end if;  
      
     if p_user_id = v_user_id then
        Result := True; 
     else
        Result := False; 
        p_error := 'User ' || p_user_id || ' cannot close the swap';
     end if;  
   else 
     p_error := 'action_id = ' || p_action_id || ' is not valid';
     result  := false; 
   end case;    

end;
$function$
;]]></string>
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_swap_id" jt="-5" type="int8" />
			<input_param name="p_action_id" jt="5" type="int2" />
			<input_param name="p_error" jt="12" type="varchar" />
			<input_param name="result" jt="-7" type="bool" />
		</function>
		<function name="swap_canclose" id="Function_2263" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swap_canclose(p_user_id integer, p_to_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$begin
  if p_to_id = p_user_id then 
   return true;
   else 
   return false; 
   end if; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_to_id" jt="4" type="int4" />
		</function>
		<function name="swap_check" id="Function_86e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swap_check(p_swap_id bigint, OUT result boolean, OUT errormessage character varying, OUT errorcode character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  vtest smallint; 
begin
  /* Insert real code here */
  
   select count(1) into vtest from swap.swaps e where
       e.id = p_swap_id;
       
   Result := vtest = 1;
   
   if not Result then
   
     errormessage := 'Swap does not Exist';
     errorcode := 'SW-SW-001';
        
   end if; 
       
end
$function$
;]]></string>
			<input_param name="p_swap_id" jt="-5" type="int8" />
			<input_param name="result" jt="-7" type="bool" />
			<input_param name="errormessage" jt="12" type="varchar" />
			<input_param name="errorcode" jt="12" type="varchar" />
		</function>
		<function name="swap_notifications_insert" id="Function_729" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swap_notifications_insert()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  x record;
  v_type smallint; 
  v_note_id bigint; 
  v_count integer; 
begin
     v_type = 4; 
     v_count := 0; 
     for x in 
        select * from swap.swaps s 
        where status = 3 and not exists
        (select 1 from swap.notifications n where n.type_id = 4 and n.swap_id = s.id)
     loop
  
         RAISE NOTICE 'log is -- %', 'user_id = ' ||  x.user_id;

   v_note_id :=  swap.notification_insert(
                x.user_id,  -- p_to_user_id integer,
                x.to_user_id,  -- p_from_user_id integer,
                v_type,  -- p_type_id smallint,
                x.to_item_id,  -- p_item_id bigint,
                x.id,  -- p_swap_id bigint,
                x.from_item_id,   -- p_swap_item_id bigint,
                x.to_item_id,  -- p_other_user_item_id bigint,
                0, -- p_db_schema_id integer,
                null, -- p_event_id integer, 
                null -- p_event_title varchar
                 
                 );  
      v_count := v_count + 1;
  
      end loop; 
      return v_count; 
end
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="swap_profile_get" id="Function_578" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swap_profile_get(p_user_id integer, OUT followers smallint, OUT following smallint, OUT swaps smallint)
 RETURNS record
 LANGUAGE plpgsql
AS $function$begin
   select count(1) into followers  from swap.followers 
      where user_id = p_user_id; 
   select count(1) into swaps  from swap.swaps 
      where user_id = p_user_id; 
   select count(1) into following  from swap.followings
      where user_id = p_user_id; 
end; $function$
;]]></string>
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="followers" jt="5" type="int2" />
			<input_param name="following" jt="5" type="int2" />
			<input_param name="swaps" jt="5" type="int2" />
		</function>
		<function name="swap_start" id="Function_1b4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swap_start(p_user_id integer, p_user_item_id bigint, p_other_item_id bigint, p_onoff boolean)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
   v_swap_id   bigint;
   v_test      smallint;
   item_r      record;
   oitem_r     record;
   v_type      smallint;
   user_r      record;
   ouser_r     record;
BEGIN
   v_type := 3;                          -- item like type to be set correctlz
   v_swap_id := nextval ('swap.swaps_seq');
   SELECT count (1)
     INTO v_test
     FROM swap.swaps
    WHERE from_item_id = p_user_item_id AND to_item_id = p_other_item_id;
   IF v_test = 0
   THEN
      SELECT *
        INTO item_r
        FROM swap.items i
       WHERE i.id = p_user_item_id;
      SELECT *
        INTO oitem_r
        FROM swap.items i
       WHERE i.id = p_other_item_id;
      SELECT i.image_url, p.first_name, p.last_name
        INTO user_r
        FROM system.db_users i, system.db_users_profiles p
       WHERE i.db_user_id = p_user_id AND p.db_user_id = p_user_id;
      SELECT i.image_url, p.first_name, p.last_name
        INTO ouser_r
        FROM system.db_users i, system.db_users_profiles p
       WHERE i.db_user_id = p_user_id AND p.db_user_id = oitem_r.owner_id;

      INSERT INTO swap.swaps (id,
                              insert_date,
                              user_id,
                              to_user_id,
                              from_item_id,
                              to_item_id,
                              completed,
                              closed,
                              status)
           VALUES (v_swap_id,                                             --id
                   now (),                                       --insert_date
                   p_user_id,                                       -- user_id
                   oitem_r.owner_id,                             -- to_user_id
                   p_user_item_id,                             -- from_item_id
                   p_other_item_id,                              -- to_item_id
                   FALSE,                                         -- completed
                   FALSE,                                            -- closed
                   1                                                 -- status
                   );                                           
      INSERT INTO swap.notifications (user_id,
                                      db_schema_id,
                                      title,
                                      other_user_id,
                                      user_item_id,
                                      swap_item_id,
                                      insert_date,
                                      swap_id,
                                      type_id,
                                      swap_item_image,
                                      user_item_image,
                                      user_avatar_img,
                                      user_name,
                                      nread)
              VALUES (
                        oitem_r.owner_id,                            --user_id
                        0,                                     --db_schema_id,
                           'User '
                        || user_r.first_name
                        || ' '
                        || user_r.last_name
                        || ' wants to swap with you',                  --title
                        p_user_id,                            -- other_user_id
                        item_r.id,                              --user_item_id
                        oitem_r.id,                            -- swap_item_id
                        now (),                                  --insert_date
                        v_swap_id,                                   --swap_id
                        v_type,                                     -- type_id
                        oitem_r.url,                        -- swap_item_image
                        item_r.url,                          --user_item_image
                        user_r.image_url,                    --user_avatar_img
                        user_r.first_name || ' ' || user_r.last_name, --user_name
                        FALSE                                         -- nread
                             );
      UPDATE swap.profiles
         SET notifications = notifications + 1
       WHERE user_id = oitem_r.owner_id;
   END IF;
   RETURN TRUE;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_user_item_id" jt="-5" type="int8" />
			<input_param name="p_other_item_id" jt="-5" type="int8" />
			<input_param name="p_onoff" jt="-7" type="bool" />
		</function>
		<function name="swap_start_number" id="Function_1d86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swap_start_number(p_user_id integer, p_user_item_id bigint, p_other_item_id bigint, p_onoff boolean)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
DECLARE
   v_swap_id   bigint;
   v_test      smallint;
   item_r      record;
   oitem_r     record;
   v_type      smallint;
   user_r      record;
   ouser_r     record;
BEGIN
   v_type := 3;                          -- item like type to be set correctlz
   v_swap_id := nextval ('swap.swaps_seq');
   SELECT count (1)
     INTO v_test
     FROM swap.swaps
    WHERE from_item_id = p_user_item_id AND to_item_id = p_other_item_id;
   IF v_test = 0
   THEN
      SELECT *
        INTO item_r
        FROM swap.items i
       WHERE i.id = p_user_item_id;
      SELECT *
        INTO oitem_r
        FROM swap.items i
       WHERE i.id = p_other_item_id;
      SELECT i.image_url, p.first_name, p.last_name
        INTO user_r
        FROM system.db_users i, system.db_users_profiles p
       WHERE i.db_user_id = p_user_id AND p.db_user_id = p_user_id;
      SELECT i.image_url, p.first_name, p.last_name
        INTO ouser_r
        FROM system.db_users i, system.db_users_profiles p
       WHERE i.db_user_id = p_user_id AND p.db_user_id = oitem_r.owner_id;

      INSERT INTO swap.swaps (id,
                              insert_date,
                              user_id,
                              to_user_id,
                              from_item_id,
                              to_item_id,
                              completed,
                              closed)
           VALUES (v_swap_id,                                             --id
                   now (),                                       --insert_date
                   p_user_id,                                       -- user_id
                   oitem_r.owner_id,                             -- to_user_id
                   p_user_item_id,                             -- from_item_id
                   p_other_item_id,                              -- to_item_id
                   FALSE,                                         -- completed
                   FALSE);                                           -- closed
      INSERT INTO swap.notifications (user_id,
                                      db_schema_id,
                                      title,
                                      other_user_id,
                                      user_item_id,
                                      swap_item_id,
                                      insert_date,
                                      swap_id,
                                      type_id,
                                      swap_item_image,
                                      user_item_image,
                                      user_avatar_img,
                                      user_name,
                                      nread)
              VALUES (
                        oitem_r.owner_id,                            --user_id
                        0,                                     --db_schema_id,
                           'User '
                        || user_r.first_name
                        || ' '
                        || user_r.last_name
                        || ' wants to swap with you',                  --title
                        p_user_id,                            -- other_user_id
                        item_r.id,                              --user_item_id
                        oitem_r.id,                            -- swap_item_id
                        now (),                                  --insert_date
                        v_swap_id,                                   --swap_id
                        v_type,                                     -- type_id
                        oitem_r.url,                        -- swap_item_image
                        item_r.url,                          --user_item_image
                        user_r.image_url,                    --user_avatar_img
                        user_r.first_name || ' ' || user_r.last_name, --user_name
                        FALSE                                         -- nread
                             );
      UPDATE swap.profiles
         SET notifications = notifications + 1
       WHERE user_id = oitem_r.owner_id;
   END IF;
   RETURN swap_id;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_user_item_id" jt="-5" type="int8" />
			<input_param name="p_other_item_id" jt="-5" type="int8" />
			<input_param name="p_onoff" jt="-7" type="bool" />
		</function>
		<function name="swaps_bupdate_trg" id="Function_24fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swaps_bupdate_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  /* Insert real code here */
  
  -- 4 is the notification id for swap agreement
   if New.status = 3 and Old.status < 3 then
  
   PERFORM  swap.notification_insert(
                New.user_id,  -- p_to_user_id integer,
                New.to_user_id,  -- p_from_user_id integer,
                4::smallint,  -- p_type_id smallint,
                New.to_item_id,  -- p_item_id bigint,
                New.id,  -- p_swap_id bigint,
                New.from_item_id,   -- p_swap_item_id bigint,
                New.to_item_id,  -- p_other_user_item_id bigint,
                0, -- p_db_schema_id integer,
                null::INTEGER, -- p_event_id integer, 
                null::VARCHAR -- p_event_title varchar
                );  
                
    end if; 
    
    Return New; 
end
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="swaps_new_id" id="Function_237a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.swaps_new_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.status is null then 
        New.status := 1; 
     end if; 
      if New.id is null then
          New.id:=nextval('swap.swaps_seq');
      end if; 
      Return New;

end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="update_user_likes" id="Function_30d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.update_user_likes(p_user_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
ar record;
begin
    for ar in select user_id, count(1) as likes 
         from swap.swaps 
         group by user_id
    loop
    
      update swap.profiles 
         set likes = ar.likes 
         where user_id = ar.user_id; 
    end loop; 
    return ar.likes;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="user_add_followers" id="Function_a35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.user_add_followers(p_user_id integer, p_follower_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  result boolean; 
  vcheck smallint;
  follow_r record; 
begin
   select count(1) into vcheck
          from system.db_users u where
          u.db_user_id = p_user_id;
   result := vcheck > 0;
   if result then
   INSERT INTO swap.followers(
            user_id, follower_id, insert_date)
    VALUES (p_user_id, p_follower_id, now());
 SELECT user_id,  0 db_schema_id,   'User ' || first_name || ' ' || last_name || ' Started to Follow You' notificationtitle,  follower_id,    f.insert_date, 
       1 as notification_type ,  p.first_name || ' ' || last_name username , u.image_url  into follow_r
  FROM 
       swap.followers f, system.db_users u, system.db_users_profiles p
       where
       p.db_user_id = u.db_user_id
       and
       p.db_user_id = f.follower_id
       and
       f.follower_id = p_follower_id
       and
       f.user_id = p_user_id
       ;

    INSERT INTO swap.notifications(
            user_id,  db_schema_id, title, other_user_id, insert_date, 
            type_id, user_name, user_avatar_img)
            values (
                    follow_r.user_id, -- user_id
                    follow_r.db_schema_id, -- db_schema_id
                    follow_r.notificationtitle, -- title
                    follow_r.follower_id,--other_user_id
                    follow_r.insert_date, --insert_date
                    follow_r.notification_type, -- type_id
                    follow_r.username, -- user_name
                    follow_r.image_url -- user_avatar_img
                    );
            

    end if; 

    return (result);

end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_follower_id" jt="4" type="int4" />
		</function>
		<function name="user_insert_swap_profile" id="Function_afb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.user_insert_swap_profile()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
INSERT INTO swap.profiles( user_id, following, followers, swaps, notifications, unread, likes)
    VALUES (New.db_user_id, 0, 0, 0, 0, 0, 0);

Return New; 


end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="user_item_likes" id="Function_1ab0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION swap.user_item_likes(p_user_id integer, p_item_id bigint)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare 
  test integer; 
begin
  select count(1) into test from swap.items_likes l
    where l.user_id = p_user_id and l.item_id = p_item_id;
   if test = 0 then
      return false;
   else
      return true; 
   end if;

end;
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_item_id" jt="-5" type="int8" />
		</function>
	</schema>
	<schema name="system" catalogname="ergomercator" >
		<comment><![CDATA[Thi is the System Schema containing all connection Data and storing passwords and user sessions]]></comment>
		<table name="app_forms" >
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="form_url" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Foreign key to applications, every form is member of an application]]></comment>
			</column>
			<column name="form_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="form_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="model_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spfo_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spfo_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_forms_pk" unique="PRIMARY_KEY" >
				<column name="form_id" />
			</index>
			<index name="app_forms_uk" unique="UNIQUE_KEY" >
				<column name="form_name" />
			</index>
			<index name="spfo_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spfo_jguid" />
			</index>
			<fk name="fk_app_forms_models" to_schema="ergomercator.system" to_table="form_models" >
				<fk_column name="model_id" pk="model_id" />
			</fk>
		</table>
		<table name="app_forms_objects" >
			<column name="object_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="object_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="owner_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppo_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppo_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_objects_pk" unique="PRIMARY_KEY" >
				<column name="object_id" />
			</index>
			<index name="sppo_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppo_jguid" />
			</index>
			<index name="fki_app_form_objects_forms_fk" unique="NORMAL" >
				<column name="form_id" />
			</index>
			<index name="fki_app_objects_owners_fk" unique="NORMAL" >
				<column name="owner_id" />
			</index>
			<fk name="app_form_objects_forms_fk" to_schema="ergomercator.system" to_table="app_forms" >
				<fk_column name="form_id" pk="form_id" />
			</fk>
			<fk name="app_objects_owners_fk" to_schema="ergomercator.system" to_table="app_forms_objects" >
				<fk_column name="owner_id" pk="object_id" />
			</fk>
		</table>
		<table name="app_forms_objects_properties" >
			<column name="property_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="object_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="property_name" type="varchar" length="64" decimal="0" jt="12" />
			<column name="textvalue" type="text" decimal="0" jt="12" />
			<column name="intvalue" type="integer" length="10" decimal="0" jt="4" />
			<column name="datevalue" type="date" length="13" decimal="0" jt="91" />
			<column name="translate" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="stringvalue" type="varchar" length="256" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spop_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spop_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_formproperties_pk" unique="PRIMARY_KEY" >
				<column name="property_id" />
			</index>
			<index name="spop_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spop_jguid" />
			</index>
			<index name="fki_app_formobjectsproperties_objects_fk" unique="NORMAL" >
				<column name="object_id" />
			</index>
			<fk name="app_formobjectsproperties_objects_fk" to_schema="ergomercator.system" to_table="app_forms_objects" >
				<fk_column name="object_id" pk="object_id" />
			</fk>
		</table>
		<table name="app_forms_objects_translations" >
			<column name="property_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="stringvalue" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="textvalue" type="text" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spot_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spot_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_form_propertiestrans_pk" unique="PRIMARY_KEY" >
				<column name="property_id" />
				<column name="language_id" />
			</index>
			<index name="spot_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spot_jguid" />
			</index>
			<fk name="app_forms_translation_properties_fk" to_schema="ergomercator.system" to_table="app_forms_objects_properties" >
				<fk_column name="property_id" pk="property_id" />
			</fk>
		</table>
		<table name="app_forms_translations" >
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="laguage_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="form_title" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="main_iso_language" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="trans_iso_language" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="app_forms_translations_pk" unique="PRIMARY_KEY" >
				<column name="form_id" />
				<column name="laguage_id" />
			</index>
			<index name="sppt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppt_jguid" />
			</index>
			<index name="fki_app_form_trans_forms_fk" unique="NORMAL" >
				<column name="form_id" />
			</index>
			<index name="fki_app_from_trans_languages_fk" unique="NORMAL" >
				<column name="laguage_id" />
			</index>
			<fk name="app_form_trans_forms_fk" to_schema="ergomercator.system" to_table="app_forms" >
				<fk_column name="form_id" pk="form_id" />
			</fk>
		</table>
		<table name="app_functions" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="app_functions_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="app_functions_index01" unique="UNIQUE_KEY" >
				<column name="title" />
			</index>
			<fk name="fk_app_functions_applications" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
		</table>
		<table name="app_grids" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="form_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="grid_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="json_table" type="json" decimal="0" jt="2000" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[should be '0' for standard table format]]></comment>
			</column>
		</table>
		<table name="app_licenses" >
			<comment><![CDATA[This is the App Licenses table]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="app_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="hash_code" type="varchar" length="64" decimal="0" jt="12" />
			<column name="code" type="varchar" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="app_licenses_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="app_licenes_apps_fk" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="app_id" pk="application_id" />
			</fk>
		</table>
		<table name="app_member_forms" >
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="form_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="app_member_forms_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="form_id" />
			</index>
			<fk name="app_member_forms_fk" to_schema="ergomercator.system" to_table="app_forms" >
				<fk_column name="form_id" pk="form_id" />
			</fk>
			<fk name="app_members_applications_fk" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
		</table>
		<table name="app_messages" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="code" type="char" length="9" decimal="0" jt="1" mandatory="y" />
			<column name="error" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<column name="app_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="contest_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="message_text" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="app_messages_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="app_messages_codes_ndx" unique="UNIQUE_KEY" >
				<column name="code" />
			</index>
			<fk name="app_messages_apps" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="app_id" pk="application_id" />
			</fk>
		</table>
		<table name="app_messages_translations" >
			<column name="message_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="message_text" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="app_messages_trans_pkey" unique="PRIMARY_KEY" >
				<column name="message_id" />
				<column name="language_id" />
			</index>
			<fk name="app_messages_trans_msgs" to_schema="ergomercator.system" to_table="app_messages" >
				<fk_column name="message_id" pk="id" />
			</fk>
		</table>
		<table name="applications" >
			<comment><![CDATA[This is the Database of the Models of Applications, it includes the application Name and the app_application_params]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="application_des" type="varchar" length="1024" decimal="0" jt="12" mandatory="y" />
			<column name="application_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="application_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="code" type="char" length="2" decimal="0" jt="1" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="ap_applications_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
			</index>
			<index name="apapp_application_name_uk" unique="UNIQUE_KEY" >
				<column name="application_name" />
			</index>
		</table>
		<table name="db_app_grp_param" >
			<column name="app_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="param_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_db_app_grp_param" unique="UNIQUE_KEY" >
				<column name="db_group_id" />
			</index>
			<index name="idx_db_app_grp_param" unique="NORMAL" >
				<column name="app_id" />
			</index>
			<fk name="fk_db_app_grp_param" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="app_id" pk="application_id" />
			</fk>
		</table>
		<table name="db_app_schemas" >
			<comment><![CDATA[This is the list of the apps contained in one Schema]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ap_key" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="ap_secret" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="spps_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spps_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_app_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="db_schema_id" />
			</index>
			<index name="apsch_ap_key_uk" unique="UNIQUE_KEY" >
				<column name="ap_key" />
			</index>
			<index name="apsch_ap_secret_uk" unique="UNIQUE_KEY" >
				<column name="ap_secret" />
			</index>
			<index name="pk_db_app_schemas" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="spps_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spps_jguid" />
			</index>
			<index name="idx_db_app_schemas" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<fk name="fk_db_schemas_apps" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_db_app_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_applications_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sppr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sppr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_applications_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="application_id" />
			</index>
			<index name="sppr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sppr_jguid" />
			</index>
			<index name="idx_db_applications_roles" unique="NORMAL" >
				<column name="role_id" />
			</index>
			<index name="idx_db_applications_roles_0" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<fk name="fk_db_roles_applications" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_db_applications_roles" to_schema="ergomercator.system" to_table="sys_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
			<fk name="fk_db_applications_roles_db_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_esr_sch_param" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="param_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="db_groups" >
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_group_des" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="db_groups_pk" unique="PRIMARY_KEY" >
				<column name="db_group_id" />
			</index>
			<fk name="fk_db_groups" to_schema="ergomercator.system" to_table="db_app_grp_param" >
				<fk_column name="db_group_id" pk="db_group_id" />
			</fk>
		</table>
		<table name="db_groups_schemas" >
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_db_groups_schemas" unique="PRIMARY_KEY" >
				<column name="db_group_id" />
				<column name="db_schema_id" />
			</index>
			<fk name="fk_db_groups_schemas_db_groups" to_schema="ergomercator.system" to_table="db_groups" >
				<fk_column name="db_group_id" pk="db_group_id" />
			</fk>
			<fk name="fk_db_groups_schemas_db_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_grp_sch_param" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="param_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="db_packages_schemas" >
			<comment><![CDATA[This is the table that connect a schema with different packages]]></comment>
			<column name="app_package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="spcs_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spcs_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_packages_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="app_package_id" />
				<column name="db_schema_id" />
			</index>
			<index name="pk_db_packages_schemas" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="pk_db_packages_schemas_0" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
			</index>
			<index name="spcs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spcs_jguid" />
			</index>
			<index name="idx_db_packages_schemas" unique="NORMAL" >
				<column name="app_package_id" />
			</index>
			<fk name="fk_db_packages_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_packages_schemas_packages" to_schema="ergomercator.system" to_table="packages" >
				<fk_column name="app_package_id" pk="package_id" />
			</fk>
		</table>
		<table name="db_roles" >
			<comment><![CDATA[Roles of the users. An user can belong to on or many user_groups and can have one or many roles connected to an application]]></comment>
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="an_group_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="pk_db_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
			</index>
		</table>
		<table name="db_schema_config" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="key" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="conf" type="json" decimal="0" jt="2000" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="db_schema_config_pkey" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="key" />
			</index>
			<index name="fki_db_schema_config_schema_fk" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="db_schema_config_schema_fk" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_schema_params" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Foreign  schema id for reference ..................]]></comment>
			</column>
			<column name="key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The System Parameters' Key]]></comment>
			</column>
			<column name="param" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[the parameter]]></comment>
			</column>
			<column name="value" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The value of The parameter, Can Even be a Text File ora a Whole Html Page]]></comment>
			</column>
			<column name="has_translation" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Has Translation]]></comment>
			</column>
			<column name="sscp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sscp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_schema_params_pk" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="key" />
				<column name="param" />
			</index>
			<index name="sscp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sscp_jguid" />
			</index>
			<fk name="foreign_key01" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_schemas" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_name" type="varchar" length="60" decimal="0" jt="12" mandatory="y" />
			<column name="schema_des" type="varchar" length="512" decimal="0" jt="12" mandatory="y" />
			<column name="personal" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[This column tell us if this schema is linked to a person as a personal schema to store owner's data, password, and profiles]]></comment>
			</column>
			<column name="db_schema_key" type="varchar" length="256" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="default_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="url" type="varchar" length="255" decimal="0" jt="12" />
			<column name="ssch_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ssch_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="ssch_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ssch_jguid" />
			</index>
			<index name="db_schema_url_ndx" unique="NORMAL" >
				<column name="url" />
			</index>
			<index name="db_schemas_key_ndx" unique="NORMAL" >
				<column name="db_schema_key" />
			</index>
		</table>
		<table name="db_schemas_roles" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="app_package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="sscr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sscr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_db_schemas_roles" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
				<column name="role_id" />
			</index>
			<index name="pk_db_schemas_roles_0" unique="UNIQUE_KEY" >
				<column name="app_package_id" />
			</index>
			<index name="pk_db_schemas_roles_1" unique="UNIQUE_KEY" >
				<column name="app_package_id" />
				<column name="role_id" />
				<column name="db_schema_id" />
			</index>
			<index name="pk_db_schemas_roles_2" unique="UNIQUE_KEY" >
				<column name="role_id" />
			</index>
			<index name="pk_db_schemas_roles_3" unique="UNIQUE_KEY" >
				<column name="db_schema_id" />
			</index>
			<index name="sscr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sscr_jguid" />
			</index>
			<index name="idx_db_schemas_roles" unique="NORMAL" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
			</index>
			<fk name="fk_db_schemas_roles" to_schema="ergomercator.system" to_table="db_packages_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
				<fk_column name="app_package_id" pk="app_package_id" />
			</fk>
			<fk name="fk_db_schemas_roles_1" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_schemas_roles_3" to_schema="ergomercator.system" to_table="packages" >
				<fk_column name="app_package_id" pk="package_id" />
			</fk>
			<fk name="fk_db_schemas_roles_0" to_schema="ergomercator.system" to_table="sys_roles" update_action="cascade" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
		</table>
		<table name="db_table_params" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="table_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="fieldname" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="fieldtitle" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="ongrid" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pxwidth" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="gridgroup" type="varchar" length="128" decimal="0" jt="12" />
			<column name="exportfield" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="exporttype" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="32" decimal="0" jt="12" />
			<column name="gridtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlabel" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlength" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fieldprecisoin" type="smallint" length="5" decimal="0" jt="5" />
			<column name="gridpos" type="smallint" length="5" decimal="0" jt="5" />
			<fk name="fk_db_table_params_db_tables" to_schema="ergomercator.system" to_table="db_tables" update_action="cascade" >
				<fk_column name="table_guid" pk="jguid" />
			</fk>
		</table>
		<table name="db_tables" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="schema" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="isvirtual" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[If A table is 'Virtual' then its name is a 'logical' name made by a DataModule or Model Identifier and an Object Name (as Anagraphs.qryAnagraphs). A virtual Table can be a View or a Select of many Tables from which it inherits fields features]]></comment>
			</column>
			<column name="model_uid" type="uuid" decimal="0" jt="1111" >
				<comment><![CDATA[Foreign Key to db_models table, usually Models belong to a particula Schema in the db.]]></comment>
			</column>
			<column name="isquery" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[If a RecorSet decends from a Query then it does have all features (name fields) of a table but is defined by a Query]]></comment>
			</column>
			<column name="query_text" type="text" decimal="0" jt="12" >
				<comment><![CDATA[This is The Query Text.]]></comment>
			</column>
			<index name="DB_TABLES_PK" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="DB_TABLES_UK" unique="UNIQUE_KEY" >
				<column name="schema" />
				<column name="name" />
			</index>
		</table>
		<table name="db_tables_fields" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[This UID is an important link to the interface structure and localization of all applications according to this field]]></comment>
			</column>
			<column name="table_guid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="fieldname" type="varchar" length="64" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Field Name as registered in Database and in Jorm Structure]]></comment>
			</column>
			<column name="fieldtitle" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The on-screen Field Title this field can be localized using its GUID. Appears both on Grid Title and on LabelTitle a different GridTitle should be implemented]]></comment>
			</column>
			<column name="ongrid" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<comment><![CDATA[this exactly reports if by default the field is on grid or not]]></comment>
			</column>
			<column name="pxwidth" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Pixel Width uses for Grids (not dinamic adapts to hdpi screen)]]></comment>
			</column>
			<column name="fieldtype" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[This is the 'Delphi' DataType not exactly the Native DB DataType]]></comment>
			</column>
			<column name="gridgroup" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[many fields can be grouped in some kind of Grids this example 'groups' the field types together]]></comment>
			</column>
			<column name="exportfield" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="exporttype" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[if different from -1 sets a different type conversion for export]]></comment>
			</column>
			<column name="mask" type="varchar" length="32" decimal="0" jt="12" >
				<comment><![CDATA[if set is used to show the field with a 'mask' format on screen or grid]]></comment>
			</column>
			<column name="gridtitle" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlabel" type="varchar" length="128" decimal="0" jt="12" />
			<column name="fieldlength" type="smallint" length="5" decimal="0" jt="5" />
			<column name="fieldprecisoin" type="smallint" length="5" decimal="0" jt="5" />
			<column name="gridpos" type="smallint" length="5" decimal="0" jt="5" />
			<index name="db_table_fields_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="db_table_fields_uk" unique="UNIQUE_KEY" >
				<column name="fieldname" />
				<column name="table_guid" />
			</index>
			<fk name="db_fields_tables_fk" to_schema="ergomercator.system" to_table="db_tables" >
				<fk_column name="table_guid" pk="jguid" />
			</fk>
		</table>
		<table name="db_user_groups" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_group_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="susg_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="susg_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_user_groups_pk" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
				<column name="db_group_id" />
			</index>
			<index name="susg_jguid_uk" unique="UNIQUE_KEY" >
				<column name="susg_jguid" />
			</index>
			<index name="idx_db_user_groups" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_user_groups_0" unique="NORMAL" >
				<column name="db_group_id" />
			</index>
			<fk name="fk_db_user_groups_0" to_schema="ergomercator.system" to_table="db_groups" >
				<fk_column name="db_group_id" pk="db_group_id" />
			</fk>
			<fk name="fk_db_user_groups" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_user_schema_params" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Foreign  schema id for reference ..................]]></comment>
			</column>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The System Parameters' Key]]></comment>
			</column>
			<column name="param" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[the parameter]]></comment>
			</column>
			<column name="value" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The value of The parameter, Can Even be a Text File ora a Whole Html Page]]></comment>
			</column>
			<column name="has_translation" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Has Translation]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_user_schema_params_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
			<index name="ssup_jguid_uk" unique="UNIQUE_KEY" >
				<column name="db_user_id" />
				<column name="db_schema_id" />
				<column name="key" />
				<column name="param" />
			</index>
			<fk name="db_user_schema_params_db_schema_fk" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_user_schema_params_db_users" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_user_sessions" >
			<comment><![CDATA[This is the user Sessions Table]]></comment>
			<column name="db_session_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[This is the Session Key]]></comment>
			</column>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key To Users]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[This is the link to schema id]]></comment>
			</column>
			<column name="db_session_key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="start_time" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="ispublic" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="usse_jguid" type="varchar" length="40" decimal="0" jt="12" >
				<comment><![CDATA[guid unique identifier across DB's]]></comment>
			</column>
			<column name="surs_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="surs_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_user_sessions_pk" unique="PRIMARY_KEY" >
				<column name="db_session_id" />
			</index>
			<index name="surs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="surs_jguid" />
			</index>
			<index name="db_user_sessions_key" unique="NORMAL" >
				<column name="db_session_key" />
			</index>
			<index name="idx_db_user_sessions" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_user_sessions_0" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="idx_db_user_sessions_1" unique="NORMAL" >
				<column name="language_id" />
			</index>
			<fk name="fk_db_user_sessions" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_user_sessions_db_users" to_schema="ergomercator.system" to_table="db_users" update_action="cascade" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="active" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="email" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="password" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="username" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="isactive" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="verify_token" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="verified" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="default_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[This is the Default Schema of the User]]></comment>
			</column>
			<column name="ispublic" type="boolean" length="1" decimal="0" jt="-7" >
				<comment><![CDATA[This columns tell us if this user is just made to create a public connection]]></comment>
			</column>
			<column name="internal_key" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[this is the autogenerated internal id that is the base of the verify_token]]></comment>
			</column>
			<column name="default_role_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="search_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="reverse_search" type="varchar" length="256" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="main_profile_type_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="main_profile_id" type="varchar" length="64" decimal="0" jt="12" />
			<column name="image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="image_url" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="iso_language_code" type="char" length="2" decimal="0" jt="1" />
			<column name="iso_culture_code" type="char" length="5" decimal="0" jt="1" />
			<column name="user_first_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="user_family_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="emailsent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="emailconfirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="emaildate" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="payment" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[payment received]]></comment>
			</column>
			<column name="payment_expiration_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[payment expiration date. Usually a date with an alarm that is 365 Days for yearly abonement]]></comment>
			</column>
			<column name="user_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="suse_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="suse_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="social_id" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[Main Social ID -]]></comment>
			</column>
			<column name="social_type" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[Social Identifier for user logged in with oAuth from Social.]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="db_users_pkey" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
			</index>
			<index name="dbusr_mail_uk_ndx" unique="UNIQUE_INDEX" >
				<column name="email" />
			</index>
			<index name="dbusr_username_uk_ndx" unique="UNIQUE_INDEX" >
				<column name="username" />
			</index>
			<index name="suse_jguid_uk" unique="UNIQUE_KEY" >
				<column name="suse_jguid" />
			</index>
			<fk name="dbusr_sysroles_fk" to_schema="ergomercator.system" to_table="sys_roles" >
				<fk_column name="default_role_id" pk="role_id" />
			</fk>
		</table>
		<table name="db_users_payments" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="payment_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="amount" type="money" decimal="0" jt="3" mandatory="y" />
			<column name="payment_expiration_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="surp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="surp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_users_payments_pk" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
				<column name="db_schema_id" />
				<column name="payment_date" />
			</index>
			<index name="surp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="surp_jguid" />
			</index>
			<fk name="db_users_payments_schemas_fk" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="db_users_payments_users_fk" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users_profiles" >
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="district_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="first_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="last_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="address_street" type="varchar" length="128" decimal="0" jt="12" />
			<column name="address_number" type="varchar" length="12" decimal="0" jt="12" />
			<column name="address_postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="cellular_phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="work_phone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax_number" type="varchar" length="20" decimal="0" jt="12" />
			<column name="gender_code" type="char" length="1" decimal="0" jt="1" mandatory="y" />
			<column name="birth_date" type="date" length="13" decimal="0" jt="91" />
			<column name="birth_country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="birth_region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="birth_district_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="birth_town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="public_email" type="varchar" length="256" decimal="0" jt="12" />
			<column name="title" type="varchar" length="30" decimal="0" jt="12" />
			<column name="search_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="reverse_search" type="varchar" length="256" decimal="0" jt="12" />
			<column name="address_full" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="latitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="longitude" type="float8" length="17" decimal="17" jt="6" />
			<column name="fiscal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="smssent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="smsconfirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="smsdate" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="smschecknumber" type="varchar" length="4" decimal="0" jt="12" />
			<column name="address_town" type="varchar" length="256" decimal="0" jt="12" />
			<column name="p_facebook_json" type="json" decimal="0" jt="2000" />
			<column name="facebook_json" type="json" decimal="0" jt="2000" />
			<column name="address_state_province" type="varchar" length="20" decimal="0" jt="12" >
				<defo><![CDATA[''::character varying]]></defo>
			</column>
			<column name="uspr_jguid" type="varchar" length="40" decimal="0" jt="12" >
				<comment><![CDATA[guid unique identifier across DB's]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="supr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="supr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="db_users_profiles_pk" unique="PRIMARY_KEY" >
				<column name="db_user_id" />
			</index>
			<index name="supr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="supr_jguid" />
			</index>
			<index name="idx_db_users_profiles" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<index name="idx_db_users_profiles_0" unique="NORMAL" >
				<column name="district_id" />
			</index>
			<index name="idx_db_users_profiles_1" unique="NORMAL" >
				<column name="town_id" />
			</index>
			<index name="idx_db_users_profiles_2" unique="NORMAL" >
				<column name="gender_code" />
			</index>
			<index name="searc_name_ndx" unique="NORMAL" >
				<column name="reverse_search" />
				<column name="search_name" />
			</index>
			<fk name="fk_dbprofiles_users" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
			<fk name="fk_db_users_profiles_db_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="db_users_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_db_users_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="db_user_id" />
			</index>
			<index name="idx_db_users_roles" unique="UNIQUE_KEY" >
				<column name="role_id" />
			</index>
			<index name="idx_db_users_roles_0" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<fk name="fk_db_users_roles_0" to_schema="ergomercator.system" to_table="db_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
			<fk name="fk_db_roles_users" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
			<fk name="fk_db_users_roles" to_schema="ergomercator.system" to_table="sys_roles" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
		</table>
		<table name="db_users_schemas" >
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="isadmin" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="isdefault" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="isowner" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="readwrite" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="db_users_schemas_pkey" unique="PRIMARY_KEY" >
				<column name="db_schema_id" />
				<column name="db_user_id" />
			</index>
			<index name="fki_dbusrschemas_dbusers_fk" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_users_schemas" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="db_user_schemas_jguid" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="unq_db_users_schemas_db_user_id" unique="UNIQUE_KEY" >
				<column name="db_user_id" />
				<column name="db_schema_id" />
			</index>
			<fk name="fk_db_users_schemas" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="dbusrschemas_dbusers_fk" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users_schemas_apps" >
			<comment><![CDATA[Tell us which apps can a user reach for each schema]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sura_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sura_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="db_users_schemas_apps_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="db_schema_id" />
				<column name="db_user_id" />
			</index>
			<index name="pk_db_users_schemas_apps" unique="UNIQUE_KEY" >
				<column name="db_user_id" />
			</index>
			<index name="sura_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sura_jguid" />
			</index>
			<index name="idx_db_users_schemas_apps" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<index name="idx_db_users_schemas_apps_0" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<fk name="fk_db_users_schemas_apps_0" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_db_users_schemas_apps_1" to_schema="ergomercator.system" to_table="db_schemas" >
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_users_schemas_apps" to_schema="ergomercator.system" to_table="db_users" >
				<fk_column name="db_user_id" pk="db_user_id" />
			</fk>
		</table>
		<table name="db_users_schemas_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="app_package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="suro_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="suro_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_db_users_schemas_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="db_user_id" />
				<column name="db_schema_id" />
				<column name="app_package_id" />
			</index>
			<index name="suro_jguid_uk" unique="UNIQUE_KEY" >
				<column name="suro_jguid" />
			</index>
			<index name="db_users_schemas_roles_u" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<index name="idx_db_users_schemas_roles" unique="NORMAL" >
				<column name="db_schema_id" />
			</index>
			<index name="idx_db_users_schemas_roles_0" unique="NORMAL" >
				<column name="role_id" />
			</index>
			<index name="idx_db_users_schemas_roles_1" unique="NORMAL" >
				<column name="app_package_id" />
			</index>
			<index name="idx_db_users_schemas_roles_2" unique="NORMAL" >
				<column name="db_schema_id" />
				<column name="app_package_id" />
				<column name="role_id" />
			</index>
			<fk name="fk_db_users_schemas_roles_0" to_schema="ergomercator.system" to_table="db_schemas_roles" >
				<fk_column name="app_package_id" pk="app_package_id" />
				<fk_column name="role_id" pk="role_id" />
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
			<fk name="fk_db_users_schemas_roles_db_users_schemas" to_schema="ergomercator.system" to_table="db_users_schemas" >
				<fk_column name="db_user_id" pk="db_user_id" />
				<fk_column name="db_schema_id" pk="db_schema_id" />
			</fk>
		</table>
		<table name="financial_years" >
			<column name="financial_year_des" type="varchar" length="10" decimal="0" jt="12" />
			<column name="financial_year_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="date_from" type="date" length="13" decimal="0" jt="91" />
			<column name="insert_date" type="date" length="13" decimal="0" jt="91" />
			<column name="local" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="date_to" type="date" length="13" decimal="0" jt="91" />
			<column name="update_date" type="date" length="13" decimal="0" jt="91" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
		</table>
		<table name="form_models" >
			<column name="model_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="form_def_name" type="varchar" length="100" decimal="0" jt="12" />
			<column name="parent_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sfrm_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sfrm_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_form_definitions" unique="PRIMARY_KEY" >
				<column name="model_id" />
			</index>
			<index name="sfrm_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sfrm_jguid" />
			</index>
			<index name="idx_form_models" unique="NORMAL" >
				<column name="parent_id" />
			</index>
			<fk name="fk_form_models_parents" to_schema="ergomercator.system" to_table="form_models" >
				<fk_column name="parent_id" pk="model_id" />
			</fk>
		</table>
		<table name="form_objects_trans" >
			<column name="app_application_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="app_form_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="main_language_code" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="trans_language_code" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="object_name" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="object_property" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="object_text" type="varchar" length="1024" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sfrt_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sfrt_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_form_objects_trans" unique="PRIMARY_KEY" >
				<column name="app_application_name" />
				<column name="app_form_name" />
				<column name="main_language_code" />
				<column name="trans_language_code" />
				<column name="object_name" />
				<column name="object_property" />
			</index>
			<index name="sfrt_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sfrt_jguid" />
			</index>
		</table>
		<table name="json_objects" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="object" type="json" decimal="0" jt="2000" mandatory="y" />
			<index name="json_objects_pkey" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="packages" >
			<comment><![CDATA[Application Packages that contain the mix of many applications]]></comment>
			<column name="package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="package_name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="package_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spck_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spck_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ap_app_packages_pkey" unique="PRIMARY_KEY" >
				<column name="package_id" />
			</index>
			<index name="pk_packages" unique="UNIQUE_KEY" >
				<column name="package_name" />
			</index>
			<index name="spck_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spck_jguid" />
			</index>
		</table>
		<table name="packages_applications" >
			<comment><![CDATA[This is the list of applications taking part of a Package]]></comment>
			<column name="application_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="package_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="spca_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="spca_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="ap_packages_applications_pkey" unique="PRIMARY_KEY" >
				<column name="application_id" />
				<column name="package_id" />
			</index>
			<index name="spca_jguid_uk" unique="UNIQUE_KEY" >
				<column name="spca_jguid" />
			</index>
			<index name="idx_ap_packages_applications" unique="NORMAL" >
				<column name="application_id" />
			</index>
			<index name="idx_packages_applications" unique="NORMAL" >
				<column name="package_id" />
			</index>
			<fk name="fk_ap_packages_applications" to_schema="ergomercator.system" to_table="applications" >
				<fk_column name="application_id" pk="application_id" />
			</fk>
			<fk name="fk_packages_applications" to_schema="ergomercator.system" to_table="packages" >
				<fk_column name="package_id" pk="package_id" />
			</fk>
		</table>
		<table name="schemalog" >
			<column name="schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="session_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="logtime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="log" type="text" decimal="0" jt="12" />
		</table>
		<table name="sys_params" >
			<column name="key" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The System Parameters' Key]]></comment>
			</column>
			<column name="param" type="varchar" length="256" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[the parameter]]></comment>
			</column>
			<column name="value" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The value of The parameter, Can Even be a Text File ora a Whole Html Page]]></comment>
			</column>
			<column name="has_translation" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Has Translation]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sssp_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sssp_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="sysparams_pk" unique="PRIMARY_KEY" >
				<column name="key" />
				<column name="param" />
			</index>
			<index name="sssp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sssp_jguid" />
			</index>
		</table>
		<table name="sys_roles" >
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_name" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="role_code" type="char" length="3" decimal="0" jt="1" />
			<column name="role_key" type="varchar" length="64" decimal="0" jt="12" />
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="role_des" type="text" decimal="0" jt="12" />
			<column name="issysadmin" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="isguest" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="isuser" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="isadmin" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sssr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="sssr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_roles" unique="PRIMARY_KEY" >
				<column name="role_id" />
			</index>
			<index name="sssr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="sssr_jguid" />
			</index>
		</table>
		<table name="syslog" >
			<column name="logtime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="log" type="text" decimal="0" jt="12" />
			<column name="session_id" type="bigint" length="19" decimal="0" jt="-5" />
			<index name="syslgdate" unique="NORMAL" >
				<column name="logtime" options="DESC" />
			</index>
		</table>
		<table name="temp_session" >
			<comment><![CDATA[Temporary Session Table]]></comment>
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_session_key" type="varchar" decimal="0" jt="12" />
			<column name="db_session_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="language_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="start_time" type="timestamptz" length="12" decimal="6" jt="93" />
		</table>
		<table name="tmp_grids" >
			<column name="fieldname" type="varchar" length="128" decimal="0" jt="12" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="bgcolor" type="integer" length="10" decimal="0" jt="4" />
			<column name="width" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="128" decimal="0" jt="12" />
			<column name="excel" type="smallint" length="5" decimal="0" jt="5" />
			<column name="chart" type="boolean" length="1" decimal="0" jt="-7" />
		</table>
		<view name="db_schema_config_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT db_schema_config.db_schema_id,
    db_schema_config.key,
    db_schema_config.conf,
    db_schema_config.jguid,
    db_schema_config.deleted
   FROM system.db_schema_config
  WHERE (db_schema_config.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="db_schema_id" type="integer" />
			<column name="key" type="varchar" />
			<column name="conf" type="json" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
		</view>
		<view name="db_user_sessions_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT s.db_user_id,
    s.db_schema_id,
    s.db_session_key,
    s.db_session_id,
    s.language_id,
    s.start_time,
    s.insert_date,
    s.usse_jguid,
    s.surs_jguid,
    s.surs_deleted,
    u.country_id,
    p.region_id,
    p.district_id,
    p.town_id,
    p.first_name,
    p.last_name,
    p.address_street,
    p.address_number,
    p.address_postal_code,
    p.phone,
    p.cellular_phone,
    p.work_phone,
    p.fax_number,
    p.gender_code,
    p.birth_date,
    p.birth_country_id,
    p.birth_region_id,
    p.birth_district_id,
    p.birth_town_id,
    p.public_email,
    p.title,
    p.address_full,
    a.latitude,
    a.longitude,
    p.fiscal_code,
    p.smssent,
    p.smsconfirmed,
    p.smsdate,
    p.smschecknumber,
    p.address_town,
    p.p_facebook_json,
    p.facebook_json,
    p.address_state_province,
    p.uspr_jguid,
    p.supr_jguid,
    p.supr_deleted,
    u.active,
    u.email,
    u.password,
    u.username,
    u.isactive,
    u.verify_token,
    u.verified,
    u.default_schema_id,
    u.internal_key,
    u.default_role_id,
    u.main_profile_type_id,
    u.main_profile_id,
    u.image_id,
    u.image_url,
    u.iso_language_code,
    u.iso_culture_code,
    u.user_first_name,
    u.user_family_name,
    u.emailsent,
    u.emailconfirmed,
    u.emaildate,
    u.payment,
    u.payment_expiration_date,
    u.user_deleted,
    u.suse_jguid,
    u.suse_deleted,
    u.social_id,
    u.social_type,
    a.anagraph_id,
    a.an_title,
    a.an_name,
    a.an_second_name,
    a.an_last_name,
    a.an_notes,
    a.an_address,
    a.an_town,
    a.an_postal_code,
    a.an_iso_country_code,
    a.an_state_province,
    a.an_phone,
    a.an_phone2,
    a.an_fax,
    a.an_cellular,
    a.an_code,
    a.an_vat_numeric,
    a.an_email,
    a.an_web,
    a.an_contact_id,
    a.an_bank_account,
    a.an_payment_des,
    a.an_discount,
    a.an_distance,
    a.an_distance_mesunit,
    a.an_sex,
    a.an_cod_comune,
    a.an_cod_provincia,
    a.an_credit_line,
    a.an_currency_id,
    a.an_cat_id,
    a.an_notes2,
    a.an_notes3,
    a.an_edi,
    a.an_privacy,
    a.an_office_id,
    a.an_cod_prov_rif,
    a.an_data_fido,
    a.an_user_insert,
    a.an_user_update,
    a.an_area_id,
    a.an_agent_id,
    a.an_area_code,
    a.an_zone_id,
    a.an_ins_id,
    a.an_upd_id,
    a.an_documents,
    a.an_last_date,
    a.an_birthdate,
    a.an_office_type_id,
    a.an_searchname,
    a.an_extra_ue_flag,
    a.an_external_code,
    a.an_vat_id,
    a.an_personal_fiscal_code,
    a.an_privacy_print,
    a.an_sms,
    a.an_encrypted_fiscal_code,
    a.an_vat_purcentage,
    a.an_status,
    a.an_ownsite,
    a.an_insurance_id,
    a.an_anagraphs_anagraph_id,
    a.an_main_language_code,
    a.an_main_culture_code,
    a.an_fiscal_code,
    a.an_main_group_id,
    a.an_image_id,
    a.search_index,
    a.an_birthplace,
    a.an_birthplace_code,
    a.anagraph64,
    a.main_category_id,
    a.osm_id,
    a.an_description,
    a.an_address_number,
    a.anag_jguid,
    a.anag_deleted,
    a.jguid,
    a.custom_field_1,
    a.custom_field_2,
    a.custom_field_3,
    a.custom_float_1,
    a.custom_float_2,
    a.custom_int_1,
    a.custom_int_2,
    a.supplier_id,
    a.vessel_id,
    a.an_country_id,
    a.an_iso_country_code2,
    a.deleted
   FROM (((system.db_user_sessions s
     JOIN system.db_users u ON ((s.db_user_id = u.db_user_id)))
     JOIN system.db_users_profiles p ON ((s.db_user_id = p.db_user_id)))
     LEFT JOIN anagraph.anagraphs_view a ON ((p.anagraph_id = a.anagraph_id)));]]></view_script>
			<column name="db_user_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="db_session_key" type="varchar" />
			<column name="db_session_id" type="bigint" />
			<column name="language_id" type="smallint" />
			<column name="start_time" type="timestamptz" />
			<column name="insert_date" type="timestamptz" />
			<column name="usse_jguid" type="varchar" />
			<column name="surs_jguid" type="varchar" />
			<column name="surs_deleted" type="boolean" />
			<column name="country_id" type="smallint" />
			<column name="region_id" type="smallint" />
			<column name="district_id" type="smallint" />
			<column name="town_id" type="integer" />
			<column name="first_name" type="varchar" />
			<column name="last_name" type="varchar" />
			<column name="address_street" type="varchar" />
			<column name="address_number" type="varchar" />
			<column name="address_postal_code" type="varchar" />
			<column name="phone" type="varchar" />
			<column name="cellular_phone" type="varchar" />
			<column name="work_phone" type="varchar" />
			<column name="fax_number" type="varchar" />
			<column name="gender_code" type="char" />
			<column name="birth_date" type="date" />
			<column name="birth_country_id" type="smallint" />
			<column name="birth_region_id" type="smallint" />
			<column name="birth_district_id" type="smallint" />
			<column name="birth_town_id" type="integer" />
			<column name="public_email" type="varchar" />
			<column name="title" type="varchar" />
			<column name="address_full" type="varchar" />
			<column name="latitude" type="float8" />
			<column name="longitude" type="float8" />
			<column name="fiscal_code" type="varchar" />
			<column name="smssent" type="boolean" />
			<column name="smsconfirmed" type="boolean" />
			<column name="smsdate" type="timestamptz" />
			<column name="smschecknumber" type="varchar" />
			<column name="address_town" type="varchar" />
			<column name="p_facebook_json" type="json" />
			<column name="facebook_json" type="json" />
			<column name="address_state_province" type="varchar" />
			<column name="uspr_jguid" type="varchar" />
			<column name="supr_jguid" type="varchar" />
			<column name="supr_deleted" type="boolean" />
			<column name="active" type="boolean" />
			<column name="email" type="varchar" />
			<column name="password" type="varchar" />
			<column name="username" type="varchar" />
			<column name="isactive" type="boolean" />
			<column name="verify_token" type="varchar" />
			<column name="verified" type="boolean" />
			<column name="default_schema_id" type="integer" />
			<column name="internal_key" type="varchar" />
			<column name="default_role_id" type="smallint" />
			<column name="main_profile_type_id" type="smallint" />
			<column name="main_profile_id" type="varchar" />
			<column name="image_id" type="bigint" />
			<column name="image_url" type="varchar" />
			<column name="iso_language_code" type="char" />
			<column name="iso_culture_code" type="char" />
			<column name="user_first_name" type="varchar" />
			<column name="user_family_name" type="varchar" />
			<column name="emailsent" type="boolean" />
			<column name="emailconfirmed" type="boolean" />
			<column name="emaildate" type="timestamptz" />
			<column name="payment" type="boolean" />
			<column name="payment_expiration_date" type="date" />
			<column name="user_deleted" type="boolean" />
			<column name="suse_jguid" type="varchar" />
			<column name="suse_deleted" type="boolean" />
			<column name="social_id" type="varchar" />
			<column name="social_type" type="varchar" />
			<column name="anagraph_id" type="integer" />
			<column name="an_title" type="varchar" />
			<column name="an_name" type="varchar" />
			<column name="an_second_name" type="varchar" />
			<column name="an_last_name" type="varchar" />
			<column name="an_notes" type="varchar" />
			<column name="an_address" type="varchar" />
			<column name="an_town" type="varchar" />
			<column name="an_postal_code" type="varchar" />
			<column name="an_iso_country_code" type="varchar" />
			<column name="an_state_province" type="varchar" />
			<column name="an_phone" type="varchar" />
			<column name="an_phone2" type="varchar" />
			<column name="an_fax" type="varchar" />
			<column name="an_cellular" type="varchar" />
			<column name="an_code" type="varchar" />
			<column name="an_vat_numeric" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_web" type="varchar" />
			<column name="an_contact_id" type="integer" />
			<column name="an_bank_account" type="varchar" />
			<column name="an_payment_des" type="varchar" />
			<column name="an_discount" type="numeric" />
			<column name="an_distance" type="integer" />
			<column name="an_distance_mesunit" type="smallint" />
			<column name="an_sex" type="varchar" />
			<column name="an_cod_comune" type="varchar" />
			<column name="an_cod_provincia" type="varchar" />
			<column name="an_credit_line" type="numeric" />
			<column name="an_currency_id" type="smallint" />
			<column name="an_cat_id" type="smallint" />
			<column name="an_notes2" type="varchar" />
			<column name="an_notes3" type="text" />
			<column name="an_edi" type="boolean" />
			<column name="an_privacy" type="boolean" />
			<column name="an_office_id" type="integer" />
			<column name="an_cod_prov_rif" type="varchar" />
			<column name="an_data_fido" type="date" />
			<column name="an_user_insert" type="varchar" />
			<column name="an_user_update" type="varchar" />
			<column name="an_area_id" type="smallint" />
			<column name="an_agent_id" type="smallint" />
			<column name="an_area_code" type="varchar" />
			<column name="an_zone_id" type="varchar" />
			<column name="an_ins_id" type="bigint" />
			<column name="an_upd_id" type="bigint" />
			<column name="an_documents" type="smallint" />
			<column name="an_last_date" type="date" />
			<column name="an_birthdate" type="date" />
			<column name="an_office_type_id" type="smallint" />
			<column name="an_searchname" type="varchar" />
			<column name="an_extra_ue_flag" type="boolean" />
			<column name="an_external_code" type="varchar" />
			<column name="an_vat_id" type="smallint" />
			<column name="an_personal_fiscal_code" type="varchar" />
			<column name="an_privacy_print" type="smallint" />
			<column name="an_sms" type="boolean" />
			<column name="an_encrypted_fiscal_code" type="varchar" />
			<column name="an_vat_purcentage" type="smallint" />
			<column name="an_status" type="smallint" />
			<column name="an_ownsite" type="boolean" />
			<column name="an_insurance_id" type="bigint" />
			<column name="an_anagraphs_anagraph_id" type="integer" />
			<column name="an_main_language_code" type="varchar" />
			<column name="an_main_culture_code" type="varchar" />
			<column name="an_fiscal_code" type="varchar" />
			<column name="an_main_group_id" type="integer" />
			<column name="an_image_id" type="bigint" />
			<column name="search_index" type="varchar" />
			<column name="an_birthplace" type="varchar" />
			<column name="an_birthplace_code" type="varchar" />
			<column name="anagraph64" type="varchar" />
			<column name="main_category_id" type="smallint" />
			<column name="osm_id" type="bigint" />
			<column name="an_description" type="varchar" />
			<column name="an_address_number" type="varchar" />
			<column name="anag_jguid" type="varchar" />
			<column name="anag_deleted" type="boolean" />
			<column name="jguid" type="uuid" />
			<column name="custom_field_1" type="varchar" />
			<column name="custom_field_2" type="varchar" />
			<column name="custom_field_3" type="varchar" />
			<column name="custom_float_1" type="real" />
			<column name="custom_float_2" type="real" />
			<column name="custom_int_1" type="integer" />
			<column name="custom_int_2" type="integer" />
			<column name="supplier_id" type="integer" />
			<column name="vessel_id" type="smallint" />
			<column name="an_country_id" type="integer" />
			<column name="an_iso_country_code2" type="char" />
			<column name="deleted" type="boolean" />
		</view>
		<sequence name="app_forms_seq" options="START WITH 1" />
		<sequence name="app_licenses_seq" options="START WITH 1" />
		<sequence name="app_objects_seq" options="START WITH 1" />
		<sequence name="app_properties_seq" options="START WITH 1" />
		<sequence name="applications_seq" options="START WITH 1" />
		<sequence name="db_schema_seq" options="START WITH 12" />
		<sequence name="db_sessions_seq" options="START WITH 7" />
		<sequence name="db_users_seq" options="START WITH 1" />
		<sequence name="packages_seq" options="START WITH 1" />
		<sequence name="sys_roles_seq" options="START WITH 1" />
		<trigger name="check_country_trg" table="db_users" id="Trigger_15ca" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER check_country_trg BEFORE INSERT OR UPDATE OF country_id ON system.db_users FOR EACH ROW EXECUTE PROCEDURE jpublic.check_country_id()]]></string>
		</trigger>
		<trigger name="check_insert_date_trg" table="db_users" id="Trigger_f9f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER check_insert_date_trg BEFORE INSERT OR UPDATE OF insert_date ON system.db_users FOR EACH ROW EXECUTE PROCEDURE jpublic.check_insert_date()]]></string>
		</trigger>
		<trigger name="db_user_sessions_insert_date_bi_trg" table="db_user_sessions" id="Trigger_1bb3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_user_sessions_insert_date_bi_trg BEFORE INSERT OR UPDATE ON system.db_user_sessions FOR EACH ROW EXECUTE PROCEDURE jpublic.check_insert_date()]]></string>
		</trigger>
		<trigger name="db_user_update_trg" table="db_users" id="Trigger_575" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_user_update_trg AFTER UPDATE ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.user_update_trg()]]></string>
		</trigger>
		<trigger name="db_users_after_insert_trg" table="db_users" id="Trigger_1b95" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_after_insert_trg AFTER INSERT ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.user_after_insert()]]></string>
		</trigger>
		<trigger name="db_users_bi_trg" table="db_users" id="Trigger_543" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_bi_trg BEFORE INSERT ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.get_new_user()]]></string>
		</trigger>
		<trigger name="db_users_profile_users_biu_trg" table="db_users_profiles" id="Trigger_1bcf" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_profile_users_biu_trg AFTER INSERT OR UPDATE ON system.db_users_profiles FOR EACH ROW EXECUTE PROCEDURE system.db_users_profiles_biu()]]></string>
		</trigger>
		<trigger name="db_users_profiles_biu_trg" table="db_users_profiles" id="Trigger_3d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER db_users_profiles_biu_trg BEFORE INSERT OR UPDATE ON system.db_users_profiles FOR EACH ROW EXECUTE PROCEDURE system.db_users_profile_biu()]]></string>
		</trigger>
		<trigger name="form_dates_biu" table="app_forms" id="Trigger_13cc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER form_dates_biu BEFORE INSERT OR UPDATE ON system.app_forms FOR EACH ROW EXECUTE PROCEDURE system.record_date_biu()]]></string>
		</trigger>
		<trigger name="form_id_bi_trg" table="app_forms" id="Trigger_130f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER form_id_bi_trg BEFORE INSERT ON system.app_forms FOR EACH ROW EXECUTE PROCEDURE system.app_forms_biu()]]></string>
		</trigger>
		<trigger name="packages_before_insert_trg" table="packages" id="Trigger_22ac" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER packages_before_insert_trg BEFORE INSERT ON system.packages FOR EACH ROW EXECUTE PROCEDURE system.get_new_package()]]></string>
		</trigger>
		<trigger name="sfrm_bi_trg" table="form_models" id="Trigger_1d6f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sfrm_bi_trg BEFORE INSERT OR UPDATE ON system.form_models FOR EACH ROW EXECUTE PROCEDURE system.sfrm_trg()]]></string>
		</trigger>
		<trigger name="sfrt_bi_trg" table="form_objects_trans" id="Trigger_5b0" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sfrt_bi_trg BEFORE INSERT OR UPDATE ON system.form_objects_trans FOR EACH ROW EXECUTE PROCEDURE system.sfrt_trg()]]></string>
		</trigger>
		<trigger name="sgrp_bi_trg" table="db_groups" id="Trigger_172" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sgrp_bi_trg BEFORE INSERT OR UPDATE ON system.db_groups FOR EACH ROW EXECUTE PROCEDURE system.sgrp_trg()]]></string>
		</trigger>
		<trigger name="spaf_bi_trg" table="app_functions" id="Trigger_1dbc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spaf_bi_trg BEFORE INSERT OR UPDATE ON system.app_functions FOR EACH ROW EXECUTE PROCEDURE system.spaf_trg()]]></string>
		</trigger>
		<trigger name="spal_bi_trg" table="app_licenses" id="Trigger_a65" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spal_bi_trg BEFORE INSERT OR UPDATE ON system.app_licenses FOR EACH ROW EXECUTE PROCEDURE system.spal_trg()]]></string>
		</trigger>
		<trigger name="spca_bi_trg" table="packages_applications" id="Trigger_1e69" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spca_bi_trg BEFORE INSERT OR UPDATE ON system.packages_applications FOR EACH ROW EXECUTE PROCEDURE system.spca_trg()]]></string>
		</trigger>
		<trigger name="spck_bi_trg" table="packages" id="Trigger_19aa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spck_bi_trg BEFORE INSERT OR UPDATE ON system.packages FOR EACH ROW EXECUTE PROCEDURE system.spck_trg()]]></string>
		</trigger>
		<trigger name="spcs_bi_trg" table="db_packages_schemas" id="Trigger_1e97" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spcs_bi_trg BEFORE INSERT OR UPDATE ON system.db_packages_schemas FOR EACH ROW EXECUTE PROCEDURE system.spcs_trg()]]></string>
		</trigger>
		<trigger name="spfo_bi_trg" table="app_forms" id="Trigger_104f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spfo_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms FOR EACH ROW EXECUTE PROCEDURE system.spfo_trg()]]></string>
		</trigger>
		<trigger name="spmf_bi_trg" table="app_member_forms" id="Trigger_a62" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spmf_bi_trg BEFORE INSERT OR UPDATE ON system.app_member_forms FOR EACH ROW EXECUTE PROCEDURE system.spmf_trg()]]></string>
		</trigger>
		<trigger name="spop_bi_trg" table="app_forms_objects_properties" id="Trigger_115d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spop_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_objects_properties FOR EACH ROW EXECUTE PROCEDURE system.spop_trg()]]></string>
		</trigger>
		<trigger name="spot_bi_trg" table="app_forms_objects_translations" id="Trigger_213f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spot_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_objects_translations FOR EACH ROW EXECUTE PROCEDURE system.spot_trg()]]></string>
		</trigger>
		<trigger name="sppl_bi_trg" table="applications" id="Trigger_18eb" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppl_bi_trg BEFORE INSERT OR UPDATE ON system.applications FOR EACH ROW EXECUTE PROCEDURE system.sppl_trg()]]></string>
		</trigger>
		<trigger name="sppm_bi_trg" table="app_messages" id="Trigger_1171" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppm_bi_trg BEFORE INSERT OR UPDATE ON system.app_messages FOR EACH ROW EXECUTE PROCEDURE system.sppm_trg()]]></string>
		</trigger>
		<trigger name="sppo_bi_trg" table="app_forms_objects" id="Trigger_1ee3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppo_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_objects FOR EACH ROW EXECUTE PROCEDURE system.sppo_trg()]]></string>
		</trigger>
		<trigger name="sppr_bi_trg" table="db_applications_roles" id="Trigger_15cc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppr_bi_trg BEFORE INSERT OR UPDATE ON system.db_applications_roles FOR EACH ROW EXECUTE PROCEDURE system.sppr_trg()]]></string>
		</trigger>
		<trigger name="spps_bi_trg" table="db_app_schemas" id="Trigger_2510" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER spps_bi_trg BEFORE INSERT OR UPDATE ON system.db_app_schemas FOR EACH ROW EXECUTE PROCEDURE system.spps_trg()]]></string>
		</trigger>
		<trigger name="sppt_bi_trg" table="app_forms_translations" id="Trigger_18ab" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sppt_bi_trg BEFORE INSERT OR UPDATE ON system.app_forms_translations FOR EACH ROW EXECUTE PROCEDURE system.sppt_trg()]]></string>
		</trigger>
		<trigger name="srls_bi_trg" table="db_roles" id="Trigger_b9e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER srls_bi_trg BEFORE INSERT OR UPDATE ON system.db_roles FOR EACH ROW EXECUTE PROCEDURE system.srls_trg()]]></string>
		</trigger>
		<trigger name="srr_bi_trg" table="db_users_roles" id="Trigger_d27" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER srr_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_roles FOR EACH ROW EXECUTE PROCEDURE system.srr_trg()]]></string>
		</trigger>
		<trigger name="ssch_bi_trg" table="db_schemas" id="Trigger_1569" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ssch_bi_trg BEFORE INSERT OR UPDATE ON system.db_schemas FOR EACH ROW EXECUTE PROCEDURE system.ssch_trg()]]></string>
		</trigger>
		<trigger name="sscp_bi_trg" table="db_schema_params" id="Trigger_1f64" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sscp_bi_trg BEFORE INSERT OR UPDATE ON system.db_schema_params FOR EACH ROW EXECUTE PROCEDURE system.sscp_trg()]]></string>
		</trigger>
		<trigger name="sscr_bi_trg" table="db_schemas_roles" id="Trigger_53c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sscr_bi_trg BEFORE INSERT OR UPDATE ON system.db_schemas_roles FOR EACH ROW EXECUTE PROCEDURE system.sscr_trg()]]></string>
		</trigger>
		<trigger name="sssp_bi_trg" table="sys_params" id="Trigger_9f3" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sssp_bi_trg BEFORE INSERT OR UPDATE ON system.sys_params FOR EACH ROW EXECUTE PROCEDURE system.sssp_trg()]]></string>
		</trigger>
		<trigger name="sssr_bi_trg" table="sys_roles" id="Trigger_cdc" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sssr_bi_trg BEFORE INSERT OR UPDATE ON system.sys_roles FOR EACH ROW EXECUTE PROCEDURE system.sssr_trg()]]></string>
		</trigger>
		<trigger name="supr_bi_trg" table="db_users_profiles" id="Trigger_17c4" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER supr_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_profiles FOR EACH ROW EXECUTE PROCEDURE system.supr_trg()]]></string>
		</trigger>
		<trigger name="sura_bi_trg" table="db_users_schemas_apps" id="Trigger_f4c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sura_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_schemas_apps FOR EACH ROW EXECUTE PROCEDURE system.sura_trg()]]></string>
		</trigger>
		<trigger name="suro_bi_trg" table="db_users_schemas_roles" id="Trigger_2c5" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER suro_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_schemas_roles FOR EACH ROW EXECUTE PROCEDURE system.suro_trg()]]></string>
		</trigger>
		<trigger name="surp_bi_trg" table="db_users_payments" id="Trigger_15d6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER surp_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_payments FOR EACH ROW EXECUTE PROCEDURE system.surp_trg()]]></string>
		</trigger>
		<trigger name="surs_bi_trg" table="db_user_sessions" id="Trigger_1758" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER surs_bi_trg BEFORE INSERT OR UPDATE ON system.db_user_sessions FOR EACH ROW EXECUTE PROCEDURE system.surs_trg()]]></string>
		</trigger>
		<trigger name="suse_bi_trg" table="db_users" id="Trigger_256d" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER suse_bi_trg BEFORE INSERT OR UPDATE ON system.db_users FOR EACH ROW EXECUTE PROCEDURE system.suse_trg()]]></string>
		</trigger>
		<trigger name="susg_bi_trg" table="db_user_groups" id="Trigger_bfa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER susg_bi_trg BEFORE INSERT OR UPDATE ON system.db_user_groups FOR EACH ROW EXECUTE PROCEDURE system.susg_trg()]]></string>
		</trigger>
		<trigger name="suss_bi_trg" table="db_users_schemas" id="Trigger_bd7" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER suss_bi_trg BEFORE INSERT OR UPDATE ON system.db_users_schemas FOR EACH ROW EXECUTE PROCEDURE system.suss_trg()]]></string>
		</trigger>
		<trigger name="swap_profiles_ai_trg" table="db_users" id="Trigger_d4c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER swap_profiles_ai_trg AFTER INSERT ON system.db_users FOR EACH ROW EXECUTE PROCEDURE swap.user_insert_swap_profile()]]></string>
		</trigger>
		<function name="app_forms_biu" id="Function_566" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.app_forms_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.form_id is null then
          New.form_id := nextval('system.app_forms_seq');
      end if;
     if New.form_key is null then
          select system.get_key ( currval('system.app_forms_seq'), 16) into New.form_key;
     end if;

 
     Return NEW;    
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="assign_anagraphid_to_user" id="Function_247e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.assign_anagraphid_to_user(p_anagraph_id integer, p_db_user_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
declare 
  Result Boolean; 
begin
  update system.db_users_profiles
    set anagraph_id = p_anagraph_id
  where
     db_user_id = p_db_user_id; 
  Result := p_anagraph_id > 0 and p_db_user_id > 0; 
  
  Return Result; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_db_user_id" jt="4" type="int4" />
		</function>
		<function name="createkey" id="Function_1239" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createkey()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
  x system.db_users%ROWTYPE; 
  i integer; 
begin
     i := 0; 	
     for x in select * from system.db_users 
     loop
         update system.db_users set verify_token = system.get_key(x.db_user_id, 32) where db_user_id = x.db_user_id; 
        PERFORM system.setlog('aggiornato ricerca utente: ' || x.db_user_id|| ' key ' || system.get_key(x.db_user_id, 32) );
        PERFORM pg_sleep(1.545); 
        i := i +1; 
     end loop; 

     return i; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="createpersonalschema" id="Function_10ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createpersonalschema(p_session_key character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
  
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_key );
   select count(*) into n_record from system.db_user_sessions where db_session_key = p_session_key; 
   PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_key || ' trovato record: ' || n_record);
   if n_record = 0 then s_token := 'Error'; end if; 
   if n_record = 1 then
        select * into a_record from system.db_user_sessions where db_session_key = p_session_key; 
        select * into u_record from system.db_users where db_user_id = a_record.db_user_id; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key)
                  values (i_schema_id, u_record.username, u_record.username || ' personal schema', true,  s_token); 
      -- insert into system.db_schemas(db_schema_id, db_schema_name, personal, db_owner_id, db_schema_key) 
      --     values (i_schema_id, u_record.username, true, u_record.db_user_id, s_token); 
       update system.db_users_schemas set isdefault = false where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);
     end if; 
     return s_token; 
  exception when others then PERFORM system.setlog('system.createpersonalschema  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.createpersonalschema   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.createpersonalschema   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.createpersonalschema   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
		</function>
		<function name="createpublicschema" id="Function_18fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createpublicschema(p_user_key character varying, p_session_key character varying, p_schema_name character varying, p_schema_des character varying, p_isportal boolean, p_package_key character varying, p_country_id smallint, p_default_language_id smallint)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
  
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key );
   select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key || ' trovato record: ' || n_record);
   if n_record = 0 then s_token := 'Error'; end if; 
   if n_record = 1 then 
	select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   end if; 
   if n_record = 1 then
        select * into a_record from system.db_user_sessions where db_session_key = p_session_key; 
        -- selezionata la sessione di amministraori ... 
        select * into u_record from system.db_users where verify_token = p_user_key; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key,
                                     language_id, country_id, default_user_id)
                  values (i_schema_id, p_schema_name, p_schema_name, false,  s_token, p_default_language_id, 
                          p_country_id, u_record.db_user_id);
       update system.db_users_schemas set isdefault = false where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);

     end if; 
     return s_token; 
  exception when others then PERFORM system.setlog('system.createpublicschema  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.createpublicschema   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_user_key" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_schema_name" jt="12" type="varchar" />
			<input_param name="p_schema_des" jt="12" type="varchar" />
			<input_param name="p_isportal" jt="-7" type="bool" />
			<input_param name="p_package_key" jt="12" type="varchar" />
			<input_param name="p_country_id" jt="5" type="int2" />
			<input_param name="p_default_language_id" jt="5" type="int2" />
		</function>
		<function name="createpublicschema" id="Function_1e3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createpublicschema(p_user_key character varying, p_session_key character varying, p_schema_name character varying, p_schema_des character varying, p_isportal boolean, p_package_key character varying, p_country_id integer, p_default_language_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
  
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key );
   select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   PERFORM system.setlog('createpublicschema ricerca utente: ' || p_user_key || ' trovato record: ' || n_record);
   if n_record = 0 then s_token := 'Error'; end if; 
   if n_record = 1 then 
	select count(*) into n_record from system.db_users where verify_token = p_user_key; 
   end if; 
   if n_record = 1 then
        select * into a_record from system.db_user_sessions where db_session_key = p_session_key; 
        -- selezionata la sessione di amministraori ... 
        select * into u_record from system.db_users where verify_token = p_user_key; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key)
                  values (i_schema_id, p_schema_name, p_schema_name, false,  s_token); 

       update system.db_users_schemas set isdefault = false where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);
     end if; 
     return s_token; 
  exception when others then PERFORM system.setlog('system.createpublicschema  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.createpublicschema   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.createpublicschema   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_user_key" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_schema_name" jt="12" type="varchar" />
			<input_param name="p_schema_des" jt="12" type="varchar" />
			<input_param name="p_isportal" jt="-7" type="bool" />
			<input_param name="p_package_key" jt="12" type="varchar" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_default_language_id" jt="4" type="int4" />
		</function>
		<function name="createuserschema" id="Function_17bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.createuserschema(p_user_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare
  i_schema_id integer; 
  n_record integer; 
  s_token character varying; 
  a_record record; 
  u_record record; 
begin
   i_schema_id := -1; 
   PERFORM system.setlog('createpersonalschema ricerca utente: ' || p_user_id );
   --RAISE NOTICE 'createpersonalschema ricerca sessione: ' || TO_CHAR(p_session_id) ;
   select count(*) into n_record from system.db_users WHERE db_user_id = p_user_id; 
   PERFORM system.setlog('createpersonalschema ricerca utente: ' || p_user_id || ' trovato record: ' || n_record);
   if n_record = 1 then

        select * into u_record from system.db_users where db_user_id = p_user_id; 
 
   	select nextval('system.db_schema_seq') into i_schema_id; 
        select system.get_key(i_schema_id, 12) into s_token; 
       INSERT INTO system.db_schemas(db_schema_id, db_schema_name, schema_des, personal, db_schema_key, default_user_id)
                  values (i_schema_id, u_record.username, u_record.username || ' personal schema', true,  s_token, p_user_id); 
      -- insert into system.db_schemas(db_schema_id, db_schema_name, personal, db_owner_id, db_schema_key) 
      --     values (i_schema_id, u_record.username, true, u_record.db_user_id, s_token); 
       update system.db_users_schemas set isdefault = true where db_user_id = u_record.db_user_id;
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (i_schema_id, u_record.db_user_id, false, true, false, false);
       update system.db_users set default_schema_id = i_schema_id where db_user_id = p_user_id; 
     end if; 
     return i_schema_id; 
end;$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="db_user_email" id="Function_19fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_user_email(p_email character varying)
 RETURNS TABLE(db_user_id bigint, username character varying, isactive boolean, password character varying, payment boolean, payment_expiration_date date)
 LANGUAGE plpgsql
AS $function$
BEGIN
 RETURN QUERY SELECT
 db_user_id ,
 username ,
 isactive ,  
 password , 
 payment , 
 payment_expiration_date 
 FROM
 system.db_users
 WHERE
 email LIKE '%' || lower(p_email) || '%' ;
END; 
$function$
;]]></string>
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="db_user_id" jt="-5" type="int8" />
			<input_param name="username" jt="12" type="varchar" />
			<input_param name="isactive" jt="-7" type="bool" />
			<input_param name="password" jt="12" type="varchar" />
			<input_param name="payment" jt="-7" type="bool" />
			<input_param name="payment_expiration_date" jt="91" type="date" />
		</function>
		<function name="db_user_update_password" id="Function_1baf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_user_update_password(p_email character varying, p_password character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  i integer; 
BEGIN
 SELECT count(1) from 
 system.db_users
 WHERE
 email LIKE '%' || lower(p_email) || '%'
 into i;
 
 if i = 1 then 
 	UPDATE
 		system.db_users
 	SET 
 		password = p_password 
	WHERE
 		email LIKE '%' || lower(p_email) || '%';
 end if; 
 
 return i; 
END; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
		</function>
		<function name="db_users_check" id="Function_a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_users_check(p_user_id integer, OUT result boolean, OUT errormessage character varying, OUT errorcode character varying)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  vtest smallint; 
begin
  /* Insert real code here */
  
   select count(1) into vtest from system.db_users e where
       e.db_user_id = p_user_id;
       
   Result := vtest = 1;
   
   if not Result then
   
     errormessage := 'User does not Exist';
     errorcode := 'SY-US-001';
     
   else
       
     errormessage := 'User Exists';
     errorcode := 'SY-US-000';
        
   end if; 
       
end
$function$
;]]></string>
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="result" jt="-7" type="bool" />
			<input_param name="errormessage" jt="12" type="varchar" />
			<input_param name="errorcode" jt="12" type="varchar" />
		</function>
		<function name="db_users_profile_biu" id="Function_1c36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_users_profile_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     New.search_name := system.stripstringsearch(New.last_name, New.first_name );
     New.reverse_search := system.stripstringsearch(New.first_name, New.last_name );
     New.first_name := trim(initcap(New.first_name)); 
     New.last_name := trim(initcap(New.last_name)); 
     if New.latitude < 0.0000000001 then New.latitude := 0; End If; 
     if New.longitude < 0.0000000001 then New.longitude := 0; End If;   
	 
	 if New.Anagraph_id is null then New.anagraph_id = 0; end if; 
     
     -- New.latitude := round(New.latitude, 7); 
     -- New.latitude := round(New.longitude, 7); 
      
     Return NEW;    
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="db_users_profiles_biu" id="Function_23ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.db_users_profiles_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  /* Insert real code here */
  
update system.db_users  u 
set user_first_name = New.first_name
where New.db_user_id = u.db_user_id;
update system.db_users  u 
set user_family_name = New.last_name 
where New.db_user_id = u.db_user_id;
Return New; 
end
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_key" id="Function_20b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_key(p_id integer, p_digits integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
   s_token character varying; 
begin
select system.get_key ( cast(p_id as bigint), cast(p_digits as smallint)) into s_token; 
return s_token; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="4" type="int4" />
			<input_param name="p_digits" jt="4" type="int4" />
		</function>
		<function name="get_key" id="Function_18cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_key(p_id bigint, p_digits smallint)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
   s_token character varying; 
   result character varying; 
begin
select md5(Cast(p_id as character(32))) into s_token; 
result := s_token; 
s_token := ''; 
select md5(to_char(now(), 'YYYYMMDDHH24MISSMS')) into s_token; 
result := result || s_token; 
s_token := ''; 
return result; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_digits" jt="5" type="int2" />
		</function>
		<function name="get_key" id="Function_1f1c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_key(p_id bigint, p_digits integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
   s_token character varying; 
begin
---select md5(lpad( Cast(p_id as character)  || to_char(now(), 'YYYYMMDDHH24MISSMS'), p_digits, '0')) into s_token; 
select system.get_key ( cast(p_id as bigint), cast(p_digits as smallint)) into s_token; 
return s_token; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_digits" jt="4" type="int4" />
		</function>
		<function name="get_new_package" id="Function_609" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_new_package()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.package_id is null then
          New.package_id:=nextval('system.packages_seq');
      end if;
     if New.package_key is null then
          select system.get_key ( currval('system.packages_seq'), 16) into New.package_key;
     end if;
     if New.creation_date is null then
          New.creation_date := Now();
     end if;  
     Return NEW;    
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_new_user" id="Function_976" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if new.db_user_id is null or new.db_user_id = 0 then
	select nextval('system.db_users_seq') into new.db_user_id; 
        select system.get_key( new.db_user_id, 12) into new.verify_token; 
   end if; 
  
   return NEW; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_schema_id" id="Function_ec4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_schema_id()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
begin
  return current_setting('system.db_schema_id')::integer; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="get_session_id" id="Function_1226" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.get_session_id(p_session_key character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  sessione bigint; 
begin
  PERFORM system.setlog('createpersonalschema ricerca sessione: ' || p_session_key );
  select db_session_id into sessione  from system.db_user_sessions where db_session_key = p_session_key; 
  if sessione is null then return 0;  else return sessione; end if; 
  
  exception when others then return -1; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_session_key" jt="12" type="varchar" />
		</function>
		<function name="getschemadef" id="Function_119d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.getschemadef(p_schema_key character varying)
 RETURNS TABLE(db_schema_id integer, db_schema_name character varying, schema_des character varying, personal boolean, url character varying, guid uuid, user_id integer, useremail character varying)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT
	  s.db_schema_id, s.db_schema_name, s.schema_des,
	  s.personal, s.url, s.ssch_jguid::uuid, s.default_user_id, u.email
	  FROM system.db_schemas s 
	    left outer join system.db_users u
	      on s.default_user_id = u.db_user_id 
     WHERE
        db_schema_key = p_schema_key ;
END; $function$
;]]></string>
			<input_param name="p_schema_key" jt="12" type="varchar" />
			<input_param name="db_schema_id" jt="4" type="int4" />
			<input_param name="db_schema_name" jt="12" type="varchar" />
			<input_param name="schema_des" jt="12" type="varchar" />
			<input_param name="personal" jt="-7" type="bool" />
			<input_param name="url" jt="12" type="varchar" />
			<input_param name="guid" jt="1111" type="uuid" />
			<input_param name="user_id" jt="4" type="int4" />
			<input_param name="useremail" jt="12" type="varchar" />
		</function>
		<function name="insert_application" id="Function_1f3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_application(p_application_name character varying)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$declare
  p_id integer; 
  p_key character varying; 
  p_date timestamp with time zone; 
begin
     
     p_id := nextval('system.applications_seq');
     p_date := Now(); 
     select system.get_key ( currval('system.applications_seq'), 16) into p_key;
     INSERT INTO system.applications(
            application_id, application_des, application_name, creation_date, 
            description, application_key)
     VALUES (p_id, '', p_application_name, p_date,  '', p_key);
    
     
     Return p_id;
        
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_application_name" jt="12" type="varchar" />
		</function>
		<function name="insert_date_new" id="Function_1890" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_date_new()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if New.insert_date is null then New.insert_date := now(); end if;
  Return New;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="insert_package" id="Function_15a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_package(p_name character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare
  p_package_id integer; 
  p_key character varying; 
  p_date timestamp with time zone; 
begin
     
     p_package_id := nextval('system.packages_seq');
     p_date := Now(); 
     select system.get_key ( currval('system.packages_seq'), 16) into p_key;
     INSERT INTO system.packages(
            package_id, package_name, package_key, creation_date)
      VALUES (p_package_id, p_name, p_key, p_date); 
     
     Return p_package_id;
        
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_name" jt="12" type="varchar" />
		</function>
		<function name="insert_role" id="Function_5b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.insert_role(p_name character varying, p_code character varying, p_admin boolean, p_user boolean, p_guest boolean)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$declare
  p_id integer; 
  p_key character varying; 
  p_date timestamp with time zone; 
begin
     
     p_id := nextval('system.sys_roles_seq');
     p_date := Now(); 
     select system.get_key ( currval('system.sys_roles_seq'), 16) into p_key;
     INSERT INTO system.sys_roles(
            role_id, role_name, role_code, role_key, creation_date, role_des, 
            issysadmin, isguest, isuser, isadmin)
     VALUES (p_id, p_name, p_code, p_key, p_date, '', false, p_guest, p_user, p_admin);
     Return p_id;
        
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_name" jt="12" type="varchar" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_admin" jt="-7" type="bool" />
			<input_param name="p_user" jt="-7" type="bool" />
			<input_param name="p_guest" jt="-7" type="bool" />
		</function>
		<function name="likes_update_ai_trg" id="Function_7b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.likes_update_ai_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   update swap.profiles set likes = likes + 1 where user_id = New.user_id; 
   Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="nvl" id="Function_1947" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.nvl(value integer, replace integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$begin
   if value is null then 
	return (replace);
    else
	return(value);
    end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="value" jt="4" type="int4" />
			<input_param name="replace" jt="4" type="int4" />
		</function>
		<function name="nvl" id="Function_1b99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.nvl(p_string character varying, p_null character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
begin
  if p_string is null then
     return p_null; 
  else
      return p_string; 
  end if; 
  
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_string" jt="12" type="varchar" />
			<input_param name="p_null" jt="12" type="varchar" />
		</function>
		<function name="record_date_biu" id="Function_1f3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.record_date_biu()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.insert_date is null then
          New.insert_date := Now();
     end if; 
     New.update_date := Now();

     Return New; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="schemasetdefaultuser" id="Function_8e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.schemasetdefaultuser(p_user_id integer, p_schema_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  i integer; 	
  j integer; 	 
begin
  select count(1) into i from system.db_users where db_user_id = p_user_id; 
  if i > 0 then
    select count(1) into j from system.db_users_schemas s 
        where     s.db_user_id = p_user_id 
              and db_schema_id = p_schema_id; 
    if j = 0 then 
        insert into system.db_users_schemas(db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
	   values(p_schema_id, p_user_id, false, true, false, false); 
     end if; 
    update system.db_users set default_schema_id = p_schema_id where db_user_id = p_user_id; 
    update system.db_schemas set default_user_id = p_user_id where db_schema_id = p_schema_id; 
  end if; 

   if i > 0 then 
	return true; 
   else 
	return false; 
   end if; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="set_schema_id" id="Function_96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.set_schema_id(v_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
	dyn_sql text; 
begin
 dyn_sql := '"SET SESSION "system.db_schema_id" = ' || v_id;
 EXECUTE dyn_sql; 
  return current_setting('system.db_schema_id')::integer;  
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="v_id" jt="4" type="int4" />
		</function>
		<function name="setlog" id="Function_1f2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.setlog(log text, p_session_id bigint)
 RETURNS date
 LANGUAGE plpgsql
AS $function$
begin
   insert into system.syslog (logtime, log, session_id) values (now(), log, session_id);
   RAISE NOTICE 'log is --%', log;
   return now(); 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="log" jt="12" type="text" />
			<input_param name="p_session_id" jt="-5" type="int8" />
		</function>
		<function name="setlog" id="Function_ccc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.setlog(log text)
 RETURNS date
 LANGUAGE plpgsql
AS $function$
begin
   insert into system.syslog (logtime, log) values (now(), log);
   RAISE NOTICE 'log is -- % %', now(), log;
   return now(); 
EXCEPTION WHEN OTHERS THEN 
  RAISE 'Errore system.setlog: %', SQLERRM;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="log" jt="12" type="text" />
		</function>
		<function name="setuserdefaultschema" id="Function_1619" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.setuserdefaultschema(p_session_key character varying, p_user_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$declare
  x record; 
  i integer; 	
  j integer; 	
begin
  SELECT db_user_id, db_schema_id, db_session_key, db_session_id, language_id into x 
	FROM system.db_user_sessions where db_session_key = p_session_key; 
   
  select count(1) into i from system.db_users where db_user_id = p_user_id; 
  if i > 0 then
 
     select count(1) into j from system.db_users_schemas s where s.db_user_id = p_user_id and db_schema_id = x.db_schema_id; 
  
	
     if j = 0 then 
        insert into system.db_users_schemas(db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
	   values(x.db_schema_id, p_user_id, false, true, false, true); 
     end if; 
	update system.db_users set default_schema_id = x.db_schema_id where db_user_id = p_user_id; 
   end if; 
   if i > 0 then 
	return true; 
   else 
	return false; 
   end if; 
	
end; $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_session_key" jt="12" type="varchar" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="sfrm_trg" id="Function_1747" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sfrm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sfrm_jguid is null then
     New.sfrm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sfrm_deleted is null then
     New.sfrm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sfrt_trg" id="Function_a2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sfrt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sfrt_jguid is null then
     New.sfrt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sfrt_deleted is null then
     New.sfrt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sgrp_trg" id="Function_a0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sgrp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sgrp_jguid is null then
     New.sgrp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sgrp_deleted is null then
     New.sgrp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spaf_trg" id="Function_1e35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spaf_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spaf_jguid is null then
     New.spaf_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spaf_deleted is null then
     New.spaf_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spal_trg" id="Function_16f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spal_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spal_jguid is null then
     New.spal_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spal_deleted is null then
     New.spal_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spca_trg" id="Function_16e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spca_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spca_jguid is null then
     New.spca_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spca_deleted is null then
     New.spca_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spck_trg" id="Function_2678" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spck_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spck_jguid is null then
     New.spck_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spck_deleted is null then
     New.spck_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spcs_trg" id="Function_67b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spcs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spcs_jguid is null then
     New.spcs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spcs_deleted is null then
     New.spcs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spfo_trg" id="Function_260b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spfo_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spfo_jguid is null then
     New.spfo_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spfo_deleted is null then
     New.spfo_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spmf_trg" id="Function_1cb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spmf_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spmf_jguid is null then
     New.spmf_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spmf_deleted is null then
     New.spmf_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spop_trg" id="Function_261f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spop_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spop_jguid is null then
     New.spop_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spop_deleted is null then
     New.spop_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spot_trg" id="Function_5e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spot_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spot_jguid is null then
     New.spot_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spot_deleted is null then
     New.spot_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppl_trg" id="Function_2640" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppl_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppm_trg" id="Function_23f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppm_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppm_jguid is null then
     New.sppm_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppm_deleted is null then
     New.sppm_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppo_trg" id="Function_17ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppo_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppo_jguid is null then
     New.sppo_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppo_deleted is null then
     New.sppo_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppr_trg" id="Function_10ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppr_jguid is null then
     New.sppr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppr_deleted is null then
     New.sppr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="spps_trg" id="Function_6f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.spps_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.spps_jguid is null then
     New.spps_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.spps_deleted is null then
     New.spps_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sppt_trg" id="Function_1327" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sppt_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sppt_jguid is null then
     New.sppt_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sppt_deleted is null then
     New.sppt_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="srls_trg" id="Function_1a72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.srls_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:= public.uuid_generate_v1mc();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
 
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="srr_trg" id="Function_1d05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.srr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:= public.uuid_generate_v1mc();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ssch_trg" id="Function_16c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.ssch_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ssch_jguid is null then
     New.ssch_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ssch_deleted is null then
     New.ssch_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sscp_trg" id="Function_523" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sscp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sscp_jguid is null then
     New.sscp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sscp_deleted is null then
     New.sscp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sscr_trg" id="Function_21a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sscr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sscr_jguid is null then
     New.sscr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sscr_deleted is null then
     New.sscr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sssp_trg" id="Function_2335" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sssp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sssp_jguid is null then
     New.sssp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sssp_deleted is null then
     New.sssp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sssr_trg" id="Function_24b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sssr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sssr_jguid is null then
     New.sssr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sssr_deleted is null then
     New.sssr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="startsessionbyurl" id="Function_10d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.startsessionbyurl(p_url character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  n_record integer; 
  a_record record; 
  i_user integer; 
  i_sequence bigint; 
  s_token character varying; 
begin
  i_sequence := -1; 
  s_token := ''; 
  select count(1) count, public.nvl(min(default_user_id),0) id into n_record, i_user  
         from system.db_schemas s, system.db_users  u 
         where url = lower(p_url)  and s.default_user_id = u.db_user_id; 
  if n_record = 1 and i_user > 0 then
    begin
       
       select * into a_record from system.db_users 
            WHERE db_user_id = i_user; 
       select nextval('system.db_sessions_seq') into i_sequence; 
       select system.get_key(i_sequence, 32) into s_token;   
    if i_sequence > 0 then
    
	INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id, ispublic)
		VALUES 
	   (a_record.db_user_id, a_record.default_schema_id, s_token, i_sequence, true);
	   PERFORM system.setlog('Impostata Sessione schema: ' || a_record.default_schema_id || ' sessione: ' || i_sequence); 
    end if;      
            
    end;
  end if; 
  return s_token; 
end;$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_url" jt="12" type="varchar" />
		</function>
		<function name="stripstringsearch" id="Function_16af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.stripstringsearch(p_firstname character varying, p_lastname character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$DECLARE   
   TEMP_NAME                 character varying(2048);
    v_firstname character varying (1024);
    v_lastname character varying (1024);
   -- Declare program variables as shown above
BEGIN 
-- Start of DDL Script for Trigger TTTLINES_PUBLIC.ANAG_NOMERICERCA_TRG
-- Generated 17-dic-2007 7.17.39 from TTTLINES_PUBLIC@JANUA
       if p_firstname is null then v_firstname := ' '; else v_firstname := p_firstname; end if;  
       if p_lastname is null then v_lastname := ' '; else v_lastname := p_lastname; end if; 
       
       TEMP_NAME := TRIM(v_firstname) || TRIM(v_lastname);
       TEMP_NAME := replace (TEMP_NAME, '.', '');
       TEMP_NAME := replace (TEMP_NAME, '-', '');
       TEMP_NAME := replace (TEMP_NAME, ',', '');
       TEMP_NAME := replace (TEMP_NAME, '@', '');
       TEMP_NAME := replace (TEMP_NAME, '_', '');
       TEMP_NAME := replace (TEMP_NAME, '/', '');
       TEMP_NAME := replace (TEMP_NAME, '(', '');
       TEMP_NAME := replace (TEMP_NAME, ')', '');
       TEMP_NAME := replace (TEMP_NAME, '&', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, ' ', '');
       TEMP_NAME := replace (TEMP_NAME, ':', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, '#', '');
       TEMP_NAME := replace (TEMP_NAME, '*', '');
       TEMP_NAME := replace (TEMP_NAME, '?', '');
       TEMP_NAME := replace (TEMP_NAME, ';', '');
       return upper(TEMP_NAME); 
 end; 
  $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
		</function>
		<function name="supr_trg" id="Function_2077" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.supr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$

begin
  if New.supr_jguid is null then
     New.jguid = public.uuid_generate_v1mc(); 
     New.supr_jguid:= '{' || New.jguid::character varying || '}';
  end if;

  if New.supr_deleted is null then
     New.supr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sura_trg" id="Function_21b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.sura_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.sura_jguid is null then
     New.sura_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.sura_deleted is null then
     New.sura_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="suro_trg" id="Function_16ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.suro_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.suro_jguid is null then
     New.suro_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.suro_deleted is null then
     New.suro_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="surp_trg" id="Function_1e20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.surp_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.surp_jguid is null then
     New.surp_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.surp_deleted is null then
     New.surp_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="surs_trg" id="Function_2504" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.surs_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.surs_jguid is null then
     New.surs_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.surs_deleted is null then
     New.surs_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="suse_trg" id="Function_b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.suse_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$

begin
  if New.suse_jguid is null then
     New.jguid = public.uuid_generate_v1mc(); 
     New.suse_jguid:= '{' || New.jguid::character varying || '}';
  end if;
  if New.suse_deleted is null then
     New.suse_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="susg_trg" id="Function_fd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.susg_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.susg_jguid is null then
     New.susg_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.susg_deleted is null then
     New.susg_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="suss_trg" id="Function_1dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.suss_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:=  public.uuid_generate_v1mc();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="test_new_user" id="Function_a61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.test_new_user(p_username character varying, p_email character varying, p_password character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare 
  v_test character varying; 
  v_session_id character varying; 
  i_test integer; 

 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text;
begin

  PERFORM system.setlog('***********************************' || now()); 
  PERFORM system.setlog('system.test_new_user verifico  utente test: ' || p_username || ' email: ' || p_email || ' password: ' || p_password);
  select system.usertest(p_username, p_email) into i_test; 
  if i_test = 1 then 
         PERFORM system.setlog('system.test_new_user utente già esistente: ' || p_username || ' email: ' || p_email);
  end if; 

  PERFORM system.setlog('system.test_new_user creo utente test: ' || p_username || ' email: ' || p_email || ' password: ' || p_password || ' country: ' || 'ITA' || 'public false');
  select system.useradd(p_email, p_username, p_password , 1, false) into v_test;
  PERFORM system.setlog('system.test_new_user  creazione utente test, risultato id univoco utente: ' || v_test); 
   PERFORM system.setlog('system.test_new_user login utente test: ' || p_username || ' email: ' || p_email || ' password: ' || p_password || ' risultato: ' || v_test); 
  select system.userlogin( p_username, p_password , p_email) into v_test;
  --ystem.userlogin(p_username character varying, p_password character varying, p_email character varying)
  PERFORM system.setlog('system.test_new_user Login utente test, risultato id sessione: ' || v_test); 

  SELECT 'userid ' ||  db_user_id  || ', schemaid: ' ||  db_schema_id ||  ', session_id: ' ||  db_session_id into v_session_id
        FROM system.db_user_sessions v where v.db_session_key = v_test; 
  
  PERFORM system.setlog('system.test_new_user creata sessione: ' || v_session_id); 
  select system.createpersonalschema(v_test) into v_test; 
  PERFORM system.setlog('system.test_new_user creazione schema sulla base di id sessione, risultato chiave di schema: ' || v_test); 
  Return v_test; 
  
  exception when others then 
    PERFORM system.setlog('system.test_new_user  Errore di sessione'); 
    GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
  PERFORM system.setlog('system.test_new_user   MESSAGE_TEXT: ' || text_var1); 
  PERFORM system.setlog('system.test_new_user   PG_EXCEPTION_DETAIL: ' || text_var2); 
  PERFORM system.setlog('system.test_new_user   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
		</function>
		<function name="user_after_insert" id="Function_b0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_after_insert()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  insert into system.db_users_profiles  (db_user_id, first_name, last_name, public_email, gender_code)
  values(  new.db_user_id, new.user_first_name, new.user_family_name, new.email, 'M');
  return new;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="user_payment" id="Function_1cd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_payment(p_user_id integer, p_schema_id integer DEFAULT 0, p_amount money DEFAULT 0.0, p_interval_type character DEFAULT 'Y'::bpchar, p_interval_duration smallint DEFAULT 1, p_payment_date date DEFAULT CURRENT_DATE)
 RETURNS date
 LANGUAGE plpgsql
AS $function$
declare 
  v_date date; 
  v_interval character varying; 
  v_test integer; 
begin
   if p_payment_date is null then p_payment_date := current_date; end if; 
   if p_schema_id is null then p_schema_id := 0; end if; 
   if p_amount is null then p_amount := 0.0::money; end if; 
   if p_interval_type is null then p_interval_type := 'Y';end if; 
   if p_interval_duration is null then p_interval_duration := 1; end if;    
   select case p_interval_type 
   		when 'Y' then p_interval_duration || ' Year'
		when 'M' then p_interval_duration || ' Months'
		when 'D' then p_interval_duration || ' Days' 
		end
		into v_interval; 
		
   
   SELECT p_payment_date + v_interval::interval into v_date;
   
   select count(1) into v_test from system.db_users_payments
      where db_user_id = p_user_id and p_schema_id = db_schema_id and p_payment_date = payment_date; 
   
   if v_test = 0 then 
   	INSERT INTO system.db_users_payments(
	  	db_user_id, db_schema_id, payment_date, amount, payment_expiration_date)
	    	VALUES (p_user_id, p_schema_id, p_payment_date, p_amount, v_date);
		
		update system.db_users set payment = true, payment_expiration_date = v_date where db_user_id = p_user_id; 
	end if; 
   return v_date; 
  
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_schema_id" jt="4" type="int4" />
			<input_param name="p_amount" jt="8" type="money" />
			<input_param name="p_interval_type" jt="1" type="bpchar" />
			<input_param name="p_interval_duration" jt="5" type="int2" />
			<input_param name="p_payment_date" jt="91" type="date" />
		</function>
		<function name="user_update_image_url" id="Function_1653" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_update_image_url(p_user_id integer, p_image_url character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$begin
   update swap.notifications 
       set user_avatar_img = p_image_url
       where
       other_user_id = p_user_id;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_id" jt="4" type="int4" />
			<input_param name="p_image_url" jt="12" type="varchar" />
		</function>
		<function name="user_update_trg" id="Function_dbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.user_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
   if New.image_url <> Old.image_url then
   update swap.notifications 
       set user_avatar_img = New.image_url
       where
       other_user_id = New.db_user_id;
   end if; 
   Return New; 
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="useradd" id="Function_24c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useradd(p_email character varying, p_username character varying, p_password character varying, p_country_id integer, p_ispublic boolean)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  i_user_id integer; 
  n_record integer; 
  s_token character varying;
  r_country record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   i_user_id := -1; 
   PERFORM system.setlog('system.usertest(p_username, p_email)'); 
   if p_username is null then p_username := p_email; end if; 
   select system.usertest(p_username, p_email) into n_record; 
   PERFORM system.setlog('Terminato system.usertest(p_username, p_email) trovat = ' || n_record); 
   if n_record = 0 then
   
	select nextval('system.db_users_seq') into i_user_id; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || i_user_id); 
        select system.get_key(i_user_id, 32) into s_token; 
        --select * into r_country from jpublic.countries where country_id = p_country_id; 
        --PERFORM system.setlog('system.useradd system.r_country ' || r_country; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token)
	values (false, p_email, i_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token );
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (0, i_user_id, false, true, false, false);
     end if; 
     return s_token; 
     
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
		</function>
		<function name="useradd_with_profile" id="Function_9ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useradd_with_profile(p_email character varying, p_username character varying, p_firstname character varying, p_lastname character varying, p_address character varying, p_town character varying, p_postal_code character varying, p_password character varying, p_phone character varying DEFAULT NULL::character varying, p_an_group_id integer DEFAULT 27, INOUT p_anagraph_id integer DEFAULT '-1'::integer, INOUT p_default_schema_id integer DEFAULT 0, INOUT p_country_id integer DEFAULT 1, INOUT p_ispublic boolean DEFAULT false, OUT p_guid uuid, OUT p_user_id integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$
declare
  v_test boolean; 
  s_token character varying;
  r record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   P_GUID := uuid_generate_v4();
   PERFORM system.setlog('system.usertest(p_username, p_email)'); 
   if p_username is null then p_username := p_email; end if; 
  
   v_test := EXISTS (SELECT 1 FROM system.db_users WHERE email = TRIM(LOWER(p_email)))
		     OR EXISTS (SELECT 1 FROM system.db_users WHERE username = TRIM(LOWER(p_username)));
 
   IF v_test THEN
	 PERFORM system.setlog('USER: ' || p_email || ' ALREADY EXISTS EXITING'); 
   ELSE
	IF COALESCE(p_default_schema_id, 0) = 0 THEN p_default_schema_id := system.get_schema_id(); END IF; 
        
	p_user_id := nextval('system.db_users_seq') ; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || p_user_id); 
    select system.get_key(p_user_id, 32) into s_token; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token, jguid)
	values (false, p_email, p_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token, P_GUID);
	
    INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (p_default_schema_id, p_user_id, false, true, false, false);
	  
	p_anagraph_id := nextval('anagraph.an_anagraph_seq');
	
	INSERT INTO anagraph.anagraphs_view (db_schema_id, anagraph_id, an_name, an_last_name, an_cellular, an_email,
										jguid, an_main_group_id)
			VALUES (p_default_schema_id, p_anagraph_id, p_firstname, p_lastname, p_phone, p_email,
										P_GUID, p_an_group_id );
    
	IF NOT EXISTS (SELECT 1 FROM system.db_users_profiles where db_user_id = p_user_id ) THEN
	  BEGIN
	    PERFORM system.setlog('User profile not exists ' || p_user_id); 
		INSERT INTO system.db_users_profiles
			(db_user_id, country_id, first_name, last_name, address_full, address_postal_code, cellular_phone, gender_code,
		 	 uspr_jguid, supr_jguid, anagraph_id, public_email)
		VALUES (
			p_user_id, 
			p_country_id, 
			p_firstname, 
			p_lastname, 
		    p_address || ', ' || p_postal_code || ', ' || p_town,
		    p_postal_code, 
		    p_phone, --cellular_phone
		    'M',  --gender_code
		    P_GUID, --uspr_jguid
		    P_GUID, ---supr_jguid
		    p_anagraph_id, -- anagraph_id
		    p_email -- public_email		
		);
	  END;
	  ELSE 
	  BEGIN
	    PERFORM system.setlog('Update User Profile: ' || p_user_id); 
	    UPDATE system.db_users_profiles SET
	  		country_id = p_country_id,
			first_name = p_firstname,
			last_name = p_lastname, 
			address_full = p_address || ', ' || p_postal_code || ', ' || p_town,
			address_postal_code = p_postal_code,
			cellular_phone = p_phone,
			gender_code = 'M',--gender_code
			anagraph_id = p_anagraph_id,
			public_email = p_email ;
	  END; 
	END IF; 
   END IF; 
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
end; 
$function$
;]]></string>
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
			<input_param name="p_address" jt="12" type="varchar" />
			<input_param name="p_town" jt="12" type="varchar" />
			<input_param name="p_postal_code" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_phone" jt="12" type="varchar" />
			<input_param name="p_an_group_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_default_schema_id" jt="4" type="int4" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
			<input_param name="p_guid" jt="1111" type="uuid" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="useradd_with_profile_json" id="Function_3bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useradd_with_profile_json(p_email character varying, p_username character varying, p_firstname character varying, p_lastname character varying, p_address character varying, p_town character varying, p_postal_code character varying, p_password character varying, p_phone character varying DEFAULT NULL::character varying, p_an_group_id integer DEFAULT 27, p_anagraph_id integer DEFAULT '-1'::integer, p_default_schema_id integer DEFAULT 0, p_country_id integer DEFAULT 1, p_ispublic boolean DEFAULT false)
 RETURNS json
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_json json; 
BEGIN
  SELECT to_json(R) INTO v_json FROM  
  (
	SELECT * FROM 
		system.useradd_with_profile_json(
			p_email,
			p_username ,
			p_firstname ,
			p_lastname,
			p_address ,
			p_town,
			p_postal_code ,
			p_password,
			p_phone ,
			p_an_group_id ,
			p_anagraph_id,
			p_default_schema_id,
			p_country_id,
			p_ispublic)  
  ) AS R; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="json" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
			<input_param name="p_address" jt="12" type="varchar" />
			<input_param name="p_town" jt="12" type="varchar" />
			<input_param name="p_postal_code" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_phone" jt="12" type="varchar" />
			<input_param name="p_an_group_id" jt="4" type="int4" />
			<input_param name="p_anagraph_id" jt="4" type="int4" />
			<input_param name="p_default_schema_id" jt="4" type="int4" />
			<input_param name="p_country_id" jt="4" type="int4" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
		</function>
		<function name="useraddsocial" id="Function_3ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useraddsocial(p_email character varying, p_socialid character varying, p_social_kind character varying, p_country_code character varying, p_ispublic boolean)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  i_user_id integer; 
  n_record integer; 
  s_token character varying;
  p_username character varying;
  p_password character varying;
  r_country record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   i_user_id := -1; 
   PERFORM system.setlog('system.usertest(p_socialid)'); 
   p_username := lower(p_social_kind || '-' || p_socialid ); 
   p_password := lower(p_social_kind || '-' || p_socialid ); 
   if p_email is null then p_email := 'p_username' || '@ergomercator.com'; end if;
   select system.usertest(p_username, p_email) into n_record; 
   PERFORM system.setlog('Terminato system.usertest(p_username, p_email) trovati = ' || n_record); 
   s_token := 'Error';
   if n_record = 0 then
   
	select nextval('system.db_users_seq') into i_user_id; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || i_user_id); 
        select system.get_key(i_user_id, 32) into s_token; 
        --select * into r_country from jpublic.countries where country_id = p_country_id; 
        --PERFORM system.setlog('system.useradd system.r_country ' || r_country; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token)
	values (false, p_email, i_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token );
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (0, i_user_id, false, true, false, false);
     end if; 
     return s_token; 
     
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Error'; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
			<input_param name="p_country_code" jt="12" type="varchar" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
		</function>
		<function name="useraddsocial" id="Function_1e51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.useraddsocial(p_email character varying, p_socialid character varying, p_social_kind character varying, p_country_code character varying, p_ispublic boolean, p_firstname character varying, p_lastname character varying, p_address_town character varying, p_address_street character varying, p_address_number character varying, p_address_postal_code character varying, p_address_full character varying, p_public_email character varying, p_latitude double precision, p_longitude double precision, p_birth_date date, p_fiscal_code character varying, p_gender_code character, p_cellular_phone character varying, p_phone character varying, p_image_url character varying, p_facebook_json json)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  i_user_id integer; 
  n_record integer; 
  s_token character varying;
  p_username character varying;
  p_password character varying;
  v_email character varying;
  r_country record; 
 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
begin
   i_user_id := -1; 
   PERFORM system.setlog('system.usertest(' || p_socialid ||  ')' ); 
   p_username := lower(p_social_kind || '-' || p_socialid ); 
   p_password := lower(p_social_kind || '-' || p_socialid );  
   v_email := p_email; 
   if v_email is null then v_email := 'p_username' || '@ergomercator.com'; end if;
   select system.usertest(p_username, v_email) into n_record; 
   PERFORM system.setlog('Terminato system.usertest(' || p_username || ', ' || v_email  || ') trovati = ' || n_record); 
   s_token := 'Error';
   if n_record = 0 and v_email is not null then
   
	select nextval('system.db_users_seq') into i_user_id; 
	PERFORM system.setlog('system.useradd system.db_users_seq ' || i_user_id); 
    select system.get_key(i_user_id, 32) into s_token; 
    --select * into r_country from jpublic.countries where country_id = p_country_id; 
    --PERFORM system.setlog('system.useradd system.r_country ' || r_country; 
	insert into system.db_users
	(active, email, db_user_id, password, username, isactive, default_schema_id, verified, ispublic, verify_token, 
	 user_first_name, user_family_name)
	values (false, v_email, i_user_id, p_password, p_username, false,  0, false, p_ispublic, s_token, 
			p_firstname, p_lastname );
			
       INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
       VALUES (0, i_user_id, false, true, false, false);
	/*
	p_address_town character varying,
	p_address_street character varying,
	p_address_number character varying,
	p_address_postal_code character varying,
	p_address_full character varying,
	p_public_email character varying,
	p_latitude double precision,
	p_longitude double precision,
	p_birth_date date
	*/
	
	INSERT INTO system.db_users_profiles(
	     db_user_id, country_id, region_id, district_id, town_id, first_name,  last_name, 
		 address_street,   address_number, address_postal_code, phone, cellular_phone, work_phone, fax_number, 
		 gender_code, birth_date, birth_country_id, birth_region_id, birth_district_id, birth_town_id, 
		 public_email, title, search_name, reverse_search, address_full, latitude, longitude, fiscal_code, 
		 smssent, smsconfirmed, smsdate, smschecknumber, address_town, facebook_json)
	VALUES (
	     i_user_id,  null,       null,      null,        null,    p_firstname, p_lastname, 
		 p_address_street, p_address_number, p_address_postal_code, p_phone, p_cellular_phone, null, null, 
		 p_gender_code, p_birth_date, null, null, null, null, 
		 p_public_email, '', '', '', p_address_full, p_latitude, p_longitude, p_fiscal_code,  
		 null   , null          , null   , null          , null,      p_facebook_json );
    end if; 
    return s_token; 
     
  exception when others then 
	PERFORM system.setlog('system.useradd  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.useradd   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.useradd   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Error ' || text_var1 || text_var2 || text_var3; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
			<input_param name="p_country_code" jt="12" type="varchar" />
			<input_param name="p_ispublic" jt="-7" type="bool" />
			<input_param name="p_firstname" jt="12" type="varchar" />
			<input_param name="p_lastname" jt="12" type="varchar" />
			<input_param name="p_address_town" jt="12" type="varchar" />
			<input_param name="p_address_street" jt="12" type="varchar" />
			<input_param name="p_address_number" jt="12" type="varchar" />
			<input_param name="p_address_postal_code" jt="12" type="varchar" />
			<input_param name="p_address_full" jt="12" type="varchar" />
			<input_param name="p_public_email" jt="12" type="varchar" />
			<input_param name="p_latitude" jt="8" type="float8" />
			<input_param name="p_longitude" jt="8" type="float8" />
			<input_param name="p_birth_date" jt="91" type="date" />
			<input_param name="p_fiscal_code" jt="12" type="varchar" />
			<input_param name="p_gender_code" jt="1" type="bpchar" />
			<input_param name="p_cellular_phone" jt="12" type="varchar" />
			<input_param name="p_phone" jt="12" type="varchar" />
			<input_param name="p_image_url" jt="12" type="varchar" />
			<input_param name="p_facebook_json" jt="1111" type="json" />
		</function>
		<function name="userbykey" id="Function_307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userbykey(p_user_key character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$declare 
  p_user_id integer; 
  p_count integer; 
begin
  select count(1),  min(db_user_id) into p_count, p_user_id
    from system.db_users where verify_token = p_user_key; 
  if p_count = 1 then
     return p_user_id; 
   else
      return -1; 
   end if; 
     

end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_key" jt="12" type="varchar" />
		</function>
		<function name="userdel" id="Function_22f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userdel(uuid)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
l_user_id integer; 
BEGIN
  SELECT db_user_id INTO l_user_id 
     FROM system.db_users WHERE jguid = p_guid; 
	 
  RETURN system.userdel(l_user_id); 
  
  EXCEPTION WHEN OTHERS THEN
     RETURN false; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="$1" jt="1111" type="uuid" />
		</function>
		<function name="userdel" id="Function_1fd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userdel(p_user_email character varying)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
  V_ID integer;
BEGIN
   -- 
   IF EXISTS (SELECT 1 from system.db_users where email = lower(p_user_email) ) THEN
   	BEGIN
	  SELECT db_user_id INTO V_ID from system.db_users where email = lower(p_user_email);
      return system.userdel(V_ID); 
   	END;
   ELSE
   	BEGIN
      PERFORM system.setlog('db_user NOT FOUND: ' || p_user_email);
	  return False;    
   	END; 
   END IF; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_email" jt="12" type="varchar" />
		</function>
		<function name="userdel" id="Function_1c9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userdel(p_user_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
begin
   -- 
   delete from cloud.external_files where db_user_id = p_user_id;  
   delete from cloud.blob_files where db_user_id = p_user_id;    
   -- cloud.computers
   delete from cloud.computers where db_owner_id = p_user_id;  
   -- 
   delete from health.health_profile where db_user_id = p_user_id;    
   delete from social.messages where from_id = p_user_id;  
   delete from social.messages where to_id = p_user_id;   
       
   delete from swap.profiles where user_id = p_user_id; 
   delete from system.db_users_profiles where db_user_id = p_user_id; 
   DELETE FROM system.db_user_sessions where db_user_id = p_user_id; 
   delete from system.db_users_schemas where db_user_id = p_user_id; 
   delete from system.db_users_roles where db_user_id = p_user_id; 
   delete from system.db_users where db_user_id = p_user_id; 
   -- cloud.external_files
   
   return True; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_user_id" jt="4" type="int4" />
		</function>
		<function name="usergrantschema" id="Function_1bae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.usergrantschema(p_user_key character varying, p_schema_key character varying, p_isadmin boolean, p_isdefault boolean, p_isowner boolean, p_readwrite boolean)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$begin
INSERT INTO system.db_users_schemas(
            db_schema_id, db_user_id, isadmin, isdefault, isowner, readwrite)
    select s.db_schema_id, u.db_user_id , p_isadmin, p_isdefault, p_isowner, p_readwrite
       from system.db_users u, system.db_schemas s
       where 
       u.verify_token = p_user_key
       and
       s.db_schema_key = p_schema_key;
       return 1; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_user_key" jt="12" type="varchar" />
			<input_param name="p_schema_key" jt="12" type="varchar" />
			<input_param name="p_isadmin" jt="-7" type="bool" />
			<input_param name="p_isdefault" jt="-7" type="bool" />
			<input_param name="p_isowner" jt="-7" type="bool" />
			<input_param name="p_readwrite" jt="-7" type="bool" />
		</function>
		<function name="userlogin" id="Function_5c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userlogin(p_username character varying, p_password character varying, p_email character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
  s_token character varying; 

 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
BEGIN
    --SELECT INTO n_record * FROM system.db_users WHERE (email) = lower(p_email); 
    i_sequence := -1; 
    
    select count(*) into n_record from system.db_users WHERE (email) = lower(p_email); 
    --RAISE NOTICE 'Eseguita Ricerca di Mail % con risultato %', p_email, n_record; 
    RAISE NOTICE 'Calling ricerca mail(%) risultato(%)', p_email, n_record;
    PERFORM system.setlog('Ricerca mail ' || p_email || ' risultato: ' || n_record); 
    IF n_record = 1 THEN
        select * into a_record from system.db_users WHERE (email) = lower(p_email); 
        PERFORM system.setlog('Confronto pwd ' || p_password || ' risultato: ' || a_record.password || 'sessione =  ' || i_sequence); 
        if a_record.password = p_password  then  
            select nextval('system.db_sessions_seq') into i_sequence; 
            select system.get_key(i_sequence, 32) into s_token; 
        end if; 
    END IF;
    if n_record = 0 then
	select count(*) into n_record from system.db_users WHERE lower(username) = lower(p_username); 
	PERFORM system.setlog('Ricerca username ' || p_username || ' risultato: ' || n_record); 
	--RAISE NOTICE "Eseguita Ricerca di Username % con risultato %", p_username, n_record; 
	IF n_record = 1 THEN
		select * into a_record from system.db_users WHERE lower(username) = lower(p_username); 
		if a_record.password = p_password  then  
		   select nextval('system.db_sessions_seq') into i_sequence; 
		   select system.get_key(i_sequence, 32) into s_token; 
		   PERFORM system.setlog('Confronto pwd ' || p_password || ' risultato: ' || a_record.password || 'sessione =  ' || i_sequence || 'key = ' || s_token); 
		end if; 
	END IF;
    end if; 
    if i_sequence > 0 then
	INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id)
		VALUES 
	   (a_record.db_user_id, a_record.default_schema_id, s_token, i_sequence);
	   PERFORM system.setlog('Impostata Sessione schema: ' || a_record.default_schema_id || ' sessione: ' || i_sequence); 

    end if;
    RETURN s_token;
  exception when others then 
	PERFORM system.setlog('system.userlogin  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.userlogin   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_password" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
		</function>
		<function name="userloginpublic" id="Function_66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userloginpublic(p_schema_id integer)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$declare
  p_user_id integer; 
  s_token character varying; 
  i_sequence bigint; 
begin
   select default_user_id from system.db_schemas into p_user_id where db_schema_id = p_schema_id; 
   s_token := ''; 
   if p_user_id > 0 and p_user_id is not null then
   
      select nextval('system.db_sessions_seq') into i_sequence; 
      select system.get_key(i_sequence, 32) into s_token; 
   INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id)
		VALUES 
	   (p_user_id, p_schema_id, s_token, i_sequence);
   end if; 

   return s_token; 

end; $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="userloginsocial" id="Function_10ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.userloginsocial(p_socialid character varying, p_social_kind character varying)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
  s_token character varying; 
  p_password character varying;
  p_username character varying;

 --- variabili di diagnostica errori .....
  text_var1 text;
  text_var2 text;
  text_var3 text; 
BEGIN
    --SELECT INTO n_record * FROM system.db_users WHERE (email) = lower(p_email); 
    i_sequence := -1; 
    p_username :=  lower(p_social_kind || '-' || p_socialid ); 
    
    select count(*) into n_record from system.db_users WHERE (username) = lower(p_username); 
    --RAISE NOTICE 'Eseguita Ricerca di Mail % con risultato %', p_email, n_record; 
    RAISE NOTICE 'Calling ricerca username(%) risultato(%)', p_username, n_record;
    PERFORM system.setlog('Ricerca social user ' || p_username || ' risultato: ' || n_record); 
    IF n_record = 1 THEN
        select * into a_record from system.db_users WHERE (username) = lower(p_username); 
        
        p_password := lower(p_username); 
        
        PERFORM system.setlog('Confronto pwd ' || p_password || ' risultato: ' || a_record.password || 'sessione =  ' || i_sequence); 
        
        if a_record.password = p_password  then  
            select nextval('system.db_sessions_seq') into i_sequence; 
            select system.get_key(i_sequence, 32) into s_token; 
        end if; 
    END IF;

    if i_sequence > 0 then
	INSERT INTO system.db_user_sessions(
            db_user_id, db_schema_id, db_session_key, db_session_id)
		VALUES 
	   (a_record.db_user_id, a_record.default_schema_id, s_token, i_sequence);
	   PERFORM system.setlog('Impostata Sessione schema: ' || a_record.default_schema_id || ' sessione: ' || i_sequence); 

    end if;
    RETURN s_token;
  exception when others then 
	PERFORM system.setlog('system.userlogin  Errore di sessione'); 
	GET STACKED DIAGNOSTICS text_var1 = MESSAGE_TEXT,
                          text_var2 = PG_EXCEPTION_DETAIL,
                          text_var3 = PG_EXCEPTION_HINT;
	PERFORM system.setlog('system.userlogin   MESSAGE_TEXT: ' || text_var1); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_DETAIL: ' || text_var2); 
	PERFORM system.setlog('system.userlogin   PG_EXCEPTION_HINT: ' || text_var3); 
  
	Return 'Errore'; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
		</function>
		<function name="usertest" id="Function_17ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.usertest(p_username character varying, p_email character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
BEGIN

    if p_email is not null then select count(1) into n_record from system.db_users WHERE lower(email) = lower(p_email); 
       else n_record = 0;
    end if; 
    IF n_record = 0 and p_email is null THEN select count(1) into n_record from system.db_users WHERE lower(username) = lower(p_username); 
    END IF;
    RETURN n_record;
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_username" jt="12" type="varchar" />
			<input_param name="p_email" jt="12" type="varchar" />
		</function>
		<function name="usertestsocial" id="Function_217f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION system.usertestsocial(p_socialid character varying, p_social_kind character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  n_record integer; 
  a_record record; 
  i_sequence bigint; 
  p_username character varying;
  p_email character varying;
BEGIN
    p_username :=  lower(p_social_kind || '-' || p_socialid ); 
    if p_username is not null then select count(1) into n_record from system.db_users WHERE lower(username) = lower(p_username); 
       else n_record = 0;
    end if; 
    --IF n_record = 0 THEN select count(1) into n_record from system.db_users WHERE lower(username) = lower(p_username); END IF;
    RETURN n_record;
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_socialid" jt="12" type="varchar" />
			<input_param name="p_social_kind" jt="12" type="varchar" />
		</function>
	</schema>
	<schema name="topology" catalogname="ergomercator" >
		<comment><![CDATA[PostGIS Topology schema]]></comment>
		<udt name="topoelement" udt_java_type="2003" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} integer[] CONSTRAINT dimensions CHECK (array_upper(VALUE, 2) IS NULL AND array_upper(VALUE, 1) = 2)]]></udt_script>
			<comment><![CDATA[postgis domain: An array of 2 integers generally used to identify a TopoGeometry component.]]></comment>
		</udt>
		<udt name="topoelement" udt_java_type="2003" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} integer[] CONSTRAINT lower_dimension CHECK (array_lower(VALUE, 1) = 1)]]></udt_script>
			<comment><![CDATA[postgis domain: An array of 2 integers generally used to identify a TopoGeometry component.]]></comment>
		</udt>
		<udt name="topoelement" udt_java_type="2003" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} integer[] CONSTRAINT type_range CHECK ((VALUE)[2] > 0)]]></udt_script>
			<comment><![CDATA[postgis domain: An array of 2 integers generally used to identify a TopoGeometry component.]]></comment>
		</udt>
		<udt name="topoelementarray" udt_java_type="2003" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} integer[] CONSTRAINT dimensions CHECK (array_upper(VALUE, 2) IS NOT NULL AND array_upper(VALUE, 2) = 2 AND array_upper(VALUE, 3) IS NULL)]]></udt_script>
			<comment><![CDATA[postgis domain: An array of TopoElement objects]]></comment>
		</udt>
		<table name="layer" >
			<column name="topology_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="layer_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="schema_name" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="table_name" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="feature_column" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="feature_type" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="level" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="child_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="layer_pkey" unique="PRIMARY_KEY" >
				<column name="topology_id" />
				<column name="layer_id" />
			</index>
			<index name="layer_schema_name_table_name_feature_column_key" unique="UNIQUE_KEY" >
				<column name="schema_name" />
				<column name="table_name" />
				<column name="feature_column" />
			</index>
			<fk name="layer_topology_id_fkey" to_schema="ergomercator.topology" to_table="topology" >
				<fk_column name="topology_id" pk="id" />
			</fk>
		</table>
		<table name="topology" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('topology_id_seq'::regclass)]]></defo>
			</column>
			<column name="name" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="srid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="precision" type="float8" length="17" decimal="17" jt="6" mandatory="y" />
			<column name="hasz" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="topology_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="topology_name_key" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
		</table>
		<sequence name="topology_id_seq" options="START WITH 1" />
		<trigger name="layer_integrity_checks" table="layer" id="Trigger_a4a" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER layer_integrity_checks BEFORE DELETE OR UPDATE ON topology.layer FOR EACH ROW EXECUTE PROCEDURE layertrigger()]]></string>
		</trigger>
		<function name="_asgmledge" id="Function_c5d" isSystem="false" params_known="y" >
			<string><![CDATA[create function _asgmledge 
DECLARE
  visited bool;
  nsprefix text;
  gml text;
BEGIN
  nsprefix := 'gml:';
  IF nsprefix_in IS NOT NULL THEN
    IF nsprefix_in = '' THEN
      nsprefix = nsprefix_in;
    ELSE
      nsprefix = nsprefix_in || ':';
    END IF;
  END IF;
  gml := '<' || nsprefix || 'Edge ' || nsprefix
    || 'id="' || idprefix || 'E' || edge_id || '">';
  -- Start node
  gml = gml || '<' || nsprefix || 'directedNode orientation="-"';
  -- Do visited bookkeeping if visitedTable was given
  visited = NULL;
  IF visitedTable IS NOT NULL THEN
    EXECUTE 'SELECT true FROM '
            || visitedTable::text
            || ' WHERE element_type = 1 AND element_id = '
            || start_node LIMIT 1 INTO visited;
    IF visited IS NOT NULL THEN
      gml = gml || ' xlink:href="#' || idprefix || 'N' || start_node || '" />';
    ELSE
      -- Mark as visited
      EXECUTE 'INSERT INTO ' || visitedTable::text
        || '(element_type, element_id) VALUES (1, '
        || start_node || ')';
    END IF;
  END IF;
  IF visited IS NULL THEN
    gml = gml || '>';
    gml = gml || topology._AsGMLNode(start_node, NULL, nsprefix_in,
                                     prec, options, idprefix, gmlver);
    gml = gml || '</' || nsprefix || 'directedNode>';
  END IF;
  -- End node
  gml = gml || '<' || nsprefix || 'directedNode';
  -- Do visited bookkeeping if visitedTable was given
  visited = NULL;
  IF visitedTable IS NOT NULL THEN
    EXECUTE 'SELECT true FROM '
            || visitedTable::text
            || ' WHERE element_type = 1 AND element_id = '
            || end_node LIMIT 1 INTO visited;
    IF visited IS NOT NULL THEN
      gml = gml || ' xlink:href="#' || idprefix || 'N' || end_node || '" />';
    ELSE
      -- Mark as visited
      EXECUTE 'INSERT INTO ' || visitedTable::text
        || '(element_type, element_id) VALUES (1, '
        || end_node || ')';
    END IF;
  END IF;
  IF visited IS NULL THEN
    gml = gml || '>';
    gml = gml || topology._AsGMLNode(end_node, NULL, nsprefix_in,
                                     prec, options, idprefix, gmlver);
    gml = gml || '</' || nsprefix || 'directedNode>';
  END IF;
  IF line IS NOT NULL THEN
    gml = gml || '<' || nsprefix || 'curveProperty>'
              || ST_AsGML(gmlver, line, prec, options, nsprefix_in)
              || '</' || nsprefix || 'curveProperty>';
  END IF;
  gml = gml || '</' || nsprefix || 'Edge>';
  RETURN gml;
END
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="edge_id" jt="4" type="int4" />
			<input_param name="start_node" jt="4" type="int4" />
			<input_param name="end_node" jt="4" type="int4" />
			<input_param name="line" jt="1111" type="geometry" />
			<input_param name="visitedtable" jt="1111" type="regclass" />
			<input_param name="nsprefix_in" jt="12" type="text" />
			<input_param name="prec" jt="4" type="int4" />
			<input_param name="options" jt="4" type="int4" />
			<input_param name="idprefix" jt="12" type="text" />
			<input_param name="gmlver" jt="4" type="int4" />
		</function>
		<function name="_asgmlface" id="Function_2b7" isSystem="false" params_known="y" >
			<string><![CDATA[create function _asgmlface 
DECLARE
  visited bool;
  nsprefix text;
  gml text;
  rec RECORD;
  rec2 RECORD;
  bounds geometry;
BEGIN
  nsprefix := 'gml:';
  IF nsprefix_in IS NOT NULL THEN
    IF nsprefix_in = '' THEN
      nsprefix = nsprefix_in;
    ELSE
      nsprefix = nsprefix_in || ':';
    END IF;
  END IF;
  gml := '<' || nsprefix || 'Face ' || nsprefix
    || 'id="' || idprefix || 'F' || face_id || '">';
  -- Construct the face geometry, then for each polygon:
  FOR rec IN SELECT (ST_DumpRings((ST_Dump(ST_ForceRHR(
    topology.ST_GetFaceGeometry(toponame, face_id)))).geom)).geom
  LOOP
      -- Contents of a directed face are the list of edges
      -- that cover the specific ring
      bounds = ST_Boundary(rec.geom);
      FOR rec2 IN EXECUTE
        'SELECT e.*, ST_LineLocatePoint($1'
        || ', ST_LineInterpolatePoint(e.geom, 0.2)) as pos'
        || ', ST_LineLocatePoint($1'
        || ', ST_LineInterpolatePoint(e.geom, 0.8)) as pos2 FROM '
        || quote_ident(toponame)
        || '.edge e WHERE ( e.left_face = $2'
        || ' OR e.right_face = $2'
        || ') AND ST_Covers($1'
        || ', e.geom) ORDER BY pos'
        USING bounds, face_id
      LOOP
        gml = gml || '<' || nsprefix || 'directedEdge';
        -- if this edge goes in same direction to the
        --       ring bounds, make it with negative orientation
        IF rec2.pos2 > rec2.pos THEN -- edge goes in same direction
          gml = gml || ' orientation="-"';
        END IF;
        -- Do visited bookkeeping if visitedTable was given
        IF visitedTable IS NOT NULL THEN
          EXECUTE 'SELECT true FROM '
            || visitedTable::text
            || ' WHERE element_type = 2 AND element_id = '
            || rec2.edge_id LIMIT 1 INTO visited;
          IF visited THEN
            -- Use xlink:href if visited
            gml = gml || ' xlink:href="#' || idprefix || 'E'
                      || rec2.edge_id || '" />';
            CONTINUE;
          ELSE
            -- Mark as visited otherwise
            EXECUTE 'INSERT INTO ' || visitedTable::text
              || '(element_type, element_id) VALUES (2, '
              || rec2.edge_id || ')';
          END IF;
        END IF;
        gml = gml || '>';
        gml = gml || topology._AsGMLEdge(rec2.edge_id, rec2.start_node,
                                        rec2.end_node, rec2.geom,
                                        visitedTable, nsprefix_in,
                                        prec, options, idprefix, gmlver);
        gml = gml || '</' || nsprefix || 'directedEdge>';
      END LOOP;
    END LOOP;
  gml = gml || '</' || nsprefix || 'Face>';
  RETURN gml;
END
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="toponame" jt="12" type="text" />
			<input_param name="face_id" jt="4" type="int4" />
			<input_param name="visitedtable" jt="1111" type="regclass" />
			<input_param name="nsprefix_in" jt="12" type="text" />
			<input_param name="prec" jt="4" type="int4" />
			<input_param name="options" jt="4" type="int4" />
			<input_param name="idprefix" jt="12" type="text" />
			<input_param name="gmlver" jt="4" type="int4" />
		</function>
		<function name="_asgmlnode" id="Function_2031" isSystem="false" params_known="y" >
			<string><![CDATA[create function _asgmlnode 
DECLARE
  nsprefix text;
  gml text;
BEGIN
  nsprefix := 'gml:';
  IF NOT nsprefix_in IS NULL THEN
    IF nsprefix_in = '' THEN
      nsprefix = nsprefix_in;
    ELSE
      nsprefix = nsprefix_in || ':';
    END IF;
  END IF;
  gml := '<' || nsprefix || 'Node ' || nsprefix
    || 'id="' || idprefix || 'N' || id || '"';
  IF point IS NOT NULL THEN
    gml = gml || '>'
              || '<' || nsprefix || 'pointProperty>'
              || ST_AsGML(gmlver, point, prec, options, nsprefix_in)
              || '</' || nsprefix || 'pointProperty>'
              || '</' || nsprefix || 'Node>';
  ELSE
    gml = gml || '/>';
  END IF;
  RETURN gml;
END
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="id" jt="4" type="int4" />
			<input_param name="point" jt="1111" type="geometry" />
			<input_param name="nsprefix_in" jt="12" type="text" />
			<input_param name="prec" jt="4" type="int4" />
			<input_param name="options" jt="4" type="int4" />
			<input_param name="idprefix" jt="12" type="text" />
			<input_param name="gmlver" jt="4" type="int4" />
		</function>
		<function name="_st_adjacentedges" id="Function_9b6" isSystem="false" params_known="y" >
			<string><![CDATA[create function _st_adjacentedges 
DECLARE
  ret integer[];
BEGIN
  WITH edgestar AS (
    SELECT *, count(*) over () AS cnt
    FROM topology.GetNodeEdges(atopology, anode)
  )
  SELECT ARRAY[ (
      SELECT p.edge AS prev FROM edgestar p
      WHERE p.sequence = CASE WHEN m.sequence-1 < 1 THEN cnt
                         ELSE m.sequence-1 END
    ), (
      SELECT p.edge AS prev FROM edgestar p WHERE p.sequence = ((m.sequence)%cnt)+1
    ) ]
  FROM edgestar m
  WHERE edge = anedge
  INTO ret;
  RETURN ret;
END
;]]></string>
			<input_param name="returnValue" jt="2003" type="_int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anode" jt="4" type="int4" />
			<input_param name="anedge" jt="4" type="int4" />
		</function>
		<function name="_st_mintolerance" id="Function_225c" isSystem="false" params_known="y" >
			<string><![CDATA[create function _st_mintolerance 
    SELECT 3.6 * power(10,  - ( 15 - log(coalesce(
      nullif(
        greatest(abs(ST_xmin($1)), abs(ST_ymin($1)),
                 abs(ST_xmax($1)), abs(ST_ymax($1))),
        0),
      1)) ));
create function _st_mintolerance 
DECLARE
  ret FLOAT8;
BEGIN
  SELECT COALESCE(
    NULLIF(precision, 0),
    topology._st_mintolerance($2))
  FROM topology.topology
  WHERE name = $1 INTO ret;
  IF NOT FOUND THEN
    RAISE EXCEPTION
      'No topology with name "%" in topology.topology', atopology;
  END IF;
  return ret;
END;
]]></string>
			<input_param name="returnValue" jt="8" type="float8" />
			<input_param name="ageom" jt="1111" type="geometry" />
		</function>
		<function name="_st_mintolerance" id="Function_970" isSystem="false" params_known="y" >
			<string><![CDATA[create function _st_mintolerance 
    SELECT 3.6 * power(10,  - ( 15 - log(coalesce(
      nullif(
        greatest(abs(ST_xmin($1)), abs(ST_ymin($1)),
                 abs(ST_xmax($1)), abs(ST_ymax($1))),
        0),
      1)) ));
create function _st_mintolerance 
DECLARE
  ret FLOAT8;
BEGIN
  SELECT COALESCE(
    NULLIF(precision, 0),
    topology._st_mintolerance($2))
  FROM topology.topology
  WHERE name = $1 INTO ret;
  IF NOT FOUND THEN
    RAISE EXCEPTION
      'No topology with name "%" in topology.topology', atopology;
  END IF;
  return ret;
END;
]]></string>
			<input_param name="returnValue" jt="8" type="float8" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="ageom" jt="1111" type="geometry" />
		</function>
		<function name="addedge" id="Function_9f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.addedge(atopology character varying, aline geometry)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
	edgeid int;
	rec RECORD;
  ix geometry;
BEGIN
	--
	-- Atopology and apoint are required
	--
	IF atopology IS NULL OR aline IS NULL THEN
		RAISE EXCEPTION 'Invalid null argument';
	END IF;
	--
	-- Aline must be a linestring
	--
	IF substring(geometrytype(aline), 1, 4) != 'LINE'
	THEN
		RAISE EXCEPTION 'Edge geometry must be a linestring';
	END IF;
	--
	-- Check there's no face registered in the topology
	--
	FOR rec IN EXECUTE 'SELECT count(face_id) FROM '
		|| quote_ident(atopology) || '.face '
		|| ' WHERE face_id != 0 LIMIT 1'
	LOOP
		IF rec.count > 0 THEN
			RAISE EXCEPTION 'AddEdge can only be used against topologies with no faces defined';
		END IF;
	END LOOP;
	--
	-- Check if the edge crosses an existing node
	--
	FOR rec IN EXECUTE 'SELECT node_id FROM '
		|| quote_ident(atopology) || '.node '
		|| 'WHERE ST_Crosses($1, geom)'
    USING aline
	LOOP
		RAISE EXCEPTION 'Edge crosses node %', rec.node_id;
	END LOOP;
	--
	-- Check if the edge intersects an existing edge
	-- on anything but endpoints
	--
	-- Following DE-9 Intersection Matrix represent
	-- the only relation we accept.
	--
	--    F F 1
	--    F * *
	--    1 * 2
	--
	-- Example1: linestrings touching at one endpoint
	--    FF1 F00 102
	--    FF1 F** 1*2 <-- our match
	--
	-- Example2: linestrings touching at both endpoints
	--    FF1 F0F 1F2
	--    FF1 F** 1*2 <-- our match
	--
	FOR rec IN EXECUTE 'SELECT edge_id, geom, ST_Relate($1, geom, 2) as im FROM '
		|| quote_ident(atopology) || '.edge WHERE $1 && geom'
    USING aline
	LOOP
	  IF ST_RelateMatch(rec.im, 'FF1F**1*2') THEN
	    CONTINUE; -- no interior intersection
	  END IF;
	  -- Reuse an EQUAL edge (be it closed or not)
	  IF ST_RelateMatch(rec.im, '1FFF*FFF2') THEN
	      RETURN rec.edge_id;
	  END IF;
	  -- WARNING: the constructive operation might throw an exception
	  BEGIN
	    ix = ST_Intersection(rec.geom, aline);
	  EXCEPTION
	  WHEN OTHERS THEN
	    RAISE NOTICE 'Could not compute intersection between input edge (%) and edge % (%)', aline::text, rec.edge_id, rec.geom::text;
	  END;
	  RAISE EXCEPTION 'Edge intersects (not on endpoints) with existing edge % at or near point %', rec.edge_id, ST_AsText(ST_PointOnSurface(ix));
	END LOOP;
	--
	-- Get new edge id from sequence
	--
	FOR rec IN EXECUTE 'SELECT nextval(' ||
		quote_literal(
			quote_ident(atopology) || '.edge_data_edge_id_seq'
		) || ')'
	LOOP
		edgeid = rec.nextval;
	END LOOP;
	--
	-- Insert the new row
	--
	EXECUTE 'INSERT INTO '
		|| quote_ident(atopology)
		|| '.edge(edge_id, start_node, end_node, '
		|| 'next_left_edge, next_right_edge, '
		|| 'left_face, right_face, '
		|| 'geom) '
		|| ' VALUES('
		-- edge_id
		|| edgeid ||','
		-- start_node
		|| 'topology.addNode('
		|| quote_literal(atopology)
		|| ', ST_StartPoint($1)), '
		-- end_node
		|| 'topology.addNode('
		|| quote_literal(atopology)
		|| ', ST_EndPoint($1)), '
		-- next_left_edge
		|| -edgeid ||','
		-- next_right_edge
		|| edgeid ||','
		-- left_face
		|| '0,'
		-- right_face
		|| '0,'
		-- geom
		|| '$1)'
    USING aline;
	RETURN edgeid;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="aline" jt="1111" type="geometry" />
		</function>
		<function name="addface" id="Function_5b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.addface(atopology character varying, apoly geometry, force_new boolean DEFAULT false)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  bounds geometry;
  symdif geometry;
  faceid int;
  rec RECORD;
  rrec RECORD;
  relate text;
  right_edges int[];
  left_edges int[];
  all_edges geometry;
  old_faceid int;
  old_edgeid int;
  sql text;
  right_side bool;
  edgeseg geometry;
  p1 geometry;
  p2 geometry;
  p3 geometry;
  loc float8;
  segnum int;
  numsegs int;
BEGIN
  --
  -- Atopology and apoly are required
  --
  IF atopology IS NULL OR apoly IS NULL THEN
    RAISE EXCEPTION 'Invalid null argument';
  END IF;
  --
  -- Aline must be a polygon
  --
  IF substring(geometrytype(apoly), 1, 4) != 'POLY'
  THEN
    RAISE EXCEPTION 'Face geometry must be a polygon';
  END IF;
  for rrec IN SELECT (d).* FROM (
    SELECT ST_DumpRings(ST_ForceRHR(apoly)) d
  ) foo
  LOOP -- {
    --
    -- Find all bounds edges, forcing right-hand-rule
    -- to know what's left and what's right...
    --
    bounds = ST_Boundary(rrec.geom);
    sql := 'SELECT e.geom, e.edge_id, e.left_face, e.right_face FROM '
      || quote_ident(atopology)
      || '.edge e, (SELECT $1 as geom) r WHERE r.geom && e.geom'
    ;
    -- RAISE DEBUG 'SQL: %', sql;
    FOR rec IN EXECUTE sql USING bounds
    LOOP -- {
      --RAISE DEBUG 'Edge % has bounding box intersection', rec.edge_id;
      -- Find first non-empty segment of the edge
      numsegs = ST_NumPoints(rec.geom);
      segnum = 1;
      WHILE segnum < numsegs LOOP
        p1 = ST_PointN(rec.geom, segnum);
        p2 = ST_PointN(rec.geom, segnum+1);
        IF ST_Distance(p1, p2) > 0 THEN
          EXIT;
        END IF;
        segnum = segnum + 1;
      END LOOP;
      IF segnum = numsegs THEN
        RAISE WARNING 'Edge % is collapsed', rec.edge_id;
        CONTINUE; -- we don't want to spend time on it
      END IF;
      edgeseg = ST_MakeLine(p1, p2);
      -- Skip non-covered edges
      IF NOT ST_Equals(p2, ST_EndPoint(rec.geom)) THEN
        IF NOT ( _ST_Intersects(bounds, p1) AND _ST_Intersects(bounds, p2) )
        THEN
          --RAISE DEBUG 'Edge % has points % and % not intersecting with ring bounds', rec.edge_id, st_astext(p1), st_astext(p2);
          CONTINUE;
        END IF;
      ELSE
        -- must be a 2-points only edge, let's use Covers (more expensive)
        IF NOT _ST_Covers(bounds, edgeseg) THEN
          --RAISE DEBUG 'Edge % is not covered by ring', rec.edge_id;
          CONTINUE;
        END IF;
      END IF;
      p3 = ST_StartPoint(bounds);
      IF ST_DWithin(edgeseg, p3, 0) THEN
        -- Edge segment covers ring endpoint, See bug #874
        loc = ST_LineLocatePoint(edgeseg, p3);
        -- WARNING: this is as robust as length of edgeseg allows...
        IF loc > 0.9 THEN
          -- shift last point down
          p2 = ST_LineInterpolatePoint(edgeseg, loc - 0.1);
        ELSIF loc < 0.1 THEN
          -- shift first point up
          p1 = ST_LineInterpolatePoint(edgeseg, loc + 0.1);
        ELSE
          -- when ring start point is in between, we swap the points
          p3 = p1; p1 = p2; p2 = p3;
        END IF;
      END IF;
      right_side = ST_LineLocatePoint(bounds, p1) <
                   ST_LineLocatePoint(bounds, p2);

      IF right_side THEN
        right_edges := array_append(right_edges, rec.edge_id);
        old_faceid = rec.right_face;
      ELSE
        left_edges := array_append(left_edges, rec.edge_id);
        old_faceid = rec.left_face;
      END IF;
      IF faceid IS NULL OR faceid = 0 THEN
        faceid = old_faceid;
        old_edgeid = rec.edge_id;
      ELSIF faceid != old_faceid THEN
        RAISE EXCEPTION 'Edge % has face % registered on the side of this face, while edge % has face % on the same side', rec.edge_id, old_faceid, old_edgeid, faceid;
      END IF;
      -- Collect all edges for final full coverage check
      all_edges = ST_Collect(all_edges, rec.geom);
    END LOOP; -- }
  END LOOP; -- }
  IF all_edges IS NULL THEN
    RAISE EXCEPTION 'Found no edges on the polygon boundary';
  END IF;

  --
  -- Check that all edges found, taken togheter,
  -- fully match the ring boundary and nothing more
  --
  -- If the test fail either we need to add more edges
  -- from the polygon ring or we need to split
  -- some of the existing ones.
  --
  bounds = ST_Boundary(apoly);
  IF NOT ST_isEmpty(ST_SymDifference(bounds, all_edges)) THEN
    IF NOT ST_isEmpty(ST_Difference(bounds, all_edges)) THEN
      RAISE EXCEPTION 'Polygon boundary is not fully defined by existing edges at or near point %', ST_AsText(ST_PointOnSurface(ST_Difference(bounds, all_edges)));
    ELSE
      RAISE EXCEPTION 'Existing edges cover polygon boundary and more at or near point % (invalid topology?)', ST_AsText(ST_PointOnSurface(ST_Difference(all_edges, bounds)));
    END IF;
  END IF;
  IF faceid IS NOT NULL AND faceid != 0 THEN
    IF NOT force_new THEN
      RETURN faceid;
    ELSE
    END IF;
  END IF;
  --
  -- Get new face id from sequence
  --
  FOR rec IN EXECUTE 'SELECT nextval(' ||
    quote_literal(
      quote_ident(atopology) || '.face_face_id_seq'
    ) || ')'
  LOOP
    faceid = rec.nextval;
  END LOOP;
  --
  -- Insert new face
  --
  EXECUTE 'INSERT INTO '
    || quote_ident(atopology)
    || '.face(face_id, mbr) VALUES('
    -- face_id
    || faceid || ','
    -- minimum bounding rectangle
    || '$1)'
    USING ST_Envelope(apoly);
  --
  -- Update all edges having this face on the left
  --
  IF left_edges IS NOT NULL THEN
    EXECUTE 'UPDATE '
    || quote_ident(atopology)
    || '.edge_data SET left_face = '
    || quote_literal(faceid)
    || ' WHERE edge_id = ANY('
    || quote_literal(left_edges)
    || ') ';
  END IF;
  --
  -- Update all edges having this face on the right
  --
  IF right_edges IS NOT NULL THEN
    EXECUTE 'UPDATE '
    || quote_ident(atopology)
    || '.edge_data SET right_face = '
    || quote_literal(faceid)
    || ' WHERE edge_id = ANY('
    || quote_literal(right_edges)
    || ') ';
  END IF;

  --
  -- Set left_face/right_face of any contained edge
  --
  EXECUTE 'UPDATE '
    || quote_ident(atopology)
    || '.edge_data SET right_face = '
    || quote_literal(faceid)
    || ', left_face = '
    || quote_literal(faceid)
    || ' WHERE ST_Contains($1, geom)'
    USING apoly;
  --
  -- Set containing_face of any contained node
  --
  EXECUTE 'UPDATE '
    || quote_ident(atopology)
    || '.node SET containing_face = '
    || quote_literal(faceid)
    || ' WHERE containing_face IS NOT NULL AND ST_Contains($1, geom)'
    USING apoly;
  RETURN faceid;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoly" jt="1111" type="geometry" />
			<input_param name="force_new" jt="-7" type="bool" />
		</function>
		<function name="addnode" id="Function_166b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.addnode(atopology character varying, apoint geometry, allowedgesplitting boolean, setcontainingface boolean DEFAULT false)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
	nodeid int;
	rec RECORD;
  containing_face int;
BEGIN
	--
	-- Atopology and apoint are required
	--
	IF atopology IS NULL OR apoint IS NULL THEN
		RAISE EXCEPTION 'Invalid null argument';
	END IF;
	--
	-- Apoint must be a point
	--
	IF substring(geometrytype(apoint), 1, 5) != 'POINT'
	THEN
		RAISE EXCEPTION 'Node geometry must be a point';
	END IF;
	--
	-- Check if a coincident node already exists
	--
	-- We use index AND x/y equality
	--
	FOR rec IN EXECUTE 'SELECT node_id FROM '
		|| quote_ident(atopology) || '.node ' ||
		'WHERE geom && $1 AND ST_X(geom) = ST_X($1) AND ST_Y(geom) = ST_Y($1)'
    USING apoint
	LOOP
		RETURN  rec.node_id;
	END LOOP;
	--
	-- Check if any edge crosses this node
	-- (endpoints are fine)
	--
	FOR rec IN EXECUTE 'SELECT edge_id FROM '
		|| quote_ident(atopology) || '.edge '
		|| 'WHERE ST_DWithin($1, geom, 0) AND '
    || 'NOT ST_Equals($1, ST_StartPoint(geom)) AND '
    || 'NOT ST_Equals($1, ST_EndPoint(geom))'
    USING apoint
	LOOP
    IF allowEdgeSplitting THEN
      RETURN topology.ST_ModEdgeSplit(atopology, rec.edge_id, apoint);
    ELSE
		  RAISE EXCEPTION 'An edge crosses the given node.';
    END IF;
	END LOOP;
  IF setContainingFace THEN
    containing_face := topology.GetFaceByPoint(atopology, apoint, 0);
  ELSE
    containing_face := NULL;
  END IF;
	--
	-- Get new node id from sequence
	--
	FOR rec IN EXECUTE 'SELECT nextval(' ||
		quote_literal(
			quote_ident(atopology) || '.node_node_id_seq'
		) || ')'
	LOOP
		nodeid = rec.nextval;
	END LOOP;
	--
	-- Insert the new row
	--
	EXECUTE 'INSERT INTO ' || quote_ident(atopology)
		|| '.node(node_id, containing_face, geom)
		VALUES(' || nodeid || ',' || coalesce(containing_face::text, 'NULL')
    || ',$1)' USING apoint;
	RETURN nodeid;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoint" jt="1111" type="geometry" />
			<input_param name="allowedgesplitting" jt="-7" type="bool" />
			<input_param name="setcontainingface" jt="-7" type="bool" />
		</function>
		<function name="addnode" id="Function_ab5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.addnode(atopology character varying, apoint geometry)
 RETURNS integer
 LANGUAGE sql
AS $function$
  SELECT topology.AddNode($1, $2, false, false);
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoint" jt="1111" type="geometry" />
		</function>
		<function name="addtopogeometrycolumn" id="Function_10f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.addtopogeometrycolumn(toponame character varying, schema character varying, tbl character varying, col character varying, ltype character varying, child integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
  intltype integer;
  newlevel integer;
  topoid integer;
  rec RECORD;
  newlayer_id integer;
  query text;
BEGIN
  -- Get topology id
  SELECT id INTO topoid
    FROM topology.topology WHERE name = toponame;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'Topology % does not exist', quote_literal(toponame);
  END IF;
  IF ltype ILIKE '%POINT%' OR ltype ILIKE 'PUNTAL' THEN
    intltype = 1;
  ELSIF ltype ILIKE '%LINE%' OR ltype ILIKE 'LINEAL' THEN
    intltype = 2;
  ELSIF ltype ILIKE '%POLYGON%' OR ltype ILIKE 'AREAL' THEN
    intltype = 3;
  ELSIF ltype ILIKE '%COLLECTION%' OR ltype ILIKE 'GEOMETRY' THEN
    intltype = 4;
  ELSE
    RAISE EXCEPTION 'Layer type must be one of POINT,LINE,POLYGON,COLLECTION';
  END IF;
  --
  -- Add new TopoGeometry column in schema.table
  --
  EXECUTE 'ALTER TABLE ' || quote_ident(schema)
    || '.' || quote_ident(tbl) 
    || ' ADD COLUMN ' || quote_ident(col)
    || ' topology.TopoGeometry;';

  --
  -- See if child id exists and extract its level
  --
  IF child IS NOT NULL THEN
    SELECT level + 1 FROM topology.layer
      WHERE layer_id = child
        AND topology_id = topoid
      INTO newlevel;
    IF newlevel IS NULL THEN
      RAISE EXCEPTION 'Child layer % does not exist in topology "%"', child, toponame;
    END IF;
  END IF;
  --
  -- Get new layer id from sequence
  --
  EXECUTE 'SELECT nextval(' ||
    quote_literal(
      quote_ident(toponame) || '.layer_id_seq'
    ) || ')' INTO STRICT newlayer_id;
  EXECUTE 'INSERT INTO ' 
       'topology.layer(topology_id, '
       'layer_id, level, child_id, schema_name, '
       'table_name, feature_column, feature_type) '
       'VALUES ('
    || topoid || ','
    || newlayer_id || ',' || COALESCE(newlevel, 0) || ','
    || COALESCE(child::text, 'NULL') || ','
    || quote_literal(schema) || ','
    || quote_literal(tbl) || ','
    || quote_literal(col) || ','
    || intltype || ');';

  --
  -- Create a sequence for TopoGeometries in this new layer
  --
  EXECUTE 'CREATE SEQUENCE ' || quote_ident(toponame)
    || '.topogeo_s_' || newlayer_id;
  --
  -- Add constraints on TopoGeom column
  --
  EXECUTE 'ALTER TABLE ' || quote_ident(schema)
    || '.' || quote_ident(tbl) 
    || ' ADD CONSTRAINT "check_topogeom_' || col || '" CHECK ('
       'topology_id(' || quote_ident(col) || ') = ' || topoid
    || ' AND '
       'layer_id(' || quote_ident(col) || ') = ' || newlayer_id
    || ' AND '
       'type(' || quote_ident(col) || ') = ' || intltype
    || ');';
  --
  -- Add dependency of the feature column on the topology schema
  --
  query = 'INSERT INTO pg_catalog.pg_depend SELECT '
       'fcat.oid, fobj.oid, fsub.attnum, tcat.oid, '
       'tobj.oid, 0, ''n'' '
       'FROM pg_class fcat, pg_namespace fnsp, '
       ' pg_class fobj, pg_attribute fsub, '
       ' pg_class tcat, pg_namespace tobj '
       ' WHERE fcat.relname = ''pg_class'' '
       ' AND fnsp.nspname = ' || quote_literal(schema)
    || ' AND fobj.relnamespace = fnsp.oid '
       ' AND fobj.relname = ' || quote_literal(tbl)
    || ' AND fsub.attrelid = fobj.oid '
       ' AND fsub.attname = ' || quote_literal(col)
    || ' AND tcat.relname = ''pg_namespace'' '
       ' AND tobj.nspname = ' || quote_literal(toponame);
--
-- The only reason to add this dependency is to avoid
-- simple drop of a feature column. Still, drop cascade
-- will remove both the feature column and the sequence
-- corrupting the topology anyway ...
--
  RETURN newlayer_id;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="schema" jt="12" type="varchar" />
			<input_param name="tbl" jt="12" type="varchar" />
			<input_param name="col" jt="12" type="varchar" />
			<input_param name="ltype" jt="12" type="varchar" />
			<input_param name="child" jt="4" type="int4" />
		</function>
		<function name="addtopogeometrycolumn" id="Function_12f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.addtopogeometrycolumn(character varying, character varying, character varying, character varying, character varying)
 RETURNS integer
 LANGUAGE sql
AS $function$
  SELECT topology.AddTopoGeometryColumn($1, $2, $3, $4, $5, NULL);
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="varchar" />
			<input_param name="$2" jt="12" type="varchar" />
			<input_param name="$3" jt="12" type="varchar" />
			<input_param name="$4" jt="12" type="varchar" />
			<input_param name="$5" jt="12" type="varchar" />
		</function>
		<function name="addtosearchpath" id="Function_b88" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.addtosearchpath(a_schema_name character varying)
 RETURNS text
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
	var_result text;
	var_cur_search_path text;
BEGIN
	SELECT reset_val INTO var_cur_search_path FROM pg_settings WHERE name = 'search_path';
	IF var_cur_search_path LIKE '%' || quote_ident(a_schema_name) || '%' THEN
		var_result := a_schema_name || ' already in database search_path';
	ELSE
		var_cur_search_path := var_cur_search_path || ', '
                        || quote_ident(a_schema_name);
		EXECUTE 'ALTER DATABASE ' || quote_ident(current_database())
                              || ' SET search_path = ' || var_cur_search_path;
		var_result := a_schema_name || ' has been added to end of database search_path ';
	END IF;
	EXECUTE 'SET search_path = ' || var_cur_search_path;
  RETURN var_result;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="a_schema_name" jt="12" type="varchar" />
		</function>
		<function name="asgml" id="Function_1e35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry, nsprefix_in text, precision_in integer, options_in integer, visitedtable regclass, idprefix text, gmlver integer)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
  nsprefix text;
  precision int;
  options int;
  visited bool;
  toponame text;
  gml text;
  sql text;
  rec RECORD;
  rec2 RECORD;
BEGIN
  nsprefix := 'gml:';
  IF nsprefix_in IS NOT NULL THEN
    IF nsprefix_in = '' THEN
      nsprefix = nsprefix_in;
    ELSE
      nsprefix = nsprefix_in || ':';
    END IF;
  END IF;
  precision := 15;
  IF precision_in IS NOT NULL THEN
    precision = precision_in;
  END IF;
  options := 1;
  IF options_in IS NOT NULL THEN
    options = options_in;
  END IF;
  -- Get topology name (for subsequent queries)
  SELECT name FROM topology.topology into toponame
              WHERE id = tg.topology_id;
  -- Puntual TopoGeometry
  IF tg.type = 1 THEN
    gml = '<' || nsprefix || 'TopoPoint>';
    -- For each defining node, print a directedNode
    FOR rec IN  EXECUTE 'SELECT r.element_id, n.geom from '
      || quote_ident(toponame) || '.relation r LEFT JOIN '
      || quote_ident(toponame) || '.node n ON (r.element_id = n.node_id)'
      || ' WHERE r.layer_id = ' || tg.layer_id
      || ' AND r.topogeo_id = ' || tg.id
    LOOP
      gml = gml || '<' || nsprefix || 'directedNode';
      -- Do visited bookkeeping if visitedTable was given
      IF visitedTable IS NOT NULL THEN
        EXECUTE 'SELECT true FROM '
                || visitedTable::text
                || ' WHERE element_type = 1 AND element_id = '
                || rec.element_id LIMIT 1 INTO visited;
        IF visited IS NOT NULL THEN
          gml = gml || ' xlink:href="#' || idprefix || 'N' || rec.element_id || '" />';
          CONTINUE;
        ELSE
          -- Mark as visited
          EXECUTE 'INSERT INTO ' || visitedTable::text
            || '(element_type, element_id) VALUES (1, '
            || rec.element_id || ')';
        END IF;
      END IF;
      gml = gml || '>';
      gml = gml || topology._AsGMLNode(rec.element_id, rec.geom, nsprefix_in, precision, options, idprefix, gmlver);
      gml = gml || '</' || nsprefix || 'directedNode>';
    END LOOP;
    gml = gml || '</' || nsprefix || 'TopoPoint>';
    RETURN gml;
  ELSIF tg.type = 2 THEN -- lineal
    gml = '<' || nsprefix || 'TopoCurve>';
    FOR rec IN SELECT (ST_Dump(topology.Geometry(tg))).geom
    LOOP
      FOR rec2 IN EXECUTE
        'SELECT e.*, ST_LineLocatePoint($1'
        || ', ST_LineInterpolatePoint(e.geom, 0.2)) as pos'
        || ', ST_LineLocatePoint($1'
        || ', ST_LineInterpolatePoint(e.geom, 0.8)) as pos2 FROM '
        || quote_ident(toponame)
        || '.edge e WHERE ST_Covers($1'
        || ', e.geom) ORDER BY pos'
        -- TODO: add relation to the conditional, to reduce load ?
        USING rec.geom
      LOOP
        gml = gml || '<' || nsprefix || 'directedEdge';
        -- if this edge goes in opposite direction to the
        --       line, make it with negative orientation
        IF rec2.pos2 < rec2.pos THEN -- edge goes in opposite direction
          gml = gml || ' orientation="-"';
        END IF;
        -- Do visited bookkeeping if visitedTable was given
        IF visitedTable IS NOT NULL THEN
          EXECUTE 'SELECT true FROM '
            || visitedTable::text
            || ' WHERE element_type = 2 AND element_id = '
            || rec2.edge_id LIMIT 1 INTO visited;
          IF visited THEN
            -- Use xlink:href if visited
            gml = gml || ' xlink:href="#' || idprefix || 'E' || rec2.edge_id || '" />';
            CONTINUE;
          ELSE
            -- Mark as visited otherwise
            EXECUTE 'INSERT INTO ' || visitedTable::text
              || '(element_type, element_id) VALUES (2, '
              || rec2.edge_id || ')';
          END IF;
        END IF;

        gml = gml || '>';
        gml = gml || topology._AsGMLEdge(rec2.edge_id,
                                        rec2.start_node,
                                        rec2.end_node, rec2.geom,
                                        visitedTable,
                                        nsprefix_in, precision,
                                        options, idprefix, gmlver);

        gml = gml || '</' || nsprefix || 'directedEdge>';
      END LOOP;
    END LOOP;
    gml = gml || '</' || nsprefix || 'TopoCurve>';
    return gml;
  ELSIF tg.type = 3 THEN -- areal
    gml = '<' || nsprefix || 'TopoSurface>';
    -- For each defining face, print a directedFace
    FOR rec IN  EXECUTE 'SELECT f.face_id from '
      || quote_ident(toponame) || '.relation r LEFT JOIN '
      || quote_ident(toponame) || '.face f ON (r.element_id = f.face_id)'
      || ' WHERE r.layer_id = ' || tg.layer_id
      || ' AND r.topogeo_id = ' || tg.id
    LOOP
      gml = gml || '<' || nsprefix || 'directedFace';
      -- Do visited bookkeeping if visitedTable was given
      IF visitedTable IS NOT NULL THEN
        EXECUTE 'SELECT true FROM '
                || visitedTable::text
                || ' WHERE element_type = 3 AND element_id = '
                || rec.face_id LIMIT 1 INTO visited;
        IF visited IS NOT NULL THEN
          gml = gml || ' xlink:href="#' || idprefix || 'F' || rec.face_id || '" />';
          CONTINUE;
        ELSE
          -- Mark as visited
          EXECUTE 'INSERT INTO ' || visitedTable::text
            || '(element_type, element_id) VALUES (3, '
            || rec.face_id || ')';
        END IF;
      END IF;
      gml = gml || '>';
      gml = gml || topology._AsGMLFace(toponame, rec.face_id, visitedTable,
                                       nsprefix_in, precision,
                                       options, idprefix, gmlver);
      gml = gml || '</' || nsprefix || 'directedFace>';
    END LOOP;
    gml = gml || '</' || nsprefix || 'TopoSurface>';
    RETURN gml;
  ELSIF tg.type = 4 THEN -- collection
    RAISE EXCEPTION 'Collection TopoGeometries are not supported by AsGML';
  END IF;

  RETURN gml;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="nsprefix_in" jt="12" type="text" />
			<input_param name="precision_in" jt="4" type="int4" />
			<input_param name="options_in" jt="4" type="int4" />
			<input_param name="visitedtable" jt="1111" type="regclass" />
			<input_param name="idprefix" jt="12" type="text" />
			<input_param name="gmlver" jt="4" type="int4" />
		</function>
		<function name="asgml" id="Function_e66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry, nsprefix text, prec integer, options integer, visitedtable regclass, idprefix text)
 RETURNS text
 LANGUAGE sql
AS $function$
 SELECT topology.AsGML($1, $2, $3, $4, $5, $6, 3);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="nsprefix" jt="12" type="text" />
			<input_param name="prec" jt="4" type="int4" />
			<input_param name="options" jt="4" type="int4" />
			<input_param name="visitedtable" jt="1111" type="regclass" />
			<input_param name="idprefix" jt="12" type="text" />
		</function>
		<function name="asgml" id="Function_25aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry, nsprefix text, prec integer, options integer, vis regclass)
 RETURNS text
 LANGUAGE sql
AS $function$
 SELECT topology.AsGML($1, $2, $3, $4, $5, '');
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="nsprefix" jt="12" type="text" />
			<input_param name="prec" jt="4" type="int4" />
			<input_param name="options" jt="4" type="int4" />
			<input_param name="vis" jt="1111" type="regclass" />
		</function>
		<function name="asgml" id="Function_19cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry, nsprefix text, prec integer, opts integer)
 RETURNS text
 LANGUAGE sql
 STABLE
AS $function$
 SELECT topology.AsGML($1, $2, $3, $4, NULL);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="nsprefix" jt="12" type="text" />
			<input_param name="prec" jt="4" type="int4" />
			<input_param name="opts" jt="4" type="int4" />
		</function>
		<function name="asgml" id="Function_1853" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry, nsprefix text)
 RETURNS text
 LANGUAGE sql
 STABLE
AS $function$
 SELECT topology.AsGML($1, $2, 15, 1, NULL);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="nsprefix" jt="12" type="text" />
		</function>
		<function name="asgml" id="Function_1c12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry, visitedtable regclass)
 RETURNS text
 LANGUAGE sql
AS $function$
 SELECT topology.AsGML($1, 'gml', 15, 1, $2);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="visitedtable" jt="1111" type="regclass" />
		</function>
		<function name="asgml" id="Function_1853" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry, visitedtable regclass, nsprefix text)
 RETURNS text
 LANGUAGE sql
AS $function$
 SELECT topology.AsGML($1, $3, 15, 1, $2);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="visitedtable" jt="1111" type="regclass" />
			<input_param name="nsprefix" jt="12" type="text" />
		</function>
		<function name="asgml" id="Function_2430" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.asgml(tg topogeometry)
 RETURNS text
 LANGUAGE sql
 STABLE
AS $function$
 SELECT topology.AsGML($1, 'gml');
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
		</function>
		<function name="astopojson" id="Function_61a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.astopojson(tg topogeometry, edgemaptable regclass)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
  toponame text;
  json text;
  sql text;
  bounds GEOMETRY;
  rec RECORD;
  rec2 RECORD;
  side int;
  arcid int;
  arcs int[];
  ringtxt TEXT[];
  comptxt TEXT[];
  edges_found BOOLEAN;
  old_search_path TEXT;
  all_faces int[];
  faces int[];
  bounding_edges int[];
  visited_face int;
  shell_faces int[];
  visited_edges int[];
  looking_for_holes BOOLEAN;
BEGIN
  IF tg IS NULL THEN
    RETURN NULL;
  END IF;
  -- Get topology name (for subsequent queries)
  SELECT name FROM topology.topology into toponame
              WHERE id = tg.topology_id;
  -- TODO: implement scale ?
  -- Puntal TopoGeometry, simply delegate to AsGeoJSON
  IF tg.type = 1 THEN
    json := ST_AsGeoJSON(topology.Geometry(tg));
    return json;
  ELSIF tg.type = 2 THEN -- lineal
    FOR rec IN SELECT (ST_Dump(topology.Geometry(tg))).geom
    LOOP -- {
      sql := 'SELECT e.*, ST_LineLocatePoint($1'
            || ', ST_LineInterpolatePoint(e.geom, 0.2)) as pos'
            || ', ST_LineLocatePoint($1'
            || ', ST_LineInterpolatePoint(e.geom, 0.8)) as pos2 FROM '
            || quote_ident(toponame)
            || '.edge e WHERE ST_Covers($1'
            || ', e.geom) ORDER BY pos';
            -- TODO: add relation to the conditional, to reduce load ?
      FOR rec2 IN EXECUTE sql USING rec.geom
      LOOP -- {
        IF edgeMapTable IS NOT NULL THEN
          sql := 'SELECT arc_id-1 FROM ' || edgeMapTable::text || ' WHERE edge_id = $1';
          EXECUTE sql INTO arcid USING rec2.edge_id;
          IF arcid IS NULL THEN
            EXECUTE 'INSERT INTO ' || edgeMapTable::text
              || '(edge_id) VALUES ($1) RETURNING arc_id-1'
            INTO arcid USING rec2.edge_id;
          END IF;
        ELSE
          arcid := rec2.edge_id;
        END IF;
        -- edge goes in opposite direction
        IF rec2.pos2 < rec2.pos THEN
          arcid := -(arcid+1);
        END IF;
        arcs := arcs || arcid;
      END LOOP; -- }
      comptxt := comptxt || ( '[' || array_to_string(arcs, ',') || ']' );
      arcs := NULL;
    END LOOP; -- }
    json := '{ "type": "MultiLineString", "arcs": [' || array_to_string(comptxt,',') || ']}';
    return json;
  ELSIF tg.type = 3 THEN -- areal
    json := '{ "type": "MultiPolygon", "arcs": [';
    EXECUTE 'SHOW search_path' INTO old_search_path;
    EXECUTE 'SET search_path TO ' || quote_ident(toponame) || ',' || old_search_path;
    SELECT array_agg(id) as f
    FROM ( SELECT (topology.GetTopoGeomElements(tg))[1] as id ) as f
    INTO all_faces;

    visited_edges := ARRAY[]::int[];
    faces := all_faces;
    looking_for_holes := false;
    shell_faces := ARRAY[]::int[];
    SELECT array_agg(edge_id)
    FROM edge_data e
    WHERE
         ( e.left_face = ANY ( faces ) OR
           e.right_face = ANY ( faces ) )
    INTO bounding_edges;
    LOOP -- {
      arcs := NULL;
      edges_found := false;

      FOR rec in -- {
WITH RECURSIVE
_edges AS (
  SELECT e.*,
         e.left_face = ANY ( faces ) as lf,
         e.right_face = ANY ( faces ) as rf
  FROM edge e
  WHERE edge_id = ANY (bounding_edges)
          AND NOT e.edge_id = ANY ( visited_edges )
),
_leftmost_non_dangling_edge AS (
  SELECT e.* FROM _edges e WHERE e.lf != e.rf
  ORDER BY ST_XMin(geom), ST_YMin(geom) LIMIT 1
),
_edgepath AS (
  SELECT
    CASE
      WHEN e.lf THEN lme.edge_id
      ELSE -lme.edge_id
    END as signed_edge_id,
    false as back,
    e.lf = e.rf as dangling,
    e.left_face, e.right_face,
    e.lf, e.rf,
    e.next_right_edge, e.next_left_edge
  FROM _edges e, _leftmost_non_dangling_edge lme
  WHERE e.edge_id = abs(lme.edge_id)
    UNION
  SELECT
    CASE
      WHEN p.dangling AND NOT p.back THEN -p.signed_edge_id
      WHEN p.signed_edge_id < 0 THEN p.next_right_edge
      ELSE p.next_left_edge
    END, -- signed_edge_id
    CASE
      WHEN p.dangling AND NOT p.back THEN true
      ELSE false
    END, -- back
    e.lf = e.rf, -- dangling
    e.left_face, e.right_face,
    e.lf, e.rf,
    e.next_right_edge, e.next_left_edge
  FROM _edges e, _edgepath p
  WHERE
    e.edge_id = CASE
      WHEN p.dangling AND NOT p.back THEN abs(p.signed_edge_id)
      WHEN p.signed_edge_id < 0 THEN abs(p.next_right_edge)
      ELSE abs(p.next_left_edge)
    END
)
SELECT abs(signed_edge_id) as edge_id, signed_edge_id, dangling,
        lf, rf, left_face, right_face
FROM _edgepath
      LOOP  -- }{

        IF rec.left_face = ANY (all_faces) AND NOT rec.left_face = ANY (shell_faces) THEN
          shell_faces := shell_faces || rec.left_face;
        END IF;
        IF rec.right_face = ANY (all_faces) AND NOT rec.right_face = ANY (shell_faces) THEN
          shell_faces := shell_faces || rec.right_face;
        END IF;
        visited_edges := visited_edges || rec.edge_id;
        edges_found := true;
        -- TODO: drop ?
        IF rec.dangling THEN
          CONTINUE;
        END IF;
        IF rec.left_face = ANY (all_faces) AND rec.right_face = ANY (all_faces) THEN
          CONTINUE;
        END IF;
        IF edgeMapTable IS NOT NULL THEN
          sql := 'SELECT arc_id-1 FROM ' || edgeMapTable::text || ' WHERE edge_id = $1';
          EXECUTE sql INTO arcid USING rec.edge_id;
          IF arcid IS NULL THEN
            EXECUTE 'INSERT INTO ' || edgeMapTable::text
              || '(edge_id) VALUES ($1) RETURNING arc_id-1'
            INTO arcid USING rec.edge_id;
          END IF;
        ELSE
          arcid := rec.edge_id-1;
        END IF;
        -- Swap sign, use two's complement for negative edges
        IF rec.signed_edge_id >= 0 THEN
          arcid := - ( arcid + 1 );
        END IF;

        arcs := arcid || arcs;
      END LOOP; -- }

      IF NOT edges_found THEN
        IF looking_for_holes THEN
          looking_for_holes := false;
          comptxt := comptxt || ( '[' || array_to_string(ringtxt, ',') || ']' );
          ringtxt := NULL;
          faces := all_faces;
          shell_faces := ARRAY[]::int[];
        ELSE
          EXIT; -- end of loop
        END IF;
      ELSE
        faces := shell_faces;
        IF arcs IS NOT NULL THEN
          ringtxt := ringtxt || ( '[' || array_to_string(arcs,',') || ']' );
        END IF;
        looking_for_holes := true;
      END IF;
    END LOOP; -- }
    json := json || array_to_string(comptxt, ',') || ']}';
    EXECUTE 'SET search_path TO ' || old_search_path;

  ELSIF tg.type = 4 THEN -- collection
    RAISE EXCEPTION 'Collection TopoGeometries are not supported by AsTopoJSON';
  END IF;
  RETURN json;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="edgemaptable" jt="1111" type="regclass" />
		</function>
		<function name="cleartopogeom" id="Function_11df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.cleartopogeom(tg topogeometry)
 RETURNS topogeometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  topology_info RECORD;
  sql TEXT;
BEGIN
  -- Get topology information
  SELECT id, name FROM topology.topology
    INTO topology_info
    WHERE id = topology_id(tg);
  IF NOT FOUND THEN
      RAISE EXCEPTION 'No topology with id "%" in topology.topology', topology_id(tg);
  END IF;
  -- Clear the TopoGeometry contents
  sql := 'DELETE FROM ' || quote_ident(topology_info.name)
        || '.relation WHERE layer_id = '
        || layer_id(tg)
        || ' AND topogeo_id = '
        || id(tg);
  EXECUTE sql;

  RETURN tg;
END
$function$
;]]></string>
			<input_param name="tg" jt="2002" type="topogeometry" />
			<result_param name="topology_id" jt="4" type="int4" />
			<result_param name="layer_id" jt="4" type="int4" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="type" jt="4" type="int4" />
		</function>
		<function name="copytopology" id="Function_1924" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.copytopology(atopology character varying, newtopo character varying)
 RETURNS integer
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  rec RECORD;
  rec2 RECORD;
  oldtopo_id integer;
  newtopo_id integer;
  n int4;
  ret text;
BEGIN
  SELECT * FROM topology.topology where name = atopology
  INTO strict rec;
  oldtopo_id = rec.id;
  -- TODO: more gracefully handle unexistent topology
  SELECT topology.CreateTopology(newtopo, rec.SRID, rec.precision, rec.hasZ)
  INTO strict newtopo_id;
  -- Copy faces
  EXECUTE 'INSERT INTO ' || quote_ident(newtopo)
    || '.face SELECT * FROM ' || quote_ident(atopology)
    || '.face WHERE face_id != 0';
  -- Update faces sequence
  EXECUTE 'SELECT setval(' || quote_literal(
      quote_ident(newtopo) || '.face_face_id_seq'
    ) || ', (SELECT last_value FROM '
    || quote_ident(atopology) || '.face_face_id_seq))';
  -- Copy nodes
  EXECUTE 'INSERT INTO ' || quote_ident(newtopo)
    || '.node SELECT * FROM ' || quote_ident(atopology)
    || '.node';
  -- Update node sequence
  EXECUTE 'SELECT setval(' || quote_literal(
      quote_ident(newtopo) || '.node_node_id_seq'
    ) || ', (SELECT last_value FROM '
    || quote_ident(atopology) || '.node_node_id_seq))';
  -- Copy edges
  EXECUTE 'INSERT INTO ' || quote_ident(newtopo)
    || '.edge_data SELECT * FROM ' || quote_ident(atopology)
    || '.edge_data';
  -- Update edge sequence
  EXECUTE 'SELECT setval(' || quote_literal(
      quote_ident(newtopo) || '.edge_data_edge_id_seq'
    ) || ', (SELECT last_value FROM '
    || quote_ident(atopology) || '.edge_data_edge_id_seq))';
  -- Copy layers and their TopoGeometry sequences
  FOR rec IN SELECT * FROM topology.layer WHERE topology_id = oldtopo_id
  LOOP
    INSERT INTO topology.layer (topology_id, layer_id, feature_type,
      level, child_id, schema_name, table_name, feature_column)
      VALUES (newtopo_id, rec.layer_id, rec.feature_type,
              rec.level, rec.child_id, newtopo,
              'LAYER' ||  rec.layer_id, '');
    -- Create layer's TopoGeometry sequences
    EXECUTE 'SELECT last_value FROM '
      || quote_ident(atopology) || '.topogeo_s_' || rec.layer_id
      INTO STRICT n;
    EXECUTE 'CREATE SEQUENCE ' || quote_ident(newtopo)
      || '.topogeo_s_' || rec.layer_id;
    EXECUTE 'SELECT setval(' || quote_literal(
      quote_ident(newtopo) || '.topogeo_s_' || rec.layer_id
      ) || ', ' || n || ')';
  END LOOP;
  -- Copy TopoGeometry definitions
  EXECUTE 'INSERT INTO ' || quote_ident(newtopo)
    || '.relation SELECT * FROM ' || quote_ident(atopology)
    || '.relation';
  RETURN newtopo_id;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="newtopo" jt="12" type="varchar" />
		</function>
		<function name="createtopogeom" id="Function_89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.createtopogeom(toponame character varying, tg_type integer, layer_id integer, tg_objs topoelementarray)
 RETURNS topogeometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  i integer;
  dims varchar;
  outerdims varchar;
  innerdims varchar;
  obj_type integer;
  obj_id integer;
  ret topology.TopoGeometry;
  rec RECORD;
  layertype integer;
  layerlevel integer;
  layerchild integer;
BEGIN
  IF tg_type < 1 OR tg_type > 4 THEN
    RAISE EXCEPTION 'Invalid TopoGeometry type % (must be in the range 1..4)', tg_type;
  END IF;
  -- Get topology id into return TopoGeometry
  SELECT id INTO ret.topology_id
    FROM topology.topology WHERE name = toponame;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'Topology % does not exist', quote_literal(toponame);
  END IF;
  --
  -- Get layer info
  --
  layertype := NULL;
  FOR rec IN EXECUTE 'SELECT * FROM topology.layer'
       ' WHERE topology_id = ' || ret.topology_id
    || ' AND layer_id = ' || layer_id
  LOOP
    layertype = rec.feature_type;
    layerlevel = rec.level;
    layerchild = rec.child_id;
  END LOOP;
  -- Check for existence of given layer id
  IF layertype IS NULL THEN
    RAISE EXCEPTION 'No layer with id % is registered with topology %', layer_id, toponame;
  END IF;
  -- Verify compatibility between layer geometry type and
  -- TopoGeom requested geometry type
  IF layertype != 4 and layertype != tg_type THEN
    RAISE EXCEPTION 'A Layer of type % cannot contain a TopoGeometry of type %', layertype, tg_type;
  END IF;
  -- Set layer id and type in return object
  ret.layer_id = layer_id;
  ret.type = tg_type;
  --
  -- Get new TopoGeo id from sequence
  --
  FOR rec IN EXECUTE 'SELECT nextval(' ||
    quote_literal(
      quote_ident(toponame) || '.topogeo_s_' || layer_id
    ) || ')'
  LOOP
    ret.id = rec.nextval;
  END LOOP;
  -- Loop over outer dimension
  i = array_lower(tg_objs, 1);
  LOOP
    obj_id = tg_objs[i][1];
    obj_type = tg_objs[i][2];
    -- Elements of type 0 represent emptiness, just skip them
    IF obj_type = 0 THEN
      IF obj_id != 0 THEN
        RAISE EXCEPTION 'Malformed empty topo element {0,%} -- id must be 0 as well', obj_id;
      END IF;
    ELSE
      IF layerlevel = 0 THEN -- array specifies lower-level objects
        IF tg_type != 4 and tg_type != obj_type THEN
          RAISE EXCEPTION 'A TopoGeometry of type % cannot contain topology elements of type %', tg_type, obj_type;
        END IF;
      ELSE -- array specifies lower-level topogeometries
        IF obj_type != layerchild THEN
          RAISE EXCEPTION 'TopoGeom element layer do not match TopoGeom child layer';
        END IF;
        -- TODO: verify that the referred TopoGeometry really
        -- exists in the relation table ?
      END IF;
      --RAISE NOTICE 'obj:% type:% id:%', i, obj_type, obj_id;
      --
      -- Insert record into the Relation table
      --
      EXECUTE 'INSERT INTO '||quote_ident(toponame)
        || '.relation(topogeo_id, layer_id, '
           'element_id,element_type) '
           ' VALUES ('||ret.id
        ||','||ret.layer_id
        || ',' || obj_id || ',' || obj_type || ');';
    END IF;
    i = i+1;
    IF i > array_upper(tg_objs, 1) THEN
      EXIT;
    END IF;
  END LOOP;
  RETURN ret;
END
$function$
;]]></string>
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="tg_type" jt="4" type="int4" />
			<input_param name="layer_id" jt="4" type="int4" />
			<input_param name="tg_objs" jt="2001" type="topoelementarray" />
			<result_param name="topology_id" jt="4" type="int4" />
			<result_param name="layer_id" jt="4" type="int4" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="type" jt="4" type="int4" />
		</function>
		<function name="createtopogeom" id="Function_a87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.createtopogeom(toponame character varying, tg_type integer, layer_id integer)
 RETURNS topogeometry
 LANGUAGE sql
 STRICT
AS $function$
  SELECT topology.CreateTopoGeom($1,$2,$3,'{{0,0}}');
$function$
;]]></string>
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="tg_type" jt="4" type="int4" />
			<input_param name="layer_id" jt="4" type="int4" />
			<result_param name="topology_id" jt="4" type="int4" />
			<result_param name="layer_id" jt="4" type="int4" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="type" jt="4" type="int4" />
		</function>
		<function name="createtopology" id="Function_2322" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.createtopology(atopology character varying, srid integer, prec double precision, hasz boolean)
 RETURNS integer
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  rec RECORD;
  topology_id integer;
  ndims integer;
BEGIN
--  FOR rec IN SELECT * FROM pg_namespace WHERE text(nspname) = atopology
--  LOOP
--    RAISE EXCEPTION 'SQL/MM Spatial exception - schema already exists';
--  END LOOP;
  ndims = 2;
  IF hasZ THEN ndims = 3; END IF;
  ------ Fetch next id for the new topology
  FOR rec IN SELECT nextval('topology.topology_id_seq')
  LOOP
    topology_id = rec.nextval;
  END LOOP;

  EXECUTE 'CREATE SCHEMA ' || quote_ident(atopology);
  -------------{ face CREATION
  EXECUTE 
  'CREATE TABLE ' || quote_ident(atopology) || '.face ('
     'face_id SERIAL,'
     ' CONSTRAINT face_primary_key PRIMARY KEY(face_id)'
     ');';
  -- Add mbr column to the face table 
  EXECUTE
  'SELECT AddGeometryColumn('||quote_literal(atopology)
  ||',''face'',''mbr'','||quote_literal(srid)
  ||',''POLYGON'',2)'; -- 2d only mbr is good enough
  -- Face standard view description
  EXECUTE 'COMMENT ON TABLE ' || quote_ident(atopology)
    || '.face IS '
       '''Contains face topology primitives''';
  -------------} END OF face CREATION

  --------------{ node CREATION
  EXECUTE 
  'CREATE TABLE ' || quote_ident(atopology) || '.node ('
     'node_id SERIAL,'
  --|| 'geom GEOMETRY,'
     'containing_face INTEGER,'
     'CONSTRAINT node_primary_key PRIMARY KEY(node_id),'
  --|| 'CONSTRAINT node_geometry_type CHECK '
  --|| '( GeometryType(geom) = ''POINT'' ),'
     'CONSTRAINT face_exists FOREIGN KEY(containing_face) '
     'REFERENCES ' || quote_ident(atopology) || '.face(face_id)'
     ');';
  -- Add geometry column to the node table 
  EXECUTE
  'SELECT AddGeometryColumn('||quote_literal(atopology)
  ||',''node'',''geom'','||quote_literal(srid)
  ||',''POINT'',' || ndims || ')';
  -- Node standard view description
  EXECUTE 'COMMENT ON TABLE ' || quote_ident(atopology)
    || '.node IS '
       '''Contains node topology primitives''';
  --------------} END OF node CREATION
  --------------{ edge CREATION
  -- edge_data table
  EXECUTE 
  'CREATE TABLE ' || quote_ident(atopology) || '.edge_data ('
     'edge_id SERIAL NOT NULL PRIMARY KEY,'
     'start_node INTEGER NOT NULL,'
     'end_node INTEGER NOT NULL,'
     'next_left_edge INTEGER NOT NULL,'
     'abs_next_left_edge INTEGER NOT NULL,'
     'next_right_edge INTEGER NOT NULL,'
     'abs_next_right_edge INTEGER NOT NULL,'
     'left_face INTEGER NOT NULL,'
     'right_face INTEGER NOT NULL,'
  --   'geom GEOMETRY NOT NULL,'
  --   'CONSTRAINT edge_geometry_type CHECK '
  --   '( GeometryType(geom) = ''LINESTRING'' ),'
     'CONSTRAINT start_node_exists FOREIGN KEY(start_node)'
     ' REFERENCES ' || quote_ident(atopology) || '.node(node_id),'
     'CONSTRAINT end_node_exists FOREIGN KEY(end_node) '
     ' REFERENCES ' || quote_ident(atopology) || '.node(node_id),'
     'CONSTRAINT left_face_exists FOREIGN KEY(left_face) '
     'REFERENCES ' || quote_ident(atopology) || '.face(face_id),'
     'CONSTRAINT right_face_exists FOREIGN KEY(right_face) '
     'REFERENCES ' || quote_ident(atopology) || '.face(face_id),'
     'CONSTRAINT next_left_edge_exists FOREIGN KEY(abs_next_left_edge)'
     ' REFERENCES ' || quote_ident(atopology)
  || '.edge_data(edge_id)'
     ' DEFERRABLE INITIALLY DEFERRED,'
     'CONSTRAINT next_right_edge_exists '
     'FOREIGN KEY(abs_next_right_edge)'
     ' REFERENCES ' || quote_ident(atopology)
  || '.edge_data(edge_id) '
     ' DEFERRABLE INITIALLY DEFERRED'
     ');';
  -- Add geometry column to the edge_data table 
  EXECUTE
  'SELECT AddGeometryColumn('||quote_literal(atopology)
  ||',''edge_data'',''geom'','||quote_literal(srid)
  ||',''LINESTRING'',' || ndims || ')';

  -- edge standard view (select rule)
  EXECUTE 'CREATE VIEW ' || quote_ident(atopology)
    || '.edge AS SELECT '
       ' edge_id, start_node, end_node, next_left_edge, '
       ' next_right_edge, '
       ' left_face, right_face, geom FROM '
    || quote_ident(atopology) || '.edge_data';
  -- Edge standard view description
  EXECUTE 'COMMENT ON VIEW ' || quote_ident(atopology)
    || '.edge IS '
       '''Contains edge topology primitives''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.edge_id IS '
       '''Unique identifier of the edge''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.start_node IS '
       '''Unique identifier of the node at the start of the edge''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.end_node IS '
       '''Unique identifier of the node at the end of the edge''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.next_left_edge IS '
       '''Unique identifier of the next edge of the face on the left (when looking in the direction from START_NODE to END_NODE), moving counterclockwise around the face boundary''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.next_right_edge IS '
       '''Unique identifier of the next edge of the face on the right (when looking in the direction from START_NODE to END_NODE), moving counterclockwise around the face boundary''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.left_face IS '
       '''Unique identifier of the face on the left side of the edge when looking in the direction from START_NODE to END_NODE''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.right_face IS '
       '''Unique identifier of the face on the right side of the edge when looking in the direction from START_NODE to END_NODE''';
  EXECUTE 'COMMENT ON COLUMN ' || quote_ident(atopology)
    || '.edge.geom IS '
       '''The geometry of the edge''';
  -- edge standard view (insert rule)
  EXECUTE 'CREATE RULE edge_insert_rule AS ON INSERT '
             'TO ' || quote_ident(atopology)
    || '.edge DO INSTEAD '
                   ' INSERT into ' || quote_ident(atopology)
    || '.edge_data '
                   ' VALUES (NEW.edge_id, NEW.start_node, NEW.end_node, '
       ' NEW.next_left_edge, abs(NEW.next_left_edge), '
       ' NEW.next_right_edge, abs(NEW.next_right_edge), '
       ' NEW.left_face, NEW.right_face, NEW.geom);';
  --------------} END OF edge CREATION
  --------------{ layer sequence 
  EXECUTE 'CREATE SEQUENCE '
    || quote_ident(atopology) || '.layer_id_seq;';
  --------------} layer sequence
  --------------{ relation CREATION
  --
  EXECUTE 
  'CREATE TABLE ' || quote_ident(atopology) || '.relation ('
     ' topogeo_id integer NOT NULL, '
     ' layer_id integer NOT NULL, '
     ' element_id integer NOT NULL, '
     ' element_type integer NOT NULL, '
     ' UNIQUE(layer_id,topogeo_id,element_id,element_type));';
  EXECUTE 
  'CREATE TRIGGER relation_integrity_checks '
     'BEFORE UPDATE OR INSERT ON '
  || quote_ident(atopology) || '.relation FOR EACH ROW '
     ' EXECUTE PROCEDURE topology.RelationTrigger('
  ||topology_id||','||quote_literal(atopology)||')';
  --------------} END OF relation CREATION
  
  ------- Default (world) face
  EXECUTE 'INSERT INTO ' || quote_ident(atopology) || '.face(face_id) VALUES(0);';
  ------- GiST index on face
  EXECUTE 'CREATE INDEX face_gist ON '
    || quote_ident(atopology)
    || '.face using gist (mbr);';
  ------- GiST index on node
  EXECUTE 'CREATE INDEX node_gist ON '
    || quote_ident(atopology)
    || '.node using gist (geom);';
  ------- GiST index on edge
  EXECUTE 'CREATE INDEX edge_gist ON '
    || quote_ident(atopology)
    || '.edge_data using gist (geom);';
  ------- Indexes on left_face and right_face of edge_data
  ------- NOTE: these indexes speed up GetFaceGeometry (and thus
  -------       TopoGeometry::Geometry) by a factor of 10 !
  -------       See http://trac.osgeo.org/postgis/ticket/806
  EXECUTE 'CREATE INDEX edge_left_face_idx ON '
    || quote_ident(atopology)
    || '.edge_data (left_face);';
  EXECUTE 'CREATE INDEX edge_right_face_idx ON '
    || quote_ident(atopology)
    || '.edge_data (right_face);';
  ------- Indexes on start_node and end_node of edge_data
  ------- NOTE: this indexes speed up node deletion
  -------       by a factor of 1000 !
  -------       See http://trac.osgeo.org/postgis/ticket/2082
  EXECUTE 'CREATE INDEX edge_start_node_idx ON '
    || quote_ident(atopology)
    || '.edge_data (start_node);';
  EXECUTE 'CREATE INDEX edge_end_node_idx ON '
    || quote_ident(atopology)
    || '.edge_data (end_node);';
  -- TODO: consider also adding an index on node.containing_face 
  ------- Add record to the "topology" metadata table
  EXECUTE 'INSERT INTO topology.topology '
    || '(id, name, srid, precision, hasZ) VALUES ('
    || quote_literal(topology_id) || ','
    || quote_literal(atopology) || ','
    || quote_literal(srid) || ',' || quote_literal(prec)
    || ',' || hasZ
    || ')';
  RETURN topology_id;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="srid" jt="4" type="int4" />
			<input_param name="prec" jt="8" type="float8" />
			<input_param name="hasz" jt="-7" type="bool" />
		</function>
		<function name="createtopology" id="Function_1720" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.createtopology(toponame character varying, srid integer, prec double precision)
 RETURNS integer
 LANGUAGE sql
 STRICT
AS $function$ SELECT topology.CreateTopology($1, $2, $3, false);$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="srid" jt="4" type="int4" />
			<input_param name="prec" jt="8" type="float8" />
		</function>
		<function name="createtopology" id="Function_116c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.createtopology(character varying, integer)
 RETURNS integer
 LANGUAGE sql
 STRICT
AS $function$ SELECT topology.CreateTopology($1, $2, 0); $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="varchar" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="createtopology" id="Function_85d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.createtopology(character varying)
 RETURNS integer
 LANGUAGE sql
 STRICT
AS $function$ SELECT topology.CreateTopology($1, ST_SRID('POINT EMPTY'::geometry), 0); $function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="varchar" />
		</function>
		<function name="droptopogeometrycolumn" id="Function_1625" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.droptopogeometrycolumn(schema character varying, tbl character varying, col character varying)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
  rec RECORD;
  lyrinfo RECORD;
  ok BOOL;
  result text;
BEGIN
        -- Get layer and topology info
  ok = false;
  FOR rec IN EXECUTE 'SELECT t.name as toponame, l.* FROM '
       'topology.topology t, topology.layer l '
       ' WHERE l.topology_id = t.id'
       ' AND l.schema_name = ' || quote_literal(schema)
    || ' AND l.table_name = ' || quote_literal(tbl)
    || ' AND l.feature_column = ' || quote_literal(col)
  LOOP
    ok = true;
    lyrinfo = rec;
  END LOOP;
  -- Layer not found
  IF NOT ok THEN
    RAISE EXCEPTION 'No layer registered on %.%.%',
      schema,tbl,col;
  END IF;
    
  -- Clean up the topology schema
  BEGIN
    -- Cleanup the relation table
    EXECUTE 'DELETE FROM ' || quote_ident(lyrinfo.toponame)
      || '.relation '
         ' WHERE '
         'layer_id = ' || lyrinfo.layer_id;
    -- Drop the sequence for topogeoms in this layer
    EXECUTE 'DROP SEQUENCE ' || quote_ident(lyrinfo.toponame)
      || '.topogeo_s_' || lyrinfo.layer_id;
  EXCEPTION
    WHEN UNDEFINED_TABLE THEN
      RAISE NOTICE '%', SQLERRM;
    WHEN OTHERS THEN
      RAISE EXCEPTION 'Got % (%)', SQLERRM, SQLSTATE;
  END;
  ok = false;
  FOR rec IN SELECT * FROM pg_namespace n, pg_class c, pg_attribute a
    WHERE text(n.nspname) = schema
    AND c.relnamespace = n.oid
    AND text(c.relname) = tbl
    AND a.attrelid = c.oid
    AND text(a.attname) = col
  LOOP
    ok = true;
    EXIT;
  END LOOP;

  IF ok THEN
    -- Set feature column to NULL to bypass referential integrity
    -- checks
    EXECUTE 'UPDATE ' || quote_ident(schema) || '.'
      || quote_ident(tbl)
      || ' SET ' || quote_ident(col)
      || ' = NULL';
  END IF;
  -- Delete the layer record
  EXECUTE 'DELETE FROM topology.layer '
       ' WHERE topology_id = ' || lyrinfo.topology_id
    || ' AND layer_id = ' || lyrinfo.layer_id;
  IF ok THEN
    -- Drop the layer column
    EXECUTE 'ALTER TABLE ' || quote_ident(schema) || '.'
      || quote_ident(tbl)
      || ' DROP ' || quote_ident(col)
      || ' cascade';
  END IF;
  result = 'Layer ' || lyrinfo.layer_id || ' ('
    || schema || '.' || tbl || '.' || col
    || ') dropped';
  RETURN result;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="schema" jt="12" type="varchar" />
			<input_param name="tbl" jt="12" type="varchar" />
			<input_param name="col" jt="12" type="varchar" />
		</function>
		<function name="droptopology" id="Function_13a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.droptopology(atopology character varying)
 RETURNS text
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  topoid integer;
  rec RECORD;
BEGIN
  -- Get topology id
  SELECT id INTO topoid
    FROM topology.topology WHERE name = atopology;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'Topology % does not exist', quote_literal(atopology);
  END IF;
  RAISE NOTICE 'Dropping all layers from topology % (%)',
    quote_literal(atopology), topoid;
  -- Drop all layers in the topology
  FOR rec IN EXECUTE 'SELECT * FROM topology.layer WHERE '
    || ' topology_id = ' || topoid
  LOOP
    EXECUTE 'SELECT topology.DropTopoGeometryColumn('
      || quote_literal(rec.schema_name)
      || ','
      || quote_literal(rec.table_name)
      || ','
      || quote_literal(rec.feature_column)
      || ')';
  END LOOP;
  -- Delete record from topology.topology
  EXECUTE 'DELETE FROM topology.topology WHERE id = '
    || topoid;
  -- Drop the schema (if it exists)
  FOR rec IN SELECT * FROM pg_namespace WHERE text(nspname) = atopology
  LOOP
    EXECUTE 'DROP SCHEMA '||quote_ident(atopology)||' CASCADE';
  END LOOP;
  RETURN 'Topology ' || quote_literal(atopology) || ' dropped';
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
		</function>
		<function name="equals" id="Function_2329" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.equals(tg1 topogeometry, tg2 topogeometry)
 RETURNS boolean
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  rec RECORD;
  toponame varchar;
  query text;
BEGIN
  IF tg1.topology_id != tg2.topology_id THEN
    -- TODO: revert to ::geometry instead ?
    RAISE EXCEPTION 'Cannot compare TopoGeometries from different topologies';
  END IF;
  -- Not the same type, not equal
  IF tg1.type != tg2.type THEN
    RETURN FALSE;
  END IF;
  -- Geometry collection are not currently supported
  IF tg2.type = 4 THEN
    RAISE EXCEPTION 'GeometryCollection are not supported by equals()';
  END IF;
        -- Get topology name
        SELECT name FROM topology.topology into toponame
                WHERE id = tg1.topology_id;
  -- Two geometries are equal if they are composed by
  -- the same TopoElements
  FOR rec IN EXECUTE 'SELECT * FROM '
    || ' topology.GetTopoGeomElements('
    || quote_literal(toponame) || ', '
    || tg1.layer_id || ',' || tg1.id || ') '
    || ' EXCEPT SELECT * FROM '
    || ' topology.GetTopogeomElements('
    || quote_literal(toponame) || ', '
    || tg2.layer_id || ',' || tg2.id || ');'
  LOOP
    RETURN FALSE;
  END LOOP;
  FOR rec IN EXECUTE 'SELECT * FROM '
    || ' topology.GetTopoGeomElements('
    || quote_literal(toponame) || ', '
    || tg2.layer_id || ',' || tg2.id || ')'
    || ' EXCEPT SELECT * FROM '
    || ' topology.GetTopogeomElements('
    || quote_literal(toponame) || ', '
    || tg1.layer_id || ',' || tg1.id || '); '
  LOOP
    RETURN FALSE;
  END LOOP;
  RETURN TRUE;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="tg1" jt="2002" type="topogeometry" />
			<input_param name="tg2" jt="2002" type="topogeometry" />
		</function>
		<function name="geometry" id="Function_975" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.geometry(topogeom topogeometry)
 RETURNS geometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  toponame varchar;
  geom geometry;
  rec RECORD;
  plyr RECORD;
  clyr RECORD;
  sql TEXT;
BEGIN
  -- Get topology name
  SELECT name FROM topology.topology
  WHERE id = topogeom.topology_id
  INTO toponame;
  IF toponame IS NULL THEN
    RAISE EXCEPTION 'Invalid TopoGeometry (unexistent topology id %)', topogeom.topology_id;
  END IF;
  -- Get layer info
  SELECT * FROM topology.layer
    WHERE topology_id = topogeom.topology_id
    AND layer_id = topogeom.layer_id
    INTO plyr;
  IF plyr IS NULL THEN
    RAISE EXCEPTION 'Could not find TopoGeometry layer % in topology %', topogeom.layer_id, topogeom.topology_id;
  END IF;
  --
  -- If this feature layer is on any level > 0 we will
  -- compute the topological union of all child features
  -- in fact recursing.
  --
  IF plyr.level > 0 THEN -- {
    -- Get child layer info
    SELECT * FROM topology.layer WHERE layer_id = plyr.child_id
      AND topology_id = topogeom.topology_id
      INTO clyr;
    IF clyr IS NULL THEN
      RAISE EXCEPTION 'Invalid layer % in topology % (unexistent child layer %)', topogeom.layer_id, topogeom.topology_id, plyr.child_id;
    END IF;
    sql := 'SELECT st_multi(st_union(topology.Geometry('
      || quote_ident(clyr.feature_column)
      || '))) as geom FROM '
      || quote_ident(clyr.schema_name) || '.'
      || quote_ident(clyr.table_name)
      || ', ' || quote_ident(toponame) || '.relation pr'
         ' WHERE '
         ' pr.topogeo_id = ' || topogeom.id
      || ' AND '
         ' pr.layer_id = ' || topogeom.layer_id
      || ' AND '
         ' id('||quote_ident(clyr.feature_column)
      || ') = pr.element_id '
         ' AND '
         'layer_id('||quote_ident(clyr.feature_column)
      || ') = pr.element_type ';
    --RAISE DEBUG '%', query;
    EXECUTE sql INTO geom;
      
  ELSIF topogeom.type = 3 THEN -- [multi]polygon -- }{
    sql := 'SELECT st_multi(st_union('
         'topology.ST_GetFaceGeometry('
      || quote_literal(toponame) || ','
      || 'element_id))) as g FROM ' 
      || quote_ident(toponame)
      || '.relation WHERE topogeo_id = '
      || topogeom.id || ' AND layer_id = '
      || topogeom.layer_id || ' AND element_type = 3 ';
    EXECUTE sql INTO geom;
  ELSIF topogeom.type = 2 THEN -- [multi]line -- }{
    sql := 
      'SELECT st_multi(ST_LineMerge(ST_Collect(e.geom))) as g FROM '
      || quote_ident(toponame) || '.edge e, '
      || quote_ident(toponame) || '.relation r '
         ' WHERE r.topogeo_id = ' || topogeom.id
      || ' AND r.layer_id = ' || topogeom.layer_id
      || ' AND r.element_type = 2 '
         ' AND abs(r.element_id) = e.edge_id';
    EXECUTE sql INTO geom;
  
  ELSIF topogeom.type = 1 THEN -- [multi]point -- }{
    sql :=
      'SELECT st_multi(st_union(n.geom)) as g FROM '
      || quote_ident(toponame) || '.node n, '
      || quote_ident(toponame) || '.relation r '
         ' WHERE r.topogeo_id = ' || topogeom.id
      || ' AND r.layer_id = ' || topogeom.layer_id
      || ' AND r.element_type = 1 '
         ' AND r.element_id = n.node_id';
    EXECUTE sql INTO geom;
  ELSIF topogeom.type = 4 THEN -- mixed collection -- }{
    sql := 'WITH areas AS ( SELECT ST_Union('
         'topology.ST_GetFaceGeometry('
      || quote_literal(toponame) || ','
      || 'element_id)) as g FROM ' 
      || quote_ident(toponame)
      || '.relation WHERE topogeo_id = '
      || topogeom.id || ' AND layer_id = '
      || topogeom.layer_id || ' AND element_type = 3), '
         'lines AS ( SELECT ST_LineMerge(ST_Collect(e.geom)) as g FROM '
      || quote_ident(toponame) || '.edge e, '
      || quote_ident(toponame) || '.relation r '
         ' WHERE r.topogeo_id = ' || topogeom.id
      || ' AND r.layer_id = ' || topogeom.layer_id
      || ' AND r.element_type = 2 '
         ' AND abs(r.element_id) = e.edge_id ), '
         ' points as ( SELECT st_union(n.geom) as g FROM '
      || quote_ident(toponame) || '.node n, '
      || quote_ident(toponame) || '.relation r '
         ' WHERE r.topogeo_id = ' || topogeom.id
      || ' AND r.layer_id = ' || topogeom.layer_id
      || ' AND r.element_type = 1 '
         ' AND r.element_id = n.node_id ), '
         ' un as ( SELECT g FROM areas UNION ALL SELECT g FROM lines '
         '          UNION ALL SELECT g FROM points ) '
         'SELECT ST_Multi(ST_Collect(g)) FROM un';
    EXECUTE sql INTO geom;
  ELSE -- }{
    RAISE EXCEPTION 'Invalid TopoGeometries (unknown type %)', topogeom.type;
  END IF; -- }
  IF geom IS NULL THEN
    IF topogeom.type = 3 THEN -- [multi]polygon
      geom := 'MULTIPOLYGON EMPTY';
    ELSIF topogeom.type = 2 THEN -- [multi]line
      geom := 'MULTILINESTRING EMPTY';
    ELSIF topogeom.type = 1 THEN -- [multi]point
      geom := 'MULTIPOINT EMPTY';
    ELSE
      geom := 'GEOMETRYCOLLECTION EMPTY';
    END IF;
  END IF;
  RETURN geom;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="geometry" />
			<input_param name="topogeom" jt="2002" type="topogeometry" />
		</function>
		<function name="geometrytype" id="Function_1e1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.geometrytype(tg topogeometry)
 RETURNS text
 LANGUAGE sql
 STABLE STRICT
AS $function$
	SELECT CASE
		WHEN type($1) = 1 THEN 'MULTIPOINT'
		WHEN type($1) = 2 THEN 'MULTILINESTRING'
		WHEN type($1) = 3 THEN 'MULTIPOLYGON'
		WHEN type($1) = 4 THEN 'GEOMETRYCOLLECTION'
		ELSE 'UNEXPECTED'
		END;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
		</function>
		<function name="getedgebypoint" id="Function_14eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.getedgebypoint(atopology character varying, apoint geometry, tol1 double precision)
 RETURNS integer
 LANGUAGE c
 STABLE STRICT
AS '$libdir/postgis_topology-2.4', $function$GetEdgeByPoint$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoint" jt="1111" type="geometry" />
			<input_param name="tol1" jt="8" type="float8" />
		</function>
		<function name="getfacebypoint" id="Function_2aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.getfacebypoint(atopology character varying, apoint geometry, tol1 double precision)
 RETURNS integer
 LANGUAGE c
 STABLE STRICT
AS '$libdir/postgis_topology-2.4', $function$GetFaceByPoint$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoint" jt="1111" type="geometry" />
			<input_param name="tol1" jt="8" type="float8" />
		</function>
		<function name="getnodebypoint" id="Function_66e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.getnodebypoint(atopology character varying, apoint geometry, tol1 double precision)
 RETURNS integer
 LANGUAGE c
 STABLE STRICT
AS '$libdir/postgis_topology-2.4', $function$GetNodeByPoint$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoint" jt="1111" type="geometry" />
			<input_param name="tol1" jt="8" type="float8" />
		</function>
		<function name="getnodeedges" id="Function_251b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.getnodeedges(atopology character varying, anode integer)
 RETURNS SETOF getfaceedges_returntype
 LANGUAGE plpgsql
 STABLE
AS $function$
DECLARE
  curedge int;
  nextedge int;
  rec RECORD;
  retrec topology.GetFaceEdges_ReturnType;
  n int;
  sql text;
BEGIN
  n := 0;
  sql :=
    'WITH incident_edges AS ( SELECT edge_id, start_node, end_node, ST_RemoveRepeatedPoints(geom) as geom FROM '
    || quote_ident(atopology)
    || '.edge_data WHERE start_node = ' || anode
    || ' or end_node = ' || anode
    || ') SELECT edge_id, ST_Azimuth(ST_StartPoint(geom), ST_PointN(geom, 2)) as az FROM  incident_edges WHERE start_node = ' || anode
    || ' UNION ALL SELECT -edge_id, ST_Azimuth(ST_EndPoint(geom), ST_PointN(geom, ST_NumPoints(geom)-1)) FROM incident_edges WHERE end_node = ' || anode
    || ' ORDER BY az';
  FOR rec IN EXECUTE sql
  LOOP -- incident edges {
    n := n + 1;
    retrec.sequence := n;
    retrec.edge := rec.edge_id;
    RETURN NEXT retrec;
  END LOOP; -- incident edges }
END
$function$
;]]></string>
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anode" jt="4" type="int4" />
			<result_param name="sequence" jt="4" type="int4" />
			<result_param name="edge" jt="4" type="int4" />
		</function>
		<function name="getringedges" id="Function_93e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.getringedges(atopology character varying, anedge integer, maxedges integer DEFAULT NULL::integer)
 RETURNS SETOF getfaceedges_returntype
 LANGUAGE plpgsql
 STABLE
AS $function$
DECLARE
  rec RECORD;
  retrec topology.GetFaceEdges_ReturnType;
  n int;
  sql text;
BEGIN
  sql := 'WITH RECURSIVE edgering AS ( SELECT '
    || anedge
    || ' as signed_edge_id, edge_id, next_left_edge, next_right_edge FROM '
    || quote_ident(atopology)
    || '.edge_data WHERE edge_id = '
    || abs(anedge)
    || ' UNION '
    || ' SELECT CASE WHEN p.signed_edge_id < 0 THEN p.next_right_edge '
    || ' ELSE p.next_left_edge END, e.edge_id, e.next_left_edge, e.next_right_edge '
    || ' FROM ' || quote_ident(atopology)
    || '.edge_data e, edgering p WHERE e.edge_id = CASE WHEN p.signed_edge_id < 0 '
    || 'THEN abs(p.next_right_edge) ELSE abs(p.next_left_edge) END ) SELECT * FROM edgering';
  n := 1;
  FOR rec IN EXECUTE sql
  LOOP
    retrec.sequence := n;
    retrec.edge := rec.signed_edge_id;
    RETURN NEXT retrec;
    n := n + 1;
    IF n > maxedges THEN
      RAISE EXCEPTION 'Max traversing limit hit: %', maxedges;
    END IF;
  END LOOP;
END
$function$
;]]></string>
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anedge" jt="4" type="int4" />
			<input_param name="maxedges" jt="4" type="int4" />
			<result_param name="sequence" jt="4" type="int4" />
			<result_param name="edge" jt="4" type="int4" />
		</function>
		<function name="gettopogeomelementarray" id="Function_138d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.gettopogeomelementarray(toponame character varying, layer_id integer, tgid integer)
 RETURNS topoelementarray
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  rec RECORD;
  tg_objs varchar := '{';
  i integer;
  query text;
BEGIN
  query = 'SELECT * FROM topology.GetTopoGeomElements('
    || quote_literal(toponame) || ','
    || quote_literal(layer_id) || ','
    || quote_literal(tgid)
    || ') as obj ORDER BY obj';

  -- TODO: why not using array_agg here ?
  i = 1;
  FOR rec IN EXECUTE query
  LOOP
    IF i > 1 THEN
      tg_objs = tg_objs || ',';
    END IF;
    tg_objs = tg_objs || '{'
      || rec.obj[1] || ',' || rec.obj[2]
      || '}';
    i = i+1;
  END LOOP;
  tg_objs = tg_objs || '}';
  RETURN tg_objs;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2001" type="topoelementarray" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="layer_id" jt="4" type="int4" />
			<input_param name="tgid" jt="4" type="int4" />
		</function>
		<function name="gettopogeomelementarray" id="Function_23f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.gettopogeomelementarray(tg topogeometry)
 RETURNS topoelementarray
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  toponame varchar;
BEGIN
  toponame = topology.GetTopologyName(tg.topology_id);
  RETURN topology.GetTopoGeomElementArray(toponame, tg.layer_id, tg.id);
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2001" type="topoelementarray" />
			<input_param name="tg" jt="2002" type="topogeometry" />
		</function>
		<function name="gettopogeomelements" id="Function_246c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.gettopogeomelements(toponame character varying, layerid integer, tgid integer)
 RETURNS SETOF topoelement
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  ret topology.TopoElement;
  rec RECORD;
  rec2 RECORD;
  query text;
  query2 text;
  lyr RECORD;
  ok bool;
  topoid INTEGER;
BEGIN
  -- Get topology id
  SELECT id INTO topoid
    FROM topology.topology WHERE name = toponame;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'Topology % does not exist', quote_literal(toponame);
  END IF;
  -- Get layer info
  ok = false;
  FOR rec IN EXECUTE 'SELECT * FROM topology.layer '
       ' WHERE layer_id = $1 AND topology_id = $2'
       USING layerid, topoid
  LOOP
    lyr = rec;
    ok = true;
  END LOOP;
  IF NOT ok THEN
    RAISE EXCEPTION 'Layer % does not exist', layerid;
  END IF;

  query = 'SELECT abs(element_id) as element_id, element_type FROM '
    || quote_ident(toponame) || '.relation WHERE '
       ' layer_id = ' || layerid
    || ' AND topogeo_id = ' || quote_literal(tgid)
    || ' ORDER BY element_type, element_id';
  --RAISE NOTICE 'Query: %', query;
  FOR rec IN EXECUTE query
  LOOP
    IF lyr.level > 0 THEN
      query2 = 'SELECT * from topology.GetTopoGeomElements('
        || quote_literal(toponame) || ','
        || rec.element_type
        || ','
        || rec.element_id
        || ') as ret;';
      --RAISE NOTICE 'Query2: %', query2;
      FOR rec2 IN EXECUTE query2
      LOOP
        RETURN NEXT rec2.ret;
      END LOOP;
    ELSE
      ret = '{' || rec.element_id || ',' || rec.element_type || '}';
      RETURN NEXT ret;
    END IF;
  
  END LOOP;
  RETURN;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2001" type="topoelement" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="layerid" jt="4" type="int4" />
			<input_param name="tgid" jt="4" type="int4" />
		</function>
		<function name="gettopogeomelements" id="Function_bac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.gettopogeomelements(tg topogeometry)
 RETURNS SETOF topoelement
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  toponame varchar;
  rec RECORD;
BEGIN
  toponame = topology.GetTopologyName(tg.topology_id);
  FOR rec IN SELECT * FROM topology.GetTopoGeomElements(toponame,
    tg.layer_id,tg.id) as ret
  LOOP
    RETURN NEXT rec.ret;
  END LOOP;
  RETURN;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2001" type="topoelement" />
			<input_param name="tg" jt="2002" type="topogeometry" />
		</function>
		<function name="gettopologyid" id="Function_b1c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.gettopologyid(toponame character varying)
 RETURNS integer
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  ret integer;
BEGIN
  SELECT id INTO ret
    FROM topology.topology WHERE name = toponame;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'Topology % does not exist', quote_literal(toponame);
  END IF;
  RETURN ret;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
		</function>
		<function name="gettopologyname" id="Function_21cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.gettopologyname(topoid integer)
 RETURNS character varying
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  ret varchar;
BEGIN
        SELECT name FROM topology.topology into ret
                WHERE id = topoid;
  RETURN ret;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="topoid" jt="4" type="int4" />
		</function>
		<function name="gettopologysrid" id="Function_2242" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.gettopologysrid(toponame character varying)
 RETURNS integer
 LANGUAGE sql
 STABLE STRICT
AS $function$
  SELECT SRID FROM topology.topology WHERE name = $1;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
		</function>
		<function name="intersects" id="Function_19ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.intersects(tg1 topogeometry, tg2 topogeometry)
 RETURNS boolean
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  tgbuf topology.TopoGeometry;
  rec RECORD;
  toponame varchar;
  query text;
BEGIN
  IF tg1.topology_id != tg2.topology_id THEN
    -- TODO: revert to ::geometry instead ?
    RAISE EXCEPTION 'Cannot compute intersection between TopoGeometries from different topologies';
  END IF;
  -- Order TopoGeometries so that tg1 has less-or-same
  -- dimensionality of tg1 (point,line,polygon,collection)
  IF tg1.type > tg2.type THEN
    tgbuf := tg2;
    tg2 := tg1;
    tg1 := tgbuf;
  END IF;
  --RAISE NOTICE 'tg1.id:% tg2.id:%', tg1.id, tg2.id;
  -- Geometry collection are not currently supported
  IF tg2.type = 4 THEN
    RAISE EXCEPTION 'GeometryCollection are not supported by intersects()';
  END IF;
        -- Get topology name
        SELECT name FROM topology.topology into toponame
                WHERE id = tg1.topology_id;
  -- Hierarchical TopoGeometries are not currently supported
  query = 'SELECT level FROM topology.layer'
    || ' WHERE '
    || ' topology_id = ' || tg1.topology_id
    || ' AND '
    || '( layer_id = ' || tg1.layer_id
    || ' OR layer_id = ' || tg2.layer_id
    || ' ) '
    || ' AND level > 0 ';
  --RAISE NOTICE '%', query;
  FOR rec IN EXECUTE query
  LOOP
    -- TODO: revert to ::geometry instead ?
    RAISE EXCEPTION 'Hierarchical TopoGeometries are not currently supported by intersects()';
  END LOOP;
  IF tg1.type = 1 THEN -- [multi]point

    IF tg2.type = 1 THEN -- point/point
  ---------------------------------------------------------
  --
  --  Two [multi]point features intersect if they share
  --  any Node
  --
  --
  --
      query =
        'SELECT a.topogeo_id FROM '
        || quote_ident(toponame) ||
        '.relation a, '
        || quote_ident(toponame) ||
        '.relation b '
        || 'WHERE a.layer_id = ' || tg1.layer_id
        || ' AND b.layer_id = ' || tg2.layer_id
        || ' AND a.topogeo_id = ' || tg1.id
        || ' AND b.topogeo_id = ' || tg2.id
        || ' AND a.element_id = b.element_id '
        || ' LIMIT 1';
      --RAISE NOTICE '%', query;
      FOR rec IN EXECUTE query
      LOOP
        RETURN TRUE; -- they share an element
      END LOOP;
      RETURN FALSE; -- no elements shared
  --
  ---------------------------------------------------------

    ELSIF tg2.type = 2 THEN -- point/line
  ---------------------------------------------------------
  --
  --  A [multi]point intersects a [multi]line if they share
  --  any Node.
  --
  --
  --
      query =
        'SELECT a.topogeo_id FROM '
        || quote_ident(toponame) ||
        '.relation a, '
        || quote_ident(toponame) ||
        '.relation b, '
        || quote_ident(toponame) ||
        '.edge_data e '
        || 'WHERE a.layer_id = ' || tg1.layer_id
        || ' AND b.layer_id = ' || tg2.layer_id
        || ' AND a.topogeo_id = ' || tg1.id
        || ' AND b.topogeo_id = ' || tg2.id
        || ' AND abs(b.element_id) = e.edge_id '
        || ' AND ( '
          || ' e.start_node = a.element_id '
          || ' OR '
          || ' e.end_node = a.element_id '
        || ' )'
        || ' LIMIT 1';
      --RAISE NOTICE '%', query;
      FOR rec IN EXECUTE query
      LOOP
        RETURN TRUE; -- they share an element
      END LOOP;
      RETURN FALSE; -- no elements shared
  --
  ---------------------------------------------------------
    ELSIF tg2.type = 3 THEN -- point/polygon
  ---------------------------------------------------------
  --
  --  A [multi]point intersects a [multi]polygon if any
  --  Node of the point is contained in any face of the
  --  polygon OR ( is end_node or start_node of any edge
  --  of any polygon face ).
  --
  --  We assume the Node-in-Face check is faster becasue
  --  there will be less Faces then Edges in any polygon.
  --
  --
  --
  --
      -- Check if any node is contained in a face
      query =
        'SELECT n.node_id as id FROM '
        || quote_ident(toponame) ||
        '.relation r1, '
        || quote_ident(toponame) ||
        '.relation r2, '
        || quote_ident(toponame) ||
        '.node n '
        || 'WHERE r1.layer_id = ' || tg1.layer_id
        || ' AND r2.layer_id = ' || tg2.layer_id
        || ' AND r1.topogeo_id = ' || tg1.id
        || ' AND r2.topogeo_id = ' || tg2.id
        || ' AND n.node_id = r1.element_id '
        || ' AND r2.element_id = n.containing_face '
        || ' LIMIT 1';
      --RAISE NOTICE '%', query;
      FOR rec IN EXECUTE query
      LOOP
        --RAISE NOTICE 'Node % in polygon face', rec.id;
        RETURN TRUE; -- one (or more) nodes are
                     -- contained in a polygon face
      END LOOP;
      -- Check if any node is start or end of any polygon
      -- face edge
      query =
        'SELECT n.node_id as nid, e.edge_id as eid '
        || ' FROM '
        || quote_ident(toponame) ||
        '.relation r1, '
        || quote_ident(toponame) ||
        '.relation r2, '
        || quote_ident(toponame) ||
        '.edge_data e, '
        || quote_ident(toponame) ||
        '.node n '
        || 'WHERE r1.layer_id = ' || tg1.layer_id
        || ' AND r2.layer_id = ' || tg2.layer_id
        || ' AND r1.topogeo_id = ' || tg1.id
        || ' AND r2.topogeo_id = ' || tg2.id
        || ' AND n.node_id = r1.element_id '
        || ' AND ( '
        || ' e.left_face = r2.element_id '
        || ' OR '
        || ' e.right_face = r2.element_id '
        || ' ) '
        || ' AND ( '
        || ' e.start_node = r1.element_id '
        || ' OR '
        || ' e.end_node = r1.element_id '
        || ' ) '
        || ' LIMIT 1';
      --RAISE NOTICE '%', query;
      FOR rec IN EXECUTE query
      LOOP
        --RAISE NOTICE 'Node % on edge % bound', rec.nid, rec.eid;
        RETURN TRUE; -- one node is start or end
                     -- of a face edge
      END LOOP;
      RETURN FALSE; -- no intersection
  --
  ---------------------------------------------------------
    ELSIF tg2.type = 4 THEN -- point/collection
      RAISE EXCEPTION 'Intersection point/collection not implemented yet';
    ELSE
      RAISE EXCEPTION 'Invalid TopoGeometry type %', tg2.type;
    END IF;
  ELSIF tg1.type = 2 THEN -- [multi]line
    IF tg2.type = 2 THEN -- line/line
  ---------------------------------------------------------
  --
  --  A [multi]line intersects a [multi]line if they share
  --  any Node.
  --
  --
  --
      query =
        'SELECT e1.start_node FROM '
        || quote_ident(toponame) ||
        '.relation r1, '
        || quote_ident(toponame) ||
        '.relation r2, '
        || quote_ident(toponame) ||
        '.edge_data e1, '
        || quote_ident(toponame) ||
        '.edge_data e2 '
        || 'WHERE r1.layer_id = ' || tg1.layer_id
        || ' AND r2.layer_id = ' || tg2.layer_id
        || ' AND r1.topogeo_id = ' || tg1.id
        || ' AND r2.topogeo_id = ' || tg2.id
        || ' AND abs(r1.element_id) = e1.edge_id '
        || ' AND abs(r2.element_id) = e2.edge_id '
        || ' AND ( '
        || ' e1.start_node = e2.start_node '
        || ' OR '
        || ' e1.start_node = e2.end_node '
        || ' OR '
        || ' e1.end_node = e2.start_node '
        || ' OR '
        || ' e1.end_node = e2.end_node '
        || ' )'
        || ' LIMIT 1';
      --RAISE NOTICE '%', query;
      FOR rec IN EXECUTE query
      LOOP
        RETURN TRUE; -- they share an element
      END LOOP;
      RETURN FALSE; -- no elements shared
  --
  ---------------------------------------------------------
    ELSIF tg2.type = 3 THEN -- line/polygon
  ---------------------------------------------------------
  --
  -- A [multi]line intersects a [multi]polygon if they share
  -- any Node (touch-only case), or if any line edge has any
  -- polygon face on the left or right (full-containment case
  -- + edge crossing case).
  --
  --
      -- E1 are line edges, E2 are polygon edges
      -- R1 are line relations.
      -- R2 are polygon relations.
      -- R2.element_id are FACE ids
      query =
        'SELECT e1.edge_id'
        || ' FROM '
        || quote_ident(toponame) ||
        '.relation r1, '
        || quote_ident(toponame) ||
        '.relation r2, '
        || quote_ident(toponame) ||
        '.edge_data e1, '
        || quote_ident(toponame) ||
        '.edge_data e2 '
        || 'WHERE r1.layer_id = ' || tg1.layer_id
        || ' AND r2.layer_id = ' || tg2.layer_id
        || ' AND r1.topogeo_id = ' || tg1.id
        || ' AND r2.topogeo_id = ' || tg2.id
        -- E1 are line edges
        || ' AND e1.edge_id = abs(r1.element_id) '
        -- E2 are face edges
        || ' AND ( e2.left_face = r2.element_id '
        || '   OR e2.right_face = r2.element_id ) '
        || ' AND ( '
        -- Check if E1 have left-or-right face
        -- being part of R2.element_id
        || ' e1.left_face = r2.element_id '
        || ' OR '
        || ' e1.right_face = r2.element_id '
        -- Check if E1 share start-or-end node
        -- with any E2.
        || ' OR '
        || ' e1.start_node = e2.start_node '
        || ' OR '
        || ' e1.start_node = e2.end_node '
        || ' OR '
        || ' e1.end_node = e2.start_node '
        || ' OR '
        || ' e1.end_node = e2.end_node '
        || ' ) '
        || ' LIMIT 1';
      --RAISE NOTICE '%', query;
      FOR rec IN EXECUTE query
      LOOP
        RETURN TRUE; -- either common node
                     -- or edge-in-face
      END LOOP;
      RETURN FALSE; -- no intersection
  --
  ---------------------------------------------------------
    ELSIF tg2.type = 4 THEN -- line/collection
      RAISE EXCEPTION 'Intersection line/collection not implemented yet';
    ELSE
      RAISE EXCEPTION 'Invalid TopoGeometry type %', tg2.type;
    END IF;

  ELSIF tg1.type = 3 THEN -- [multi]polygon
    IF tg2.type = 3 THEN -- polygon/polygon
  ---------------------------------------------------------
  --
  -- A [multi]polygon intersects a [multi]polygon if they share
  -- any Node (touch-only case), or if any face edge has any of the
  -- other polygon face on the left or right (full-containment case
  -- + edge crossing case).
  --
  --
      -- E1 are poly1 edges.
      -- E2 are poly2 edges
      -- R1 are poly1 relations.
      -- R2 are poly2 relations.
      -- R1.element_id are poly1 FACE ids
      -- R2.element_id are poly2 FACE ids
      query =
        'SELECT e1.edge_id'
        || ' FROM '
        || quote_ident(toponame) ||
        '.relation r1, '
        || quote_ident(toponame) ||
        '.relation r2, '
        || quote_ident(toponame) ||
        '.edge_data e1, '
        || quote_ident(toponame) ||
        '.edge_data e2 '
        || 'WHERE r1.layer_id = ' || tg1.layer_id
        || ' AND r2.layer_id = ' || tg2.layer_id
        || ' AND r1.topogeo_id = ' || tg1.id
        || ' AND r2.topogeo_id = ' || tg2.id
        -- E1 are poly1 edges
        || ' AND ( e1.left_face = r1.element_id '
        || '   OR e1.right_face = r1.element_id ) '
        -- E2 are poly2 edges
        || ' AND ( e2.left_face = r2.element_id '
        || '   OR e2.right_face = r2.element_id ) '
        || ' AND ( '
        -- Check if any edge from a polygon face
        -- has any of the other polygon face
        -- on the left or right
        || ' e1.left_face = r2.element_id '
        || ' OR '
        || ' e1.right_face = r2.element_id '
        || ' OR '
        || ' e2.left_face = r1.element_id '
        || ' OR '
        || ' e2.right_face = r1.element_id '
        -- Check if E1 share start-or-end node
        -- with any E2.
        || ' OR '
        || ' e1.start_node = e2.start_node '
        || ' OR '
        || ' e1.start_node = e2.end_node '
        || ' OR '
        || ' e1.end_node = e2.start_node '
        || ' OR '
        || ' e1.end_node = e2.end_node '
        || ' ) '
        || ' LIMIT 1';
      --RAISE NOTICE '%', query;
      FOR rec IN EXECUTE query
      LOOP
        RETURN TRUE; -- either common node
                     -- or edge-in-face
      END LOOP;
      RETURN FALSE; -- no intersection
  --
  ---------------------------------------------------------
    ELSIF tg2.type = 4 THEN -- polygon/collection
      RAISE EXCEPTION 'Intersection poly/collection not implemented yet';
    ELSE
      RAISE EXCEPTION 'Invalid TopoGeometry type %', tg2.type;
    END IF;
  ELSIF tg1.type = 4 THEN -- collection
    IF tg2.type = 4 THEN -- collection/collection
      RAISE EXCEPTION 'Intersection collection/collection not implemented yet';
    ELSE
      RAISE EXCEPTION 'Invalid TopoGeometry type %', tg2.type;
    END IF;
  ELSE
    RAISE EXCEPTION 'Invalid TopoGeometry type %', tg1.type;
  END IF;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="tg1" jt="2002" type="topogeometry" />
			<input_param name="tg2" jt="2002" type="topogeometry" />
		</function>
		<function name="layertrigger" id="Function_18aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.layertrigger()
 RETURNS trigger
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  rec RECORD;
  ok BOOL;
  toponame varchar;
  query TEXT;
BEGIN
  --RAISE NOTICE 'LayerTrigger called % % at % level', TG_WHEN, TG_OP, TG_LEVEL;

  IF TG_OP = 'INSERT' THEN
    RAISE EXCEPTION 'LayerTrigger not meant to be called on INSERT';
  ELSIF TG_OP = 'UPDATE' THEN
    RAISE EXCEPTION 'The topology.layer table cannot be updated';
  END IF;

  -- Check for existance of any feature column referencing
  -- this layer
  FOR rec IN SELECT * FROM pg_namespace n, pg_class c, pg_attribute a
    WHERE text(n.nspname) = OLD.schema_name
    AND c.relnamespace = n.oid
    AND text(c.relname) = OLD.table_name
    AND a.attrelid = c.oid
    AND text(a.attname) = OLD.feature_column
  LOOP
    query = 'SELECT * '
         ' FROM ' || quote_ident(OLD.schema_name)
      || '.' || quote_ident(OLD.table_name)
      || ' WHERE layer_id('
      || quote_ident(OLD.feature_column)||') '
         '=' || OLD.layer_id
      || ' LIMIT 1';
    --RAISE NOTICE '%', query;
    FOR rec IN EXECUTE query
    LOOP
      RAISE NOTICE 'A feature referencing layer % of topology % still exists in %.%.%', OLD.layer_id, OLD.topology_id, OLD.schema_name, OLD.table_name, OLD.feature_column;
      RETURN NULL;
    END LOOP;
  END LOOP;

  -- Get topology name
  SELECT name FROM topology.topology INTO toponame
    WHERE id = OLD.topology_id;
  IF toponame IS NULL THEN
    RAISE NOTICE 'Could not find name of topology with id %',
      OLD.layer_id;
  END IF;
  -- Check if any record in the relation table references this layer
  FOR rec IN SELECT c.oid FROM pg_namespace n, pg_class c
    WHERE text(n.nspname) = toponame AND c.relnamespace = n.oid
          AND c.relname = 'relation'
  LOOP
    query = 'SELECT * '
         ' FROM ' || quote_ident(toponame)
      || '.relation '
         ' WHERE layer_id = '|| OLD.layer_id
      || ' LIMIT 1';
    --RAISE NOTICE '%', query;
    FOR rec IN EXECUTE query
    LOOP
      RAISE NOTICE 'A record in %.relation still references layer %', toponame, OLD.layer_id;
      RETURN NULL;
    END LOOP;
  END LOOP;
  RETURN OLD;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="polygonize" id="Function_14c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.polygonize(toponame character varying)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
  sql text;
  rec RECORD;
  faces int;
BEGIN
  sql := 'SELECT (st_dump(st_polygonize(geom))).geom from '
         || quote_ident(toponame) || '.edge_data';
  faces = 0;
  FOR rec in EXECUTE sql LOOP
    BEGIN
      PERFORM topology.AddFace(toponame, rec.geom);
      faces = faces + 1;
    EXCEPTION
      WHEN OTHERS THEN
        RAISE WARNING 'Error registering face % (%)', rec.geom, SQLERRM;
    END;
  END LOOP;
  RETURN faces || ' faces registered';
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="toponame" jt="12" type="varchar" />
		</function>
		<function name="populate_topology_layer" id="Function_153b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.populate_topology_layer()
 RETURNS TABLE(schema_name text, table_name text, feature_column text)
 LANGUAGE sql
AS $function$
  INSERT INTO topology.layer
  WITH checks AS (
  SELECT
    n.nspname sch, r.relname tab,
    replace(c.conname, 'check_topogeom_', '') col,
    --c.consrc src,
    regexp_matches(c.consrc,
      '\.topology_id = (\d+).*\.layer_id = (\d+).*\.type = (\d+)') inf
  FROM pg_constraint c, pg_class r, pg_namespace n
  WHERE c.conname LIKE 'check_topogeom_%'
    AND r.oid = c.conrelid
    AND n.oid = r.relnamespace
  ), newrows AS (
    SELECT inf[1]::int as topology_id,
           inf[2]::int as layer_id,
          sch, tab, col, inf[3]::int as feature_type --, src
    FROM checks c
    WHERE NOT EXISTS (
      SELECT * FROM topology.layer l
      WHERE l.schema_name = c.sch
        AND l.table_name = c.tab
        AND l.feature_column = c.col
    )
  )
  SELECT topology_id, layer_id, sch,
         tab, col, feature_type,
         0, NULL
  FROM newrows RETURNING schema_name,table_name,feature_column;
$function$
;]]></string>
			<input_param name="schema_name" jt="12" type="text" />
			<input_param name="table_name" jt="12" type="text" />
			<input_param name="feature_column" jt="12" type="text" />
		</function>
		<function name="postgis_topology_scripts_installed" id="Function_da0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.postgis_topology_scripts_installed()
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$ SELECT '2.4.3'::text || ' r' || 16312::text AS version $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="relationtrigger" id="Function_1831" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.relationtrigger()
 RETURNS trigger
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  toponame varchar;
  topoid integer;
  plyr RECORD; -- parent layer
  rec RECORD;
  ok BOOL;
BEGIN
  IF TG_NARGS != 2 THEN
    RAISE EXCEPTION 'RelationTrigger called with wrong number of arguments';
  END IF;
  topoid = TG_ARGV[0];
  toponame = TG_ARGV[1];
  --RAISE NOTICE 'RelationTrigger called % % on %.relation for a %', TG_WHEN, TG_OP, toponame, TG_LEVEL;

  IF TG_OP = 'DELETE' THEN
    RAISE EXCEPTION 'RelationTrigger not meant to be called on DELETE';
  END IF;
  -- Get layer info (and verify it exists)
  ok = false;
  FOR plyr IN EXECUTE 'SELECT * FROM topology.layer '
       'WHERE '
       ' topology_id = ' || topoid
    || ' AND'
       ' layer_id = ' || NEW.layer_id
  LOOP
    ok = true;
    EXIT;
  END LOOP;
  IF NOT ok THEN
    RAISE EXCEPTION 'Layer % does not exist in topology %',
      NEW.layer_id, topoid;
    RETURN NULL;
  END IF;
  IF plyr.level > 0 THEN -- this is hierarchical layer
    -- ElementType must be the layer child id
    IF NEW.element_type != plyr.child_id THEN
      RAISE EXCEPTION 'Type of elements in layer % must be set to its child layer id %', plyr.layer_id, plyr.child_id;
      RETURN NULL;
    END IF;
    -- ElementId must be an existent TopoGeometry in child layer
    ok = false;
    FOR rec IN EXECUTE 'SELECT topogeo_id FROM '
      || quote_ident(toponame) || '.relation '
         ' WHERE layer_id = ' || plyr.child_id
      || ' AND topogeo_id = ' || NEW.element_id
    LOOP
      ok = true;
      EXIT;
    END LOOP;
    IF NOT ok THEN
      RAISE EXCEPTION 'TopoGeometry % does not exist in the child layer %', NEW.element_id, plyr.child_id;
      RETURN NULL;
    END IF;
  ELSE -- this is a basic layer
    -- ElementType must be compatible with layer type
    IF plyr.feature_type != 4
      AND plyr.feature_type != NEW.element_type
    THEN
      RAISE EXCEPTION 'Element of type % is not compatible with layer of type %', NEW.element_type, plyr.feature_type;
      RETURN NULL;
    END IF;
    --
    -- Now lets see if the element is consistent, which
    -- is it exists in the topology tables.
    --
    --
    -- Element is a Node
    --
    IF NEW.element_type = 1 
    THEN
      ok = false;
      FOR rec IN EXECUTE 'SELECT node_id FROM '
        || quote_ident(toponame) || '.node '
           ' WHERE node_id = ' || NEW.element_id
      LOOP
        ok = true;
        EXIT;
      END LOOP;
      IF NOT ok THEN
        RAISE EXCEPTION 'Node % does not exist in topology %', NEW.element_id, toponame;
        RETURN NULL;
      END IF;
    --
    -- Element is an Edge
    --
    ELSIF NEW.element_type = 2 
    THEN
      ok = false;
      FOR rec IN EXECUTE 'SELECT edge_id FROM '
        || quote_ident(toponame) || '.edge_data '
           ' WHERE edge_id = ' || abs(NEW.element_id)
      LOOP
        ok = true;
        EXIT;
      END LOOP;
      IF NOT ok THEN
        RAISE EXCEPTION 'Edge % does not exist in topology %', NEW.element_id, toponame;
        RETURN NULL;
      END IF;
    --
    -- Element is a Face
    --
    ELSIF NEW.element_type = 3 
    THEN
      IF NEW.element_id = 0 THEN
        RAISE EXCEPTION 'Face % cannot be associated with any feature', NEW.element_id;
        RETURN NULL;
      END IF;
      ok = false;
      FOR rec IN EXECUTE 'SELECT face_id FROM '
        || quote_ident(toponame) || '.face '
           ' WHERE face_id = ' || NEW.element_id
      LOOP
        ok = true;
        EXIT;
      END LOOP;
      IF NOT ok THEN
        RAISE EXCEPTION 'Face % does not exist in topology %', NEW.element_id, toponame;
        RETURN NULL;
      END IF;
    END IF;
  END IF;
  
  RETURN NEW;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="st_addedgemodface" id="Function_b70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_addedgemodface(atopology character varying, anode integer, anothernode integer, acurve geometry)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_AddEdgeModFace$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anode" jt="4" type="int4" />
			<input_param name="anothernode" jt="4" type="int4" />
			<input_param name="acurve" jt="1111" type="geometry" />
		</function>
		<function name="st_addedgenewfaces" id="Function_1c0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_addedgenewfaces(atopology character varying, anode integer, anothernode integer, acurve geometry)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_AddEdgeNewFaces$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anode" jt="4" type="int4" />
			<input_param name="anothernode" jt="4" type="int4" />
			<input_param name="acurve" jt="1111" type="geometry" />
		</function>
		<function name="st_addisoedge" id="Function_2493" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_addisoedge(atopology character varying, anode integer, anothernode integer, acurve geometry)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_AddIsoEdge$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anode" jt="4" type="int4" />
			<input_param name="anothernode" jt="4" type="int4" />
			<input_param name="acurve" jt="1111" type="geometry" />
		</function>
		<function name="st_addisonode" id="Function_1fe3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_addisonode(atopology character varying, aface integer, apoint geometry)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_AddIsoNode$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="aface" jt="4" type="int4" />
			<input_param name="apoint" jt="1111" type="geometry" />
		</function>
		<function name="st_changeedgegeom" id="Function_16ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_changeedgegeom(atopology character varying, anedge integer, acurve geometry)
 RETURNS text
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_ChangeEdgeGeom$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anedge" jt="4" type="int4" />
			<input_param name="acurve" jt="1111" type="geometry" />
		</function>
		<function name="st_createtopogeo" id="Function_1ae9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_createtopogeo(atopology character varying, acollection geometry)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
  typ char(4);
  rec RECORD;
  ret int;
  nodededges GEOMETRY;
  points GEOMETRY;
  snode_id int;
  enode_id int;
  tolerance FLOAT8;
  topoinfo RECORD;
BEGIN
  IF atopology IS NULL OR acollection IS NULL THEN
    RAISE EXCEPTION 'SQL/MM Spatial exception - null argument';
  END IF;
  -- Get topology information
  BEGIN
    SELECT * FROM topology.topology
      INTO STRICT topoinfo WHERE name = atopology;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE EXCEPTION 'SQL/MM Spatial exception - invalid topology name';
  END;
  -- Check SRID compatibility
  IF ST_SRID(acollection) != topoinfo.SRID THEN
    RAISE EXCEPTION 'Geometry SRID (%) does not match topology SRID (%)',
      ST_SRID(acollection), topoinfo.SRID;
  END IF;
  -- Verify pre-conditions (valid, empty topology schema exists)
  BEGIN -- {
    -- Verify the topology views in the topology schema to be empty
    FOR rec in EXECUTE
      'SELECT count(*) FROM '
      || quote_ident(atopology) || '.edge_data '
      || ' UNION ' ||
      'SELECT count(*) FROM '
      || quote_ident(atopology) || '.node '
    LOOP
      IF rec.count > 0 THEN
    RAISE EXCEPTION 'SQL/MM Spatial exception - non-empty view';
      END IF;
    END LOOP;
    -- face check is separated as it will contain a single (world)
    -- face record
    FOR rec in EXECUTE
      'SELECT count(*) FROM '
      || quote_ident(atopology) || '.face '
    LOOP
      IF rec.count != 1 THEN
    RAISE EXCEPTION 'SQL/MM Spatial exception - non-empty face view';
      END IF;
    END LOOP;
  EXCEPTION
    WHEN INVALID_SCHEMA_NAME THEN
      RAISE EXCEPTION 'SQL/MM Spatial exception - invalid topology name';
    WHEN UNDEFINED_TABLE THEN
      RAISE EXCEPTION 'SQL/MM Spatial exception - non-existent view';
  END; -- }

  --
  -- Node input linework with itself
  --
  WITH components AS ( SELECT geom FROM ST_Dump(acollection) )
  SELECT ST_UnaryUnion(ST_Collect(geom)) FROM (
    SELECT geom FROM components
      WHERE ST_Dimension(geom) = 1
    UNION ALL
    SELECT ST_Boundary(geom) FROM components
      WHERE ST_Dimension(geom) = 2
  ) as linework INTO STRICT nodededges;

  --
  -- Linemerge the resulting edges, to reduce the working set
  -- NOTE: this is more of a workaround for GEOS splitting overlapping
  --       lines to each of the segments.
  --
  SELECT ST_LineMerge(nodededges) INTO STRICT nodededges;

  --
  -- Collect input points and input lines endpoints
  --
  WITH components AS ( SELECT geom FROM ST_Dump(acollection) )
  SELECT ST_Union(geom) FROM (
    SELECT geom FROM components
      WHERE ST_Dimension(geom) = 0
    UNION ALL
    SELECT ST_Boundary(geom) FROM components
      WHERE ST_Dimension(geom) = 1
  ) as nodes INTO STRICT points;

  --
  -- Further split edges by points
  -- TODO: optimize this adding ST_Split support for multiline/multipoint
  --
  FOR rec IN SELECT geom FROM ST_Dump(points)
  LOOP
    -- Use the node to split edges
    SELECT ST_Collect(geom)
    FROM ST_Dump(ST_Split(nodededges, rec.geom))
    INTO STRICT nodededges;
  END LOOP;
  SELECT ST_UnaryUnion(nodededges) INTO STRICT nodededges;

  --
  -- Collect all nodes (from points and noded linework endpoints)
  --
  WITH edges AS ( SELECT geom FROM ST_Dump(nodededges) )
  SELECT ST_Union( -- TODO: ST_UnaryUnion ?
          COALESCE(ST_UnaryUnion(ST_Collect(geom)),
            ST_SetSRID('POINT EMPTY'::geometry, topoinfo.SRID)),
          COALESCE(points,
            ST_SetSRID('POINT EMPTY'::geometry, topoinfo.SRID))
         )
  FROM (
    SELECT ST_StartPoint(geom) as geom FROM edges
      UNION ALL
    SELECT ST_EndPoint(geom) FROM edges
  ) as endpoints INTO points;

  --
  -- Add all nodes as isolated so that
  -- later calls to AddEdgeModFace will tweak their being
  -- isolated or not...
  --
  FOR rec IN SELECT geom FROM ST_Dump(points)
  LOOP
    PERFORM topology.ST_AddIsoNode(atopology, 0, rec.geom);
  END LOOP;

  FOR rec IN SELECT geom FROM ST_Dump(nodededges)
  LOOP
    SELECT topology.GetNodeByPoint(atopology, st_startpoint(rec.geom), 0)
      INTO STRICT snode_id;
    SELECT topology.GetNodeByPoint(atopology, st_endpoint(rec.geom), 0)
      INTO STRICT enode_id;
    PERFORM topology.ST_AddEdgeModFace(atopology, snode_id, enode_id, rec.geom);
  END LOOP;
  RETURN 'Topology ' || atopology || ' populated';
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="acollection" jt="1111" type="geometry" />
		</function>
		<function name="st_geometrytype" id="Function_15f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_geometrytype(tg topogeometry)
 RETURNS text
 LANGUAGE sql
 STABLE STRICT
AS $function$
	SELECT CASE
		WHEN type($1) = 1 THEN 'ST_MultiPoint'
		WHEN type($1) = 2 THEN 'ST_MultiLinestring'
		WHEN type($1) = 3 THEN 'ST_MultiPolygon'
		WHEN type($1) = 4 THEN 'ST_GeometryCollection'
		ELSE 'ST_Unexpected'
		END;
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="tg" jt="2002" type="topogeometry" />
		</function>
		<function name="st_getfaceedges" id="Function_99a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_getfaceedges(toponame character varying, face_id integer)
 RETURNS SETOF getfaceedges_returntype
 LANGUAGE c
 STABLE
AS '$libdir/postgis_topology-2.4', $function$ST_GetFaceEdges$function$
;]]></string>
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="face_id" jt="4" type="int4" />
			<result_param name="sequence" jt="4" type="int4" />
			<result_param name="edge" jt="4" type="int4" />
		</function>
		<function name="st_getfacegeometry" id="Function_23c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_getfacegeometry(toponame character varying, aface integer)
 RETURNS geometry
 LANGUAGE c
 STABLE
AS '$libdir/postgis_topology-2.4', $function$ST_GetFaceGeometry$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="geometry" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="aface" jt="4" type="int4" />
		</function>
		<function name="st_inittopogeo" id="Function_52c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_inittopogeo(atopology character varying)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
  rec RECORD;
  topology_id numeric;
BEGIN
  IF atopology IS NULL THEN
    RAISE EXCEPTION 'SQL/MM Spatial exception - null argument';
  END IF;
  FOR rec IN SELECT * FROM pg_namespace WHERE text(nspname) = atopology
  LOOP
    RAISE EXCEPTION 'SQL/MM Spatial exception - schema already exists';
  END LOOP;
  FOR rec IN EXECUTE 'SELECT topology.CreateTopology('
    ||quote_literal(atopology)|| ') as id'
  LOOP
    topology_id := rec.id;
  END LOOP;
  RETURN 'Topology-Geometry ' || quote_literal(atopology)
    || ' (id:' || topology_id || ') created.';
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
		</function>
		<function name="st_modedgeheal" id="Function_fb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_modedgeheal(toponame character varying, e1id integer, e2id integer)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_ModEdgeHeal$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="e1id" jt="4" type="int4" />
			<input_param name="e2id" jt="4" type="int4" />
		</function>
		<function name="st_modedgesplit" id="Function_654" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_modedgesplit(atopology character varying, anedge integer, apoint geometry)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_ModEdgeSplit$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anedge" jt="4" type="int4" />
			<input_param name="apoint" jt="1111" type="geometry" />
		</function>
		<function name="st_moveisonode" id="Function_24e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_moveisonode(atopology character varying, anode integer, apoint geometry)
 RETURNS text
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_MoveIsoNode$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anode" jt="4" type="int4" />
			<input_param name="apoint" jt="1111" type="geometry" />
		</function>
		<function name="st_newedgeheal" id="Function_d9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_newedgeheal(toponame character varying, e1id integer, e2id integer)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_NewEdgeHeal$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="e1id" jt="4" type="int4" />
			<input_param name="e2id" jt="4" type="int4" />
		</function>
		<function name="st_newedgessplit" id="Function_d2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_newedgessplit(atopology character varying, anedge integer, apoint geometry)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_NewEdgesSplit$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anedge" jt="4" type="int4" />
			<input_param name="apoint" jt="1111" type="geometry" />
		</function>
		<function name="st_remedgemodface" id="Function_193f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_remedgemodface(toponame character varying, e1id integer)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_RemEdgeModFace$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="e1id" jt="4" type="int4" />
		</function>
		<function name="st_remedgenewface" id="Function_20b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_remedgenewface(toponame character varying, e1id integer)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_RemEdgeNewFace$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="toponame" jt="12" type="varchar" />
			<input_param name="e1id" jt="4" type="int4" />
		</function>
		<function name="st_remisonode" id="Function_130c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_remisonode(character varying, integer)
 RETURNS text
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_RemoveIsoNode$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="varchar" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="st_removeisoedge" id="Function_fb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_removeisoedge(atopology character varying, anedge integer)
 RETURNS text
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_RemIsoEdge$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anedge" jt="4" type="int4" />
		</function>
		<function name="st_removeisonode" id="Function_78e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_removeisonode(atopology character varying, anode integer)
 RETURNS text
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$ST_RemoveIsoNode$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="anode" jt="4" type="int4" />
		</function>
		<function name="st_simplify" id="Function_24f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.st_simplify(tg topogeometry, tolerance double precision)
 RETURNS geometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  topology_info RECORD;
  layer_info RECORD;
  child_layer_info RECORD;
  geom geometry;
  sql TEXT;
BEGIN
  -- Get topology information
  SELECT id, name FROM topology.topology
    INTO topology_info
    WHERE id = tg.topology_id;
  IF NOT FOUND THEN
      RAISE EXCEPTION 'No topology with id "%" in topology.topology', tg.topology_id;
  END IF;
  -- Get layer info
  SELECT * FROM topology.layer
    WHERE topology_id = tg.topology_id
    AND layer_id = tg.layer_id
    INTO layer_info;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'Could not find TopoGeometry layer % in topology %', tg.layer_id, tg.topology_id;
  END IF;
  --
  -- If this feature layer is on any level > 0 we will
  -- compute the topological union of all simplified child
  -- features in fact recursing.
  --
  IF layer_info.level > 0 THEN -- {
    -- Get child layer info
    SELECT * FROM topology.layer WHERE layer_id = layer_info.child_id
      AND topology_id = tg.topology_id
      INTO child_layer_info;
    IF NOT FOUND THEN
      RAISE EXCEPTION 'Invalid layer % in topology % (unexistent child layer %)', tg.layer_id, tg.topology_id, layer_info.child_id;
    END IF;
    sql := 'SELECT st_multi(st_union(topology.ST_Simplify('
      || quote_ident(child_layer_info.feature_column)
      || ',' || tolerance || '))) as geom FROM '
      || quote_ident(child_layer_info.schema_name) || '.'
      || quote_ident(child_layer_info.table_name)
      || ', ' || quote_ident(topology_info.name) || '.relation pr'
      || ' WHERE '
      || ' pr.topogeo_id = ' || tg.id
      || ' AND '
      || ' pr.layer_id = ' || tg.layer_id
      || ' AND '
      || ' id('||quote_ident(child_layer_info.feature_column)
      || ') = pr.element_id '
      || ' AND '
      || 'layer_id('||quote_ident(child_layer_info.feature_column)
      || ') = pr.element_type ';
    RAISE DEBUG '%', sql;
    EXECUTE sql INTO geom;
  ELSIF tg.type = 3 THEN -- [multi]polygon -- }{
    -- TODO: use ST_GetFaceEdges
    -- TODO: is st_unaryunion needed?
    sql := 'SELECT st_multi(st_unaryunion(ST_BuildArea(ST_Node(ST_Collect(ST_Simplify(geom, '
      || tolerance || ')))))) as geom FROM '
      || quote_ident(topology_info.name)
      || '.edge_data e, '
      || quote_ident(topology_info.name)
      || '.relation r WHERE ( e.left_face = r.element_id'
      || ' OR e.right_face = r.element_id )'
      || ' AND r.topogeo_id = ' || tg.id
      || ' AND r.layer_id = ' || tg.layer_id
      || ' AND element_type = 3 ';
    RAISE DEBUG '%', sql;
    EXECUTE sql INTO geom;

  ELSIF tg.type = 2 THEN -- [multi]line -- }{
    sql :=
      'SELECT st_multi(ST_LineMerge(ST_Node(ST_Collect(ST_Simplify(e.geom,'
      || tolerance || '))))) as g FROM '
      || quote_ident(topology_info.name) || '.edge e, '
      || quote_ident(topology_info.name) || '.relation r '
      || ' WHERE r.topogeo_id = ' || tg.id
      || ' AND r.layer_id = ' || tg.layer_id
      || ' AND r.element_type = 2 '
      || ' AND abs(r.element_id) = e.edge_id';
    EXECUTE sql INTO geom;
  ELSIF tg.type = 1 THEN -- [multi]point -- }{
    -- Can't simplify points...
    geom := topology.Geometry(tg);
  ELSIF tg.type = 4 THEN -- mixed collection -- }{
   sql := 'WITH areas AS ( '
      || 'SELECT st_multi(st_union(ST_BuildArea(ST_Node(ST_Collect(ST_Simplify(geom, '
      || tolerance || ')))) as geom FROM '
      || quote_ident(topology_info.name)
      || '.edge_data e, '
      || quote_ident(topology_info.name)
      || '.relation r WHERE ( e.left_face = r.element_id'
      || ' OR e.right_face = r.element_id )'
      || ' AND r.topogeo_id = ' || tg.id
      || ' AND r.layer_id = ' || tg.layer_id
      || ' AND element_type = 3 ), '
      || 'lines AS ( '
      || 'SELECT st_multi(ST_LineMerge(ST_Collect(ST_Simplify(e.geom,'
      || tolerance || ')))) as g FROM '
      || quote_ident(topology_info.name) || '.edge e, '
      || quote_ident(topology_info.name) || '.relation r '
      || ' WHERE r.topogeo_id = ' || tg.id
      || ' AND r.layer_id = ' || tg.layer_id
      || ' AND r.element_type = 2 '
      || ' AND abs(r.element_id) = e.edge_id ), '
      || ' points as ( SELECT st_union(n.geom) as g FROM '
      || quote_ident(topology_info.name) || '.node n, '
      || quote_ident(topology_info.name) || '.relation r '
      || ' WHERE r.topogeo_id = ' || tg.id
      || ' AND r.layer_id = ' || tg.layer_id
      || ' AND r.element_type = 1 '
      || ' AND r.element_id = n.node_id ), '
      || ' un as ( SELECT g FROM areas UNION ALL SELECT g FROM lines '
      || '          UNION ALL SELECT g FROM points ) '
      || 'SELECT ST_Multi(ST_Collect(g)) FROM un';
    EXECUTE sql INTO geom;
  ELSE -- }{
    RAISE EXCEPTION 'Invalid TopoGeometries (unknown type %)', tg.type;
  END IF; -- }
  RETURN geom;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="geometry" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="tolerance" jt="8" type="float8" />
		</function>
		<function name="topoelementarray_agg" id="Function_1acc" isSystem="false" params_known="y" >
			<input_param name="returnValue" jt="2001" type="topoelementarray" />
			<input_param name="$1" jt="2001" type="topoelement" />
		</function>
		<function name="topoelementarray_append" id="Function_2295" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topoelementarray_append(topoelementarray, topoelement)
 RETURNS topoelementarray
 LANGUAGE sql
 IMMUTABLE
AS $function$
	SELECT CASE
		WHEN $1 IS NULL THEN
			topology.TopoElementArray('{' || $2::text || '}')
		ELSE
			topology.TopoElementArray($1::int[][]||$2::int[])
		END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2001" type="topoelementarray" />
			<input_param name="$1" jt="2001" type="topoelementarray" />
			<input_param name="$2" jt="2001" type="topoelement" />
		</function>
		<function name="topogeo_addgeometry" id="Function_117d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topogeo_addgeometry(atopology character varying, ageom geometry, tolerance double precision DEFAULT 0)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
DECLARE
BEGIN
	RAISE EXCEPTION 'TopoGeo_AddGeometry not implemented yet';
END
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="ageom" jt="1111" type="geometry" />
			<input_param name="tolerance" jt="8" type="float8" />
		</function>
		<function name="topogeo_addlinestring" id="Function_1357" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topogeo_addlinestring(atopology character varying, aline geometry, tolerance double precision DEFAULT 0)
 RETURNS SETOF integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$TopoGeo_AddLinestring$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="aline" jt="1111" type="geometry" />
			<input_param name="tolerance" jt="8" type="float8" />
		</function>
		<function name="topogeo_addpoint" id="Function_17fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topogeo_addpoint(atopology character varying, apoint geometry, tolerance double precision DEFAULT 0)
 RETURNS integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$TopoGeo_AddPoint$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoint" jt="1111" type="geometry" />
			<input_param name="tolerance" jt="8" type="float8" />
		</function>
		<function name="topogeo_addpolygon" id="Function_6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topogeo_addpolygon(atopology character varying, apoly geometry, tolerance double precision DEFAULT 0)
 RETURNS SETOF integer
 LANGUAGE c
AS '$libdir/postgis_topology-2.4', $function$TopoGeo_AddPolygon$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="apoly" jt="1111" type="geometry" />
			<input_param name="tolerance" jt="8" type="float8" />
		</function>
		<function name="topogeom_addelement" id="Function_1940" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topogeom_addelement(tg topogeometry, el topoelement)
 RETURNS topogeometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  toponame TEXT;
  sql TEXT;
BEGIN
  -- Get topology name
  BEGIN
    SELECT name
    FROM topology.topology
      INTO STRICT toponame WHERE id = topology_id(tg);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE EXCEPTION 'No topology with name "%" in topology.topology',
        atopology;
  END;
  -- Insert new element
  sql := format('INSERT INTO %s.relation'
         '(topogeo_id,layer_id,element_id,element_type)'
         ' VALUES($1,$2,$3,$4)', quote_ident(toponame));
  BEGIN
    EXECUTE sql USING id(tg), layer_id(tg), el[1], el[2];
  EXCEPTION
    WHEN unique_violation THEN
      -- already present, let go
    WHEN OTHERS THEN
      RAISE EXCEPTION 'Got % (%)', SQLERRM, SQLSTATE;
  END;
  RETURN tg;
END
$function$
;]]></string>
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="el" jt="2001" type="topoelement" />
			<result_param name="topology_id" jt="4" type="int4" />
			<result_param name="layer_id" jt="4" type="int4" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="type" jt="4" type="int4" />
		</function>
		<function name="topogeom_remelement" id="Function_1fd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topogeom_remelement(tg topogeometry, el topoelement)
 RETURNS topogeometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  toponame TEXT;
  sql TEXT;
BEGIN
  -- Get topology name
  BEGIN
    SELECT name
    FROM topology.topology
      INTO STRICT toponame WHERE id = topology_id(tg);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE EXCEPTION 'No topology with name "%" in topology.topology',
        atopology;
  END;
  -- Delete the element
  sql := format('DELETE FROM %s.relation WHERE '
         'topogeo_id = $1 AND layer_id = $2 AND '
         'element_id = $3 AND element_type = $4',
         quote_ident(toponame));
  EXECUTE sql USING id(tg), layer_id(tg), el[1], el[2];
  RETURN tg;
END
$function$
;]]></string>
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="el" jt="2001" type="topoelement" />
			<result_param name="topology_id" jt="4" type="int4" />
			<result_param name="layer_id" jt="4" type="int4" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="type" jt="4" type="int4" />
		</function>
		<function name="topologysummary" id="Function_f84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.topologysummary(atopology character varying)
 RETURNS text
 LANGUAGE plpgsql
 STABLE STRICT
AS $function$
DECLARE
  rec RECORD;
  rec2 RECORD;
  var_topology_id integer;
  n int4;
  missing int4;
  sql text;
  ret text;
  tgcount int4;
BEGIN
  ret := 'Topology ' || quote_ident(atopology) ;
  BEGIN
    SELECT * FROM topology.topology WHERE name = atopology INTO STRICT rec;
    -- TODO: catch <no_rows> to give a nice error message
    var_topology_id := rec.id;
    ret := ret || ' (id ' || rec.id || ', '
               || 'SRID ' || rec.srid || ', '
               || 'precision ' || rec.precision;
    IF rec.hasz THEN ret := ret || ', has Z'; END IF;
    ret := ret || E')\n';
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      ret := ret || E' (unregistered)\n';
  END;
  BEGIN
    EXECUTE 'SELECT count(*) FROM ' || quote_ident(atopology)
      || '.node ' INTO STRICT n;
    ret = ret || n || ' nodes, ';
  EXCEPTION
    WHEN UNDEFINED_TABLE OR INVALID_SCHEMA_NAME THEN
      IF NOT EXISTS (
          SELECT * FROM pg_catalog.pg_namespace WHERE nspname = atopology
         )
      THEN
        ret = ret || 'missing schema';
        RETURN ret;
      ELSE
        ret = ret || 'missing nodes, ';
      END IF;
  END;
  BEGIN
    EXECUTE 'SELECT count(*) FROM ' || quote_ident(atopology)
      || '.edge' INTO STRICT n;
    ret = ret || n || ' edges, ';
  EXCEPTION
    WHEN UNDEFINED_TABLE OR INVALID_SCHEMA_NAME THEN
      ret = ret || 'missing edges, ';
  END;
  BEGIN
    EXECUTE 'SELECT count(*) FROM ' || quote_ident(atopology)
      || '.face' INTO STRICT n;
    ret = ret || greatest(n-1,0) || ' faces, '; -- -1 is face=0
  EXCEPTION
    WHEN UNDEFINED_TABLE OR INVALID_SCHEMA_NAME THEN
      ret = ret || 'missing faces, ';
  END;
  BEGIN
    EXECUTE 'SELECT count(distinct layer_id) AS ln, '
      || 'count(distinct (layer_id,topogeo_id)) AS tn FROM '
      || quote_ident(atopology) || '.relation' INTO STRICT rec;
    tgcount := rec.tn;
    ret = ret || rec.tn || ' topogeoms in ' || rec.ln || E' layers\n';
  EXCEPTION
    WHEN UNDEFINED_TABLE THEN
      ret = ret || E'missing relations\n';
    WHEN UNDEFINED_COLUMN THEN
      ret = ret || E'corrupted relations\n';
  END;
  -- print information about registered layers
  FOR rec IN SELECT * FROM topology.layer l
    WHERE l.topology_id = var_topology_id
    ORDER by layer_id
  LOOP -- {
    ret = ret || 'Layer ' || rec.layer_id || ', type ';
    CASE
      WHEN rec.feature_type = 1 THEN
        ret = ret || 'Puntal';
      WHEN rec.feature_type = 2 THEN
        ret = ret || 'Lineal';
      WHEN rec.feature_type = 3 THEN
        ret = ret || 'Polygonal';
      WHEN rec.feature_type = 4 THEN
        ret = ret || 'Mixed';
      ELSE
        ret = ret || '???';
    END CASE;
    ret = ret || ' (' || rec.feature_type || '), ';
    BEGIN
      EXECUTE 'SELECT count(*) FROM ( SELECT DISTINCT topogeo_id FROM '
        || quote_ident(atopology)
        || '.relation r WHERE r.layer_id = ' || rec.layer_id
        || ' ) foo ' INTO STRICT n;
      ret = ret || n || ' topogeoms' || E'\n';
    EXCEPTION WHEN UNDEFINED_TABLE OR UNDEFINED_COLUMN THEN
      n := NULL;
      ret = ret || 'X topogeoms' || E'\n';
    END;
      IF rec.level > 0 THEN
        ret = ret || ' Hierarchy level ' || rec.level
                  || ', child layer ' || rec.child_id || E'\n';
      END IF;
      ret = ret || ' Deploy: ';
      IF rec.feature_column != '' THEN
        ret = ret || quote_ident(rec.schema_name) || '.'
                  || quote_ident(rec.table_name) || '.'
                  || quote_ident(rec.feature_column);
        IF n > 0 THEN
          sql := 'SELECT count(*) FROM ( SELECT topogeo_id FROM '
            || quote_ident(atopology)
            || '.relation r WHERE r.layer_id = ' || rec.layer_id
            || ' EXCEPT SELECT DISTINCT id('
            || quote_ident(rec.feature_column) || ') FROM '
            || quote_ident(rec.schema_name) || '.'
            || quote_ident(rec.table_name) || ') as foo';
          BEGIN
            EXECUTE sql INTO STRICT missing;
            IF missing > 0 THEN
              ret = ret || ' (' || missing || ' missing topogeoms)';
            END IF;
          EXCEPTION
            WHEN UNDEFINED_TABLE THEN
              ret = ret || ' ( unexistent table )';
            WHEN UNDEFINED_COLUMN THEN
              ret = ret || ' ( unexistent column )';
          END;
        END IF;
        ret = ret || E'\n';
      ELSE
        ret = ret || E'NONE (detached)\n';
      END IF;
  END LOOP; -- }
  -- print information about unregistered layers containing topogeoms
  IF tgcount > 0 THEN -- {
    sql := 'SELECT layer_id FROM '
        || quote_ident(atopology) || '.relation EXCEPT SELECT layer_id'
        || ' FROM topology.layer WHERE topology_id = $1 ORDER BY layer_id';
    --RAISE DEBUG '%', sql;
    FOR rec IN  EXECUTE sql USING var_topology_id
    LOOP -- {
      ret = ret || 'Layer ' || rec.layer_id::text || ', UNREGISTERED, ';
      EXECUTE 'SELECT count(*) FROM ( SELECT DISTINCT topogeo_id FROM '
        || quote_ident(atopology)
        || '.relation r WHERE r.layer_id = ' || rec.layer_id
        || ' ) foo ' INTO STRICT n;
      ret = ret || n || ' topogeoms' || E'\n';
    END LOOP; -- }
  END IF; -- }
  RETURN ret;
END
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="atopology" jt="12" type="varchar" />
		</function>
		<function name="totopogeom" id="Function_4e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.totopogeom(ageom geometry, atopology character varying, alayer integer, atolerance double precision DEFAULT 0)
 RETURNS topogeometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  layer_info RECORD;
  topology_info RECORD;
  tg topology.TopoGeometry;
  typ TEXT;
BEGIN
  -- Get topology information
  BEGIN
    SELECT *
    FROM topology.topology
      INTO STRICT topology_info WHERE name = atopology;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE EXCEPTION 'No topology with name "%" in topology.topology',
        atopology;
  END;
  -- Get layer information
  BEGIN
    SELECT *, CASE
      WHEN feature_type = 1 THEN 'puntal'
      WHEN feature_type = 2 THEN 'lineal'
      WHEN feature_type = 3 THEN 'areal'
      WHEN feature_type = 4 THEN 'mixed'
      ELSE 'unexpected_'||feature_type
      END as typename
    FROM topology.layer l
      INTO STRICT layer_info
      WHERE l.layer_id = alayer
      AND l.topology_id = topology_info.id;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE EXCEPTION 'No layer with id "%" in topology "%"',
        alayer, atopology;
  END;
  -- Can't convert to a hierarchical topogeometry
  IF layer_info.level > 0 THEN
      RAISE EXCEPTION 'Layer "%" of topology "%" is hierarchical, cannot convert to it.',
        alayer, atopology;
  END IF;

  --
  -- Check type compatibility and create empty TopoGeometry
  -- 1:puntal, 2:lineal, 3:areal, 4:collection
  --
  typ = geometrytype(ageom);
  IF typ = 'GEOMETRYCOLLECTION' THEN
    --  A collection can only go collection layer
    IF layer_info.feature_type != 4 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold a collection feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg := topology.CreateTopoGeom(atopology, 4, alayer);
  ELSIF typ = 'POINT' OR typ = 'MULTIPOINT' THEN -- puntal
    --  A point can go in puntal or collection layer
    IF layer_info.feature_type != 4 and layer_info.feature_type != 1 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold a puntal feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg := topology.CreateTopoGeom(atopology, 1, alayer);
  ELSIF typ = 'LINESTRING' or typ = 'MULTILINESTRING' THEN -- lineal
    --  A line can go in lineal or collection layer
    IF layer_info.feature_type != 4 and layer_info.feature_type != 2 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold a lineal feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg := topology.CreateTopoGeom(atopology, 2, alayer);
  ELSIF typ = 'POLYGON' OR typ = 'MULTIPOLYGON' THEN -- areal
    --  An area can go in areal or collection layer
    IF layer_info.feature_type != 4 and layer_info.feature_type != 3 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold an areal feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg := topology.CreateTopoGeom(atopology, 3, alayer);
  ELSE
      -- Should never happen
      RAISE EXCEPTION
        'Unsupported feature type %', typ;
  END IF;
  tg := topology.toTopoGeom(ageom, tg, atolerance);
  RETURN tg;
END
$function$
;]]></string>
			<input_param name="ageom" jt="1111" type="geometry" />
			<input_param name="atopology" jt="12" type="varchar" />
			<input_param name="alayer" jt="4" type="int4" />
			<input_param name="atolerance" jt="8" type="float8" />
			<result_param name="topology_id" jt="4" type="int4" />
			<result_param name="layer_id" jt="4" type="int4" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="type" jt="4" type="int4" />
		</function>
		<function name="totopogeom" id="Function_f35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.totopogeom(ageom geometry, tg topogeometry, atolerance double precision DEFAULT 0)
 RETURNS topogeometry
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  layer_info RECORD;
  topology_info RECORD;
  rec RECORD;
  rec2 RECORD;
  elem TEXT;
  elems TEXT[];
  sql TEXT;
  typ TEXT;
  tolerance FLOAT8;
  alayer INT;
  atopology TEXT;
BEGIN

  -- Get topology information
  SELECT id, name FROM topology.topology
    INTO topology_info
    WHERE id = topology_id(tg);
  IF NOT FOUND THEN
    RAISE EXCEPTION 'No topology with id "%" in topology.topology',
                    topology_id(tg);
  END IF;
  alayer := layer_id(tg);
  atopology := topology_info.name;

  -- Get tolerance, if 0 was given
  tolerance := COALESCE( NULLIF(atolerance, 0), topology._st_mintolerance(topology_info.name, ageom) );
  -- Get layer information
  BEGIN
    SELECT *, CASE
      WHEN feature_type = 1 THEN 'puntal'
      WHEN feature_type = 2 THEN 'lineal'
      WHEN feature_type = 3 THEN 'areal'
      WHEN feature_type = 4 THEN 'mixed'
      ELSE 'unexpected_'||feature_type
      END as typename
    FROM topology.layer l
      INTO STRICT layer_info
      WHERE l.layer_id = layer_id(tg)
      AND l.topology_id = topology_info.id;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE EXCEPTION 'No layer with id "%" in topology "%"',
        alayer, atopology;
  END;
  -- Can't convert to a hierarchical topogeometry
  IF layer_info.level > 0 THEN
      RAISE EXCEPTION 'Layer "%" of topology "%" is hierarchical, cannot convert a simple geometry to it.',
        alayer, atopology;
  END IF;

  --
  -- Check type compatibility and set TopoGeometry type
  -- 1:puntal, 2:lineal, 3:areal, 4:collection
  --
  typ = geometrytype(ageom);
  IF typ = 'GEOMETRYCOLLECTION' THEN
    --  A collection can only go to collection layer
    IF layer_info.feature_type != 4 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold a collection feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg.type := 4;
  ELSIF typ = 'POINT' OR typ = 'MULTIPOINT' THEN -- puntal
    --  A point can go in puntal or collection layer
    IF layer_info.feature_type != 4 and layer_info.feature_type != 1 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold a puntal feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg.type := 1;
  ELSIF typ = 'LINESTRING' or typ = 'MULTILINESTRING' THEN -- lineal
    --  A line can go in lineal or collection layer
    IF layer_info.feature_type != 4 and layer_info.feature_type != 2 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold a lineal feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg.type := 2;
  ELSIF typ = 'POLYGON' OR typ = 'MULTIPOLYGON' THEN -- areal
    --  An area can go in areal or collection layer
    IF layer_info.feature_type != 4 and layer_info.feature_type != 3 THEN
      RAISE EXCEPTION
        'Layer "%" of topology "%" is %, cannot hold an areal feature.',
        layer_info.layer_id, topology_info.name, layer_info.typename;
    END IF;
    tg.type := 3;
  ELSE
      -- Should never happen
      RAISE EXCEPTION
        'Unexpected feature dimension %', ST_Dimension(ageom);
  END IF;
  -- Now that we have an empty topogeometry, we loop over distinct components
  -- and add them to the definition of it. We add them as soon
  -- as possible so that each element can further edit the
  -- definition by splitting
  FOR rec IN SELECT id(tg), alayer as lyr,
    geom, ST_Dimension(gd.geom) as dims
    FROM ST_Dump(ageom) AS gd
    WHERE NOT ST_IsEmpty(gd.geom)
  LOOP
    -- NOTE: Switched from using case to this because of PG 10 behavior change
    -- Using a UNION ALL only one will be processed because of the WHERE
    -- Since the WHERE clause will be processed first
    FOR rec2 IN SELECT primitive
          FROM
            (
              SELECT topology.topogeo_addPoint(atopology, rec.geom, tolerance)
                WHERE rec.dims = 0
              UNION ALL
              SELECT topology.topogeo_addLineString(atopology, rec.geom, tolerance)
                WHERE rec.dims = 1
              UNION ALL
              SELECT topology.topogeo_addPolygon(atopology, rec.geom, tolerance)
                WHERE rec.dims = 2
            ) AS f(primitive)
    LOOP
      elem := ARRAY[rec.dims+1, rec2.primitive]::text;
      IF elems @> ARRAY[elem] THEN
      ELSE
        elems := elems || elem;
        -- TODO: consider use a single INSERT statement for the whole thing
        sql := 'INSERT INTO ' || quote_ident(atopology)
            || '.relation(topogeo_id, layer_id, element_type, element_id) VALUES ('
            || rec.id || ',' || rec.lyr || ',' || rec.dims+1
            || ',' || rec2.primitive || ')'
            -- NOTE: we're avoiding duplicated rows here
            || ' EXCEPT SELECT ' || rec.id || ', ' || rec.lyr
            || ', element_type, element_id FROM '
            || quote_ident(topology_info.name)
            || '.relation WHERE layer_id = ' || rec.lyr
            || ' AND topogeo_id = ' || rec.id;
        EXECUTE sql;
      END IF;
    END LOOP;
  END LOOP;
  RETURN tg;
END
$function$
;]]></string>
			<input_param name="ageom" jt="1111" type="geometry" />
			<input_param name="tg" jt="2002" type="topogeometry" />
			<input_param name="atolerance" jt="8" type="float8" />
			<result_param name="topology_id" jt="4" type="int4" />
			<result_param name="layer_id" jt="4" type="int4" />
			<result_param name="id" jt="4" type="int4" />
			<result_param name="type" jt="4" type="int4" />
		</function>
		<function name="validatetopology" id="Function_1100" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION topology.validatetopology(toponame character varying)
 RETURNS SETOF validatetopology_returntype
 LANGUAGE plpgsql
 STRICT
AS $function$
DECLARE
  retrec topology.ValidateTopology_ReturnType;
  rec RECORD;
  rec2 RECORD;
  i integer;
  invalid_edges integer[];
  invalid_faces integer[];
  sql text;
BEGIN
  -- Check for coincident nodes
  FOR rec IN EXECUTE 'SELECT a.node_id as id1, b.node_id as id2 FROM '
    || quote_ident(toponame) || '.node a, '
    || quote_ident(toponame) || '.node b '
       'WHERE a.node_id < b.node_id '
       ' AND ST_DWithin(a.geom, b.geom, 0)' -- NOTE: see #1625 and #1789
  LOOP
    retrec.error = 'coincident nodes';
    retrec.id1 = rec.id1;
    retrec.id2 = rec.id2;
    RETURN NEXT retrec;
  END LOOP;
  -- Check for edge crossed nodes
  -- TODO: do this in the single edge loop
  FOR rec IN EXECUTE 'SELECT n.node_id as nid, e.edge_id as eid FROM '
    || quote_ident(toponame) || '.node n, '
    || quote_ident(toponame) || '.edge e '
       'WHERE e.start_node != n.node_id '
       'AND e.end_node != n.node_id '
       'AND ST_Within(n.geom, e.geom)'
  LOOP
    retrec.error = 'edge crosses node';
    retrec.id1 = rec.eid; -- edge_id
    retrec.id2 = rec.nid; -- node_id
    RETURN NEXT retrec;
  END LOOP;
  -- Scan all edges 
  FOR rec IN EXECUTE 'SELECT e.geom, e.edge_id as id1, e.left_face, e.right_face FROM '
    || quote_ident(toponame) || '.edge e ORDER BY edge_id'
  LOOP
    -- Any invalid edge becomes a cancer for higher level complexes
    IF NOT ST_IsValid(rec.geom) THEN
      retrec.error = 'invalid edge';
      retrec.id1 = rec.id1;
      retrec.id2 = NULL;
      RETURN NEXT retrec;
      invalid_edges := array_append(invalid_edges, rec.id1);
      IF invalid_faces IS NULL OR NOT rec.left_face = ANY ( invalid_faces )
      THEN
        invalid_faces := array_append(invalid_faces, rec.left_face);
      END IF;
      IF rec.right_face != rec.left_face AND ( invalid_faces IS NULL OR
            NOT rec.right_face = ANY ( invalid_faces ) )
      THEN
        invalid_faces := array_append(invalid_faces, rec.right_face);
      END IF;
      CONTINUE;
    END IF;
    IF NOT ST_IsSimple(rec.geom) THEN
      retrec.error = 'edge not simple';
      retrec.id1 = rec.id1;
      retrec.id2 = NULL;
      RETURN NEXT retrec;
    END IF;
  END LOOP;
  -- Check for edge crossing
  sql := 'SELECT e1.edge_id as id1, e2.edge_id as id2, '
       ' e1.geom as g1, e2.geom as g2, '
       'ST_Relate(e1.geom, e2.geom) as im FROM '
    || quote_ident(toponame) || '.edge e1, '
    || quote_ident(toponame) || '.edge e2 '
       'WHERE e1.edge_id < e2.edge_id '
       ' AND e1.geom && e2.geom ';
  IF invalid_edges IS NOT NULL THEN
    sql := sql || ' AND NOT e1.edge_id = ANY ('
               || quote_literal(invalid_edges) || ')'
               || ' AND NOT e2.edge_id = ANY ('
               || quote_literal(invalid_edges) || ')';
  END IF;
  FOR rec IN EXECUTE sql
  LOOP
    IF ST_RelateMatch(rec.im, 'FF1F**1*2') THEN
      CONTINUE; -- no interior intersection
    --
    -- Closed lines have no boundary, so endpoint
    -- intersection would be considered interior
    -- See http://trac.osgeo.org/postgis/ticket/770
    -- See also full explanation in topology.AddEdge
    --
    ELSIF ST_RelateMatch(rec.im, 'FF10F01F2') THEN
      -- first line (g1) is open, second (g2) is closed
      -- first boundary has puntual intersection with second interior
      --
      -- compute intersection, check it equals second endpoint
      IF ST_Equals(ST_Intersection(rec.g2, rec.g1),
                   ST_StartPoint(rec.g2))
      THEN
        CONTINUE;
      END IF;
    ELSIF ST_RelateMatch(rec.im, 'F01FFF102') THEN
      -- second line (g2) is open, first (g1) is closed
      -- second boundary has puntual intersection with first interior
      -- 
      -- compute intersection, check it equals first endpoint
      IF ST_Equals(ST_Intersection(rec.g2, rec.g1),
                   ST_StartPoint(rec.g1))
      THEN
        CONTINUE;
      END IF;
    ELSIF ST_RelateMatch(rec.im, '0F1FFF1F2') THEN
      -- both lines are closed (boundary intersects nothing)
      -- they have puntual intersection between interiors
      -- 
      -- compute intersection, check it's a single point
      -- and equals first StartPoint _and_ second StartPoint
      IF ST_Equals(ST_Intersection(rec.g1, rec.g2),
                   ST_StartPoint(rec.g1)) AND
         ST_Equals(ST_StartPoint(rec.g1), ST_StartPoint(rec.g2))
      THEN
        CONTINUE;
      END IF;
    END IF;
    retrec.error = 'edge crosses edge';
    retrec.id1 = rec.id1;
    retrec.id2 = rec.id2;
    RETURN NEXT retrec;
  END LOOP;
  -- Check for edge start_node geometry mis-match
  -- TODO: move this in the first edge table scan 
  FOR rec IN EXECUTE 'SELECT e.edge_id as id1, n.node_id as id2 FROM '
    || quote_ident(toponame) || '.edge e, '
    || quote_ident(toponame) || '.node n '
       'WHERE e.start_node = n.node_id '
       'AND NOT ST_Equals(ST_StartPoint(e.geom), n.geom)'
  LOOP
    retrec.error = 'edge start node geometry mis-match';
    retrec.id1 = rec.id1;
    retrec.id2 = rec.id2;
    RETURN NEXT retrec;
  END LOOP;
  -- Check for edge end_node geometry mis-match
  -- TODO: move this in the first edge table scan 
  FOR rec IN EXECUTE 'SELECT e.edge_id as id1, n.node_id as id2 FROM '
    || quote_ident(toponame) || '.edge e, '
    || quote_ident(toponame) || '.node n '
       'WHERE e.end_node = n.node_id '
       'AND NOT ST_Equals(ST_EndPoint(e.geom), n.geom)'
  LOOP
    retrec.error = 'edge end node geometry mis-match';
    retrec.id1 = rec.id1;
    retrec.id2 = rec.id2;
    RETURN NEXT retrec;
  END LOOP;
  -- Check for faces w/out edges
  FOR rec IN EXECUTE 'SELECT face_id as id1 FROM '
    || quote_ident(toponame) || '.face '
    || 'WHERE face_id > 0 EXCEPT ( SELECT left_face FROM '
    || quote_ident(toponame) || '.edge '
    || ' UNION SELECT right_face FROM '
    || quote_ident(toponame) || '.edge '
    || ')'
  LOOP
    retrec.error = 'face without edges';
    retrec.id1 = rec.id1;
    retrec.id2 = NULL;
    RETURN NEXT retrec;
  END LOOP;
  -- Now create a temporary table to construct all face geometries
  -- for checking their consistency
  sql := 'CREATE TEMP TABLE face_check ON COMMIT DROP AS '
       'SELECT face_id, topology.ST_GetFaceGeometry('
    || quote_literal(toponame) || ', face_id) as geom, mbr FROM '
    || quote_ident(toponame) || '.face WHERE face_id > 0';
  IF invalid_faces IS NOT NULL THEN
    sql := sql || ' AND NOT face_id = ANY ('
               || quote_literal(invalid_faces) || ')';
  END IF;
  EXECUTE sql;
  -- Build a gist index on geom
  EXECUTE 'CREATE INDEX "face_check_gist" ON '
       'face_check USING gist (geom);';
  -- Build a btree index on id
  EXECUTE 'CREATE INDEX "face_check_bt" ON ' 
       'face_check (face_id);';
  -- Scan the table looking for NULL geometries
  FOR rec IN EXECUTE
    'SELECT f1.face_id FROM '
       'face_check f1 WHERE f1.geom IS NULL OR ST_IsEmpty(f1.geom)'
  LOOP
    -- Face missing !
    retrec.error := 'face has no rings';
    retrec.id1 := rec.face_id;
    retrec.id2 := NULL;
    RETURN NEXT retrec;
  END LOOP;

  -- Scan the table looking for overlap or containment
  -- TODO: also check for MBR consistency
  FOR rec IN EXECUTE
    'SELECT f1.geom, f1.face_id as id1, f2.face_id as id2, '
       ' ST_Relate(f1.geom, f2.geom) as im'
       ' FROM '
       'face_check f1, '
       'face_check f2 '
       'WHERE f1.face_id < f2.face_id'
       ' AND f1.geom && f2.geom'
  LOOP
    -- Face overlap
    IF ST_RelateMatch(rec.im, 'T*T***T**') THEN
    retrec.error = 'face overlaps face';
    retrec.id1 = rec.id1;
    retrec.id2 = rec.id2;
    RETURN NEXT retrec;
    END IF;
    -- Face 1 is within face 2 
    IF ST_RelateMatch(rec.im, 'T*F**F***') THEN
    retrec.error = 'face within face';
    retrec.id1 = rec.id1;
    retrec.id2 = rec.id2;
    RETURN NEXT retrec;
    END IF;
    -- Face 1 contains face 2
    IF ST_RelateMatch(rec.im, 'T*****FF*') THEN
    retrec.error = 'face within face';
    retrec.id1 = rec.id2;
    retrec.id2 = rec.id1;
    RETURN NEXT retrec;
    END IF;
  END LOOP;

  DROP TABLE face_check;
  RETURN;
END
$function$
;]]></string>
			<input_param name="toponame" jt="12" type="varchar" />
			<result_param name="error" jt="12" type="varchar" />
			<result_param name="id1" jt="4" type="int4" />
			<result_param name="id2" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="uni" catalogname="ergomercator" >
		<table name="courses" >
			<column name="course_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="code" type="varchar" length="12" decimal="0" jt="12" />
			<column name="name" type="varchar" decimal="0" jt="12" />
			<index name="pk_courses" unique="UNIQUE_KEY" >
				<column name="course_id" />
			</index>
		</table>
		<table name="departments" >
			<column name="department_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="512" decimal="0" jt="12" />
			<column name="description" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="faculty_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="code" type="varchar" length="10" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="udpr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="udpr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="departments_pk" unique="PRIMARY_KEY" >
				<column name="department_id" />
			</index>
			<index name="udpr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="udpr_jguid" />
			</index>
			<index name="fki_departments_faculties_fk" unique="NORMAL" >
				<column name="faculty_id" />
			</index>
			<fk name="departments_faculties_fk" to_schema="ergomercator.uni" to_table="faculties" >
				<fk_column name="faculty_id" pk="faculty_id" />
			</fk>
		</table>
		<table name="faculties" >
			<column name="faculty_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="faculty_name" type="varchar" decimal="0" jt="12" />
			<column name="uni_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ufcl_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="ufcl_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="faculties_pk" unique="PRIMARY_KEY" >
				<column name="faculty_id" />
			</index>
			<index name="ufcl_jguid_uk" unique="UNIQUE_KEY" >
				<column name="ufcl_jguid" />
			</index>
			<index name="fki_faculties_universities_fk" unique="NORMAL" >
				<column name="uni_id" />
			</index>
			<index name="idx_faculties" unique="NORMAL" >
				<column name="town_id" />
			</index>
			<fk name="faculties_universities_fk" to_schema="ergomercator.uni" to_table="universities" >
				<fk_column name="uni_id" pk="uni_id" />
			</fk>
		</table>
		<table name="modules" >
			<column name="module_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="faculty_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="module_name" type="varchar" length="512" decimal="0" jt="12" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="umdl_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="umdl_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="modules_pk" unique="PRIMARY_KEY" >
				<column name="module_id" />
			</index>
			<index name="umdl_jguid_uk" unique="UNIQUE_KEY" >
				<column name="umdl_jguid" />
			</index>
			<index name="idx_modules" unique="NORMAL" >
				<column name="faculty_id" />
			</index>
			<index name="idx_modules_0" unique="NORMAL" >
				<column name="town_id" />
			</index>
			<fk name="fk_modules" to_schema="ergomercator.uni" to_table="faculties" >
				<fk_column name="faculty_id" pk="faculty_id" />
			</fk>
		</table>
		<table name="modules_courses" >
			<column name="module_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="course_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="idx_modules_courses" unique="NORMAL" >
				<column name="course_id" />
			</index>
			<index name="idx_modules_courses_0" unique="NORMAL" >
				<column name="module_id" />
			</index>
			<fk name="fk_modules_courses" to_schema="ergomercator.uni" to_table="courses" >
				<fk_column name="course_id" pk="course_id" />
			</fk>
		</table>
		<table name="professors" >
			<column name="professor_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="family_name" type="varchar" length="60" decimal="0" jt="12" />
			<column name="first_name" type="varchar" length="128" decimal="0" jt="12" />
		</table>
		<table name="students" >
			<column name="module_year" type="smallint" length="5" decimal="0" jt="5" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="faculty_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="university_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[This is the link with Uni Anagraphs in the university scheme]]></comment>
			</column>
			<index name="fki_students_faculties" unique="NORMAL" >
				<column name="faculty_id" />
			</index>
			<index name="fki_students_universities" unique="NORMAL" >
				<column name="university_id" />
			</index>
			<index name="fki_students_users" unique="NORMAL" >
				<column name="db_user_id" />
			</index>
			<fk name="fk_students_faculties" to_schema="ergomercator.uni" to_table="faculties" >
				<fk_column name="faculty_id" pk="faculty_id" />
			</fk>
			<fk name="fk_students_universities" to_schema="ergomercator.uni" to_table="universities" >
				<fk_column name="university_id" pk="uni_id" />
			</fk>
		</table>
		<table name="universities" >
			<column name="uni_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="name" type="varchar" length="512" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="logo_image_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="unvr_jguid" type="varchar" length="40" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="unvr_deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="universities_pk" unique="PRIMARY_KEY" >
				<column name="uni_id" />
			</index>
			<index name="unvr_jguid_uk" unique="UNIQUE_KEY" >
				<column name="unvr_jguid" />
			</index>
			<index name="idx_universities" unique="NORMAL" >
				<column name="country_id" />
			</index>
			<index name="idx_universities_0" unique="NORMAL" >
				<column name="region_id" />
			</index>
			<index name="idx_universities_1" unique="NORMAL" >
				<column name="town_id" />
			</index>
			<index name="idx_universities_2" unique="NORMAL" >
				<column name="logo_image_id" />
			</index>
		</table>
		<sequence name="courses_seq" options="START WITH 1" />
		<sequence name="departments_seq" options="START WITH 1" />
		<sequence name="faculties_seq" options="START WITH 1" />
		<sequence name="universities_seq" options="START WITH 1" />
		<trigger name="udpr_bi_trg" table="departments" id="Trigger_ea8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER udpr_bi_trg BEFORE INSERT OR UPDATE ON uni.departments FOR EACH ROW EXECUTE PROCEDURE uni.udpr_trg()]]></string>
		</trigger>
		<trigger name="ufcl_bi_trg" table="faculties" id="Trigger_942" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ufcl_bi_trg BEFORE INSERT OR UPDATE ON uni.faculties FOR EACH ROW EXECUTE PROCEDURE uni.ufcl_trg()]]></string>
		</trigger>
		<trigger name="umdl_bi_trg" table="modules" id="Trigger_2281" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER umdl_bi_trg BEFORE INSERT OR UPDATE ON uni.modules FOR EACH ROW EXECUTE PROCEDURE uni.umdl_trg()]]></string>
		</trigger>
		<trigger name="universities_bi_trg" table="universities" id="Trigger_10" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER universities_bi_trg BEFORE INSERT ON uni.universities FOR EACH ROW EXECUTE PROCEDURE uni.universities_new_id()]]></string>
		</trigger>
		<trigger name="unvr_bi_trg" table="universities" id="Trigger_1de9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER unvr_bi_trg BEFORE INSERT OR UPDATE ON uni.universities FOR EACH ROW EXECUTE PROCEDURE uni.unvr_trg()]]></string>
		</trigger>
		<function name="udpr_trg" id="Function_1ef5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION uni.udpr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.udpr_jguid is null then
     New.udpr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.udpr_deleted is null then
     New.udpr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ufcl_trg" id="Function_11b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION uni.ufcl_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.ufcl_jguid is null then
     New.ufcl_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.ufcl_deleted is null then
     New.ufcl_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="umdl_trg" id="Function_19cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION uni.umdl_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.umdl_jguid is null then
     New.umdl_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.umdl_deleted is null then
     New.umdl_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="universities_new_id" id="Function_1566" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION uni.universities_new_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.uni_id is null then
          New.uni_id:=nextval('uni.universities_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="unvr_trg" id="Function_dc8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION uni.unvr_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.unvr_jguid is null then
     New.unvr_jguid:= '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.unvr_deleted is null then
     New.unvr_deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id:=0;
  end if;
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="workflow" catalogname="ergomercator" >
		<table name="attachments" >
			<column name="work_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="blob_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="location" type="char" length="1" decimal="0" jt="1" mandatory="y" >
				<defo><![CDATA['D'::"char"]]></defo>
			</column>
			<column name="filename" type="varchar" length="256" decimal="0" jt="12" >
				<comment><![CDATA[a descriptive file name to identify the attachment]]></comment>
			</column>
			<column name="description" type="text" decimal="0" jt="12" >
				<comment><![CDATA[A long Text Description for the File]]></comment>
			</column>
			<column name="context" type="text" decimal="0" jt="12" >
				<comment><![CDATA[content text for contextual search on engine (from OCR or PDF-Word-Excel scan Read).]]></comment>
			</column>
			<column name="extension" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[File Extension (to correctly display the icon and manage MIME informations)]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="flg_internet" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[if true the record should be displayed on website for customers]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<index name="attachments_pk" unique="PRIMARY_KEY" >
				<column name="work_id" />
				<column name="blob_id" />
			</index>
			<index name="attachments_jpk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="attachments_uk" unique="UNIQUE_KEY" >
				<column name="blob_jguid" />
			</index>
			<fk name="fk_attachments_works" to_schema="ergomercator.workflow" to_table="workflows" update_action="cascade" >
				<fk_column name="work_id" pk="id" />
			</fk>
		</table>
		<table name="levels" >
			<comment><![CDATA[This table manages the levels or states for workflow to make it operate like a state-machine]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Numerical Level can be -1 if the work has been deleted or undone. 0 at starting level and usually 9 when completed]]></comment>
			</column>
			<column name="description" type="varchar" length="60" decimal="0" jt="12" mandatory="y" />
			<column name="icon" type="smallint" length="5" decimal="0" jt="5" />
			<column name="color" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="pk_levels_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_levels_description" unique="UNIQUE_KEY" >
				<column name="description" />
			</index>
		</table>
		<table name="types" >
			<comment><![CDATA[WorkFlow Order Types a Workflow can have only one Type (Goal or Reason).]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Workflow Name]]></comment>
			</column>
			<column name="icon_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="pk_types_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="uk_types_guid" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="workflows" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="workdate" type="timestamptz" length="12" decimal="6" jt="93" mandatory="y" />
			<column name="code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="office_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="customer_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="year" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="type_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="level_id" type="smallint" length="5" decimal="0" jt="5" />
			<index name="workflows_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="workflow_code_uk" unique="UNIQUE_KEY" >
				<column name="code" />
			</index>
			<index name="workflows_jguid_uk" unique="UNIQUE_INDEX" >
				<column name="jguid" />
			</index>
			<index name="idx_workflows_type_id" unique="NORMAL" >
				<column name="type_id" />
			</index>
			<fk name="fk_workflows_levels" to_schema="ergomercator.workflow" to_table="levels" >
				<fk_column name="level_id" pk="id" />
			</fk>
			<fk name="fk_workflows_types" to_schema="ergomercator.workflow" to_table="types" update_action="cascade" >
				<fk_column name="type_id" pk="id" />
			</fk>
		</table>
		<view name="attachments_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT a.work_id,
    a.blob_id,
    a.blob_jguid,
    a.location,
    a.filename,
    a.description,
    a.context,
    a.extension,
    a.db_schema_id,
    a.flg_internet,
    a.jguid,
    f.blob_file,
    f.blob_size,
    f.blob_key,
    f.filename AS blob_filename,
    f.is_external,
    f.insert_date,
    f.isresource,
    f.directory_id,
    f.db_user_id,
    d.directory_path
   FROM ((workflow.attachments a
     JOIN cloud.blob_files f ON ((f.blob_id = a.blob_id)))
     LEFT JOIN cloud.directories d ON ((f.directory_id = d.directory_id)));]]></view_script>
			<column name="work_id" type="bigint" />
			<column name="blob_id" type="bigint" />
			<column name="blob_jguid" type="uuid" />
			<column name="location" type="char" />
			<column name="filename" type="varchar" />
			<column name="description" type="text" />
			<column name="context" type="text" />
			<column name="extension" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="flg_internet" type="boolean" />
			<column name="jguid" type="uuid" />
			<column name="blob_file" type="bytea" />
			<column name="blob_size" type="bigint" />
			<column name="blob_key" type="varchar" />
			<column name="blob_filename" type="varchar" />
			<column name="is_external" type="boolean" />
			<column name="insert_date" type="timestamp" />
			<column name="isresource" type="boolean" />
			<column name="directory_id" type="bigint" />
			<column name="db_user_id" type="integer" />
			<column name="directory_path" type="varchar" />
		</view>
		<view name="workflows_folders" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT DISTINCT (((('workflows'::text || '/'::text) || date_part('year'::text, d.workdate)) || '/'::text) || lpad((date_part('month'::text, d.workdate))::text, 2, '0'::text)) AS path
   FROM workflow.workflows d
  WHERE (d.workdate IS NOT NULL)
  ORDER BY (((('workflows'::text || '/'::text) || date_part('year'::text, d.workdate)) || '/'::text) || lpad((date_part('month'::text, d.workdate))::text, 2, '0'::text));]]></view_script>
			<column name="path" type="text" />
		</view>
		<sequence name="workflows_seq" options="START WITH 1" />
		<trigger name="attachments_view_ioi_trg" id="Trigger_2688" isSystem="false" />
		<trigger name="attachments_view_iou_trg" id="Trigger_857" isSystem="false" />
		<trigger name="workflow_biu_trg" table="workflows" id="Trigger_1e2f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER workflow_biu_trg BEFORE INSERT OR UPDATE ON workflow.workflows FOR EACH ROW EXECUTE PROCEDURE workflow.workflows_trg()]]></string>
		</trigger>
		<function name="attachments_view_insert_trg" id="Function_9bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.attachments_view_insert_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
    if New.blob_id is null then
       New.blob_id:=nextval('cloud.file_seq');
    end if;
	
	if new.isresource is null then
       New.isresource := false; 
    end if;
	
	if new.jguid is null then
       New.jguid := false; 
    end if;
	
	if new.location is null then 
	   New.location := 'G'; 
	end if; 
	
  INSERT INTO workflow.attachments (
    jguid, 
    work_id,
    blob_id,
    blob_jguid,
    location,
    filename,
    description,
    context,
    extension,
    db_schema_id
  )
  VALUES (
    new.jguid, 
    new.work_id,
    new.blob_id,
    new.blob_jguid,
    new.location,
    new.filename,
    new.description,
    new.context,
    new.extension,
    new.db_schema_id
  );
  
  INSERT INTO cloud.blob_files (
    blob_id,
    blob_file,
    blob_size,
    db_schema_id,
    blob_key,
    db_user_id,
    ispublic,
    cblb_jguid,
    cblb_deleted,
    file_ext,
    filename,
    isresource,
    is_external,
    ex_location,
    jguid,
    insert_date,
    description
  )
  VALUES (
    new.blob_id,
    new.blob_file,
    new.blob_size,
    new.db_schema_id,
    new.blob_key,
    new.db_user_id,
    false,
    new.jguid,
    new.cblb_deleted,
    new.extension,
    new.filename,
    new.isresource,
    new.is_external,
    new.location,
    new.jguid,
    now(),
    new.description
  );  
  
  
  return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="attachments_view_update_trg" id="Function_1165" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.attachments_view_update_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  UPDATE workflow.attachments SET
    work_id = new.work_id,
    blob_id = new.blob_id,
    blob_jguid = new.blob_jguid,
    location = new.location,
    filename = new.filename,
    description = new.description,
    context = new.context,
    "extension" = new.extension,
    db_schema_id = new.db_schema_id
  WHERE 
   jguid = old.jguid;
   
   UPDATE cloud.blob_files SET
    blob_id = new.blob_id, 
    blob_file = new.blob_file,
    blob_size = new.blob_size,
    db_schema_id = new.db_schema_id,
    blob_key = new.blob_key,
    db_user_id = new.db_user_id,
    ispublic = new.ispublic,
    file_ext = new.file_ext,
    filename = new.filename,
    isresource = new.isresource,
    is_external = new.is_external,
    ex_location = new.location,
    jguid = new.jguid,
    description = new.description
  WHERE 
    jguid = new.jguid;
   return new; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_id_by_code" id="Function_1335" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.get_id_by_code(p_code character varying, p_schema_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
declare 
  I integer; 
  R integer; 
begin
  R := null; 
  select into I count(1)
     from workflow.workflows a
	 where
	    code = Upper(p_code) 
		and db_schema_id = p_schema_id; 
		
	if I = 1 then
    select into R id 
      from workflow.workflows a
	 where
	    code = Upper(p_code) 
		and db_schema_id = p_schema_id; 
	end if; 
	
   return R; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_schema_id" jt="4" type="int4" />
		</function>
		<function name="sp_del_workflows" id="Function_245" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.sp_del_workflows(p_id bigint)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE workflow.workflows SET deleted = TRUE
  WHERE 
    (id = p_id) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_id" jt="-5" type="int8" />
		</function>
		<function name="sp_ins_workflows" id="Function_505" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.sp_ins_workflows(p_id bigint, p_jguid uuid, p_workdate timestamp with time zone, p_code character varying, p_office_id integer, p_customer_id integer, p_year smallint, p_type_id smallint, p_deleted boolean, p_db_schema_id integer, p_level_id smallint)
 RETURNS bigint
 LANGUAGE plpgsql
AS $function$
DECLARE
  v_count bigint; v_id bigint; v_jguid uuid;
BEGIN
  v_count := 0; 
  v_id := 0;
  
  if p_id is not null then 
   -- select the number of actors from the actor table
   select 
      count(1), min(jguid)
   into 
      v_count, v_jguid
   from 
      workflow.workflows where id = p_id;  
      
   if v_count > 0 then 
     v_id := p_id;
   end if; 
   
  end if; 
  if p_jguid is not null then 
  
   -- select the number of actors from the actor table
   select 
      count(1), id
   into 
      v_count, v_id
   from 
      workflow.workflows where jguid = p_jguid 
   group by id;
    
  end if; 
  
  if p_workdate is null then 
     p_workdate :=current_date; 
  end if;
  if p_year is null then 
     p_year := date_part('year' , current_date); 
  end if;
  
  if p_type_id is null then 
    p_type_id := 2;
  end if; 

  if v_count > 0 then  -- begin if v_count
  
  v_id :=  
     workflow.sp_upd_workflows ( 
     p_id,
     p_jguid,
     p_workdate,
     p_code,
     p_office_id,
     p_customer_id,
     p_year,
     p_type_id,
     p_deleted,
     p_db_schema_id,
     p_level_id
     );
  
  else  -- if 0
    if p_jguid is null then
       p_jguid := '{' || public.uuid_generate_v1mc() || '}';
    end if;
    if p_deleted is null then
       p_deleted := false;
    end if;
    if p_db_schema_id is null then
       p_db_schema_id := 0;
    end if;
  
    if p_id IS null then
       p_id :=nextval ('workflow.workflows_seq');
    end if; 
    
    v_id := p_id; 
    INSERT INTO workflow.workflows (
      id,
      jguid,
      workdate,
      code,
      office_id,
      customer_id,
      year,
      type_id,
      deleted,
      db_schema_id,
      level_id
      )
  VALUES (
    p_id,
    p_jguid,
    p_workdate,
    p_code,
    p_office_id,
    p_customer_id,
    p_year,
    p_type_id,
    p_deleted,
    p_db_schema_id,
    p_level_id
  );
 
  end if; 
  
  return v_id; 
  
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_workdate" jt="93" type="timestamptz" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_office_id" jt="4" type="int4" />
			<input_param name="p_customer_id" jt="4" type="int4" />
			<input_param name="p_year" jt="5" type="int2" />
			<input_param name="p_type_id" jt="5" type="int2" />
			<input_param name="p_deleted" jt="-7" type="bool" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_level_id" jt="5" type="int2" />
		</function>
		<function name="sp_sel_workflows" id="Function_2307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.sp_sel_workflows()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    id,
    jguid,
    workdate,
    code,
    office_id,
    customer_id,
    year,
    type_id,
    deleted,
    db_schema_id,
    level_id
  FROM 
    workflow.workflows;
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_upd_workflows" id="Function_46b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.sp_upd_workflows(p_id bigint, p_jguid uuid, p_workdate timestamp with time zone, p_code character varying, p_office_id integer, p_customer_id integer, p_year smallint, p_type_id smallint, p_deleted boolean, p_db_schema_id integer, p_level_id smallint)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE 
    v_count bigint; v_id bigint; v_jguid uuid;
BEGIN
  if p_jguid is not null and p_id is null then 
     -- select the number of actors from the actor table
   select 
      count(1), id
   into 
      v_count, v_id
   from 
      workflow.workflows where jguid = p_jguid 
   group by id;
   p_id := v_id;     
  end if; 
  UPDATE workflow.workflows SET
    jguid = p_jguid,
    workdate = p_workdate,
    code = p_code,
    office_id = p_office_id,
    customer_id = p_customer_id,
    year = p_year,
    type_id = p_type_id,
    deleted = p_deleted,
    db_schema_id = p_db_schema_id,
    level_id = p_level_id
  WHERE 
    (id = p_id) ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="p_id" jt="-5" type="int8" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_workdate" jt="93" type="timestamptz" />
			<input_param name="p_code" jt="12" type="varchar" />
			<input_param name="p_office_id" jt="4" type="int4" />
			<input_param name="p_customer_id" jt="4" type="int4" />
			<input_param name="p_year" jt="5" type="int2" />
			<input_param name="p_type_id" jt="5" type="int2" />
			<input_param name="p_deleted" jt="-7" type="bool" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_level_id" jt="5" type="int2" />
		</function>
		<function name="workflows_trg" id="Function_128a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION workflow.workflows_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid := '{' || public.uuid_generate_v1mc() || '}';
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if New.db_schema_id is null then
     New.db_schema_id :=0 ;
  end if;
  
     if New.id is null then
          New.id:=nextval('workflow.workflows_seq');
      end if; 
  
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="finance" >
		<comment><![CDATA[finance, cash accounts, credits and debits]]></comment>
		<table name="debit_credit_account" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="credit_anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="debit_anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="amount" type="money" decimal="0" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="sign" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[(+ 1)]]></defo>
			</column>
			<column name="datetime" type="timestamptz" length="12" decimal="6" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[32]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="debit_credit_account_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="debit_credit_account_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<trigger name="debit_credit_account_biu_trg" id="Trigger_2412" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER debit_credit_account_biu_trg BEFORE INSERT OR UPDATE ON finance.debit_credit_account FOR EACH ROW EXECUTE PROCEDURE jpublic.defaults_trg()]]></string>
		</trigger>
		<function name="debit_credit_account_view_trg" id="Function_af1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION finance.debit_credit_account_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE finance.debit_credit_account SET
    credit_anagraph_id = New.credit_anagraph_id,
    debit_anagraph_id = New.debit_anagraph_id,
    amount = New.amount,
    sign = New.sign,
    datetime = New.datetime,
    db_schema_id = New.db_schema_id,
    jguid = New.jguid,
    deleted = New.deleted,
    insert_date = New.insert_date,
    update_date = New.update_date,
    user_insert = New.user_insert,
    user_update = New.user_update
  WHERE 
    (jguid = New.jguid) ;
  INSERT INTO finance.debit_credit_account (
    credit_anagraph_id,
    debit_anagraph_id,
    amount,
    sign,
    datetime,
    db_schema_id,
    jguid,
    deleted,
    insert_date,
    update_date,
    user_insert,
    user_update,
    id
  )
  VALUES (
    New.credit_anagraph_id,
    New.debit_anagraph_id,
    New.amount,
    New.sign,
    New.datetime,
    New.db_schema_id,
    New.jguid,
    New.deleted,
    New.insert_date,
    New.update_date,
    New.user_insert,
    New.user_update,
    New.id
  );
  DELETE FROM finance.debit_credit_account
  WHERE 
    (jguid = New.jguid) ;
END;
$function$
;]]></string>
		</function>
	</schema>
	<schema name="maillist" >
		<table name="campaign_members" >
			<column name="campaign_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="member_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sent" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="sent_datetime" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="clicked" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="opens" type="smallint" length="5" decimal="0" jt="5" />
			<column name="clicks" type="smallint" length="5" decimal="0" jt="5" />
			<index name="campaign_members_pk" unique="PRIMARY_KEY" >
				<column name="campaign_id" />
				<column name="member_id" />
			</index>
		</table>
		<table name="campaigns" >
			<column name="campaign_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="campaign_name" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="mail_campaigns_pk" unique="PRIMARY_KEY" >
				<column name="campaign_id" />
			</index>
		</table>
		<table name="clicks" >
			<column name="url_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="campaign_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="member_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="mail_clicks_pk" unique="PRIMARY_KEY" >
				<column name="url_id" />
				<column name="campaign_id" />
				<column name="member_id" />
			</index>
		</table>
		<table name="list_members" >
			<column name="member_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="mailing_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="email" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<index name="mail_list_members_pk" unique="PRIMARY_KEY" >
				<column name="member_id" />
			</index>
		</table>
		<table name="mailing_list" >
			<column name="mailing_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="creation_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="list_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="mailtext" type="text" decimal="0" jt="12" />
			<column name="mailing_key" type="varchar" length="128" decimal="0" jt="12" />
			<index name="mailing_list_pk" unique="PRIMARY_KEY" >
				<column name="mailing_id" />
			</index>
		</table>
		<table name="opens" >
			<column name="campaign_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="member_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="open_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<index name="mail_opens_pk" unique="PRIMARY_KEY" >
				<column name="campaign_id" />
				<column name="member_id" />
			</index>
		</table>
		<table name="sender" >
			<column name="ms_send_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="db_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="ms_to" type="varchar" length="256" decimal="0" jt="12" mandatory="y" />
			<column name="ms_cc" type="varchar" length="256" decimal="0" jt="12" />
			<column name="ms_bcc" type="varchar" length="256" decimal="0" jt="12" />
			<column name="ms_text" type="varchar" length="2048" decimal="0" jt="12" />
			<column name="ms_object" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="30" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="30" decimal="0" jt="12" />
			<column name="ms_owner" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="ms_sent" type="varchar" length="3" decimal="0" jt="12" >
				<defo><![CDATA['N'::character varying]]></defo>
			</column>
			<column name="ms_from" type="varchar" length="256" decimal="0" jt="12" />
			<column name="ms_from_addr" type="varchar" length="256" decimal="0" jt="12" />
			<index name="mail_send_pk" unique="PRIMARY_KEY" >
				<column name="ms_send_id" />
			</index>
			<index name="mail_send_owner" unique="NORMAL" >
				<column name="ms_owner" />
			</index>
		</table>
		<table name="sender_attachments" >
			<column name="attach_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="ms_send_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="filename" type="varchar" length="512" decimal="0" jt="12" />
			<column name="attachment" type="bytea" decimal="0" jt="-2" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<comment><![CDATA[unique identifier for Mail Attachment]]></comment>
			</column>
			<column name="blob_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="context" type="text" decimal="0" jt="12" />
			<column name="description" type="varchar" length="1024" decimal="0" jt="12" >
				<comment><![CDATA[Descritpion for search index of Files]]></comment>
			</column>
			<index name="attachments_pk" unique="PRIMARY_KEY" >
				<column name="attach_id" />
			</index>
			<index name="mail_attach_mail_fk_i" unique="NORMAL" >
				<column name="ms_send_id" />
			</index>
			<fk name="fk_attachments" to_schema="maillist" to_table="sender" >
				<fk_column name="ms_send_id" pk="ms_send_id" />
			</fk>
		</table>
		<table name="subset_members" >
			<column name="member_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="subset_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="primarykey3" unique="PRIMARY_KEY" >
				<column name="member_id" />
				<column name="subset_id" />
			</index>
		</table>
		<table name="subsets" >
			<column name="subset_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subset_name" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailing_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="mail_list_subset_pk" unique="PRIMARY_KEY" >
				<column name="subset_id" />
			</index>
		</table>
		<sequence name="attachments_seq" options="START WITH 1" />
		<sequence name="mailing_list_seq" options="START WITH 1" />
		<trigger name="attachments_bi_trg" table="sender_attachments" id="Trigger_23b" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER attachments_bi_trg BEFORE INSERT ON maillist.sender_attachments FOR EACH ROW EXECUTE PROCEDURE maillist.get_attachment_id_bi_trg()]]></string>
		</trigger>
		<trigger name="mailing_list_trg" table="mailing_list" id="Trigger_2b8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER mailing_list_trg BEFORE INSERT ON maillist.mailing_list FOR EACH ROW EXECUTE PROCEDURE maillist.get_mailing_list_bi_trg()]]></string>
		</trigger>
		<trigger name="ms_send_bi_trg" table="sender" id="Trigger_1bd7" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ms_send_bi_trg BEFORE INSERT ON maillist.sender FOR EACH ROW EXECUTE PROCEDURE maillist.ms_send_bi_trg()]]></string>
		</trigger>
		<function name="get_attachment_id_bi_trg" id="Function_bbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION maillist.get_attachment_id_bi_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.attach_id is null then
          New.attach_id:=nextval('mail.attachments_seq');
      end if; 
      Return NEW;
end;$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="get_mailing_list_bi_trg" id="Function_16f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION maillist.get_mailing_list_bi_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
     if New.mailing_id is null then
          New.mailing_id:=nextval('mail.mailing_list_seq');
      end if;
     if New.mailing_key is null then
          select system.get_key ( currval('mail.mailing_list_seq'), 32) into New.mailing_key;
     end if;
     if New.creation_date is null then
          New.creation_date := Now();
     end if;  
     Return NEW;
end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="ms_send_bi_trg" id="Function_14a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION maillist.ms_send_bi_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$begin
  if new.ms_bcc is null then new.ms_bcc := 'rickyarzu@gmail.com'; end if; 
  

end; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
	</schema>
	<schema name="messaging" >
		<table name="chat" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="from" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="to" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="message" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="json_content" type="json" decimal="0" jt="2000" />
			<index name="chat_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="mail_sent" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="mail_message" type="json" decimal="0" jt="2000" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="message_sent" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="message" type="text" decimal="0" jt="12" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
		</table>
	</schema>
	<schema name="oracle" >
		<udt name="date" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} timestamp(0) without time zone ]]></udt_script>
		</udt>
		<view name="dba_segments" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT pg_namespace.nspname AS owner,
    pg_class.relname AS segment_name,
        CASE
            WHEN (pg_class.relkind = 'r'::"char") THEN 'TABLE'::character varying(18)
            WHEN (pg_class.relkind = 'i'::"char") THEN 'INDEX'::character varying(18)
            WHEN (pg_class.relkind = 'f'::"char") THEN 'FOREIGN TABLE'::character varying(18)
            WHEN (pg_class.relkind = 'S'::"char") THEN 'SEQUENCE'::character varying(18)
            WHEN (pg_class.relkind = 's'::"char") THEN 'SPECIAL'::character varying(18)
            WHEN (pg_class.relkind = 't'::"char") THEN 'TOAST TABLE'::character varying(18)
            WHEN (pg_class.relkind = 'v'::"char") THEN 'VIEW'::character varying(18)
            ELSE (pg_class.relkind)::character varying(18)
        END AS segment_type,
    pg_tablespace.spcname AS tablespace_name,
    pg_class.relfilenode AS header_file,
    NULL::oid AS header_block,
    pg_relation_size((pg_class.oid)::regclass) AS bytes,
    pg_class.relpages AS blocks
   FROM ((pg_class
     JOIN pg_namespace ON ((pg_class.relnamespace = pg_namespace.oid)))
     LEFT JOIN pg_tablespace ON ((pg_class.reltablespace = pg_tablespace.oid)))
  WHERE (pg_class.relkind <> ALL (ARRAY['f'::"char", 'S'::"char", 'v'::"char"]));]]></view_script>
			<column name="owner" type="name" />
			<column name="segment_name" type="name" />
			<column name="segment_type" type="varchar" />
			<column name="tablespace_name" type="name" />
			<column name="header_file" type="oid" />
			<column name="header_block" type="oid" />
			<column name="bytes" type="bigint" />
			<column name="blocks" type="integer" />
		</view>
		<view name="product_component_version" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT oracle.get_major_version() AS product,
    oracle.get_full_version_num() AS version,
    ((oracle.get_platform() || ' '::text) || oracle.get_status()) AS status
UNION ALL
 SELECT pg_extension.extname AS product,
        CASE
            WHEN (pg_extension.extname = 'plpgsql'::name) THEN oracle.get_full_version_num()
            ELSE pg_extension.extversion
        END AS version,
    ((oracle.get_platform() || ' '::text) || oracle.get_status()) AS status
   FROM pg_extension;]]></view_script>
			<column name="product" type="text" />
			<column name="version" type="text" />
			<column name="status" type="text" />
		</view>
		<view name="user_cons_columns" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT constraint_column_usage.constraint_name,
    constraint_column_usage.column_name,
    constraint_column_usage.table_name
   FROM information_schema.constraint_column_usage;]]></view_script>
			<column name="constraint_name" type="sql_identifier" />
			<column name="column_name" type="sql_identifier" />
			<column name="table_name" type="sql_identifier" />
		</view>
		<view name="user_constraints" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c1.conname AS constraint_name,
    (c1.conindid)::regclass AS index_name,
        CASE c1.contype
            WHEN 'p'::"char" THEN 'P'::text
            WHEN 'f'::"char" THEN 'R'::text
            ELSE NULL::text
        END AS constraint_type,
    pg_class.relname AS table_name,
        CASE c1.contype
            WHEN 'f'::"char" THEN ( SELECT c2.conname
               FROM pg_constraint c2
              WHERE ((c2.contype = 'p'::"char") AND (c2.conindid = c1.conindid)))
            ELSE NULL::name
        END AS r_constraint_name
   FROM pg_constraint c1,
    pg_class
  WHERE (c1.conrelid = pg_class.oid);]]></view_script>
			<column name="constraint_name" type="name" />
			<column name="index_name" type="regclass" />
			<column name="constraint_type" type="text" />
			<column name="table_name" type="name" />
			<column name="r_constraint_name" type="name" />
		</view>
		<view name="user_ind_columns" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT pg_attribute.attname AS column_name,
    c1.relname AS index_name,
    c2.relname AS table_name
   FROM ((((( SELECT unnest(pg_index.indkey) AS attno,
            pg_index.indexrelid,
            pg_index.indrelid
           FROM pg_index) s
     JOIN pg_attribute ON (((s.attno = pg_attribute.attnum) AND (pg_attribute.attrelid = s.indrelid))))
     JOIN pg_class c1 ON ((s.indexrelid = c1.oid)))
     JOIN pg_class c2 ON ((s.indrelid = c2.oid)))
     JOIN pg_namespace n ON ((c2.relnamespace = n.oid)))
  WHERE ((s.attno > 0) AND (n.nspname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])));]]></view_script>
			<column name="column_name" type="name" />
			<column name="index_name" type="name" />
			<column name="table_name" type="name" />
		</view>
		<view name="user_objects" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c.relname AS object_name,
    NULL::text AS subject_name,
    c.oid AS object_id,
        CASE c.relkind
            WHEN 'r'::"char" THEN 'TABLE'::text
            WHEN 'i'::"char" THEN 'INDEX'::text
            WHEN 'S'::"char" THEN 'SEQUENCE'::text
            WHEN 'v'::"char" THEN 'VIEW'::text
            WHEN 'm'::"char" THEN 'VIEW'::text
            WHEN 'f'::"char" THEN 'FOREIGN TABLE'::text
            ELSE NULL::text
        END AS object_type,
    NULL::timestamp(0) without time zone AS created,
    NULL::timestamp(0) without time zone AS last_ddl_time,
        CASE
            WHEN (c.relkind = 'i'::"char") THEN ( SELECT
                    CASE
                        WHEN pg_index.indisvalid THEN 'VALID'::text
                        ELSE 'INVALID'::text
                    END AS "case"
               FROM pg_index
              WHERE (pg_index.indexrelid = c.oid))
            ELSE
            CASE
                WHEN c.relispopulated THEN 'VALID'::text
                ELSE 'INVALID'::text
            END
        END AS status,
    c.relnamespace AS namespace
   FROM (pg_class c
     JOIN pg_namespace n ON ((c.relnamespace = n.oid)))
  WHERE ((c.relkind <> ALL (ARRAY['t'::"char", 'c'::"char"])) AND (n.nspname <> ALL (ARRAY['pg_toast'::name, 'pg_catalog'::name, 'information_schema'::name])))
UNION ALL
 SELECT t.tgname AS object_name,
    NULL::text AS subject_name,
    t.oid AS object_id,
    'TRIGGER'::text AS object_type,
    NULL::timestamp without time zone AS created,
    NULL::timestamp without time zone AS last_ddl_time,
    'VALID'::text AS status,
    c.relnamespace AS namespace
   FROM (pg_trigger t
     JOIN pg_class c ON ((t.tgrelid = c.oid)))
  WHERE (NOT t.tgisinternal)
UNION ALL
 SELECT p.proname AS object_name,
    NULL::text AS subject_name,
    p.oid AS object_id,
    'FUNCTION'::text AS object_type,
    NULL::timestamp without time zone AS created,
    NULL::timestamp without time zone AS last_ddl_time,
    'VALID'::text AS status,
    p.pronamespace AS namespace
   FROM (pg_proc p
     JOIN pg_namespace n ON ((p.pronamespace = n.oid)))
  WHERE (n.nspname <> ALL (ARRAY['pg_toast'::name, 'pg_catalog'::name, 'information_schema'::name]))
  ORDER BY 1;]]></view_script>
			<column name="object_name" type="name" />
			<column name="subject_name" type="text" />
			<column name="object_id" type="oid" />
			<column name="object_type" type="text" />
			<column name="created" type="timestamp" />
			<column name="last_ddl_time" type="timestamp" />
			<column name="status" type="text" />
			<column name="namespace" type="oid" />
		</view>
		<view name="user_procedures" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT p.proname AS object_name
   FROM (pg_proc p
     JOIN pg_namespace n ON (((p.pronamespace = n.oid) AND (n.nspname <> 'pg_catalog'::name))));]]></view_script>
			<column name="object_name" type="name" />
		</view>
		<view name="user_source" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT row_number() OVER (PARTITION BY s.oid) AS line,
    s.oid,
    s.text,
    s.name,
    s.type
   FROM ( SELECT pg_proc.oid,
            unnest(string_to_array(pg_proc.prosrc, '
'::text)) AS text,
            pg_proc.proname AS name,
            'FUNCTION'::text AS type
           FROM pg_proc) s;]]></view_script>
			<column name="line" type="bigint" />
			<column name="oid" type="oid" />
			<column name="text" type="text" />
			<column name="name" type="name" />
			<column name="type" type="text" />
		</view>
		<view name="user_tab_columns" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT columns.table_name,
    columns.column_name,
    columns.data_type,
    COALESCE(columns.character_maximum_length, columns.numeric_precision) AS data_length,
    columns.numeric_precision AS data_precision,
    columns.numeric_scale AS data_scale,
    columns.is_nullable AS nullable,
    columns.ordinal_position AS column_id,
    columns.is_updatable AS data_upgraded,
    columns.table_schema
   FROM information_schema.columns;]]></view_script>
			<column name="table_name" type="sql_identifier" />
			<column name="column_name" type="sql_identifier" />
			<column name="data_type" type="character_data" />
			<column name="data_length" type="cardinal_number" />
			<column name="data_precision" type="cardinal_number" />
			<column name="data_scale" type="cardinal_number" />
			<column name="nullable" type="yes_or_no" />
			<column name="column_id" type="cardinal_number" />
			<column name="data_upgraded" type="yes_or_no" />
			<column name="table_schema" type="sql_identifier" />
		</view>
		<view name="user_tables" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT tables.table_name
   FROM information_schema.tables
  WHERE ((tables.table_type)::text = 'BASE_TABLE'::text);]]></view_script>
			<column name="table_name" type="sql_identifier" />
		</view>
		<view name="user_views" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c.relname AS view_name,
    pg_get_userbyid(c.relowner) AS owner
   FROM (pg_class c
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE ((c.relkind = ANY (ARRAY['v'::"char", ''::"char"])) AND (n.nspname <> 'pg_catalog'::name) AND (n.nspname <> 'information_schema'::name) AND (n.nspname !~ '^pg_toast'::text) AND pg_table_is_visible(c.oid));]]></view_script>
			<column name="view_name" type="name" />
			<column name="owner" type="name" />
		</view>
		<function name="add_days_to_timestamp" id="Function_215f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.add_days_to_timestamp(oracle.date, integer)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 + interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="add_days_to_timestamp" id="Function_17ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.add_days_to_timestamp(oracle.date, bigint)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 + interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="-5" type="int8" />
		</function>
		<function name="add_days_to_timestamp" id="Function_1b8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.add_days_to_timestamp(oracle.date, smallint)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 + interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="5" type="int2" />
		</function>
		<function name="add_days_to_timestamp" id="Function_1dee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.add_days_to_timestamp(oracle.date, numeric)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 + interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="2" type="numeric" />
		</function>
		<function name="add_months" id="Function_1db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.add_months(timestamp with time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT ($1 + interval '1 month' * $2)::oracle.date; $function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="btrim" id="Function_1a2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(character, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="btrim" id="Function_c9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(character, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="btrim" id="Function_1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(character, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="btrim" id="Function_342" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(character, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="btrim" id="Function_2367" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(character)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.btrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
		</function>
		<function name="btrim" id="Function_185a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(text, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="btrim" id="Function_a93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="btrim" id="Function_686" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(text, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="btrim" id="Function_420" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(text, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="btrim" id="Function_936" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.btrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="btrim" id="Function_e17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(varchar2, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="btrim" id="Function_1f8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(varchar2, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="btrim" id="Function_6a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(varchar2, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="btrim" id="Function_1aca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(varchar2, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="btrim" id="Function_142" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(varchar2)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.btrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
		</function>
		<function name="btrim" id="Function_159a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(nvarchar2, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="btrim" id="Function_201a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(nvarchar2, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="btrim" id="Function_316" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(nvarchar2, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="btrim" id="Function_b9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(nvarchar2, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="btrim" id="Function_1d9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.btrim(nvarchar2)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.btrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
		</function>
		<function name="dbtimezone" id="Function_196c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.dbtimezone()
 RETURNS text
 LANGUAGE c
 STABLE STRICT
AS '$libdir/orafce', $function$orafce_dbtimezone$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="get_full_version_num" id="Function_2683" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.get_full_version_num()
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$ora_get_full_version_num$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="get_major_version" id="Function_30" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.get_major_version()
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$ora_get_major_version$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="get_major_version_num" id="Function_21c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.get_major_version_num()
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$ora_get_major_version_num$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="get_platform" id="Function_22f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.get_platform()
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$ora_get_platform$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="get_status" id="Function_18e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.get_status()
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$ora_get_status$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="last_day" id="Function_1b39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.last_day(timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT (date_trunc('MONTH', $1) + INTERVAL '1 MONTH - 1 day' + $1::time)::oracle.date; $function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="93" type="timestamptz" />
		</function>
		<function name="length" id="Function_e74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.length(character)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_bpcharlen$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="1" type="bpchar" />
		</function>
		<function name="lpad" id="Function_11e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(character, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="lpad" id="Function_1c83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(character, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="lpad" id="Function_109a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(character, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="lpad" id="Function_2e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(character, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="lpad" id="Function_1668" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(character, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.lpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="lpad" id="Function_219c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(text, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="lpad" id="Function_9c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(varchar2, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="lpad" id="Function_20bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(nvarchar2, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="lpad" id="Function_340" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(text, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="lpad" id="Function_1d54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(text, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="lpad" id="Function_14d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(text, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="lpad" id="Function_1b16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(text, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.lpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="lpad" id="Function_758" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(varchar2, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="lpad" id="Function_2126" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(varchar2, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="lpad" id="Function_20ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(varchar2, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="lpad" id="Function_1f35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(varchar2, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.lpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="lpad" id="Function_1fd4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(nvarchar2, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="lpad" id="Function_259c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(nvarchar2, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="lpad" id="Function_1690" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(nvarchar2, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_lpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="lpad" id="Function_c35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(nvarchar2, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.lpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="lpad" id="Function_1027" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(integer, integer, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$
SELECT pg_catalog.lpad($1::text,$2,$3::text)
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
		</function>
		<function name="lpad" id="Function_1504" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(bigint, integer, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$
SELECT pg_catalog.lpad($1::text,$2,$3::text)
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
		</function>
		<function name="lpad" id="Function_1f00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(smallint, integer, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$
SELECT pg_catalog.lpad($1::text,$2,$3::text)
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
		</function>
		<function name="lpad" id="Function_ce9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.lpad(numeric, integer, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$
SELECT pg_catalog.lpad($1::text,$2,$3::text)
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
		</function>
		<function name="ltrim" id="Function_1e3f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(character, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="ltrim" id="Function_152d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(character, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="ltrim" id="Function_22b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(character, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="ltrim" id="Function_10f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(character, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="ltrim" id="Function_1a9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(character)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.ltrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
		</function>
		<function name="ltrim" id="Function_c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(text, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="ltrim" id="Function_f0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="ltrim" id="Function_13ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(text, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="ltrim" id="Function_1b52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(text, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="ltrim" id="Function_1237" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.ltrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="ltrim" id="Function_186d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(varchar2, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="ltrim" id="Function_10e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(varchar2, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="ltrim" id="Function_1b9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(varchar2, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="ltrim" id="Function_1744" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(varchar2, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="ltrim" id="Function_19f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(varchar2)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.ltrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
		</function>
		<function name="ltrim" id="Function_e22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(nvarchar2, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="ltrim" id="Function_2e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(nvarchar2, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="ltrim" id="Function_4e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(nvarchar2, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="ltrim" id="Function_3d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(nvarchar2, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="ltrim" id="Function_143f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.ltrim(nvarchar2)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.ltrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
		</function>
		<function name="months_between" id="Function_1cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.months_between(timestamp with time zone, timestamp with time zone)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT pg_catalog.months_between($1::pg_catalog.date,$2::pg_catalog.date); $function$
;]]></string>
			<input_param name="returnValue" jt="2" type="numeric" />
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
		</function>
		<function name="next_day" id="Function_1f28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.next_day(timestamp with time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT (pg_catalog.next_day($1::pg_catalog.date,$2) + $1::time)::oracle.date; $function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="next_day" id="Function_c83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.next_day(timestamp with time zone, text)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT (pg_catalog.next_day($1::pg_catalog.date,$2) + $1::time)::oracle.date; $function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="nvl" id="Function_1742" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.nvl(bigint, integer)
 RETURNS bigint
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$
SELECT coalesce($1, $2)
$function$
;]]></string>
			<input_param name="returnValue" jt="-5" type="int8" />
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="nvl" id="Function_96f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.nvl(numeric, integer)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$
SELECT coalesce($1, $2)
$function$
;]]></string>
			<input_param name="returnValue" jt="2" type="numeric" />
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="round" id="Function_490" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.round(double precision, integer)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$SELECT pg_catalog.round($1::numeric, $2)$function$
;]]></string>
			<input_param name="returnValue" jt="2" type="numeric" />
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="rpad" id="Function_f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(character, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="rpad" id="Function_633" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(character, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="rpad" id="Function_1d07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(character, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="rpad" id="Function_123a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(character, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="rpad" id="Function_d74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(character, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="rpad" id="Function_66c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(text, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="rpad" id="Function_24ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(varchar2, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="rpad" id="Function_1b43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(nvarchar2, integer, character)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1" type="bpchar" />
		</function>
		<function name="rpad" id="Function_1278" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(text, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="rpad" id="Function_e1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(text, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="rpad" id="Function_c28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(text, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="rpad" id="Function_1d82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(text, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="rpad" id="Function_e84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(varchar2, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="rpad" id="Function_1a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(varchar2, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="rpad" id="Function_1ef6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(varchar2, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="rpad" id="Function_1b12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(varchar2, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="rpad" id="Function_b20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(nvarchar2, integer, text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</function>
		<function name="rpad" id="Function_1e59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(nvarchar2, integer, varchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="varchar2" />
		</function>
		<function name="rpad" id="Function_1f7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(nvarchar2, integer, nvarchar2)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$orafce_rpad$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="nvarchar2" />
		</function>
		<function name="rpad" id="Function_7ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rpad(nvarchar2, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rpad($1, $2, ' '::text); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="rtrim" id="Function_19f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(character, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="rtrim" id="Function_ada" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(character, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="rtrim" id="Function_587" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(character, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="rtrim" id="Function_4e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(character, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="rtrim" id="Function_1bf5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(character)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rtrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1" type="bpchar" />
		</function>
		<function name="rtrim" id="Function_2db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(text, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="rtrim" id="Function_161e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="rtrim" id="Function_11ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(text, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="rtrim" id="Function_26e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(text, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="rtrim" id="Function_91d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rtrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="rtrim" id="Function_189c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(varchar2, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="rtrim" id="Function_2331" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(varchar2, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="rtrim" id="Function_1655" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(varchar2, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="rtrim" id="Function_18eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(varchar2, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="rtrim" id="Function_23c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(varchar2)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rtrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="varchar2" />
		</function>
		<function name="rtrim" id="Function_265d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(nvarchar2, character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1" type="bpchar" />
		</function>
		<function name="rtrim" id="Function_e7f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(nvarchar2, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="rtrim" id="Function_1c63" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(nvarchar2, varchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1111" type="varchar2" />
		</function>
		<function name="rtrim" id="Function_13d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(nvarchar2, nvarchar2)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
			<input_param name="$2" jt="1111" type="nvarchar2" />
		</function>
		<function name="rtrim" id="Function_1bff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.rtrim(nvarchar2)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT oracle.rtrim($1, ' '::text) $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="1111" type="nvarchar2" />
		</function>
		<function name="sessiontimezone" id="Function_160a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.sessiontimezone()
 RETURNS text
 LANGUAGE c
 STABLE STRICT
AS '$libdir/orafce', $function$orafce_sessiontimezone$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
		<function name="substr" id="Function_138" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.substr(str text, start integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$oracle_substr2$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
		</function>
		<function name="substr" id="Function_66f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.substr(str text, start integer, len integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$oracle_substr3$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="len" jt="4" type="int4" />
		</function>
		<function name="substr" id="Function_d7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.substr(numeric, numeric)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT oracle.substr($1::text,trunc($2)::int);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
		</function>
		<function name="substr" id="Function_1954" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.substr(numeric, numeric, numeric)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT oracle.substr($1::text,trunc($2)::int,trunc($3)::int);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<input_param name="$3" jt="2" type="numeric" />
		</function>
		<function name="substr" id="Function_112f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.substr(character varying, numeric)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT oracle.substr($1,trunc($2)::int);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="varchar" />
			<input_param name="$2" jt="2" type="numeric" />
		</function>
		<function name="substr" id="Function_2551" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.substr(character varying, numeric, numeric)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT oracle.substr($1,trunc($2)::int,trunc($3)::int);
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="12" type="varchar" />
			<input_param name="$2" jt="2" type="numeric" />
			<input_param name="$3" jt="2" type="numeric" />
		</function>
		<function name="subtract" id="Function_e7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.subtract(oracle.date, integer)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 - interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="subtract" id="Function_1b1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.subtract(oracle.date, bigint)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 - interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="-5" type="int8" />
		</function>
		<function name="subtract" id="Function_1931" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.subtract(oracle.date, smallint)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 - interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="5" type="int2" />
		</function>
		<function name="subtract" id="Function_1adf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.subtract(oracle.date, numeric)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT $1 - interval '1 day' * $2;
$function$
;]]></string>
			<input_param name="returnValue" jt="93" type="timestamp" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="2" type="numeric" />
		</function>
		<function name="subtract" id="Function_f43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.subtract(oracle.date, oracle.date)
 RETURNS double precision
 LANGUAGE sql
 IMMUTABLE
AS $function$
SELECT date_part('epoch', ($1::timestamp - $2::timestamp)/3600/24);
$function$
;]]></string>
			<input_param name="returnValue" jt="8" type="float8" />
			<input_param name="$1" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$2" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
		</function>
		<function name="sysdate" id="Function_2021" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.sysdate()
 RETURNS oracle.date
 LANGUAGE c
 STABLE STRICT
AS '$libdir/orafce', $function$orafce_sysdate$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
		</function>
		<function name="to_char" id="Function_bd2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.to_char(timestamp without time zone)
 RETURNS text
 LANGUAGE c
 STABLE STRICT
AS '$libdir/orafce', $function$orafce_to_char_timestamp$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="$1" jt="93" type="timestamp" />
		</function>
		<function name="to_date" id="Function_11a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.to_date(text)
 RETURNS oracle.date
 LANGUAGE sql
 STABLE STRICT
AS $function$ SELECT pg_catalog.to_date($1)::oracle.date; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="to_date" id="Function_19f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.to_date(text, text)
 RETURNS oracle.date
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT TO_TIMESTAMP($1,$2)::oracle.date; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="&quot;oracle&quot;.&quot;date&quot;" />
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
		</function>
		<function name="trunc" id="Function_26b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION oracle.trunc(double precision, integer)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$SELECT pg_catalog.trunc($1::numeric, $2)$function$
;]]></string>
			<input_param name="returnValue" jt="2" type="numeric" />
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="payables" >
		<comment><![CDATA[payables schema]]></comment>
	</schema>
	<schema name="phoenix" >
		<comment><![CDATA[Temporary schema for Phoenix DB Tables]]></comment>
	</schema>
	<schema name="planner" >
		<table name="activities" >
			<column name="name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="master_jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="categories_pk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="activities_groups" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="activities_groups_pk" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="timetable" >
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1mc()]]></defo>
			</column>
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[Foreign Key To Anagraph]]></comment>
			</column>
			<column name="starttime" type="timestamp" decimal="6" jt="93" />
			<column name="endtime" type="timestamp" decimal="6" jt="93" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="subject" type="varchar" length="50" decimal="0" jt="12" />
			<column name="image" type="integer" length="10" decimal="0" jt="4" />
			<column name="color" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="activity_group_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="activity_jguid" type="uuid" decimal="0" jt="1111" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tmt_jguid" type="varchar" length="40" decimal="0" jt="12" />
			<column name="caption" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[true]]></defo>
			</column>
			<index name="timetable_pkey" unique="PRIMARY_KEY" >
				<column name="jguid" />
			</index>
		</table>
	</schema>
	<schema name="plunit" >
		<function name="assert_equals" id="Function_11d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_equals(expected anyelement, actual anyelement)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_equals$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="1111" type="anyelement" />
			<input_param name="actual" jt="1111" type="anyelement" />
		</function>
		<function name="assert_equals" id="Function_880" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_equals(expected anyelement, actual anyelement, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_equals_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="1111" type="anyelement" />
			<input_param name="actual" jt="1111" type="anyelement" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="assert_equals" id="Function_2144" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_equals(expected double precision, actual double precision, range double precision)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_equals_range$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="8" type="float8" />
			<input_param name="actual" jt="8" type="float8" />
			<input_param name="range" jt="8" type="float8" />
		</function>
		<function name="assert_equals" id="Function_2136" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_equals(expected double precision, actual double precision, range double precision, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_equals_range_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="8" type="float8" />
			<input_param name="actual" jt="8" type="float8" />
			<input_param name="range" jt="8" type="float8" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="assert_false" id="Function_1db6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_false(condition boolean)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_false$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="condition" jt="-7" type="bool" />
		</function>
		<function name="assert_false" id="Function_1229" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_false(condition boolean, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_false_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="condition" jt="-7" type="bool" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="assert_not_equals" id="Function_15a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_not_equals(expected anyelement, actual anyelement)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_not_equals$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="1111" type="anyelement" />
			<input_param name="actual" jt="1111" type="anyelement" />
		</function>
		<function name="assert_not_equals" id="Function_6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_not_equals(expected anyelement, actual anyelement, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_not_equals_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="1111" type="anyelement" />
			<input_param name="actual" jt="1111" type="anyelement" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="assert_not_equals" id="Function_5b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_not_equals(expected double precision, actual double precision, range double precision)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_not_equals_range$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="8" type="float8" />
			<input_param name="actual" jt="8" type="float8" />
			<input_param name="range" jt="8" type="float8" />
		</function>
		<function name="assert_not_equals" id="Function_12b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_not_equals(expected double precision, actual double precision, range double precision, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_not_equals_range_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="expected" jt="8" type="float8" />
			<input_param name="actual" jt="8" type="float8" />
			<input_param name="range" jt="8" type="float8" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="assert_not_null" id="Function_1bd9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_not_null(actual anyelement)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_not_null$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="actual" jt="1111" type="anyelement" />
		</function>
		<function name="assert_not_null" id="Function_1925" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_not_null(actual anyelement, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_not_null_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="actual" jt="1111" type="anyelement" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="assert_null" id="Function_4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_null(actual anyelement)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_null$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="actual" jt="1111" type="anyelement" />
		</function>
		<function name="assert_null" id="Function_245d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_null(actual anyelement, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_null_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="actual" jt="1111" type="anyelement" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="assert_true" id="Function_226d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_true(condition boolean)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_true$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="condition" jt="-7" type="bool" />
		</function>
		<function name="assert_true" id="Function_1361" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.assert_true(condition boolean, message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_assert_true_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="condition" jt="-7" type="bool" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
		<function name="fail" id="Function_15c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.fail()
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_fail$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="fail" id="Function_1299" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plunit.fail(message character varying)
 RETURNS void
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plunit_fail_message$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="message" jt="12" type="varchar" />
		</function>
	</schema>
	<schema name="plvchr" >
		<function name="_is_kind" id="Function_2276" isSystem="false" params_known="y" >
			<string><![CDATA[create function _is_kind plvchr_is_kind_i
create function _is_kind plvchr_is_kind_a;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="kind" jt="4" type="int4" />
		</function>
		<function name="_is_kind" id="Function_12cb" isSystem="false" params_known="y" >
			<string><![CDATA[create function _is_kind plvchr_is_kind_i
create function _is_kind plvchr_is_kind_a;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="4" type="int4" />
			<input_param name="kind" jt="4" type="int4" />
		</function>
		<function name="char_name" id="Function_1b01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.char_name(c text)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvchr_char_name$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="c" jt="12" type="text" />
		</function>
		<function name="first" id="Function_1cd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.first(str text)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvchr_first$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
		</function>
		<function name="is_blank" id="Function_1ba4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_blank(c integer)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 1);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="4" type="int4" />
		</function>
		<function name="is_blank" id="Function_1d82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_blank(c text)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 1);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="12" type="text" />
		</function>
		<function name="is_digit" id="Function_1a4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_digit(c integer)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 2);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="4" type="int4" />
		</function>
		<function name="is_digit" id="Function_1156" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_digit(c text)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 2);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="12" type="text" />
		</function>
		<function name="is_letter" id="Function_19f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_letter(c integer)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 5);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="4" type="int4" />
		</function>
		<function name="is_letter" id="Function_4bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_letter(c text)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 5);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="12" type="text" />
		</function>
		<function name="is_other" id="Function_3fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_other(c integer)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 4);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="4" type="int4" />
		</function>
		<function name="is_other" id="Function_20be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_other(c text)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 4);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="12" type="text" />
		</function>
		<function name="is_quote" id="Function_1048" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_quote(c integer)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 3);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="4" type="int4" />
		</function>
		<function name="is_quote" id="Function_1169" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.is_quote(c text)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvchr._is_kind($1, 3);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="c" jt="12" type="text" />
		</function>
		<function name="last" id="Function_15c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.last(str text)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvchr_last$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
		</function>
		<function name="nth" id="Function_15a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.nth(str text, n integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvchr_nth$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="n" jt="4" type="int4" />
		</function>
		<function name="quoted1" id="Function_cf6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.quoted1(str text)
 RETURNS character varying
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$SELECT ''''||$1||'''';$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
		</function>
		<function name="quoted2" id="Function_c05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.quoted2(str text)
 RETURNS character varying
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$SELECT '"'||$1||'"';$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
		</function>
		<function name="stripped" id="Function_ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvchr.stripped(str text, char_in text)
 RETURNS character varying
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT TRANSLATE($1, 'A'||$2, 'A'); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="char_in" jt="12" type="text" />
		</function>
	</schema>
	<schema name="plvdate" >
		<function name="add_bizdays" id="Function_2447" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.add_bizdays(date, integer)
 RETURNS date
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvdate_add_bizdays$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="4" type="int4" />
		</function>
		<function name="bizdays_between" id="Function_17ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.bizdays_between(date, date)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvdate_bizdays_between$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
		</function>
		<function name="days_inmonth" id="Function_936" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.days_inmonth(date)
 RETURNS integer
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_days_inmonth$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="default_holidays" id="Function_1f00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.default_holidays(text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_default_holidays$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="include_start" id="Function_19f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.include_start(boolean)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_include_start$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="-7" type="bool" />
		</function>
		<function name="include_start" id="Function_1bab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.include_start()
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.include_start(true); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="including_start" id="Function_1f5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.including_start()
 RETURNS boolean
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_including_start$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="isbizday" id="Function_a03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.isbizday(date)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvdate_isbizday$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="isleapyear" id="Function_16e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.isleapyear(date)
 RETURNS boolean
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_isleapyear$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="nearest_bizday" id="Function_2060" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.nearest_bizday(date)
 RETURNS date
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvdate_nearest_bizday$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="next_bizday" id="Function_1ce2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.next_bizday(date)
 RETURNS date
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvdate_next_bizday$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="noinclude_start" id="Function_155c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.noinclude_start()
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.include_start(false); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="prev_bizday" id="Function_25f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.prev_bizday(date)
 RETURNS date
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvdate_prev_bizday$function$
;]]></string>
			<input_param name="returnValue" jt="91" type="date" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="set_nonbizday" id="Function_15a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.set_nonbizday(text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_set_nonbizday_dow$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="set_nonbizday" id="Function_216f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.set_nonbizday(date, boolean)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_set_nonbizday_day$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="-7" type="bool" />
		</function>
		<function name="set_nonbizday" id="Function_19b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.set_nonbizday(date)
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.set_nonbizday($1, false); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="unset_nonbizday" id="Function_22ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.unset_nonbizday(text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_unset_nonbizday_dow$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="12" type="text" />
		</function>
		<function name="unset_nonbizday" id="Function_16a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.unset_nonbizday(date, boolean)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_unset_nonbizday_day$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="-7" type="bool" />
		</function>
		<function name="unset_nonbizday" id="Function_e8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.unset_nonbizday(date)
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.unset_nonbizday($1, false); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="$1" jt="91" type="date" />
		</function>
		<function name="unuse_easter" id="Function_1bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.unuse_easter()
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.use_easter(false); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="unuse_great_friday" id="Function_182c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.unuse_great_friday()
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.use_great_friday(false); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="use_easter" id="Function_1913" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.use_easter(boolean)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_use_easter$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="-7" type="bool" />
		</function>
		<function name="use_easter" id="Function_bca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.use_easter()
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.use_easter(true); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="use_great_friday" id="Function_a0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.use_great_friday(boolean)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_use_great_friday$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="$1" jt="-7" type="bool" />
		</function>
		<function name="use_great_friday" id="Function_8c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.use_great_friday()
 RETURNS boolean
 LANGUAGE sql
 STRICT
AS $function$SELECT plvdate.use_great_friday(true); SELECT NULL::boolean;$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="using_easter" id="Function_8c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.using_easter()
 RETURNS boolean
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_using_easter$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="using_great_friday" id="Function_1f42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.using_great_friday()
 RETURNS boolean
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_using_great_friday$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
		</function>
		<function name="version" id="Function_135e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvdate.version()
 RETURNS cstring
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvdate_version$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="cstring" />
		</function>
	</schema>
	<schema name="plvlex" >
		<function name="tokens" id="Function_86e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvlex.tokens(str text, skip_spaces boolean, qualified_names boolean, OUT pos integer, OUT token text, OUT code integer, OUT class text, OUT separator text, OUT mod text)
 RETURNS SETOF record
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvlex_tokens$function$
;]]></string>
			<input_param name="str" jt="12" type="text" />
			<input_param name="skip_spaces" jt="-7" type="bool" />
			<input_param name="qualified_names" jt="-7" type="bool" />
			<input_param name="pos" jt="4" type="int4" />
			<input_param name="token" jt="12" type="text" />
			<input_param name="code" jt="4" type="int4" />
			<input_param name="class" jt="12" type="text" />
			<input_param name="separator" jt="12" type="text" />
			<input_param name="mod" jt="12" type="text" />
		</function>
	</schema>
	<schema name="plvstr" >
		<function name="betwn" id="Function_340" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.betwn(str text, start integer, _end integer, inclusive boolean)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_betwn_i$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="_end" jt="4" type="int4" />
			<input_param name="inclusive" jt="-7" type="bool" />
		</function>
		<function name="betwn" id="Function_68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.betwn(str text, start integer, _end integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.betwn($1,$2,$3,true);$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="_end" jt="4" type="int4" />
		</function>
		<function name="betwn" id="Function_1eed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.betwn(str text, start text, _end text, startnth integer, endnth integer, inclusive boolean, gotoend boolean)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plvstr_betwn_c$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="12" type="text" />
			<input_param name="_end" jt="12" type="text" />
			<input_param name="startnth" jt="4" type="int4" />
			<input_param name="endnth" jt="4" type="int4" />
			<input_param name="inclusive" jt="-7" type="bool" />
			<input_param name="gotoend" jt="-7" type="bool" />
		</function>
		<function name="betwn" id="Function_1632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.betwn(str text, start text, _end text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$ SELECT plvstr.betwn($1,$2,$3,1,1,true,false);$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="12" type="text" />
			<input_param name="_end" jt="12" type="text" />
		</function>
		<function name="betwn" id="Function_11a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.betwn(str text, start text, _end text, startnth integer, endnth integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$ SELECT plvstr.betwn($1,$2,$3,$4,$5,true,false);$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="12" type="text" />
			<input_param name="_end" jt="12" type="text" />
			<input_param name="startnth" jt="4" type="int4" />
			<input_param name="endnth" jt="4" type="int4" />
		</function>
		<function name="instr" id="Function_dea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.instr(str text, patt text, start integer, nth integer)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_instr4$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="patt" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="nth" jt="4" type="int4" />
		</function>
		<function name="instr" id="Function_1800" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.instr(str text, patt text, start integer)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_instr3$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="patt" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
		</function>
		<function name="instr" id="Function_535" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.instr(str text, patt text)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_instr2$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="patt" jt="12" type="text" />
		</function>
		<function name="is_prefix" id="Function_114" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.is_prefix(str text, prefix text, cs boolean)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_is_prefix_text$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="prefix" jt="12" type="text" />
			<input_param name="cs" jt="-7" type="bool" />
		</function>
		<function name="is_prefix" id="Function_20c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.is_prefix(str text, prefix text)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.is_prefix($1,$2,true);$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="prefix" jt="12" type="text" />
		</function>
		<function name="is_prefix" id="Function_1519" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.is_prefix(str integer, prefix integer)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_is_prefix_int$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="str" jt="4" type="int4" />
			<input_param name="prefix" jt="4" type="int4" />
		</function>
		<function name="is_prefix" id="Function_6c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.is_prefix(str bigint, prefix bigint)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_is_prefix_int64$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="str" jt="-5" type="int8" />
			<input_param name="prefix" jt="-5" type="int8" />
		</function>
		<function name="left" id="Function_43c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr."left"(str text, n integer)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_left$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="n" jt="4" type="int4" />
		</function>
		<function name="lpart" id="Function_822" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.lpart(str text, div text, start integer, nth integer, all_if_notfound boolean)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_lpart$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="nth" jt="4" type="int4" />
			<input_param name="all_if_notfound" jt="-7" type="bool" />
		</function>
		<function name="lpart" id="Function_844" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.lpart(str text, div text, start integer, nth integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.lpart($1,$2, $3, $4, false); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="nth" jt="4" type="int4" />
		</function>
		<function name="lpart" id="Function_1003" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.lpart(str text, div text, start integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.lpart($1,$2, $3, 1, false); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
		</function>
		<function name="lpart" id="Function_693" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.lpart(str text, div text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.lpart($1,$2, 1, 1, false); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
		</function>
		<function name="lstrip" id="Function_b2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.lstrip(str text, substr text, num integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_lstrip$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="substr" jt="12" type="text" />
			<input_param name="num" jt="4" type="int4" />
		</function>
		<function name="lstrip" id="Function_123a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.lstrip(str text, substr text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.lstrip($1, $2, 1); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="substr" jt="12" type="text" />
		</function>
		<function name="normalize" id="Function_f9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.normalize(str text)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_normalize$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
		</function>
		<function name="right" id="Function_26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr."right"(str text, n integer)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_right$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="n" jt="4" type="int4" />
		</function>
		<function name="rpart" id="Function_dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rpart(str text, div text, start integer, nth integer, all_if_notfound boolean)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_rpart$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="nth" jt="4" type="int4" />
			<input_param name="all_if_notfound" jt="-7" type="bool" />
		</function>
		<function name="rpart" id="Function_2b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rpart(str text, div text, start integer, nth integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.rpart($1,$2, $3, $4, false); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="nth" jt="4" type="int4" />
		</function>
		<function name="rpart" id="Function_f65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rpart(str text, div text, start integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.rpart($1,$2, $3, 1, false); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
		</function>
		<function name="rpart" id="Function_264b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rpart(str text, div text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.rpart($1,$2, 1, 1, false); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="div" jt="12" type="text" />
		</function>
		<function name="rstrip" id="Function_2201" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rstrip(str text, substr text, num integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_rstrip$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="substr" jt="12" type="text" />
			<input_param name="num" jt="4" type="int4" />
		</function>
		<function name="rstrip" id="Function_26c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rstrip(str text, substr text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.rstrip($1, $2, 1); $function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="substr" jt="12" type="text" />
		</function>
		<function name="rvrs" id="Function_b8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rvrs(str text, start integer, _end integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plvstr_rvrs$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="_end" jt="4" type="int4" />
		</function>
		<function name="rvrs" id="Function_224b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rvrs(str text, start integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.rvrs($1,$2,NULL);$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
		</function>
		<function name="rvrs" id="Function_109" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.rvrs(str text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.rvrs($1,1,NULL);$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
		</function>
		<function name="substr" id="Function_b39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.substr(str text, start integer, len integer)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_substr3$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="len" jt="4" type="int4" />
		</function>
		<function name="substr" id="Function_173c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.substr(str text, start integer)
 RETURNS character varying
 LANGUAGE c
 IMMUTABLE STRICT
AS '$libdir/orafce', $function$plvstr_substr2$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
		</function>
		<function name="swap" id="Function_1b52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.swap(str text, replace text, start integer, length integer)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plvstr_swap$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="replace" jt="12" type="text" />
			<input_param name="start" jt="4" type="int4" />
			<input_param name="length" jt="4" type="int4" />
		</function>
		<function name="swap" id="Function_58f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvstr.swap(str text, replace text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE STRICT
AS $function$ SELECT plvstr.swap($1,$2,1, NULL);$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="str" jt="12" type="text" />
			<input_param name="replace" jt="12" type="text" />
		</function>
	</schema>
	<schema name="plvsubst" >
		<function name="setsubst" id="Function_2053" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.setsubst(str text)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvsubst_setsubst$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="str" jt="12" type="text" />
		</function>
		<function name="setsubst" id="Function_2178" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.setsubst()
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvsubst_setsubst_default$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="string" id="Function_1d0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.string(template_in text, values_in text[], subst text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plvsubst_string_array$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="template_in" jt="12" type="text" />
			<input_param name="values_in" jt="2003" type="_text" />
			<input_param name="subst" jt="12" type="text" />
		</function>
		<function name="string" id="Function_d06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.string(template_in text, values_in text[])
 RETURNS text
 LANGUAGE sql
 STRICT
AS $function$SELECT plvsubst.string($1,$2, NULL);$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="template_in" jt="12" type="text" />
			<input_param name="values_in" jt="2003" type="_text" />
		</function>
		<function name="string" id="Function_ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.string(template_in text, vals_in text, delim_in text, subst_in text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plvsubst_string_string$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="template_in" jt="12" type="text" />
			<input_param name="vals_in" jt="12" type="text" />
			<input_param name="delim_in" jt="12" type="text" />
			<input_param name="subst_in" jt="12" type="text" />
		</function>
		<function name="string" id="Function_2351" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.string(template_in text, vals_in text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plvsubst_string_string$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="template_in" jt="12" type="text" />
			<input_param name="vals_in" jt="12" type="text" />
		</function>
		<function name="string" id="Function_1d9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.string(template_in text, vals_in text, delim_in text)
 RETURNS text
 LANGUAGE c
 IMMUTABLE
AS '$libdir/orafce', $function$plvsubst_string_string$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="template_in" jt="12" type="text" />
			<input_param name="vals_in" jt="12" type="text" />
			<input_param name="delim_in" jt="12" type="text" />
		</function>
		<function name="subst" id="Function_a02" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION plvsubst.subst()
 RETURNS text
 LANGUAGE c
 STRICT
AS '$libdir/orafce', $function$plvsubst_subst$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
	</schema>
	<schema name="receivables" >
		<comment><![CDATA[receivable schema]]></comment>
	</schema>
	<schema name="sports" >
		<comment><![CDATA[This is the sports management platform sharing structures between sports]]></comment>
		<table name="calendar" >
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="match_day_date" type="date" length="13" decimal="0" jt="91" />
			<column name="match_day_played" type="date" length="13" decimal="0" jt="91" />
			<column name="rest_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[32]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<index name="idx_calendar" unique="NORMAL" >
				<column name="season_id" />
				<column name="league_id" />
			</index>
			<index name="calendar_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="calendar_days_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="match_day_number" />
			</index>
			<fk name="fk_calendar_championship" to_schema="sports" to_table="championships" >
				<fk_column name="league_id" pk="league_id" />
				<fk_column name="season_id" pk="season_id" />
			</fk>
		</table>
		<table name="calendar_teams" >
			<column name="season_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="league_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="match_day" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="team_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="calendar_teams_pkey" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="match_day" />
				<column name="team_id" />
			</index>
		</table>
		<table name="championships" >
			<comment><![CDATA[This is the table of all the Championships]]></comment>
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Unique id for season id]]></comment>
			</column>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[The unique id of the league in this championship]]></comment>
			</column>
			<column name="promoted" type="smallint" length="5" decimal="0" jt="5" />
			<column name="playoff" type="smallint" length="5" decimal="0" jt="5" />
			<column name="relegation" type="smallint" length="5" decimal="0" jt="5" />
			<column name="champions" type="smallint" length="5" decimal="0" jt="5" />
			<column name="playout" type="smallint" length="5" decimal="0" jt="5" />
			<column name="teams" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[32]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="fki_campionships_leagues_fk" unique="NORMAL" >
				<column name="league_id" />
			</index>
			<index name="jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="championships_pk" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
			</index>
			<fk name="campionships_leagues_fk" to_schema="sports" to_table="leagues" >
				<fk_column name="league_id" pk="id" />
			</fk>
			<fk name="championships_seasons_fk" to_schema="sports" to_table="seasons" >
				<fk_column name="season_id" pk="id" />
			</fk>
		</table>
		<table name="club_seasons" >
			<column name="club_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="season_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<fk name="club_seasons_clubs_fk" to_schema="sports" to_table="clubs" >
				<fk_column name="club_id" pk="id" />
			</fk>
		</table>
		<table name="clubs" >
			<comment><![CDATA[These are the sports or ... well .. sport clubs :)]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('sports.clubs_seq'::regclass)]]></defo>
				<comment><![CDATA[This is the sports club unique ID....]]></comment>
			</column>
			<column name="club_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[The sports Club Name]]></comment>
			</column>
			<column name="foundation_date" type="date" length="13" decimal="0" jt="91" >
				<comment><![CDATA[Date of 'birth' of the sports club :)]]></comment>
			</column>
			<column name="president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="stadium_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="town" type="varchar" length="128" decimal="0" jt="12" />
			<column name="vice_president" type="varchar" length="128" decimal="0" jt="12" />
			<column name="team_manager" type="varchar" length="128" decimal="0" jt="12" />
			<column name="athletic_manager" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[direttore sportivo]]></comment>
			</column>
			<column name="colors" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[colori sociali]]></comment>
			</column>
			<column name="website" type="varchar" length="128" decimal="0" jt="12" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="club_image" type="bytea" decimal="0" jt="-2" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="clubs_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="clubs_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="event_types" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[Event type ID]]></comment>
			</column>
			<column name="description" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[Short Event Description]]></comment>
			</column>
			<column name="score" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="subst" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="save" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="accident" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="events_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="guid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="fields" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_name" type="varchar" length="256" decimal="0" jt="12" />
			<column name="address" type="varchar" length="256" decimal="0" jt="12" />
			<column name="country_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="region_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="district_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="town_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="postal_code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="telephone" type="varchar" length="20" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="20" decimal="0" jt="12" />
			<column name="notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="img_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="fields_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="fields_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="leagues" >
			<comment><![CDATA[These are all the leagues you can find in all seasons in a Country or Federation or Region]]></comment>
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[This is the unique id of a League]]></comment>
			</column>
			<column name="league_name" type="varchar" length="128" decimal="0" jt="12" >
				<comment><![CDATA[This is the name of the league]]></comment>
			</column>
			<column name="country_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[external iso country code on iso table default 'ITA']]></comment>
			</column>
			<column name="league_position" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[position]]></comment>
			</column>
			<column name="league_code" type="varchar" length="6" decimal="0" jt="12" >
				<comment><![CDATA[The shortcode for the league]]></comment>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="remote_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="promotedcss" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA['promotion'::character varying]]></defo>
			</column>
			<column name="playoffcss" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA['playoff'::character varying]]></defo>
			</column>
			<column name="championscss" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA['champions'::character varying]]></defo>
			</column>
			<column name="playoutcss" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA['playout'::character varying]]></defo>
			</column>
			<column name="relegationcss" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA['retrocession'::character varying]]></defo>
			</column>
			<column name="all_players" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[If all players can enter in the match (like on 5 player's or 7 player's sports teams) is true else (on 11 player's leagues is set to false)]]></comment>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="league_name_ndx" unique="NORMAL" >
				<column name="league_name" />
			</index>
			<index name="leagues_name_uk" unique="UNIQUE_KEY" >
				<column name="league_name" />
				<column name="country_id" />
			</index>
			<index name="leagues_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="leagues_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="match_events" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="player_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="event_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="minute" type="integer" length="10" decimal="0" jt="4" />
			<column name="value" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[The Value inserted to count]]></comment>
			</column>
			<column name="notes" type="varchar" length="256" decimal="0" jt="12" />
			<column name="favor_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="game_set" type="varchar" length="128" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="ft_match_events_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="match_events_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="ft_match_events_matches_fk_ndx" unique="NORMAL" >
				<column name="match_id" />
			</index>
			<index name="ft_match_events_player_ndx" unique="NORMAL" >
				<column name="player_id" />
			</index>
			<fk name="ft_matchevent_matches_fk" to_schema="sports" to_table="matches" >
				<fk_column name="match_id" pk="id" />
			</fk>
			<fk name="ft_matchevent_player_fk" to_schema="sports" to_table="players" >
				<fk_column name="player_id" pk="id" />
			</fk>
			<fk name="ft_matchevent_team_fk" to_schema="sports" to_table="teams" >
				<fk_column name="team_id" pk="id" />
			</fk>
		</table>
		<table name="match_players" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="player_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="minutes" type="smallint" length="5" decimal="0" jt="5" />
			<column name="vote" type="real" length="8" decimal="8" jt="7" />
			<column name="played" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="subst_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="score" type="smallint" length="5" decimal="0" jt="5" />
			<column name="self_score" type="smallint" length="5" decimal="0" jt="5" />
			<column name="conceded" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="since" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="until" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[90]]></defo>
			</column>
			<column name="sent_off" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[If The player was sent off from the match usually is a 0 value]]></comment>
			</column>
			<column name="injuries" type="smallint" length="5" decimal="0" jt="5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="ft_match_players_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="ft_match_players_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="ft_match_players_uk" unique="UNIQUE_KEY" >
				<column name="match_id" />
				<column name="player_id" />
				<column name="team_id" />
			</index>
			<index name="ft_match_players_player_team_ndx" unique="NORMAL" options="clustered" >
				<column name="player_id" />
				<column name="team_id" />
			</index>
			<index name="ft_match_players_match_id_fk_ndx" unique="NORMAL" >
				<column name="match_id" />
			</index>
			<index name="ft_match_players_team_id_ndx" unique="NORMAL" >
				<column name="team_id" />
			</index>
			<fk name="ft_matchplayers_match_fk" to_schema="sports" to_table="matches" >
				<fk_column name="match_id" pk="id" />
			</fk>
		</table>
		<table name="matchday_ranking" >
			<column name="season_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="league_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="matchday" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="team_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="won_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="lost_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="tied_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_matches" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_won" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="home_tied" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_played" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_won" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_lost" type="smallint" length="5" decimal="0" jt="5" />
			<column name="outside_tied" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="points_home" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="points_outside" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="scored" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="scored_home" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="scored_outside" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="conceded" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="conceded_home" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="conceded_outside" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="aggregate_points" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="aggregate_group" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="rownum" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[system.get_schema_id()]]></defo>
			</column>
			<column name="games_scored" type="smallint" length="5" decimal="0" jt="5" />
			<column name="games_conceded" type="smallint" length="5" decimal="0" jt="5" />
			<column name="played" type="smallint" length="5" decimal="0" jt="5" />
			<column name="notes" type="varchar" length="1024" decimal="0" jt="12" />
			<index name="matchday_ranking_pkey" unique="PRIMARY_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="matchday" />
				<column name="team_id" />
			</index>
		</table>
		<table name="matches" >
			<comment><![CDATA[This is the sports Matches Calendar, it should be used for other sports but must be revised]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[Unique id for a calendar match and primary Key]]></comment>
			</column>
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_time" type="timestamp" decimal="6" jt="93" />
			<column name="match_date" type="date" length="13" decimal="0" jt="91" />
			<column name="home_team_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="visitors_team_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="score_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="score_visitor" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_visitors" type="smallint" length="5" decimal="0" jt="5" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="confirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="home_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="visitors_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="suspended" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="postponed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="forfeit" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="article_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="video_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="confirmed_home" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Checks if home capitain Confirmed the Match]]></comment>
			</column>
			<column name="confirmed_visitors" type="boolean" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[false]]></defo>
				<comment><![CDATA[Check if visitors team confirmed the match]]></comment>
			</column>
			<index name="idx_matches" unique="NORMAL" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="match_day_number" />
			</index>
			<index name="matches_season_league_cluster" unique="NORMAL" >
				<column name="league_id" />
				<column name="season_id" />
			</index>
			<index name="matches_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="matches_home_team_id_ndx" unique="NORMAL" >
				<column name="home_team_id" />
			</index>
			<index name="matches_visitor_uk" unique="UNIQUE_KEY" >
				<column name="league_id" />
				<column name="match_day_number" />
				<column name="season_id" />
				<column name="visitors_team_id" />
			</index>
			<index name="matches_home_uk" unique="UNIQUE_KEY" >
				<column name="league_id" />
				<column name="season_id" />
				<column name="match_day_number" />
				<column name="home_team_id" />
			</index>
			<index name="matches_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="matches_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_matches_calendar" to_schema="sports" to_table="calendar" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
				<fk_column name="match_day_number" pk="match_day_number" />
			</fk>
			<fk name="matches_champ_fk" to_schema="sports" to_table="championships" >
				<fk_column name="season_id" pk="season_id" />
				<fk_column name="league_id" pk="league_id" />
			</fk>
			<fk name="fk_matches_fields" to_schema="sports" to_table="fields" update_action="cascade" options="" >
				<fk_column name="field_id" pk="id" />
			</fk>
			<fk name="fk_matches_leagues" to_schema="sports" to_table="leagues" >
				<fk_column name="league_id" pk="id" />
			</fk>
			<fk name="fk_matches_seasons" to_schema="sports" to_table="seasons" update_action="cascade" >
				<fk_column name="season_id" pk="id" />
			</fk>
			<fk name="fk_matches_home_teams" to_schema="sports" to_table="teams" >
				<fk_column name="home_team_id" pk="id" />
			</fk>
			<fk name="fk_matches_visitor_teams" to_schema="sports" to_table="teams" update_action="cascade" >
				<fk_column name="visitors_team_id" pk="id" />
			</fk>
		</table>
		<table name="matches_temp_deleted" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_day_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="match_time" type="timestamp" decimal="6" jt="93" />
			<column name="match_date" type="date" length="13" decimal="0" jt="91" />
			<column name="home_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="visitors_team_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="score_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="score_visitor" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_home" type="smallint" length="5" decimal="0" jt="5" />
			<column name="points_visitors" type="smallint" length="5" decimal="0" jt="5" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="confirmed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="home_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="visitors_notes" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="suspended" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="postponed" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="forfeit" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="article_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="video_url" type="varchar" length="1024" decimal="0" jt="12" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="confirmed_home" type="boolean" length="1" decimal="0" jt="-7" />
			<column name="confirmed_visitors" type="boolean" length="1" decimal="0" jt="-7" />
		</table>
		<table name="players" >
			<comment><![CDATA[The player's table]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="anagraph_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="birth_year" type="smallint" length="5" decimal="0" jt="5" />
			<column name="birth_place" type="varchar" length="128" decimal="0" jt="12" />
			<column name="notes" type="text" decimal="0" jt="12" />
			<column name="role_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="height" type="smallint" length="5" decimal="0" jt="5" />
			<column name="weight" type="smallint" length="5" decimal="0" jt="5" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="players_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="players_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="idx_players" unique="NORMAL" >
				<column name="role_id" />
			</index>
			<fk name="fk_players" to_schema="sports" to_table="roles" >
				<fk_column name="role_id" pk="id" />
			</fk>
		</table>
		<table name="roles" >
			<column name="id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="role_code" type="varchar" length="5" decimal="0" jt="12" />
			<column name="role_name" type="varchar" length="30" decimal="0" jt="12" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" >
				<defo><![CDATA[system.get_schema_id()]]></defo>
			</column>
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="roles_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="roles_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
		</table>
		<table name="seasons" >
			<comment><![CDATA[This is the sports seasons database]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[nextval('sports.seasons_seq'::regclass)]]></defo>
				<comment><![CDATA[This is the Season ID unique identifier. Every Season can have a 'starting date' and 'ending date' but they are quite optional.]]></comment>
			</column>
			<column name="season_des" type="varchar" length="20" decimal="0" jt="12" >
				<comment><![CDATA[This is the real Description of the season]]></comment>
			</column>
			<column name="season_code" type="char" length="5" decimal="0" jt="1" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[11]]></defo>
			</column>
			<column name="order_number" type="smallint" length="5" decimal="0" jt="5" />
			<column name="remote_id" type="smallint" length="5" decimal="0" jt="5" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="seasons_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="seasons_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="sets" >
			<comment><![CDATA[Sets Played in Matches]]></comment>
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="match_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="score_home" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="score_visitors" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="remote_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" />
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<column name="number" type="smallint" length="5" decimal="0" jt="5" >
				<comment><![CDATA[The set's number in list]]></comment>
			</column>
			<index name="sets_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="sets_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="sets_number_uk" unique="UNIQUE_KEY" >
				<column name="match_id" />
				<column name="number" />
			</index>
			<index name="fki_sets_matches_fk" unique="NORMAL" >
				<column name="match_id" />
			</index>
			<fk name="sets_matches_fk" to_schema="sports" to_table="matches" delete_action="cascade" update_action="cascade" >
				<fk_column name="match_id" pk="id" />
			</fk>
		</table>
		<table name="team_players" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[Team ID]]></comment>
			</column>
			<column name="player_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[foreing key to player anagraph id]]></comment>
			</column>
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<comment><![CDATA[foreign key to season_id]]></comment>
			</column>
			<column name="since" type="date" length="13" decimal="0" jt="91" />
			<column name="until" type="date" length="13" decimal="0" jt="91" />
			<column name="club_origin_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="scored" type="smallint" length="5" decimal="0" jt="5" />
			<column name="self_scored" type="smallint" length="5" decimal="0" jt="5" />
			<column name="conceded" type="smallint" length="5" decimal="0" jt="5" />
			<column name="sent_off" type="smallint" length="5" decimal="0" jt="5" />
			<column name="injuries" type="smallint" length="5" decimal="0" jt="5" />
			<column name="minutes" type="smallint" length="5" decimal="0" jt="5" />
			<column name="matches" type="integer" length="10" decimal="0" jt="4" />
			<column name="score" type="integer" length="10" decimal="0" jt="4" />
			<column name="votes" type="float8" length="17" decimal="17" jt="6" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="team_players_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="ftmp_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="team_players_uk" unique="UNIQUE_KEY" >
				<column name="team_id" />
				<column name="player_id" />
				<column name="season_id" />
			</index>
			<fk name="playerteam_players_fk" to_schema="sports" to_table="players" >
				<fk_column name="player_id" pk="id" />
			</fk>
			<fk name="playerteam_season_id" to_schema="sports" to_table="seasons" >
				<fk_column name="season_id" pk="id" />
			</fk>
			<fk name="players_teams_fk" to_schema="sports" to_table="teams" >
				<fk_column name="team_id" pk="id" />
			</fk>
		</table>
		<table name="teams" >
			<comment><![CDATA[one of the teams of the club that partecipate in a championship]]></comment>
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[Unique id for the team]]></comment>
			</column>
			<column name="club_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="team_name" type="varchar" length="128" decimal="0" jt="12" />
			<column name="trainer_id" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[numero id anagrafica allenatore]]></comment>
			</column>
			<column name="image" type="bytea" decimal="0" jt="-2" />
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="fki_teams_clubs_fk" unique="NORMAL" >
				<column name="club_id" />
			</index>
			<index name="teams_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="teams_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="teams_clubs_fk" to_schema="sports" to_table="clubs" delete_action="cascade" update_action="cascade" >
				<fk_column name="club_id" pk="id" />
			</fk>
		</table>
		<table name="teams_championships" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="season_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="league_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="team_id" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="position" type="smallint" length="5" decimal="0" jt="5" />
			<column name="penalty" type="smallint" length="5" decimal="0" jt="5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="remote_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="db_schema_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="jguid" type="uuid" decimal="0" jt="1111" mandatory="y" >
				<defo><![CDATA[uuid_generate_v1()]]></defo>
				<comment><![CDATA[guid unique identifier across DBs]]></comment>
			</column>
			<column name="deleted" type="boolean" length="1" decimal="0" jt="-7" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="insert_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="update_date" type="timestamptz" length="12" decimal="6" jt="93" />
			<column name="user_insert" type="varchar" length="128" decimal="0" jt="12" />
			<column name="user_update" type="varchar" length="128" decimal="0" jt="12" />
			<index name="teams_championships_pk" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="teams_championships_jguid_uk" unique="UNIQUE_KEY" >
				<column name="jguid" />
			</index>
			<index name="teams_championships_uk" unique="UNIQUE_KEY" >
				<column name="season_id" />
				<column name="league_id" />
				<column name="team_id" />
			</index>
			<index name="ft_teamchamp_ft_teams_fk" unique="NORMAL" >
				<column name="team_id" />
			</index>
			<index name="ft_teams_championships_season_fk" unique="NORMAL" >
				<column name="season_id" />
			</index>
			<fk name="teams_championships_fk" to_schema="sports" to_table="championships" >
				<fk_column name="league_id" pk="league_id" />
				<fk_column name="season_id" pk="season_id" />
			</fk>
			<fk name="ft_teams_championships_teams_fk" to_schema="sports" to_table="teams" >
				<fk_column name="team_id" pk="id" />
			</fk>
		</table>
		<view name="calendar_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT calendar.season_id,
    calendar.league_id,
    calendar.match_day_number,
    calendar.match_day_date,
    calendar.match_day_played,
    calendar.rest_team_id,
    calendar.db_schema_id,
    calendar.jguid,
    calendar.deleted,
    calendar.insert_date,
    calendar.update_date,
    calendar.user_insert,
    calendar.user_update
   FROM sports.calendar
  WHERE (calendar.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="match_day_number" type="smallint" />
			<column name="match_day_date" type="date" />
			<column name="match_day_played" type="date" />
			<column name="rest_team_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
		</view>
		<view name="championships_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT f.season_id,
    f.league_id,
    f.promoted,
    f.playoff,
    f.relegation,
    f.champions,
    f.playout,
    f.teams,
    f.db_schema_id,
    f.jguid,
    f.deleted,
    f.insert_date,
    f.update_date,
    f.user_insert,
    f.user_update,
    f.id,
    l.league_name,
    l.league_position,
    l.league_code
   FROM (sports.leagues l
     JOIN sports.championships f ON ((l.id = f.league_id)))
  WHERE (f.db_schema_id = system.get_schema_id())
  ORDER BY l.league_position;]]></view_script>
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="promoted" type="smallint" />
			<column name="playoff" type="smallint" />
			<column name="relegation" type="smallint" />
			<column name="champions" type="smallint" />
			<column name="playout" type="smallint" />
			<column name="teams" type="smallint" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="id" type="integer" />
			<column name="league_name" type="varchar" />
			<column name="league_position" type="smallint" />
			<column name="league_code" type="varchar" />
		</view>
		<view name="clubs_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c.id,
    c.club_name,
    c.foundation_date,
    c.president,
    c.stadium_id,
    c.town,
    c.vice_president,
    c.team_manager,
    c.athletic_manager,
    c.colors,
    c.website,
    c.remote_id,
    c.anagraph_id,
    c.club_image,
    c.db_schema_id,
    c.jguid,
    c.deleted,
    c.insert_date,
    c.update_date,
    c.user_insert,
    c.user_update,
    a.an_name,
    a.an_last_name,
    a.an_address,
    a.an_town,
    a.an_postal_code,
    a.an_state_province,
    a.an_email,
    a.an_iso_country_code,
    a.an_web,
    a.an_code,
    a.an_vat_numeric,
    a.an_cod_comune,
    a.an_cod_provincia,
    a.an_vat_id,
    a.an_personal_fiscal_code,
    a.an_phone,
    a.an_phone2,
    a.an_cellular,
    a.an_currency_id,
    a.an_main_group_id,
    a.main_category_id,
    c.id AS club_id
   FROM (sports.clubs c
     LEFT JOIN anagraph.anagraphs_view a ON ((c.anagraph_id = a.anagraph_id)))
  WHERE (c.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="integer" />
			<column name="club_name" type="varchar" />
			<column name="foundation_date" type="date" />
			<column name="president" type="varchar" />
			<column name="stadium_id" type="smallint" />
			<column name="town" type="varchar" />
			<column name="vice_president" type="varchar" />
			<column name="team_manager" type="varchar" />
			<column name="athletic_manager" type="varchar" />
			<column name="colors" type="varchar" />
			<column name="website" type="varchar" />
			<column name="remote_id" type="integer" />
			<column name="anagraph_id" type="integer" />
			<column name="club_image" type="bytea" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="an_name" type="varchar" />
			<column name="an_last_name" type="varchar" />
			<column name="an_address" type="varchar" />
			<column name="an_town" type="varchar" />
			<column name="an_postal_code" type="varchar" />
			<column name="an_state_province" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_iso_country_code" type="varchar" />
			<column name="an_web" type="varchar" />
			<column name="an_code" type="varchar" />
			<column name="an_vat_numeric" type="varchar" />
			<column name="an_cod_comune" type="varchar" />
			<column name="an_cod_provincia" type="varchar" />
			<column name="an_vat_id" type="smallint" />
			<column name="an_personal_fiscal_code" type="varchar" />
			<column name="an_phone" type="varchar" />
			<column name="an_phone2" type="varchar" />
			<column name="an_cellular" type="varchar" />
			<column name="an_currency_id" type="smallint" />
			<column name="an_main_group_id" type="integer" />
			<column name="main_category_id" type="smallint" />
			<column name="club_id" type="integer" />
		</view>
		<view name="fields_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT fields.id,
    fields.db_schema_id,
    fields.field_name,
    fields.address,
    fields.country_id,
    fields.region_id,
    fields.district_id,
    fields.town_id,
    fields.remote_id,
    fields.town_name,
    fields.postal_code,
    fields.telephone,
    fields.fax,
    fields.notes,
    fields.img_url,
    fields.jguid,
    fields.deleted,
    fields.insert_date,
    fields.update_date,
    fields.user_insert,
    fields.user_update
   FROM sports.fields
  WHERE (fields.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="field_name" type="varchar" />
			<column name="address" type="varchar" />
			<column name="country_id" type="smallint" />
			<column name="region_id" type="integer" />
			<column name="district_id" type="integer" />
			<column name="town_id" type="integer" />
			<column name="remote_id" type="integer" />
			<column name="town_name" type="varchar" />
			<column name="postal_code" type="varchar" />
			<column name="telephone" type="varchar" />
			<column name="fax" type="varchar" />
			<column name="notes" type="varchar" />
			<column name="img_url" type="varchar" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
		</view>
		<view name="last_match_day" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT m.season_id,
    m.league_id,
    max(m.match_day_number) AS max_match_day
   FROM sports.calendar m
  WHERE (m.db_schema_id = system.get_schema_id())
  GROUP BY m.season_id, m.league_id;]]></view_script>
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="max_match_day" type="smallint" />
		</view>
		<view name="leagues_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT leagues.id,
    leagues.league_name,
    leagues.country_id,
    leagues.league_position,
    leagues.league_code,
    leagues.db_schema_id,
    leagues.remote_id,
    leagues.promotedcss,
    leagues.playoffcss,
    leagues.championscss,
    leagues.playoutcss,
    leagues.relegationcss,
    leagues.all_players,
    leagues.jguid,
    leagues.deleted,
    leagues.insert_date,
    leagues.update_date,
    leagues.user_insert,
    leagues.user_update
   FROM sports.leagues
  WHERE (leagues.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="smallint" />
			<column name="league_name" type="varchar" />
			<column name="country_id" type="integer" />
			<column name="league_position" type="smallint" />
			<column name="league_code" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="remote_id" type="smallint" />
			<column name="promotedcss" type="varchar" />
			<column name="playoffcss" type="varchar" />
			<column name="championscss" type="varchar" />
			<column name="playoutcss" type="varchar" />
			<column name="relegationcss" type="varchar" />
			<column name="all_players" type="boolean" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
		</view>
		<view name="match_events_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT e.id,
    e.match_id,
    e.team_id,
    e.player_id,
    e.event_id,
    e.minute,
    e.value,
    e.notes,
    e.favor_team_id,
    e.game_set,
    e.db_schema_id,
    e.jguid,
    e.deleted,
    e.insert_date,
    e.update_date,
    e.user_insert,
    e.user_update,
    (((t.family_name)::text || ' '::text) || (t.team_name)::text) AS teamplayer,
    t.family_name,
    t.team_name
   FROM (sports.match_events e
     JOIN sports.team_players_view t ON (((t.team_id = e.team_id) AND (t.player_id = e.player_id))));]]></view_script>
			<column name="id" type="bigint" />
			<column name="match_id" type="integer" />
			<column name="team_id" type="smallint" />
			<column name="player_id" type="integer" />
			<column name="event_id" type="smallint" />
			<column name="minute" type="integer" />
			<column name="value" type="smallint" />
			<column name="notes" type="varchar" />
			<column name="favor_team_id" type="integer" />
			<column name="game_set" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="teamplayer" type="text" />
			<column name="family_name" type="varchar" />
			<column name="team_name" type="varchar" />
		</view>
		<view name="match_players_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT m.id,
    m.match_id,
    m.player_id,
    m.minutes,
    m.vote,
    m.played,
    m.team_id,
    m.pos,
    m.subst_id,
    m.score,
    m.self_score,
    m.conceded,
    m.since,
    m.until,
    m.sent_off,
    m.injuries,
    m.db_schema_id,
    m.jguid,
    m.deleted,
    m.insert_date,
    m.update_date,
    m.user_insert,
    m.user_update,
    p.notes,
    p.first_name,
    p.family_name,
    (((p.family_name)::text || ' '::text) || (p.first_name)::text) AS full_name,
    (((((p.family_name)::text || ' '::text) || (p.first_name)::text) || ' - '::text) || (p.team_name)::text) AS lkpplayername
   FROM (sports.team_players_view p
     JOIN sports.match_players m ON (((p.player_id = m.player_id) AND (p.team_id = m.team_id))))
  ORDER BY m.pos;]]></view_script>
			<column name="id" type="bigint" />
			<column name="match_id" type="integer" />
			<column name="player_id" type="integer" />
			<column name="minutes" type="smallint" />
			<column name="vote" type="real" />
			<column name="played" type="boolean" />
			<column name="team_id" type="smallint" />
			<column name="pos" type="smallint" />
			<column name="subst_id" type="integer" />
			<column name="score" type="smallint" />
			<column name="self_score" type="smallint" />
			<column name="conceded" type="smallint" />
			<column name="since" type="smallint" />
			<column name="until" type="smallint" />
			<column name="sent_off" type="smallint" />
			<column name="injuries" type="smallint" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="notes" type="text" />
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="full_name" type="text" />
			<column name="lkpplayername" type="text" />
		</view>
		<view name="matchday_ranking_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT r.season_id,
    r.league_id,
    r.matchday,
    r.pos,
    r.team_id,
    r.won_matches,
    r.lost_matches,
    r.tied_matches,
    r.home_matches,
    r.home_won,
    r.home_lost,
    r.home_tied,
    r.outside_played,
    r.outside_won,
    r.outside_lost,
    r.outside_tied,
    r.points,
    r.points_home,
    r.points_outside,
    r.scored,
    r.scored_home,
    r.scored_outside,
    r.conceded,
    r.conceded_home,
    r.conceded_outside,
    r.aggregate_points,
    r.aggregate_group,
    r.rownum,
    r.db_schema_id,
    (r.scored - r.conceded) AS delta,
    r.games_scored,
    r.games_conceded,
    (r.games_scored - r.games_conceded) AS delta_games,
    t.team_name,
    t.club_name,
    r.played
   FROM (sports.matchday_ranking r
     JOIN sports.teams_view t ON ((r.team_id = t.id)))
  WHERE (r.db_schema_id = system.get_schema_id())
  ORDER BY r.rownum;]]></view_script>
			<column name="season_id" type="integer" />
			<column name="league_id" type="integer" />
			<column name="matchday" type="smallint" />
			<column name="pos" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="won_matches" type="smallint" />
			<column name="lost_matches" type="smallint" />
			<column name="tied_matches" type="smallint" />
			<column name="home_matches" type="smallint" />
			<column name="home_won" type="smallint" />
			<column name="home_lost" type="smallint" />
			<column name="home_tied" type="smallint" />
			<column name="outside_played" type="smallint" />
			<column name="outside_won" type="smallint" />
			<column name="outside_lost" type="smallint" />
			<column name="outside_tied" type="smallint" />
			<column name="points" type="smallint" />
			<column name="points_home" type="smallint" />
			<column name="points_outside" type="smallint" />
			<column name="scored" type="smallint" />
			<column name="scored_home" type="smallint" />
			<column name="scored_outside" type="smallint" />
			<column name="conceded" type="smallint" />
			<column name="conceded_home" type="smallint" />
			<column name="conceded_outside" type="smallint" />
			<column name="aggregate_points" type="smallint" />
			<column name="aggregate_group" type="smallint" />
			<column name="rownum" type="smallint" />
			<column name="db_schema_id" type="integer" />
			<column name="delta" type="smallint" />
			<column name="games_scored" type="smallint" />
			<column name="games_conceded" type="smallint" />
			<column name="delta_games" type="smallint" />
			<column name="team_name" type="varchar" />
			<column name="club_name" type="varchar" />
			<column name="played" type="smallint" />
		</view>
		<view name="matchday_scores_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT (1)::smallint AS home,
    matches.league_id,
    matches.season_id,
    matches.match_day_number,
    matches.home_team_id AS team_id,
    matches.score_home AS score,
    matches.points_home AS points,
    matches.score_visitor AS conceded,
        CASE
            WHEN (matches.score_home > matches.score_visitor) THEN 1
            ELSE 0
        END AS match_won,
        CASE
            WHEN (matches.score_home < matches.score_visitor) THEN 1
            ELSE 0
        END AS match_lost,
        CASE
            WHEN (matches.score_home = matches.score_visitor) THEN 1
            ELSE 0
        END AS match_equal,
    games.game_home AS games_scored,
    games.game_visitors AS games_conceded
   FROM (sports.matches
     JOIN ( SELECT sets.match_id,
            sum(sets.score_home) AS game_home,
            sum(sets.score_visitors) AS game_visitors
           FROM sports.sets
          GROUP BY sets.match_id) games ON ((matches.id = games.match_id)))
  WHERE (matches.db_schema_id = (current_setting('system.db_schema_id'::text))::integer)
UNION ALL
 SELECT (0)::smallint AS home,
    matches.league_id,
    matches.season_id,
    matches.match_day_number,
    matches.visitors_team_id AS team_id,
    matches.score_visitor AS score,
    matches.points_visitors AS points,
    matches.score_home AS conceded,
        CASE
            WHEN (matches.score_home < matches.score_visitor) THEN 1
            ELSE 0
        END AS match_won,
        CASE
            WHEN (matches.score_home > matches.score_visitor) THEN 1
            ELSE 0
        END AS match_lost,
        CASE
            WHEN (matches.score_home = matches.score_visitor) THEN 1
            ELSE 0
        END AS match_equal,
    games.game_visitors AS games_scored,
    games.game_home AS games_conceded
   FROM (sports.matches
     JOIN ( SELECT sets.match_id,
            sum(sets.score_home) AS game_home,
            sum(sets.score_visitors) AS game_visitors
           FROM sports.sets
          GROUP BY sets.match_id) games ON ((matches.id = games.match_id)))
  WHERE (matches.db_schema_id = (current_setting('system.db_schema_id'::text))::integer)
UNION ALL
 SELECT (0)::smallint AS home,
    matches.league_id,
    matches.season_id,
    matches.match_day_number,
    matches.visitors_team_id AS team_id,
    (COALESCE((matches.score_visitor)::integer, 0))::smallint AS score,
    (COALESCE((matches.points_visitors)::integer, 0))::smallint AS points,
    (COALESCE((matches.score_home)::integer, 0))::smallint AS conceded,
    0 AS match_won,
    0 AS match_lost,
    0 AS match_equal,
    0 AS games_scored,
    0 AS games_conceded
   FROM sports.matches
  WHERE ((NOT (EXISTS ( SELECT 1
           FROM sports.sets
          WHERE (matches.id = sets.match_id)))) AND (matches.db_schema_id = (current_setting('system.db_schema_id'::text))::integer))
UNION ALL
 SELECT (1)::smallint AS home,
    matches.league_id,
    matches.season_id,
    matches.match_day_number,
    matches.home_team_id AS team_id,
    (COALESCE((matches.score_visitor)::integer, 0))::smallint AS score,
    (COALESCE((matches.points_visitors)::integer, 0))::smallint AS points,
    (COALESCE((matches.score_home)::integer, 0))::smallint AS conceded,
    0 AS match_won,
    0 AS match_lost,
    0 AS match_equal,
    0 AS games_scored,
    0 AS games_conceded
   FROM sports.matches
  WHERE ((NOT (EXISTS ( SELECT 1
           FROM sports.sets
          WHERE (matches.id = sets.match_id)))) AND (matches.db_schema_id = (current_setting('system.db_schema_id'::text))::integer));]]></view_script>
			<column name="home" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="match_day_number" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="score" type="smallint" />
			<column name="points" type="smallint" />
			<column name="conceded" type="smallint" />
			<column name="match_won" type="integer" />
			<column name="match_lost" type="integer" />
			<column name="match_equal" type="integer" />
			<column name="games_scored" type="bigint" />
			<column name="games_conceded" type="bigint" />
		</view>
		<view name="matchday_table_ranking_base_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT c.season_id,
    c.league_id,
    c.match_day,
    c.team_id,
    t.team_name,
    count(1) AS played,
    sum(v.points) AS points,
    sum(v.score) AS score,
    sum(v.conceded) AS conceded,
    sum((v.score - v.conceded)) AS delta,
    sum(v.match_won) AS match_won,
    sum(v.match_lost) AS match_lost,
    sum(v.match_equal) AS match_equal,
    sum(v.games_scored) AS games_scored,
    sum(v.games_conceded) AS games_conceded,
    sum((v.games_scored - v.games_conceded)) AS games_delta
   FROM ((sports.calendar_teams c
     JOIN sports.teams t ON ((t.id = c.team_id)))
     JOIN sports.matchday_scores_view v ON (((v.season_id = c.season_id) AND (v.league_id = c.league_id) AND (v.match_day_number <= c.match_day) AND (v.team_id = c.team_id))))
  GROUP BY c.season_id, c.league_id, c.match_day, c.team_id, t.team_name
  ORDER BY c.match_day, (sum(v.points)) DESC, (sum((v.games_scored - v.games_conceded))) DESC, t.team_name;]]></view_script>
			<column name="season_id" type="integer" />
			<column name="league_id" type="integer" />
			<column name="match_day" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="team_name" type="varchar" />
			<column name="played" type="bigint" />
			<column name="points" type="bigint" />
			<column name="score" type="bigint" />
			<column name="conceded" type="bigint" />
			<column name="delta" type="bigint" />
			<column name="match_won" type="bigint" />
			<column name="match_lost" type="bigint" />
			<column name="match_equal" type="bigint" />
			<column name="games_scored" type="numeric" />
			<column name="games_conceded" type="numeric" />
			<column name="games_delta" type="numeric" />
		</view>
		<view name="matches_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT m.id,
    m.league_id,
    m.season_id,
    m.match_day_number,
    m.match_time,
    m.match_date,
    m.home_team_id,
    m.visitors_team_id,
    m.score_home,
    m.score_visitor,
    m.points_home,
    m.points_visitors,
    m.notes,
    m.confirmed,
    m.home_notes,
    m.visitors_notes,
    m.suspended,
    m.postponed,
    m.forfeit,
    m.remote_id,
    m.field_id,
    m.article_url,
    m.video_url,
    m.db_schema_id,
    m.jguid,
    m.deleted,
    m.insert_date,
    m.update_date,
    m.user_insert,
    m.user_update,
    h.team_name AS home_team_name,
    v.team_name AS visitors_team_name,
    sports.get_match_games_sets((m.id)::bigint) AS games_sets
   FROM ((sports.matches m
     JOIN sports.teams v ON ((m.visitors_team_id = v.id)))
     JOIN sports.teams h ON ((m.home_team_id = h.id)))
  WHERE (m.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="integer" />
			<column name="league_id" type="smallint" />
			<column name="season_id" type="smallint" />
			<column name="match_day_number" type="smallint" />
			<column name="match_time" type="timestamp" />
			<column name="match_date" type="date" />
			<column name="home_team_id" type="integer" />
			<column name="visitors_team_id" type="integer" />
			<column name="score_home" type="smallint" />
			<column name="score_visitor" type="smallint" />
			<column name="points_home" type="smallint" />
			<column name="points_visitors" type="smallint" />
			<column name="notes" type="text" />
			<column name="confirmed" type="boolean" />
			<column name="home_notes" type="varchar" />
			<column name="visitors_notes" type="varchar" />
			<column name="suspended" type="boolean" />
			<column name="postponed" type="boolean" />
			<column name="forfeit" type="boolean" />
			<column name="remote_id" type="integer" />
			<column name="field_id" type="integer" />
			<column name="article_url" type="varchar" />
			<column name="video_url" type="varchar" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="home_team_name" type="varchar" />
			<column name="visitors_team_name" type="varchar" />
			<column name="games_sets" type="varchar" />
		</view>
		<view name="players_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT p.id,
    p.anagraph_id,
    p.birth_year,
    p.birth_place,
    p.notes,
    p.role_id,
    p.height,
    p.weight,
    p.remote_id,
    p.db_schema_id,
    p.jguid,
    p.deleted,
    p.insert_date,
    p.update_date,
    p.user_insert,
    p.user_update,
    a.an_name AS first_name,
    a.an_last_name AS family_name,
    a.an_birthdate AS birth_date,
    a.an_cellular,
    a.an_email,
    a.an_group_id,
    r.role_name,
    r.role_code,
    (((((((a.an_last_name)::text || ' '::text) || (a.an_name)::text) || ' - '::text) || COALESCE(to_char((a.an_birthdate)::timestamp with time zone, 'dd/mm/yy'::text), COALESCE(to_char((p.birth_year)::double precision, '9999'::text), COALESCE(p.notes, 'n.a.'::text)))) || ' '::text) || (r.role_name)::text) AS full_name
   FROM ((sports.players p
     JOIN anagraph.anagraphs_view a ON ((p.anagraph_id = a.anagraph_id)))
     JOIN sports.roles r ON ((COALESCE((p.role_id)::integer, 0) = r.id)))
  WHERE (p.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="integer" />
			<column name="anagraph_id" type="integer" />
			<column name="birth_year" type="smallint" />
			<column name="birth_place" type="varchar" />
			<column name="notes" type="text" />
			<column name="role_id" type="smallint" />
			<column name="height" type="smallint" />
			<column name="weight" type="smallint" />
			<column name="remote_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="birth_date" type="date" />
			<column name="an_cellular" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="an_group_id" type="smallint" />
			<column name="role_name" type="varchar" />
			<column name="role_code" type="varchar" />
			<column name="full_name" type="text" />
		</view>
		<view name="ranking_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT v.season_id,
    v.league_id,
    v.matchday,
    v.pos,
    v.team_id,
    v.won_matches,
    v.lost_matches,
    v.tied_matches,
    v.home_matches,
    v.home_won,
    v.home_lost,
    v.home_tied,
    v.outside_played,
    v.outside_won,
    v.outside_lost,
    v.outside_tied,
    v.points,
    v.points_home,
    v.points_outside,
    v.scored,
    v.scored_home,
    v.scored_outside,
    v.conceded,
    v.conceded_home,
    v.conceded_outside,
    v.aggregate_points,
    v.aggregate_group,
    v.rownum,
    v.db_schema_id,
    v.delta,
    v.games_scored,
    v.games_conceded,
    v.delta_games,
    v.team_name,
    v.club_name,
    v.played
   FROM (sports.matchday_ranking_view v
     JOIN sports.last_match_day l ON (((v.season_id = l.season_id) AND (v.league_id = l.league_id) AND (v.matchday = l.max_match_day))));]]></view_script>
			<column name="season_id" type="integer" />
			<column name="league_id" type="integer" />
			<column name="matchday" type="smallint" />
			<column name="pos" type="smallint" />
			<column name="team_id" type="integer" />
			<column name="won_matches" type="smallint" />
			<column name="lost_matches" type="smallint" />
			<column name="tied_matches" type="smallint" />
			<column name="home_matches" type="smallint" />
			<column name="home_won" type="smallint" />
			<column name="home_lost" type="smallint" />
			<column name="home_tied" type="smallint" />
			<column name="outside_played" type="smallint" />
			<column name="outside_won" type="smallint" />
			<column name="outside_lost" type="smallint" />
			<column name="outside_tied" type="smallint" />
			<column name="points" type="smallint" />
			<column name="points_home" type="smallint" />
			<column name="points_outside" type="smallint" />
			<column name="scored" type="smallint" />
			<column name="scored_home" type="smallint" />
			<column name="scored_outside" type="smallint" />
			<column name="conceded" type="smallint" />
			<column name="conceded_home" type="smallint" />
			<column name="conceded_outside" type="smallint" />
			<column name="aggregate_points" type="smallint" />
			<column name="aggregate_group" type="smallint" />
			<column name="rownum" type="smallint" />
			<column name="db_schema_id" type="integer" />
			<column name="delta" type="smallint" />
			<column name="games_scored" type="smallint" />
			<column name="games_conceded" type="smallint" />
			<column name="delta_games" type="smallint" />
			<column name="team_name" type="varchar" />
			<column name="club_name" type="varchar" />
			<column name="played" type="smallint" />
		</view>
		<view name="roles_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.id,
    t.role_code,
    t.role_name,
    t.remote_id,
    t.db_schema_id,
    t.jguid,
    t.deleted,
    t.insert_date,
    t.update_date,
    t.user_insert,
    t.user_update
   FROM sports.roles t
  WHERE (t.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="smallint" />
			<column name="role_code" type="varchar" />
			<column name="role_name" type="varchar" />
			<column name="remote_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
		</view>
		<view name="seasons_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT seasons.id,
    seasons.season_des,
    seasons.season_code,
    seasons.db_schema_id,
    seasons.order_number,
    seasons.remote_id,
    seasons.jguid,
    seasons.deleted,
    seasons.insert_date,
    seasons.update_date,
    seasons.user_insert,
    seasons.user_update
   FROM sports.seasons
  WHERE (seasons.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="integer" />
			<column name="season_des" type="varchar" />
			<column name="season_code" type="char" />
			<column name="db_schema_id" type="integer" />
			<column name="order_number" type="smallint" />
			<column name="remote_id" type="smallint" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
		</view>
		<view name="sets_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT sets.id,
    sets.match_id,
    sets.score_home,
    sets.score_visitors,
    sets.remote_id,
    sets.db_schema_id,
    sets.jguid,
    sets.deleted,
    sets.insert_date,
    sets.update_date,
    sets.user_insert,
    sets.user_update,
    sets.number
   FROM sports.sets
  WHERE (sets.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="bigint" />
			<column name="match_id" type="integer" />
			<column name="score_home" type="smallint" />
			<column name="score_visitors" type="smallint" />
			<column name="remote_id" type="bigint" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="number" type="smallint" />
		</view>
		<view name="team_players_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.id,
    t.team_id,
    t.player_id,
    t.season_id,
    t.since,
    t.until,
    t.club_origin_id,
    t.scored,
    t.self_scored,
    t.conceded,
    t.sent_off,
    t.injuries,
    t.minutes,
    t.matches,
    t.score,
    t.votes,
    t.remote_id,
    t.db_schema_id,
    t.jguid,
    t.deleted,
    t.insert_date,
    t.update_date,
    t.user_insert,
    t.user_update,
    p.anagraph_id,
    p.first_name,
    p.family_name,
    p.birth_date,
    p.an_cellular,
    p.an_email,
    p.role_name,
    p.role_code,
    p.birth_year,
    p.birth_place,
    p.notes,
    p.height,
    p.weight,
    p.role_id,
    s.team_name,
    s.club_id,
    p.full_name,
    c.club_name
   FROM (((sports.team_players t
     JOIN sports.players_view p ON ((p.id = t.player_id)))
     JOIN sports.teams s ON ((t.team_id = s.id)))
     LEFT JOIN sports.clubs c ON ((s.club_id = c.id)))
  WHERE (p.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="bigint" />
			<column name="team_id" type="smallint" />
			<column name="player_id" type="integer" />
			<column name="season_id" type="smallint" />
			<column name="since" type="date" />
			<column name="until" type="date" />
			<column name="club_origin_id" type="integer" />
			<column name="scored" type="smallint" />
			<column name="self_scored" type="smallint" />
			<column name="conceded" type="smallint" />
			<column name="sent_off" type="smallint" />
			<column name="injuries" type="smallint" />
			<column name="minutes" type="smallint" />
			<column name="matches" type="integer" />
			<column name="score" type="integer" />
			<column name="votes" type="float8" />
			<column name="remote_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="anagraph_id" type="integer" />
			<column name="first_name" type="varchar" />
			<column name="family_name" type="varchar" />
			<column name="birth_date" type="date" />
			<column name="an_cellular" type="varchar" />
			<column name="an_email" type="varchar" />
			<column name="role_name" type="varchar" />
			<column name="role_code" type="varchar" />
			<column name="birth_year" type="smallint" />
			<column name="birth_place" type="varchar" />
			<column name="notes" type="text" />
			<column name="height" type="smallint" />
			<column name="weight" type="smallint" />
			<column name="role_id" type="smallint" />
			<column name="team_name" type="varchar" />
			<column name="club_id" type="smallint" />
			<column name="full_name" type="text" />
			<column name="club_name" type="varchar" />
		</view>
		<view name="teams_championships_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.team_name,
    t.club_name,
    c.id,
    c.season_id,
    c.league_id,
    c.team_id,
    c."position",
    c.penalty,
    c.remote_id,
    c.db_schema_id,
    c.jguid,
    c.deleted,
    c.insert_date,
    c.update_date,
    c.user_insert,
    c.user_update,
    t.club_id,
    l.league_name
   FROM ((sports.teams_championships c
     JOIN sports.teams_view t ON ((c.team_id = t.id)))
     JOIN football.ft_leagues l ON ((c.league_id = l.league_id)))
  WHERE (c.db_schema_id = system.get_schema_id())
  ORDER BY t.team_name;]]></view_script>
			<column name="team_name" type="varchar" />
			<column name="club_name" type="varchar" />
			<column name="id" type="integer" />
			<column name="season_id" type="smallint" />
			<column name="league_id" type="smallint" />
			<column name="team_id" type="smallint" />
			<column name="position" type="smallint" />
			<column name="penalty" type="smallint" />
			<column name="remote_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="club_id" type="smallint" />
			<column name="league_name" type="varchar" />
		</view>
		<view name="teams_view" >
			<view_script><![CDATA[CREATE VIEW ${schema}.${name} AS  SELECT t.id,
    t.club_id,
    t.team_name,
    t.trainer_id,
    t.image,
    t.remote_id,
    t.db_schema_id,
    t.jguid,
    t.deleted,
    t.insert_date,
    t.update_date,
    t.user_insert,
    t.user_update,
    c.club_name,
    c.club_image,
    t.id AS team_id
   FROM (sports.teams t
     JOIN sports.clubs c ON ((c.id = t.club_id)))
  WHERE (t.db_schema_id = system.get_schema_id());]]></view_script>
			<column name="id" type="integer" />
			<column name="club_id" type="smallint" />
			<column name="team_name" type="varchar" />
			<column name="trainer_id" type="integer" />
			<column name="image" type="bytea" />
			<column name="remote_id" type="integer" />
			<column name="db_schema_id" type="integer" />
			<column name="jguid" type="uuid" />
			<column name="deleted" type="boolean" />
			<column name="insert_date" type="timestamptz" />
			<column name="update_date" type="timestamptz" />
			<column name="user_insert" type="varchar" />
			<column name="user_update" type="varchar" />
			<column name="club_name" type="varchar" />
			<column name="club_image" type="bytea" />
			<column name="team_id" type="integer" />
		</view>
		<sequence name="calendar_seq" options="START WITH 1" />
		<sequence name="championships_seq" options="START WITH 1" />
		<sequence name="clubs_seq" options="START WITH 1" />
		<sequence name="fields_seq" options="START WITH 1" />
		<sequence name="leagues_seq" options="START WITH 1" />
		<sequence name="match_players_seq" options="START WITH 1" />
		<sequence name="matches_seq" options="START WITH 1" />
		<sequence name="players_seq" options="START WITH 1" />
		<sequence name="seasons_seq" options="START WITH 1" />
		<sequence name="sets_seq" options="START WITH 1" />
		<sequence name="team_players_seq" options="START WITH 1" />
		<sequence name="teams_championships_seq" options="START WITH 1" />
		<sequence name="teams_seq" options="START WITH 1" />
		<trigger name="calendar_bi_trg" table="calendar" id="Trigger-1d61" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER calendar_bi_trg BEFORE INSERT ON sports.calendar FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="calendar_defaults_trg" table="calendar" id="Trigger_f61" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER calendar_defaults_trg BEFORE INSERT ON sports.calendar FOR EACH ROW EXECUTE PROCEDURE sports.defaults_trg()]]></string>
		</trigger>
		<trigger name="calendar_view_iud_trg" id="Trigger_1eb1" isSystem="false" />
		<trigger name="championships_bi_trg" table="championships" id="Trigger-17a8" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER championships_bi_trg BEFORE INSERT OR UPDATE ON sports.championships FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="championships_view_iud_trg" id="Trigger_181c" isSystem="false" />
		<trigger name="clubs_bi_trg" table="clubs" id="Trigger-eda" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER clubs_bi_trg BEFORE INSERT OR UPDATE ON sports.clubs FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="clubs_view_iud_trg" id="Trigger_15af" isSystem="false" />
		<trigger name="event_types_biu_trg" table="event_types" id="Trigger_ba9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER event_types_biu_trg BEFORE INSERT OR UPDATE ON sports.event_types FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="fields_bi_trg" table="fields" id="Trigger-2677" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER fields_bi_trg BEFORE INSERT OR UPDATE ON sports.fields FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="fields_view_iud_trg" id="Trigger_2557" isSystem="false" />
		<trigger name="leagues_bi_trg" table="leagues" id="Trigger-1b0c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER leagues_bi_trg BEFORE INSERT OR UPDATE ON sports.leagues FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="leagues_view_iud_trg" id="Trigger_21e8" isSystem="false" />
		<trigger name="match_events_biu_trg" table="match_events" id="Trigger_1385" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER match_events_biu_trg BEFORE INSERT OR UPDATE ON sports.match_events FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="match_players_biu_trg" table="match_players" id="Trigger_2ac" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER match_players_biu_trg BEFORE INSERT OR UPDATE ON sports.match_players FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="match_players_view_iud_trg" id="Trigger_c15" isSystem="false" />
		<trigger name="matches_bi_trg" table="matches" id="Trigger-21bf" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER matches_bi_trg BEFORE INSERT ON sports.matches FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="matches_view_iud_trg" id="Trigger_dc5" isSystem="false" />
		<trigger name="players_biu_trg" table="players" id="Trigger_2ee" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER players_biu_trg BEFORE INSERT OR UPDATE ON sports.players FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="players_view_iud_trg" id="Trigger_9df" isSystem="false" />
		<trigger name="roles_biu_trg" table="roles" id="Trigger_e9f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER roles_biu_trg BEFORE INSERT OR UPDATE ON sports.roles FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="season_default_biu_trg" table="seasons" id="Trigger-1a84" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER season_default_biu_trg BEFORE INSERT OR UPDATE ON sports.seasons FOR EACH ROW EXECUTE PROCEDURE sports.defaults_trg();]]></string>
		</trigger>
		<trigger name="seasons_view_iud_trg" id="Trigger_1b87" isSystem="false" />
		<trigger name="sets_bi_trg" table="sets" id="Trigger_194e" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER sets_bi_trg BEFORE INSERT OR UPDATE ON sports.sets FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="sets_view_iud_trg" id="Trigger_2d7" isSystem="false" />
		<trigger name="team_players_biu_trg" table="team_players" id="Trigger_21c9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER team_players_biu_trg BEFORE INSERT OR UPDATE ON sports.team_players FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="team_players_view_iud_trg" id="Trigger_1d82" isSystem="false" />
		<trigger name="teams_bi_trg" table="teams" id="Trigger-efa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER teams_bi_trg BEFORE INSERT OR UPDATE ON sports.teams FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg();]]></string>
		</trigger>
		<trigger name="teams_championships_biu_trg" table="teams_championships" id="Trigger_de7" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER teams_championships_biu_trg BEFORE INSERT OR UPDATE ON sports.teams_championships FOR EACH ROW EXECUTE PROCEDURE sports.insert_defaults_trg()]]></string>
		</trigger>
		<trigger name="teams_championships_view_iou_trg" id="Trigger_17ff" isSystem="false" />
		<trigger name="teams_view_iud_trg" id="Trigger_80e" isSystem="false" />
		<function name="add_match_day" id="Function_1daa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.add_match_day(p_season_id integer, p_league_id integer)
 RETURNS boolean
 LANGUAGE plpgsql
AS $function$
DECLARE
	Result boolean; 
begin
	result := FALSE; 
	IF EXISTS (SELECT 1 FROM sports.championships WHERE
	  season_id = p_season_id AND  league_id = p_league_id )
	THEN 
		DECLARE 
			v_max smallint; 
		BEGIN
		    IF EXISTS (SELECT 1 FROM sports.calendar WHERE season_id = p_season_id AND  league_id = p_league_id) THEN
		  		SELECT MAX(match_day_number) INTO v_max FROM sports.calendar 
		  			WHERE season_id = p_season_id AND  league_id = p_league_id;
				v_max := v_max + 1; 
				INSERT INTO sports.calendar (season_id, league_id, match_day_number, match_day_played)
					VALUES (p_season_id, p_league_id, v_max, NULL );
			ELSE
				INSERT INTO sports.calendar (season_id, league_id, match_day_number, match_day_played)
					VALUES (p_season_id, p_league_id, 1, NULL );			
			END IF; 
		END; 
		Result := True; 
	END IF; 
	
   RETURN Result; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="p_season_id" jt="4" type="int4" />
			<input_param name="p_league_id" jt="4" type="int4" />
		</function>
		<function name="calendar_view_trg" id="Function_127b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.calendar_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	  BEGIN
		  UPDATE sports.calendar SET
			match_day_date = New.match_day_date,
			match_day_played = New.match_day_played,
			rest_team_id = New.rest_team_id
		  WHERE 
			(season_id = New.season_id) AND
			(league_id = New.league_id) AND
			(match_day_number = New.match_day_number);
		RETURN New; 
	  END; 
  ELSIF TG_OP = 'INSERT' THEN 
	  BEGIN
		  if new.jguid is null 
			 then new.jguid = uuid_generate_v4();
		  end if; 
		  IF NEW.db_schema_id IS NULL THEN 
		  	NEW.db_schema_id = system.GET_schema_id();
			  --current_setting('system.db_schema_id')::integer; 
		  END IF; 
		  INSERT INTO sports.calendar (
			season_id,
			league_id,
			match_day_number,
			match_day_date,
			match_day_played,
			rest_team_id,
			db_schema_id,
			jguid
		  )
		  VALUES (
			New.season_id,
			New.league_id,
			New.match_day_number,
			New.match_day_date,
			New.match_day_played,
			New.rest_team_id,
			NEW.db_schema_id,
			NEW.jguid
		  ) RETURNING id into v_id;
     RETURN New; 
    END; 
  ELSIF TG_OP = 'DELETE' THEN
	  BEGIN
		  DELETE FROM sports.calendar
		  WHERE 
			(season_id = Old.season_id) AND
			(league_id = Old.league_id) AND
			(match_day_number = Old.match_day_number);
		RETURN Old; 
	  END; 
  END IF; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="championships_view_trg" id="Function_10a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.championships_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	  BEGIN
		  UPDATE sports.championships SET
			season_id = Old.season_id,
			league_id = Old.league_id,
			promoted = New.promoted,
			playoff = New.playoff,
			relegation = New.relegation,
			champions = New.champions,
			playout = New.playout,
			teams = New.teams
		  WHERE 
			(jguid = Old.jguid);
	  END; 
  ELSIF TG_OP = 'INSERT' THEN
	  BEGIN
		  if new.jguid is null 
			 then new.jguid = uuid_generate_v4();
		  end if; 
		  IF NEW.db_schema_id IS NULL THEN 
		  	NEW.db_schema_id = current_setting('system.db_schema_id')::integer; 
		  END IF; 
		  INSERT INTO sports.championships (
			season_id,
			league_id,
			promoted,
			playoff,
			relegation,
			champions,
			playout,
			teams,
			jguid  
		  )
		  VALUES (
			New.season_id,
			New.league_id,
			New.promoted,
			New.playoff,
			New.relegation,
			New.champions,
			New.playout,
			New.teams,
			New.jguid
		  ) RETURNING id, jguid into New.id, New.jguid;
	  END; 
  ELSIF TG_OP = 'DELETE' THEN
	  BEGIN
		  DELETE FROM sports.championships
		  WHERE 
			(jguid = Old.jguid);
	  END; 
  END IF; 
  RETURN New; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="cloneseason" id="Function_1dbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.cloneseason(new_season_id integer, old_season_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
	INSERT INTO sports.championships_view(
	            season_id, league_id, db_schema_id, promoted, playoff, relegation, 
	            champions, playout, teams)
	select  new_season_id, league_id, db_schema_id, promoted, playoff, relegation, 
	            champions, playout, teams
	from sports.championships_view f 
	where f.season_id = old_season_id
	and not exists 
	(select 1 from sports.championships g 
	where g.season_id =  new_season_id 
	and f.league_id = g.league_id);
	
	RETURN new_season_id; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="new_season_id" jt="4" type="int4" />
			<input_param name="old_season_id" jt="4" type="int4" />
		</function>
		<function name="clubs_view_trg" id="Function_424" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.clubs_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
  IF TG_OP = 'UPDATE' THEN 
  UPDATE sports.clubs SET
    club_name = New.club_name,
    foundation_date = New.foundation_date,
    president = New.president,
    stadium_id = New.stadium_id,
    town = New.town,
    vice_president = New.vice_president,
    team_manager = New.team_manager,
    athletic_manager = New.athletic_manager,
    colors = New.colors,
    website = New.website,
    remote_id = New.remote_id,
    anagraph_id = New.anagraph_id,
    club_image = New.club_image
  WHERE 
    (jguid = New.jguid) ;
  ELSIF TG_OP = 'INSERT' THEN 
  BEGIN
  if New.id IS NULL THEN New.id = nextval('sports.clubs_seq'); END IF; 
  INSERT INTO sports.clubs (
    id,
    club_name,
    foundation_date,
    president,
    stadium_id,
    town,
    vice_president,
    team_manager,
    athletic_manager,
    colors,
    website,
    remote_id,
    anagraph_id,
    club_image
  )
  VALUES (
    New.id,
    New.club_name,
    New.foundation_date,
    New.president,
    New.stadium_id,
    New.town,
    New.vice_president,
    New.team_manager,
    New.athletic_manager,
    New.colors,
    New.website,
    New.remote_id,
    New.anagraph_id,
    New.club_image
  ) RETURNING id into v_id;
  END; 
  ELSIF TG_OP = 'DELETE' THEN 
  DELETE FROM sports.clubs
  WHERE 
    (jguid = Old.jguid) ;
  END IF; 
  RETURN New; 	
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="defaults_trg" id="Function-26b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  if New.jguid is null then
     New.jguid:= uuid_generate_v4();
  end if;
  if New.deleted is null then
     New.deleted := false;
  end if;
  if (New.db_schema_id is null) or (New.db_schema_id = 0) then
     New.db_schema_id:=0;
  end if;
  
  if (New.insert_date is null) then
     New.insert_date := Now();
  end if;
  
  New.update_date := Now();
  
  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="fields_view_trg" id="Function_b91" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.fields_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
  IF TG_OP = 'UPDATE' THEN 
  UPDATE sports.fields SET
    db_schema_id = New.db_schema_id,
    field_name = New.field_name,
    address = New.address,
    country_id = New.country_id,
    region_id = New.region_id,
    district_id = New.district_id,
    town_id = New.town_id,
    remote_id = New.remote_id,
    town_name = New.town_name,
    postal_code = New.postal_code,
    telephone = New.telephone,
    fax = New.fax,
    notes = New.notes,
    img_url = New.img_url
  WHERE 
    (jguid = New.jguid) ;
	
  ELSIF TG_OP = 'UPDATE' THEN 
  INSERT INTO sports.fields (
    id,
    db_schema_id,
    field_name,
    address,
    country_id,
    region_id,
    district_id,
    town_id,
    remote_id,
    town_name,
    postal_code,
    telephone,
    fax,
    notes,
    img_url,
	jguid
  )
  VALUES (
    New.id,
    New.db_schema_id,
    New.field_name,
    New.address,
    New.country_id,
    New.region_id,
    New.district_id,
    New.town_id,
    New.remote_id,
    New.town_name,
    New.postal_code,
    New.telephone,
    New.fax,
    New.notes,
    New.img_url,
	New.jguid
  ) RETURNING id into v_id;
  
  ELSIF TG_OP = 'DELETE' THEN 
  DELETE FROM sports.fields
  WHERE 
    (jguid = New.jguid) ;
  END IF;
  
  RETURN New; 	
  
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="generate_day_ranking" id="Function_632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.generate_day_ranking(p_day smallint, p_league_id smallint DEFAULT 0, p_season_id smallint DEFAULT 0)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$
declare
  f record;
  v_id smallint;
  v_pos smallint;
  v_season_id smallint; 
  v_notes character varying;
BEGIN
    v_id := 0;     
	v_pos := 0;  
	
	IF p_season_id = 0 THEN
	  SELECT MAX(id) INTO v_season_id from sports.seasons_view;
	ELSE 
		v_season_id := p_season_id;
	END IF;
	
  delete from sports.calendar_teams v where not exists 
  (select 1 from sports.matchday_scores_view t
   	where 
   	v.match_day = t.match_day_number and t.league_id = v.league_id and t.team_id = v.team_id 
   );
   
   
  insert into sports.calendar_teams (league_id, season_id, match_day, team_id)	
  select league_id, season_id, match_day_number, team_id from sports.matchday_scores_view v  where not exists
  (select 1 from sports.calendar_teams t
   	where 
   	match_day = V.match_day_number and t.league_id = V.LEAGUE_ID and t.team_id = v.team_id 
   )
   AND TEAM_ID > 0;
	
	DELETE FROM sports.matchday_ranking 
		WHERE season_id = v_season_id and league_id = p_league_id AND  matchday = p_day;
	
    FOR  f in (
	SELECT
    	count(*) OVER (ORDER BY points DESC, games_delta DESC, team_name ) rownum,
		count(*) OVER (ORDER BY points DESC, games_delta DESC ) pos,
    	v.*
	FROM 
		sports.matchday_table_ranking_base_view v, 
		(select team_id, max (MATCH_DAY) as mday from sports.calendar_teams t  
		    WHERE t.season_id = v_season_id and t.league_id = p_league_id and match_day <= p_day
		 group by team_id ) C
	WHERE 
		v.season_id = v_season_id and v.league_id = p_league_id AND  
		v.match_day = C.mday AND v.team_id = c.team_id
	ORDER BY ROWNUM
	)
	LOOP
	v_id := v_id + 1;
	----------------------------------------------------------------------------------------
	INSERT INTO sports.matchday_ranking(
	season_id, league_id, matchday,  team_id, aggregate_group, rownum, won_matches, lost_matches, tied_matches, points,
	scored, conceded, aggregate_points, pos,  games_scored, games_conceded, db_schema_id, played, notes
	)
	VALUES 
	(
	    v_season_id, --season_id	
	    p_league_id, --league_id		
	 	p_day, --matchday
		f.team_id, --team_id
		f.pos, -- aggregate_group
		f.rownum, -- rownum
		f.match_won, -- won_matches
		f.match_lost, -- lost_matches
		f.match_equal, -- match_equal
		f.points, -- points
		f.score, -- scored
		f.conceded, -- conceded
		0, --aggregate_points
		v_id, --pos
		f.games_scored, 
		f.games_conceded, 
		system.get_schema_id(),
		f.played,
		v_notes
	);
	----------------------------------------------------------------------------------------
		
	    v_pos := f.pos;		
	END LOOP;
    RETURN v_pos; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_day" jt="5" type="int2" />
			<input_param name="p_league_id" jt="5" type="int2" />
			<input_param name="p_season_id" jt="5" type="int2" />
		</function>
		<function name="generate_ranking" id="Function_1a00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.generate_ranking(p_league_id smallint, p_season_id smallint DEFAULT 0)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$
declare
  f record;
  v_id smallint;
  v_pos smallint;
  v_season_id smallint; 
  v_notes character varying;
BEGIN   
	v_pos := 0;  
	
	IF p_season_id = 0 THEN
	  SELECT MAX(id) INTO v_season_id from sports.seasons_view;
	ELSE 
		v_season_id := p_season_id;
	END IF;
    FOR f in select match_day_number from sports.calendar c 
	  where c.season_id = v_season_id and c.league_id = p_league_id
	LOOP
        v_pos := sports.generate_day_ranking(
	             p_day => f.match_day_number,
	             p_league_id => p_league_id,
	             p_season_id => v_season_id);
				 
	END LOOP;
    RETURN v_pos; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_league_id" jt="5" type="int2" />
			<input_param name="p_season_id" jt="5" type="int2" />
		</function>
		<function name="generate_season_championship" id="Function_df9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.generate_season_championship(s_user_email character varying DEFAULT 'info@padelcuneo.it'::character varying, s_username character varying DEFAULT 'padelcuneoadmin'::character varying, s_password character varying DEFAULT 'P4d3lCun30'::character varying, s_schema_name character varying DEFAULT 'Padel Cuneo'::character varying, s_league_name character varying DEFAULT 'Mc Padel Cuneo'::character varying, s_league_code character varying DEFAULT 'PC'::character varying)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE 
 user_token character varying; 
 schema_token character varying; 
 session_token  character varying; 
 v_schema_id integer; 
 v_season_id integer; 
 v_league_id integer; 
 v_guid uuid; 
 v_result text; 
BEGIN
---SELECT system.useradd(:p_email, :p_username, :p_password, :p_country_id, :p_ispublic)
	user_token := system.useradd(
		p_email         => s_user_email, 
		p_username      => null, 
		p_password      => s_password, 
		p_country_id    => 1, 
		p_ispublic      => true
	);
	PERFORM system.setlog('aggiunto utente: ' || s_user_email || ', token = ' || user_token );
    
    v_result := v_result || 'aggiunto utente: ' || s_user_email || ', token = ' || user_token;
	
	session_token := system.userlogin(
		p_username  => s_username, 
		p_password  => s_password, 
		p_email     => s_user_email
	);
	
	PERFORM system.setlog('login utente: ' || s_username || ', token = ' || session_token );
    v_result := v_result  || 'login utente: ' || s_username || ', token = ' || session_token ;
	schema_token := system.createpublicschema(
		p_user_key => user_token::character varying, 
		p_session_key => session_token::character varying, 
		p_schema_name => s_schema_name::character varying, 
		p_schema_des => s_schema_name::character varying, 
		p_isportal => true::boolean, 
		p_package_key => NULL,
		p_country_id => 1::smallint,  
		p_default_language_id => 1::smallint
	);
	
	select db_schema_id into v_schema_id from system.db_schemas s 
        where s.db_schema_key = schema_token;
        
    PERFORM system.setlog('creato schema: ' || v_schema_id || ', token = ' || schema_token );
    v_result := v_result  || 'creato schema: ' || s_schema_name || ', token = ' || schema_token;
	
	v_season_id := nextval('sports.seasons_seq');
	
	insert into sports.seasons(id, season_des,season_code,db_schema_id) 
        values (v_season_id, '2022/23', '22/23', v_schema_id);
        
    PERFORM system.setlog('creato seasons: ' || v_league_id || ', id = ' || v_season_id );
    v_result := v_result  || 'creato seasons: ' || s_league_name || ', id = ' || v_league_id ;
        
    v_league_id := nextval('sports.leagues_seq');
        
    INSERT INTO sports.leagues(
        id, league_name, country_id, league_position, league_code, 
        db_schema_id,  all_players)
    VALUES (v_league_id, s_league_name, 1, 1, s_league_code ,
            v_schema_id, false);
            
    PERFORM system.setlog('creato league: ' || v_league_id || ', id = ' || v_league_id );
    v_result := v_result  || 'creato league: ' || s_league_name || ', id = ' || v_league_id;
    
    INSERT INTO sports.championships(
        season_id, league_id, promoted, playoff, relegation, champions, playout, teams, db_schema_id)
        VALUES (v_season_id, v_league_id, 0, 6, 0, 0, 6,   12, v_schema_id);
	
   return v_result; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="s_user_email" jt="12" type="varchar" />
			<input_param name="s_username" jt="12" type="varchar" />
			<input_param name="s_password" jt="12" type="varchar" />
			<input_param name="s_schema_name" jt="12" type="varchar" />
			<input_param name="s_league_name" jt="12" type="varchar" />
			<input_param name="s_league_code" jt="12" type="varchar" />
		</function>
		<function name="get_last_match_day" id="Function_a29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.get_last_match_day(p_season_id smallint, p_league_id smallint)
 RETURNS smallint
 LANGUAGE plpgsql
AS $function$
DECLARE
  result smallint; 
BEGIN
	BEGIN
  		SELECT coalesce(max(match_day_number), 1) into result
  		FROM 
	  		sports.matches m
	 	WHERE
	 		m.season_id = p_season_id AND m.league_id = p_league_id
			AND m.confirmed
			AND m.db_schema_id = system.get_schema_id();
   	EXCEPTION WHEN OTHERS THEN
		result := 1;
	END;
	
	RETURN result; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="5" type="int2" />
			<input_param name="p_season_id" jt="5" type="int2" />
			<input_param name="p_league_id" jt="5" type="int2" />
		</function>
		<function name="get_match_games_sets" id="Function_dc5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.get_match_games_sets(p_match_id bigint DEFAULT 0)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$
declare
  v_set_desc character varying;
  i integer; 
  x record;
begin
  i := 0; 
  v_set_desc := ''; 
  if exists(select 1 from sports.sets where match_id = p_match_id) then
  	for x in (select * from sports.sets where match_id = p_match_id) loop
       	if i > 0 then v_set_desc := v_set_desc || ' / '; ELSE v_set_desc := ' ';  end if;   	
		v_set_desc := v_set_desc || nvl(X.score_home, 0)::character varying || '-' || nvl(X.score_visitors, 0)::character varying; 
		i := i + 1; 
	end loop; 
  else
     v_set_desc = 'n.d.';
  end if; 
  
  return v_set_desc;
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="varchar" />
			<input_param name="p_match_id" jt="-5" type="int8" />
		</function>
		<function name="get_player_group_id" id="Function_18e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.get_player_group_id()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
begin
  return current_setting('sports.players_group_id')::integer; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="get_team_id" id="Function_e31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.get_team_id()
 RETURNS integer
 LANGUAGE sql
AS $function$SELECT 1::integer AS result;$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
		<function name="get_team_id" id="Function_491" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.get_team_id(character varying)
 RETURNS integer
 LANGUAGE sql
AS $function$
   SELECT team_id::integer AS RESULT
	     FROM sports.teams_championships_view WHERE upper(team_name) = upper($1);
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
			<input_param name="$1" jt="12" type="varchar" />
		</function>
		<function name="insert_defaults_trg" id="Function-1bb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.insert_defaults_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_count integer;
 v_sequence character varying; 
begin
	v_sequence := TG_TABLE_NAME || '_' || 'seq'; 
	
	--  SELECT COUNT(*) INTO v_count
	--	FROM information_schema.sequences 
	--	WHERE sequence_schema=TG_TABLE_SCHEMA AND sequence_name=TG_TABLE_NAME || v_sequence;
		
	 IF New.id IS NULL OR  New.id = 0  THEN
	 	New.id := nextval(TG_TABLE_SCHEMA || '.' || v_sequence); 	 
	 END IF; 
	  if New.jguid is null then
		 New.jguid:= uuid_generate_v1();
	  end if;
	  if New.deleted is null then
		 New.deleted := false;
	  end if;
	  if New.db_schema_id is null OR  New.db_schema_id = 0  then
		 New.db_schema_id := system.GET_schema_id();
	  end if;
	  IF TG_OP = 'INSERT' THEN
		 New.insert_date := now(); 
	  ELSIF TG_OP = 'UPDATE' THEN
	     New.update_date := now();
	  END IF; 
	  Return NEW;
end;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="leagues_view_trg" id="Function_15d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.leagues_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	  BEGIN
		  UPDATE sports.leagues SET
			league_name = New.league_name,
			country_id = New.country_id,
			league_position = New.league_position,
			league_code = New.league_code,
			db_schema_id = New.db_schema_id,
			remote_id = New.remote_id,
			promotedcss = coalesce(New.promotedcss, Old.promotedcss),
			playoffcss = coalesce(New.playoffcss, Old.playoffcss),
			championscss = coalesce(New.championscss, Old.championscss),
			playoutcss = coalesce(New.playoutcss, Old.playoutcss),
			relegationcss = coalesce(New.relegationcss, Old.relegationcss),
			all_players = New.all_players,
			jguid = New.jguid,
			deleted = New.deleted,
			insert_date = New.insert_date,
			update_date = New.update_date,
			user_insert = New.user_insert,
			user_update = New.user_update
		  WHERE 
			(jguid = New.jguid) ;
	  END; 
  ELSIF TG_OP = 'INSERT' THEN 
	  BEGIN
		  IF NEW.db_schema_id IS NULL  THEN 
		  	NEW.db_schema_id = current_setting('system.db_schema_id')::integer; 
		  END IF; 
		  INSERT INTO sports.leagues (
			id,
			league_name,
			country_id,
			league_position,
			league_code,
			db_schema_id,
			remote_id,
			promotedcss,
			playoffcss,
			championscss,
			playoutcss,
			relegationcss,
			all_players
		  )
		  VALUES (
			New.id,
			New.league_name,
			New.country_id,
			New.league_position,
			New.league_code,
			New.db_schema_id,
			New.remote_id,
			coalesce(New.promotedcss, 'promoted'),
			coalesce(New.playoffcss, 'playoff'),
			coalesce(New.championscss, 'champions'),
			coalesce(New.playoutcss,  'playout'),
			coalesce(New.relegationcss, 'relegation'),
			New.all_players
		  ) RETURNING id into v_id;
	  END; 
  ELSIF TG_OP = 'DELETE' THEN 
	  BEGIN
		  DELETE FROM sports.leagues
		  WHERE 
			(jguid = New.jguid) ;
	  END; 
  END IF; 
  Return NEW;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="match_players_view_trg" id="Function_1c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.match_players_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	BEGIN
	  UPDATE sports.match_players SET
		match_id = New.match_id,
		player_id = New.player_id,
		minutes = New.minutes,
		vote = New.vote,
		played = New.played,
		team_id = New.team_id,
		pos = New.pos,
		subst_id = New.subst_id,
		score = New.score,
		self_score = New.self_score,
		conceded = New.conceded,
		since = New.since,
		until = New.until,
		sent_off = New.sent_off,
		injuries = New.injuries
	  WHERE 
		(jguid = New.jguid) ;
    END;
  ELSIF TG_OP = 'INSERT' THEN 	
	BEGIN
	  INSERT INTO sports.match_players (
		id,
		match_id,
		player_id,
		minutes,
		vote,
		played,
		team_id,
		pos,
		subst_id,
		score,
		self_score,
		conceded,
		since,
		until,
		sent_off,
		injuries,
		jguid
	  )
	  VALUES (
		New.id,
		New.match_id,
		New.player_id,
		New.minutes,
		New.vote,
		New.played,
		New.team_id,
		New.pos,
		New.subst_id,
		New.score,
		New.self_score,
		New.conceded,
		New.since,
		New.until,
		New.sent_off,
		New.injuries,
		New.jguid
	  );
	END;
  ELSIF TG_OP = 'DELETE' THEN 
	BEGIN
	  DELETE FROM sports.match_players
	  WHERE 
		(jguid = Old.jguid) ;
	END;
  END IF;
  RETURN NEW; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="matches_view_sets_trg" id="Function_a25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.matches_view_sets_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  i integer; 
BEGIN
	FOR i IN 1..3 LOOP
		INSERT INTO sports.sets(
			match_id,number, score_home, score_visitors)
		VALUES ( New.id, i, 0, 0);	
	END LOOP; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="matches_view_trg" id="Function_5e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.matches_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
 LOGDATE DATE; 
BEGIN
  LOGDATE := system.setlog(TG_OP || ' RECORD: ' || NEW.home_team_name  || ' - ' || NEW.visitors_team_name ); 
  IF TG_OP = 'UPDATE' THEN 
  BEGIN
  -- I mantain always 'old' jguid and try to never change it
  New.jguid := Old.jguid; 
  
  IF NEW.db_schema_id IS NULL  THEN 
	NEW.db_schema_id = system.GET_schema_id();
	--current_setting('system.db_schema_id')::integer; 
  END IF; 
  
  New.points_home:=  New.score_home; 
  New.points_visitors := New.score_visitor ; 	
  
  UPDATE sports.matches SET
    league_id = New.league_id,
    season_id = New.season_id,
    match_day_number = New.match_day_number,
    match_time = New.match_time,
    match_date = New.match_date,
    home_team_id = New.home_team_id,
    visitors_team_id = New.visitors_team_id,
    score_home = New.score_home,
    score_visitor = New.score_visitor,
    points_home = New.score_home, --New.points_home,
    points_visitors = New.score_visitor, --New.points_visitors,
    notes = New.notes,
    confirmed = New.confirmed,
    home_notes = New.home_notes,
    visitors_notes = New.visitors_notes,
    suspended = New.suspended,
    postponed = New.postponed,
    forfeit = New.forfeit,
    remote_id = New.remote_id,
    field_id = New.field_id,
    article_url = New.article_url,
    video_url = New.video_url
  WHERE 
    (jguid = Old.jguid) ;
  	IF NEW.score_home <> OLD.score_home OR NEW.score_visitor <> OLD.score_visitor THEN	
    	SELECT sports.generate_day_ranking(New.match_day_number::smallint, New.league_id::smallint, New.season_id::smallint);
  	END IF; 
  END; 
  ELSIF TG_OP = 'INSERT' THEN 
  	DECLARE
	  v_id integer; 
  	BEGIN
		IF NEW.db_schema_id IS NULL  THEN 
		  	NEW.db_schema_id = current_setting('system.db_schema_id')::integer; 
		END IF; 
		  
        -- H.team_name as home_team_name, V.team_name as visitors_team_name 
        IF (NEW.home_team_id IS NULL OR NEW.home_team_id = 0) AND NEW.home_team_name IS NOT NULL THEN
        SELECT V.team_id INTO v_id 
            FROM sports.teams_championships_view V WHERE UPPER(TRIM(V.team_name)) = UPPER(TRIM(NEW.home_team_name));
        IF v_id IS NOT NULL THEN NEW.home_team_id := v_id; END IF; 	 
        END IF; 
        
        IF NEW.home_team_id IS NOT NULL THEN 
            INSERT INTO sports.calendar_teams(season_id,league_id,match_day, team_id )
                VALUES( New.season_id, New.league_id, New.match_day_number,  NEW.home_team_id); 
		ELSE
		  NEW.home_team_id := 0;
        END IF; 
        
        IF (NEW.visitors_team_id IS NULL OR NEW.visitors_team_id = 0) AND NEW.visitors_team_name IS NOT NULL THEN
        SELECT V.team_id INTO v_id 
            FROM sports.teams_championships_view V WHERE UPPER(TRIM(V.team_name)) = UPPER(TRIM(NEW.visitors_team_name));
        IF v_id IS NOT NULL THEN  NEW.visitors_team_id := v_id;	END IF; 
        END IF; 
        IF NEW.visitors_team_id IS NOT NULL AND NEW.visitors_team_id > 0 THEN
            INSERT INTO sports.calendar_teams(season_id,league_id,match_day, team_id )
                VALUES( New.season_id, New.league_id, New.match_day_number,  NEW.visitors_team_id); 
		ELSE
		  NEW.visitors_team_id := 0;
        END IF; 
        
        IF New.forfeit IS NULL THEN New.forfeit := False; END IF; 
		
        New.points_home:=  New.score_home; 
        New.points_visitors := New.score_visitor ; 		
        
        
        INSERT INTO sports.matches (
        id,
        league_id,
        season_id,
		db_schema_id, 
        match_day_number,
        match_time,
        match_date,
        home_team_id,
        visitors_team_id,
        score_home,
        score_visitor,
        points_home,
        points_visitors,
        notes,
        confirmed,
        home_notes,
        visitors_notes,
        suspended,
        postponed,
        forfeit,
        remote_id,
        field_id,
        article_url,
        video_url,
		jguid)
        VALUES (
        New.id,
        New.league_id,
        New.season_id,
		New.db_schema_id,
        New.match_day_number,
        New.match_time,
        New.match_date,
        New.home_team_id,
        New.visitors_team_id,
        New.score_home,
        New.score_visitor,
        New.points_home,
        New.points_visitors,
        New.notes,
        New.confirmed,
        New.home_notes,
        New.visitors_notes,
        New.suspended,
        New.postponed,
        New.forfeit,
        New.remote_id,
        New.field_id,
        New.article_url,
        New.video_url,
		New.jguid);
		
 	EXCEPTION 
	   WHEN OTHERS THEN 
	      RAISE EXCEPTION 'sports.matches_view_trg INSERT ERROR season_id = % league_id = % match_day = % HomeID = % VisitID = %  -  %', 
		    New.season_id, New.league_id, New.match_day_number, New.home_team_id, NEW.visitors_team_id, SQLERRM;       
  END; 
  
  ELSIF TG_OP = 'DELETE' THEN 
  	BEGIN
  		DELETE FROM sports.matches
  			WHERE (jguid = Old.jguid) ;
		DELETE FROM sports.calendar_teams WHERE 
			season_id  = New.season_id AND league_id = New.league_id AND   match_day = New.match_day_number AND  team_id = NEW.visitors_team_id; 
	END;
  END IF; 
  RETURN NEW; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="players_view_trg" id="Function_20b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.players_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	BEGIN
	  UPDATE sports.players SET
		anagraph_id = New.anagraph_id,
		birth_date = New.birth_date,
		birth_year = New.birth_year,
		birth_place = New.birth_place,
		notes = New.notes,
		role_id = New.role_id,
		height = New.height,
		weight = New.weight
	  WHERE 
		(jguid = Old.jguid);
	END;
  ELSIF TG_OP = 'INSERT' THEN 
    DECLARE 
      v_id smallint; 
	BEGIN
	  v_id := sports.get_player_group_id(); 
	  IF COALESCE(NEW.anagraph_id, 0) = 0 THEN
		  BEGIN
			New.anagraph_id:=nextval('anagraph.an_anagraph_seq');
			INSERT INTO anagraph.anagraphs_view 
				(anagraph_id, an_name, an_last_name, an_cellular, an_email, an_group_id, an_main_group_id,
				 an_birthdate,   an_birthplace)
			VALUES
				(New.anagraph_id, New.first_name, New.family_name, New.an_cellular, New.an_email, v_id, v_id, 
				 New.birth_date,  New.birth_place);
		  END;  
	  END IF; 
	  INSERT INTO sports.players (
		id,
		anagraph_id,
		birth_year,
		notes,
		role_id,
		height,
		weight,
		remote_id,
		jguid
	  )
	  VALUES (
		New.id,
		New.anagraph_id,
		New.birth_year,
		New.notes,
		New.role_id,
		New.height,
		New.weight,
		New.remote_id,
		New.jguid
	  ) RETURNING id into New.id;
	END;
  ELSIF TG_OP = 'INSERT' THEN 
	BEGIN
	  DELETE FROM sports.players
	  WHERE 
		(jguid = Old.jguid);
	END;
  END IF; 
  RETURN NEW; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="roles_view_trg" id="Function_85c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.roles_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
-- role_code
-- role_name
   IF NEW.db_schema_id IS NULL  THEN 
		NEW.db_schema_id = current_setting('system.db_schema_id')::integer; 
   END IF; 
  IF TG_OP = 'UPDATE' THEN 
  UPDATE sports.roles SET
    role_name = New.role_name,
    role_code = New.role_code
  WHERE 
    (jguid = New.jguid) ;
  ELSIF TG_OP = 'INSERT' THEN 
  BEGIN
  
  if New.id IS NULL THEN New.id = nextval('sports.roles_seq'); END IF; 
  
  INSERT INTO sports.roles (
    id,
    role_name,
    role_code
  )
  VALUES (
    New.id,
    New.role_name,
    New.role_code
  ) RETURNING id into v_id;
  END; 
  ELSIF TG_OP = 'DELETE' THEN 
  DELETE FROM sports.roles
  WHERE 
    (jguid = Old.jguid) ;
  END IF; 
  RETURN New; 	
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="seasons_id_trg" id="Function-861" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.seasons_id_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
     if New.ID is null then
          New.ID :=nextval('sports.seasons_seq');
      end if; 
      Return NEW;
end;
$function$
;]]></string>
		</function>
		<function name="seasons_view_trg" id="Function_a67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.seasons_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
  IF TG_OP = 'UPDATE' THEN 
	  BEGIN
		  UPDATE sports.seasons SET
			season_des = New.season_des,
			season_code = New.season_code,
			db_schema_id = New.db_schema_id,
			order_number = New.order_number,
			remote_id = New.remote_id
		  WHERE 
			(jguid = New.jguid) ;
	  END; 
  ELSIF TG_OP = 'INSERT' THEN 
	  BEGIN
		  if New.ID is null then
	      	New.ID :=nextval('sports.seasons_seq');
		  end if; 
		  
		  IF NEW.db_schema_id IS NULL THEN 
		  	NEW.db_schema_id = current_setting('system.db_schema_id')::integer; 
		  END IF; 
		  INSERT INTO sports.seasons (
			id,
			season_des,
			season_code,
			db_schema_id,
			order_number,
			remote_id,
			jguid
		  )
		  VALUES (
			New.id,
			New.season_des,
			New.season_code,
			New.db_schema_id,
			New.order_number,
			New.remote_id,
			New.jguid
		  ) RETURNING id, jguid INTO New.id, New.jguid;
	  END; 
  ELSIF TG_OP = 'DELETE' THEN 
	  BEGIN
		DELETE FROM sports.seasons
		WHERE (jguid = Old.jguid) ;
	  END; 
  END IF; 
  RETURN New; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="sets_view_trg" id="Function_253b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.sets_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
  IF TG_OP = 'UPDATE' THEN 
  UPDATE sports.sets SET
    match_id = New.match_id,
    score_home = New.score_home,
    score_visitors = New.score_visitors,
    remote_id = New.remote_id,
    db_schema_id = New.db_schema_id, 
	number = New.number
  WHERE 
    (jguid = New.jguid) ;
	
  ELSIF TG_OP = 'INSERT' THEN 
  BEGIN
  INSERT INTO sports.sets (
    id,
    match_id,
    score_home,
    score_visitors,
    remote_id,
	number, 
	jguid  
  )
  VALUES (
    New.id,
    New.match_id,
    New.score_home,
    New.score_visitors,
    New.remote_id,
	New.number, 
	New.jguid
  )  RETURNING id, jguid INTO New.id, New.jguid;
 	EXCEPTION 
	   WHEN OTHERS THEN 
	      RAISE EXCEPTION 'sports.sets_view_trg INSERT ERROR match_id = % score_home = % score_visitors = % - % ', 
		    New.match_id, New.score_home, New.score_visitors, SQLERRM;   
  END; 
  
  ELSIF TG_OP = 'DELETE' THEN 
  DELETE FROM sports.sets
  WHERE 
    (jguid = Old.jguid) ;
  END IF; 
  
  RETURN NEW;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="setup_environment_defaults" id="Function_fd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.setup_environment_defaults()
 RETURNS event_trigger
 LANGUAGE plpgsql
AS $function$BEGIN
  SET SESSION "system.db_schema_id" = 39; 
  SET SESSION "sports.players_group_id" = 30;
END; $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="event_trigger" />
		</function>
		<function name="sp_del_calendar" id="Function_2665" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.sp_del_calendar(p_season_id smallint, p_league_id smallint, p_match_day_number smallint)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  DELETE FROM "sports"."calendar"
  WHERE 
    ("season_id" = "p_season_id") AND
    ("league_id" = "p_league_id") AND
    ("match_day_number" = "p_match_day_number") ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_season_id" jt="5" type="int2" />
			<input_param name="p_league_id" jt="5" type="int2" />
			<input_param name="p_match_day_number" jt="5" type="int2" />
		</function>
		<function name="sp_ins_calendar" id="Function_1633" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.sp_ins_calendar(p_season_id smallint, p_league_id smallint, p_match_day_number smallint, p_match_day_date date, p_match_day_played date, p_rest_team_id integer, p_db_schema_id integer, p_jguid uuid, p_deleted boolean, p_insert_date timestamp with time zone, p_update_date timestamp with time zone, p_user_insert character varying, p_user_update character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  INSERT INTO "sports"."calendar" (
    "season_id",
    "league_id",
    "match_day_number",
    "match_day_date",
    "match_day_played",
    "rest_team_id",
    "db_schema_id",
    "jguid",
    "deleted",
    "insert_date",
    "update_date",
    "user_insert",
    "user_update"
  )
  VALUES (
    "p_season_id",
    "p_league_id",
    "p_match_day_number",
    "p_match_day_date",
    "p_match_day_played",
    "p_rest_team_id",
    "p_db_schema_id",
    "p_jguid",
    "p_deleted",
    "p_insert_date",
    "p_update_date",
    "p_user_insert",
    "p_user_update"
  );
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_season_id" jt="5" type="int2" />
			<input_param name="p_league_id" jt="5" type="int2" />
			<input_param name="p_match_day_number" jt="5" type="int2" />
			<input_param name="p_match_day_date" jt="91" type="date" />
			<input_param name="p_match_day_played" jt="91" type="date" />
			<input_param name="p_rest_team_id" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamptz" />
			<input_param name="p_update_date" jt="93" type="timestamptz" />
			<input_param name="p_user_insert" jt="12" type="varchar" />
			<input_param name="p_user_update" jt="12" type="varchar" />
		</function>
		<function name="sp_sel_calendar" id="Function_d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.sp_sel_calendar()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
  DECLARE result_cursor REFCURSOR;
BEGIN
  OPEN result_cursor FOR SELECT 
    "season_id",
    "league_id",
    "match_day_number",
    "match_day_date",
    "match_day_played",
    "rest_team_id",
    "db_schema_id",
    "jguid",
    "deleted",
    "insert_date",
    "update_date",
    "user_insert",
    "user_update"
  FROM 
    "sports"."calendar";
  RETURN result_cursor;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="2012" type="refcursor" />
		</function>
		<function name="sp_upd_calendar" id="Function_cb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.sp_upd_calendar(p_season_id smallint, p_league_id smallint, p_match_day_number smallint, p_match_day_date date, p_match_day_played date, p_rest_team_id integer, p_db_schema_id integer, p_jguid uuid, p_deleted boolean, p_insert_date timestamp with time zone, p_update_date timestamp with time zone, p_user_insert character varying, p_user_update character varying)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
  UPDATE "sports"."calendar" SET
    "match_day_date" = "p_match_day_date",
    "match_day_played" = "p_match_day_played",
    "rest_team_id" = "p_rest_team_id",
    "db_schema_id" = "p_db_schema_id",
    "jguid" = "p_jguid",
    "deleted" = "p_deleted",
    "insert_date" = "p_insert_date",
    "update_date" = "p_update_date",
    "user_insert" = "p_user_insert",
    "user_update" = "p_user_update"
  WHERE 
    ("season_id" = "p_season_id") AND
    ("league_id" = "p_league_id") AND
    ("match_day_number" = "p_match_day_number") ;
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="p_season_id" jt="5" type="int2" />
			<input_param name="p_league_id" jt="5" type="int2" />
			<input_param name="p_match_day_number" jt="5" type="int2" />
			<input_param name="p_match_day_date" jt="91" type="date" />
			<input_param name="p_match_day_played" jt="91" type="date" />
			<input_param name="p_rest_team_id" jt="4" type="int4" />
			<input_param name="p_db_schema_id" jt="4" type="int4" />
			<input_param name="p_jguid" jt="1111" type="uuid" />
			<input_param name="p_deleted" jt="-7" type="bool" />
			<input_param name="p_insert_date" jt="93" type="timestamptz" />
			<input_param name="p_update_date" jt="93" type="timestamptz" />
			<input_param name="p_user_insert" jt="12" type="varchar" />
			<input_param name="p_user_update" jt="12" type="varchar" />
		</function>
		<function name="team_players_view_trg" id="Function_1f8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.team_players_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
	IF TG_OP = 'UPDATE' THEN 
		BEGIN
		  UPDATE sports.team_players SET
			team_id = New.team_id,
			player_id = New.player_id,
			season_id = New.season_id,
			since = New.since,
			until = New.until,
			club_origin_id = New.club_origin_id,
			scored = New.scored,
			self_scored = New.self_scored,
			conceded = New.conceded,
			sent_off = New.sent_off,
			injuries = New.injuries,
			minutes = New.minutes,
			matches = New.matches,
			score = New.score,
			votes = New.votes,
			remote_id = New.remote_id
		  WHERE 
			(jguid = New.jguid) ;
		END;
	ELSIF TG_OP = 'INSERT' THEN 
		BEGIN
		  IF NEW.player_id IS NULL THEN
		    INSERT INTO sports.players_view (
				 notes, 
				 weight, 
				 an_cellular, 
				 first_name, 
				 family_name, 
				 an_email, 
				 role_id,
				 birth_year, 
				 birth_place,
				 birth_date
			 )
			 VALUES
			 ( 
				 NEW.notes, 
				 NEW.weight, 
				 NEW.an_cellular, 
				 NEW.first_name, 
				 NEW.family_name, 
				 NEW.an_email, 
				 coalesce (NEW.role_id, 0),
				 NEW.birth_year, 
				 NEW.birth_place,
				 NEW.birth_date
			) RETURNING id INTO NEW.player_id; 
		  END IF; 
		  
		  INSERT INTO sports.team_players (
			id,
			team_id,
			player_id,
			season_id,
			since,
			until,
			club_origin_id,
			scored,
			self_scored,
			conceded,
			sent_off,
			injuries,
			minutes,
			matches,
			score,
			votes,
			remote_id,
			jguid  
		  )
		  VALUES (
			New.id,
			New.team_id,
			New.player_id,
			New.season_id,
			New.since,
			New.until,
			New.club_origin_id,
			New.scored,
			New.self_scored,
			New.conceded,
			New.sent_off,
			New.injuries,
			New.minutes,
			New.matches,
			New.score,
			New.votes,
			New.remote_id,
			New.jguid  
		  ) RETURNING id, jguid INTO New.id, New.jguid;
		END;
	ELSIF TG_OP = 'DELETE' THEN 
		BEGIN
		  DELETE FROM sports.team_players
		  WHERE 
			jguid = coalesce(New.jguid, Old.jguid) ;
		END;
	END IF; 
	
	RETURN NEW; 
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="teams_championships_view_trg" id="Function_de4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.teams_championships_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
  LOGDATE DATE; 
BEGIN
  LOGDATE := system.setlog(NEW.team_name || ' TRIGGER BEFORE: ' ||  TG_OP); 
  IF TG_OP = 'UPDATE' THEN 
	BEGIN
	  UPDATE sports.teams_championships SET
		season_id = New.season_id,
		league_id = New.league_id,
		team_id = New.team_id,
		position = New.position,
		penalty = New.penalty,
		remote_id = New.remote_id
	  WHERE 
		(jguid = New.jguid) ;
	END;
  ELSIF TG_OP = 'INSERT' THEN 
	DECLARE
		V_ID INTEGER; 
	BEGIN
        -- H.team_name as home_team_name, V.team_name as visitors_team_name 
      IF (NEW.team_id IS NULL OR NEW.team_id = 0) AND NEW.team_name IS NOT NULL THEN
	     LOGDATE := system.setlog(NEW.team_name || ' ID NOT SET'); 
			SELECT V.id INTO v_id 
				FROM sports.teams V WHERE UPPER(TRIM(V.team_name)) = UPPER(TRIM(NEW.team_name));
			IF v_id IS NOT NULL THEN 
				NEW.team_id := v_id; 
			ELSE
			   LOGDATE := system.setlog(NEW.team_name || ' ID NOT FOUND'); 	
			END IF; 	 
      END IF; 
	  
	  if new.jguid is null 
			 then new.jguid = uuid_generate_v4();
	  end if; 
	  
	  IF NEW.db_schema_id IS NULL THEN 
		  	NEW.db_schema_id = current_setting('system.db_schema_id')::integer; 
	  END IF; 
		
	  INSERT INTO sports.teams_championships (
		id,
		season_id,
		league_id,
		team_id,
		position,
		penalty,
		remote_id,
		db_schema_id,
		jguid
	  )
	  VALUES (
		CASE WHEN New.id = 0 THEN NULL ELSE New.id END,
		New.season_id,
		New.league_id,
		New.team_id,
		COALESCE(New.position, 0),
		COALESCE(New.penalty, 0),
		New.remote_id,
		New.db_schema_id,
		New.jguid
	  ) RETURNING id, jguid INTO New.id, New.jguid;
	END;
  ELSIF TG_OP = 'DELETE' THEN 
	BEGIN
	  DELETE FROM sports.teams_championships
	  WHERE 
		(jguid = New.jguid) ;
	END;
	
  END IF;
	
  RETURN NEW; 
	
END; 
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="teams_view_trg" id="Function_e58" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.teams_view_trg()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
 v_id integer;
BEGIN
IF TG_OP = 'UPDATE' THEN 
  UPDATE sports.teams SET
    club_id = New.club_id,
    team_name = TRIM(New.team_name),
    trainer_id = New.trainer_id,
    image = New.image
  WHERE 
    (id = New.id) ;
  ELSIF TG_OP = 'INSERT' THEN 
  	DECLARE
    	V_CLUB_ID INTEGER; 
  	BEGIN
		IF NOT EXISTS (
				SELECT 1 FROM sports.teams t where LOWER(TRIM(team_name)) = LOWER(TRIM(New.team_name))
		) THEN
			IF New.club_id = 0 or New.club_id IS NULL then 
				insert into sports.clubs_view (club_name) values (New.team_name) 
					RETURNING id INTO V_CLUB_ID; 
				New.club_id = V_CLUB_ID; 
			END IF; 
			if New.id IS NULL THEN New.id = nextval('sports.teams_seq'); END IF; 	
			IF NEW.db_schema_id IS NULL  THEN 
				NEW.db_schema_id = current_setting('system.db_schema_id')::integer; 
			END IF; 
			INSERT INTO sports.teams (
				id,
				club_id,
				team_name,
				trainer_id,
				image,
				remote_id
			)
			VALUES (
				New.id,
				New.club_id,
				TRIM(New.team_name),
				New.trainer_id,
				New.image,
				New.remote_id  
			);
		END IF;  
  	END; 
  ELSIF TG_OP = 'UPDATE' THEN 
	  BEGIN
		  DELETE FROM sports.teams
		  WHERE 
			(id = New.id) ;
	  END; 
  END IF;
  
  RETURN New; 
END;
$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="trigger" />
		</function>
		<function name="update_match_by_set" id="Function_1857" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION sports.update_match_by_set()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE 
  r record; 
  i integer; 
begin
  i := 0; 
  for r in select match_id, sum(points_home) as score_home, sum(points_visitors) as score_visitors 
	from 
	(
	select id, match_id, score_home, score_visitors, 
	case when score_home > score_visitors then 1 else 0 end as points_home,
	case when score_home > score_visitors then 0 else 1 end as points_visitors
	from sports.sets
	) a
	group by match_id
  loop
     update sports.matches set 
	 	score_home = r.score_home, points_home = r.score_home, 
		score_visitor = r.score_visitors, points_visitors = r.score_visitors
	 where id = r.match_id;
	 i := i +1; 
  end loop; 
  
  return i; 
end; 
$function$
;]]></string>
			<input_param name="returnValue" jt="4" type="int4" />
		</function>
	</schema>
	<schema name="temp" >
		<table name="tmp_genoa_routes" >
			<column name="codvia" type="varchar" length="6" decimal="0" jt="12" mandatory="y" />
			<column name="desvia" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="circos" type="integer" length="10" decimal="0" jt="4" />
			<column name="municipio" type="integer" length="10" decimal="0" jt="4" />
			<column name="parita" type="char" length="1" decimal="0" jt="1" />
			<column name="colciv" type="char" length="1" decimal="0" jt="1" />
			<column name="inizio" type="varchar" length="12" decimal="0" jt="12" />
			<column name="fine" type="varchar" length="12" decimal="0" jt="12" />
			<index name="tmp_genoa_routes_pkey" unique="PRIMARY_KEY" >
				<column name="codvia" />
			</index>
		</table>
		<table name="tmp_grids" >
			<column name="fieldname" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="varchar" length="128" decimal="0" jt="12" />
			<column name="bgcolor" type="integer" length="10" decimal="0" jt="4" />
			<column name="width" type="smallint" length="5" decimal="0" jt="5" />
			<column name="pos" type="smallint" length="5" decimal="0" jt="5" />
			<column name="mask" type="varchar" length="128" decimal="0" jt="12" />
			<column name="excel" type="smallint" length="5" decimal="0" jt="5" />
			<column name="chart" type="boolean" length="1" decimal="0" jt="-7" />
			<index name="tmp_grids_pk" unique="PRIMARY_KEY" >
				<column name="fieldname" />
			</index>
		</table>
	</schema>
	<schema name="utl_file" >
		<udt name="file_type" udt_java_type="4" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${schema}.${name} integer ]]></udt_script>
		</udt>
		<table name="utl_file_dir" >
			<column name="dir" type="text" decimal="0" jt="12" />
		</table>
		<function name="fclose" id="Function_ff5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fclose(file utl_file.file_type)
 RETURNS utl_file.file_type
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fclose$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
		</function>
		<function name="fclose_all" id="Function_1391" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fclose_all()
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fclose_all$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
		</function>
		<function name="fcopy" id="Function_244c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fcopy(src_location text, src_filename text, dest_location text, dest_filename text)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fcopy$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="src_location" jt="12" type="text" />
			<input_param name="src_filename" jt="12" type="text" />
			<input_param name="dest_location" jt="12" type="text" />
			<input_param name="dest_filename" jt="12" type="text" />
		</function>
		<function name="fcopy" id="Function_84e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fcopy(src_location text, src_filename text, dest_location text, dest_filename text, start_line integer)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fcopy$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="src_location" jt="12" type="text" />
			<input_param name="src_filename" jt="12" type="text" />
			<input_param name="dest_location" jt="12" type="text" />
			<input_param name="dest_filename" jt="12" type="text" />
			<input_param name="start_line" jt="4" type="int4" />
		</function>
		<function name="fcopy" id="Function_1f53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fcopy(src_location text, src_filename text, dest_location text, dest_filename text, start_line integer, end_line integer)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fcopy$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="src_location" jt="12" type="text" />
			<input_param name="src_filename" jt="12" type="text" />
			<input_param name="dest_location" jt="12" type="text" />
			<input_param name="dest_filename" jt="12" type="text" />
			<input_param name="start_line" jt="4" type="int4" />
			<input_param name="end_line" jt="4" type="int4" />
		</function>
		<function name="fflush" id="Function_1649" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fflush(file utl_file.file_type)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fflush$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
		</function>
		<function name="fgetattr" id="Function_214f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fgetattr(location text, filename text, OUT fexists boolean, OUT file_length bigint, OUT blocksize integer)
 RETURNS record
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fgetattr$function$
;]]></string>
			<input_param name="location" jt="12" type="text" />
			<input_param name="filename" jt="12" type="text" />
			<input_param name="fexists" jt="-7" type="bool" />
			<input_param name="file_length" jt="-5" type="int8" />
			<input_param name="blocksize" jt="4" type="int4" />
		</function>
		<function name="fopen" id="Function_108c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fopen(location text, filename text, open_mode text, max_linesize integer, encoding name)
 RETURNS utl_file.file_type
 LANGUAGE c
 SECURITY DEFINER
AS '$libdir/orafce', $function$utl_file_fopen$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="location" jt="12" type="text" />
			<input_param name="filename" jt="12" type="text" />
			<input_param name="open_mode" jt="12" type="text" />
			<input_param name="max_linesize" jt="4" type="int4" />
			<input_param name="encoding" jt="12" type="name" />
		</function>
		<function name="fopen" id="Function_174f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fopen(location text, filename text, open_mode text, max_linesize integer)
 RETURNS utl_file.file_type
 LANGUAGE c
 SECURITY DEFINER
AS '$libdir/orafce', $function$utl_file_fopen$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="location" jt="12" type="text" />
			<input_param name="filename" jt="12" type="text" />
			<input_param name="open_mode" jt="12" type="text" />
			<input_param name="max_linesize" jt="4" type="int4" />
		</function>
		<function name="fopen" id="Function_1b5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fopen(location text, filename text, open_mode text)
 RETURNS utl_file.file_type
 LANGUAGE sql
AS $function$SELECT utl_file.fopen($1, $2, $3, 1024); $function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="location" jt="12" type="text" />
			<input_param name="filename" jt="12" type="text" />
			<input_param name="open_mode" jt="12" type="text" />
		</function>
		<function name="fremove" id="Function_17ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.fremove(location text, filename text)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_fremove$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="location" jt="12" type="text" />
			<input_param name="filename" jt="12" type="text" />
		</function>
		<function name="frename" id="Function_1280" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.frename(location text, filename text, dest_dir text, dest_file text, overwrite boolean)
 RETURNS void
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_frename$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="location" jt="12" type="text" />
			<input_param name="filename" jt="12" type="text" />
			<input_param name="dest_dir" jt="12" type="text" />
			<input_param name="dest_file" jt="12" type="text" />
			<input_param name="overwrite" jt="-7" type="bool" />
		</function>
		<function name="frename" id="Function_359" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.frename(location text, filename text, dest_dir text, dest_file text)
 RETURNS void
 LANGUAGE sql
AS $function$SELECT utl_file.frename($1, $2, $3, $4, false);$function$
;]]></string>
			<input_param name="returnValue" jt="1111" type="void" />
			<input_param name="location" jt="12" type="text" />
			<input_param name="filename" jt="12" type="text" />
			<input_param name="dest_dir" jt="12" type="text" />
			<input_param name="dest_file" jt="12" type="text" />
		</function>
		<function name="get_line" id="Function_1e0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.get_line(file utl_file.file_type, OUT buffer text)
 RETURNS text
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_get_line$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="12" type="text" />
		</function>
		<function name="get_line" id="Function_c57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.get_line(file utl_file.file_type, OUT buffer text, len integer)
 RETURNS text
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_get_line$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="12" type="text" />
			<input_param name="len" jt="4" type="int4" />
		</function>
		<function name="get_nextline" id="Function_1be0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.get_nextline(file utl_file.file_type, OUT buffer text)
 RETURNS text
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_get_nextline$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="12" type="text" />
		</function>
		<function name="is_open" id="Function_9dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.is_open(file utl_file.file_type)
 RETURNS boolean
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_is_open$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
		</function>
		<function name="new_line" id="Function_110c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.new_line(file utl_file.file_type)
 RETURNS boolean
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_new_line$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
		</function>
		<function name="new_line" id="Function_462" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.new_line(file utl_file.file_type, lines integer)
 RETURNS boolean
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_new_line$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="lines" jt="4" type="int4" />
		</function>
		<function name="put" id="Function_5d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.put(file utl_file.file_type, buffer text)
 RETURNS boolean
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_put$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="12" type="text" />
		</function>
		<function name="put" id="Function_1620" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.put(file utl_file.file_type, buffer anyelement)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.put($1, $2::text); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="1111" type="anyelement" />
		</function>
		<function name="put_line" id="Function_bfa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.put_line(file utl_file.file_type, buffer text)
 RETURNS boolean
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_put_line$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="12" type="text" />
		</function>
		<function name="put_line" id="Function_1f6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.put_line(file utl_file.file_type, buffer text, autoflush boolean)
 RETURNS boolean
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_put_line$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="12" type="text" />
			<input_param name="autoflush" jt="-7" type="bool" />
		</function>
		<function name="put_line" id="Function_1d1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.put_line(file utl_file.file_type, buffer anyelement)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.put_line($1, $2::text); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="1111" type="anyelement" />
		</function>
		<function name="put_line" id="Function_2364" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.put_line(file utl_file.file_type, buffer anyelement, autoflush boolean)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.put_line($1, $2::text, true); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="buffer" jt="1111" type="anyelement" />
			<input_param name="autoflush" jt="-7" type="bool" />
		</function>
		<function name="putf" id="Function_89e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.putf(file utl_file.file_type, format text, arg1 text, arg2 text, arg3 text, arg4 text, arg5 text)
 RETURNS boolean
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_putf$function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="format" jt="12" type="text" />
			<input_param name="arg1" jt="12" type="text" />
			<input_param name="arg2" jt="12" type="text" />
			<input_param name="arg3" jt="12" type="text" />
			<input_param name="arg4" jt="12" type="text" />
			<input_param name="arg5" jt="12" type="text" />
		</function>
		<function name="putf" id="Function_3a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.putf(file utl_file.file_type, format text, arg1 text, arg2 text, arg3 text, arg4 text)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.putf($1, $2, $3, $4, $5, $6, NULL); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="format" jt="12" type="text" />
			<input_param name="arg1" jt="12" type="text" />
			<input_param name="arg2" jt="12" type="text" />
			<input_param name="arg3" jt="12" type="text" />
			<input_param name="arg4" jt="12" type="text" />
		</function>
		<function name="putf" id="Function_240c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.putf(file utl_file.file_type, format text, arg1 text, arg2 text, arg3 text)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.putf($1, $2, $3, $4, $5, NULL, NULL); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="format" jt="12" type="text" />
			<input_param name="arg1" jt="12" type="text" />
			<input_param name="arg2" jt="12" type="text" />
			<input_param name="arg3" jt="12" type="text" />
		</function>
		<function name="putf" id="Function_1025" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.putf(file utl_file.file_type, format text, arg1 text, arg2 text)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.putf($1, $2, $3, $4, NULL, NULL, NULL); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="format" jt="12" type="text" />
			<input_param name="arg1" jt="12" type="text" />
			<input_param name="arg2" jt="12" type="text" />
		</function>
		<function name="putf" id="Function_520" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.putf(file utl_file.file_type, format text, arg1 text)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.putf($1, $2, $3, NULL, NULL, NULL, NULL); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="format" jt="12" type="text" />
			<input_param name="arg1" jt="12" type="text" />
		</function>
		<function name="putf" id="Function_4c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.putf(file utl_file.file_type, format text)
 RETURNS boolean
 LANGUAGE sql
AS $function$SELECT utl_file.putf($1, $2, NULL, NULL, NULL, NULL, NULL); $function$
;]]></string>
			<input_param name="returnValue" jt="-7" type="bool" />
			<input_param name="file" jt="1111" type="&quot;utl_file&quot;.&quot;file_type&quot;" />
			<input_param name="format" jt="12" type="text" />
		</function>
		<function name="tmpdir" id="Function_252b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION utl_file.tmpdir()
 RETURNS text
 LANGUAGE c
AS '$libdir/orafce', $function$utl_file_tmpdir$function$
;]]></string>
			<input_param name="returnValue" jt="12" type="text" />
		</function>
	</schema>
	<connector name="ErgoMercator_Baltun" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.16.jar" driver_desc="Standard" host="pg.januaservers.com" port="5432" instance="ergomercator" user="ergo" passwd="M3JnMG0zcmM0dDBy" />
	<connector name="Local Ergomercator" database="PostgreSQL" host="localhost" port="5432" instance="ergomercator" user="ergo" passwd="M3JnMG0zcmM0dDBy" />
	<connector name="Manage..." database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.16.jar" driver_desc="Standard" host="192.168.182.1" port="5433" instance="ergomercator" user="ergo" passwd="M3JnMG0zcmM0dDBy" />
	<layout name="Anagraph" id="Layout_1b2b53c" confirmed="y" show_column_type="y" show_schema_name="y" show_page_borders="y" show_relation="columns" >
		<entity schema="ergomercator.anagraph" name="addresses" color="BED3F4" x="48" y="1200" />
		<entity schema="ergomercator.anagraph" name="an_addresses_view" color="BED3F4" x="912" y="64" />
		<entity schema="ergomercator.anagraph" name="an_contacts" color="C1D8EE" x="496" y="1504" />
		<entity schema="ergomercator.anagraph" name="an_locations" color="F4DDBE" x="720" y="1232" />
		<entity schema="ergomercator.anagraph" name="anag_categories" color="F4DDBE" x="704" y="1344" />
		<entity schema="ergomercator.anagraph" name="anagraphs" color="F4DDBE" x="368" y="1136" >
			<column name="anagraph_id" />
			<column name="db_schema_id" />
			<column name="an_title" />
			<column name="an_name" />
			<column name="an_second_name" />
			<column name="an_last_name" />
			<column name="an_notes" />
			<column name="an_address" />
			<column name="an_town" />
			<column name="an_postal_code" />
			<column name="an_iso_country_code" />
			<column name="an_main_group_id" />
			<column name="main_category_id" />
		</entity>
		<entity schema="ergomercator.anagraph" name="anagraphs_view" color="F4DDBE" x="512" y="2112" >
			<column name="db_schema_id" />
			<column name="anagraph_id" />
			<column name="an_title" />
			<column name="an_name" />
			<column name="an_second_name" />
			<column name="an_last_name" />
			<column name="an_notes" />
			<column name="an_address" />
			<column name="an_town" />
			<column name="an_postal_code" />
			<column name="an_iso_country_code" />
		</entity>
		<entity schema="ergomercator.anagraph" name="branches" color="F4DDBE" x="656" y="928" >
			<column name="an_branch_id" />
			<column name="anagraph_id" />
			<column name="db_schema_id" />
			<column name="an_branch_name" />
			<column name="an_branch_postal_code" />
			<column name="an_branch_town_name" />
			<column name="an_branch_town_code" />
			<column name="an_branch_address" />
			<column name="an_insert_date" />
			<column name="an_update_date" />
			<column name="an_branch_phone" />
			<column name="an_branch_state_province" />
			<column name="an_reference_id" />
		</entity>
		<entity schema="ergomercator.anagraph" name="categories" color="F4DDBE" x="960" y="1392" />
		<entity schema="ergomercator.anagraph" name="categories_translations" color="F4DDBE" x="1024" y="1072" />
		<entity schema="ergomercator.anagraph" name="groups" color="BED3F4" x="720" y="1600" />
		<entity schema="ergomercator.anagraph" name="groups_view" color="BED3F4" x="832" y="2128" />
		<entity schema="ergomercator.anagraph" name="identities" color="BED3F4" x="272" y="1744" />
		<entity schema="ergomercator.anagraph" name="osm_anagraphs" color="BED3F4" x="1232" y="48" />
		<entity schema="ergomercator.anagraph" name="schema_groups" color="BED3F4" x="976" y="1712" />
		<script name="groups" id="Editor_977" language="SQL" >
			<string><![CDATA[SELECT an_group_id, db_schema_id, group_des, contact_group, sub_group, sub_group_des, settings, "position", accounting, cod_account, 
	"local", group_cod, ledger_cod, subledger_cod, "grouping", description, angr_jguid, angr_deleted, icon_id, jguid
FROM
	anagraph.groups s;]]></string>
		</script>
	</layout>
	<layout name="Applications" id="Layout_3ad" joined_routing="y" show_column_type="y" show_relation="columns" >
		<entity schema="ergomercator.system" name="app_forms" color="3986C1" x="400" y="48" />
		<entity schema="ergomercator.system" name="app_forms_objects" color="3986C1" x="64" y="96" />
		<entity schema="ergomercator.system" name="app_forms_objects_properties" color="3986C1" x="80" y="352" />
		<entity schema="ergomercator.system" name="app_forms_objects_translations" color="3986C1" x="48" y="688" />
		<entity schema="ergomercator.system" name="app_forms_translations" color="3986C1" x="400" y="544" />
		<entity schema="ergomercator.system" name="app_functions" color="3986C1" x="400" y="352" />
		<entity schema="ergomercator.system" name="app_member_forms" color="3986C1" x="736" y="80" />
		<entity schema="ergomercator.system" name="app_messages" color="3986C1" x="1120" y="320" />
		<entity schema="ergomercator.system" name="app_messages_translations" color="3986C1" x="1136" y="64" />
		<entity schema="ergomercator.system" name="applications" color="3986C1" x="704" y="304" />
	</layout>
	<layout name="Car Service" id="Layout-25b1" show_column_type="y" show_schema_name="y" show_relation="columns" >
		<entity schema="ergomercator.anagraph" name="anagraphs" color="3986C1" x="800" y="576" >
			<column name="anagraph_id" />
			<column name="db_schema_id" />
			<column name="an_title" />
			<column name="an_name" />
			<column name="an_second_name" />
			<column name="an_last_name" />
			<column name="an_notes" />
			<column name="an_address" />
			<column name="an_town" />
			<column name="an_postal_code" />
			<column name="an_iso_country_code" />
			<column name="an_main_group_id" />
			<column name="main_category_id" />
		</entity>
		<entity schema="carservice" name="booking_addresses" color="3986C1" x="1168" y="48" />
		<entity schema="carservice" name="booking_heads" color="3986C1" x="816" y="80" />
		<entity schema="carservice" name="drivers" color="3986C1" x="48" y="384" />
		<entity schema="carservice" name="messages" color="3986C1" x="48" y="48" />
		<entity schema="carservice" name="owners_vehicles" color="3986C1" x="1184" y="688" />
		<entity schema="carservice" name="timetable" color="3986C1" x="464" y="304" />
		<script name="SQL_Editor" id="Editor_fb8" language="SQL" >
			<string><![CDATA[CREATE UNIQUE INDEX booking_heads_uid_uk ON carservice.booking_heads ( jguid ) ;

ALTER TABLE carservice.booking_heads ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_booking_heads_uid FOREIGN KEY ( booking_jguid ) REFERENCES carservice.booking_heads( jguid )   ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_timetable_uid FOREIGN KEY ( timetable_jguid ) REFERENCES carservice.timetable( jguid )   ;

CREATE UNIQUE INDEX timetable_uid_uk ON carservice.timetable ( jguid ) ;

ALTER TABLE carservice.timetable ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.timetable ADD CONSTRAINT fk_timetable_timetable_slots FOREIGN KEY ( slot_id ) REFERENCES carservice.timetable_slots( slot_id )   ;]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor_16a8" language="SQL" >
			<string><![CDATA[CREATE UNIQUE INDEX booking_heads_uid_uk ON carservice.booking_heads ( jguid ) ;

ALTER TABLE carservice.booking_heads ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_booking_heads_uid FOREIGN KEY ( booking_jguid ) REFERENCES carservice.booking_heads( jguid )   ;

ALTER TABLE carservice.messages ADD CONSTRAINT fk_messages_timetable_uid FOREIGN KEY ( timetable_jguid ) REFERENCES carservice.timetable( jguid )   ;

CREATE UNIQUE INDEX timetable_uid_uk ON carservice.timetable ( jguid ) ;

ALTER TABLE carservice.timetable ADD CONSTRAINT timetable_booking_states_fk FOREIGN KEY ( state_id ) REFERENCES carservice.booking_states( id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.timetable ADD CONSTRAINT fk_timetable_timetable_slots FOREIGN KEY ( slot_id ) REFERENCES carservice.timetable_slots( slot_id )   ;]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor_1a89" language="SQL" >
			<string><![CDATA[ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;]]></string>
		</script>
		<script name="SQL_Editor_003" id="Editor_18db" language="SQL" >
			<string><![CDATA[ALTER TABLE carservice.booking_addresses ADD CONSTRAINT fk_booking_addresses_anagraphs FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )   ;]]></string>
		</script>
		<script name="SQL_Editor_004" id="Editor_5a2" language="SQL" >
			<string><![CDATA[ALTER TABLE carservice.drivers ADD CONSTRAINT drivers_anagraph_fk FOREIGN KEY ( anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;

ALTER TABLE carservice.owners_vehicles ADD CONSTRAINT fk_owners_vehicles_anagraphs FOREIGN KEY ( owner_id ) REFERENCES anagraph.anagraphs( anagraph_id )   ;

ALTER TABLE carservice.timetable ADD CONSTRAINT fk_timetable_anagraphs FOREIGN KEY ( driver_anagraph_id ) REFERENCES anagraph.anagraphs( anagraph_id )  ON UPDATE CASCADE ;]]></string>
		</script>
	</layout>
	<layout name="Logistic Workflows" id="Layout_5e7" confirmed="y" show_relation="columns" >
		<script name="levels_001" id="Editor_10fd" language="SQL" >
			<string><![CDATA[SELECT id, description, icon, color
FROM
	workflow.levels s;]]></string>
		</script>
		<script name="type_of_goods" id="Editor_1090" language="SQL" >
			<string><![CDATA[SELECT jguid, db_schema_id, code, description
FROM
	logistic.type_of_goods s;]]></string>
		</script>
	</layout>
	<layout name="Logistic_AWB" id="Layout_50e767b" confirmed="y" show_schema_name="y" show_relation="columns" >
		<comment><![CDATA[Logistic AWB]]></comment>
		<script name="anagraphs" id="Editor_cc" language="SQL" >
			<string><![CDATA[UPDATE anagraph.anagraphs SET jguid = uuid_generate_v1mc()
where
jguid is null ;]]></string>
		</script>
		<script name="locations" id="Editor_1324" language="SQL" >
			<string><![CDATA[UPDATE logistic.locations SET search_index = Upper(iata_code) || ' ' || Upper(name) || ' ' || country  ;]]></string>
		</script>
		<script name="locations_001" id="Editor_95a" language="SQL" >
			<string><![CDATA[SELECT id, jguid, db_schema_id, deleted, insert_date, update_date, user_insert, user_update, code, name, state_province, 
	country, area_code, iso_code, flgairport, iata_code, group_id, search_index
FROM
	logistic.locations s
WHERE
	s.flgairport]]></string>
		</script>
		<script name="locations_002" id="Editor_12ad" language="SQL" >
			<string><![CDATA[UPDATE logistic.locations 
SET ... = ... 
	logistic.locations s
WHERE
	s.flgairport]]></string>
		</script>
	</layout>
	<layout name="Pretty Cash" id="Layout_984ea" confirmed="y" show_schema_name="y" show_relation="columns" >
		<script name="SQL_Editor" id="Editor_2f08071" language="SQL" >
			<string><![CDATA[CREATE SCHEMA accounting;

CREATE  TABLE accounting.pcash_groups ( 
	db_schema_id         integer DEFAULT 0 NOT NULL 
 );

COMMENT ON TABLE accounting.pcash_groups IS 'Petty cash booking groups';

COMMENT ON COLUMN accounting.pcash_groups.db_schema_id IS 'Connection to db_Schema';]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor_4d27c4b" language="SQL" >
			<string><![CDATA[CREATE SCHEMA accounting;

CREATE SEQUENCE accounting.accounts_seq;

CREATE  TABLE accounting.pcash_account ( 
	id                   integer  NOT NULL ,
	master_id            integer  NOT NULL ,
	code                 varchar(10)   ,
	name                 varchar(128)  NOT NULL ,
	db_schema_id         integer DEFAULT 0 NOT NULL ,
	CONSTRAINT pk_pcash_account_id PRIMARY KEY ( id ),
	CONSTRAINT unq_pcash_account_master_id UNIQUE ( master_id ) 
 );

COMMENT ON TABLE accounting.pcash_account IS 'Account Definition and Code (eventually) for pretty Cash';

COMMENT ON COLUMN accounting.pcash_account.id IS 'group id Foreign Key';

COMMENT ON COLUMN accounting.pcash_account.master_id IS 'Master Account ID';

COMMENT ON COLUMN accounting.pcash_account.code IS 'Unique ID Code (Should be part of the General Ledger Chart of Accounting Codes).';

COMMENT ON COLUMN accounting.pcash_account.name IS 'Accounting Ledger Name';

COMMENT ON COLUMN accounting.pcash_account.db_schema_id IS 'Foreign Key to db_schema';

ALTER TABLE accounting.pcash_account ADD CONSTRAINT fk_pcash_account_pcash_account FOREIGN KEY ( id ) REFERENCES accounting.pcash_account( master_id );]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor_3afd9c" language="SQL" >
			<string><![CDATA[CREATE SCHEMA accounting;

CREATE SEQUENCE accounting.accounts_seq;

CREATE  TABLE accounting.pcash_account ( 
	id                   integer  NOT NULL ,
	master_id            integer  NOT NULL ,
	code                 varchar(10)   ,
	name                 varchar(128)  NOT NULL ,
	db_schema_id         integer DEFAULT 0 NOT NULL ,
	CONSTRAINT pk_pcash_account_id PRIMARY KEY ( id ),
	CONSTRAINT unq_pcash_account_master_id UNIQUE ( master_id ) 
 );

COMMENT ON TABLE accounting.pcash_account IS 'Account Definition and Code (eventually) for pretty Cash';

COMMENT ON COLUMN accounting.pcash_account.id IS 'group id Foreign Key';

COMMENT ON COLUMN accounting.pcash_account.master_id IS 'Master Account ID';

COMMENT ON COLUMN accounting.pcash_account.code IS 'Unique ID Code (Should be part of the General Ledger Chart of Accounting Codes).';

COMMENT ON COLUMN accounting.pcash_account.name IS 'Accounting Ledger Name';

COMMENT ON COLUMN accounting.pcash_account.db_schema_id IS 'Foreign Key to db_schema';

CREATE  TABLE accounting.pcash_journal_row ( 
	id                   bigint  NOT NULL ,
	journal_date         date DEFAULT current_date NOT NULL ,
	CONSTRAINT pk_pcash_journal_row_id PRIMARY KEY ( id )
 );

COMMENT ON TABLE accounting.pcash_journal_row IS 'Journal Row';

COMMENT ON COLUMN accounting.pcash_journal_row.id IS 'Unique row identifier';

COMMENT ON COLUMN accounting.pcash_journal_row.journal_date IS 'pretty cash journal date';

CREATE  TABLE accounting.pretty_cash_journal ( 
	id                   integer   ,
	pcash_name           varchar(128)  NOT NULL ,
	db_schema_id         integer DEFAULT 0 NOT NULL 
 );

COMMENT ON TABLE accounting.pretty_cash_journal IS 'Pretty cash journals';

COMMENT ON COLUMN accounting.pretty_cash_journal.id IS 'Unique id';

COMMENT ON COLUMN accounting.pretty_cash_journal.pcash_name IS 'Pretty cash name field';

ALTER TABLE accounting.pcash_account ADD CONSTRAINT fk_pcash_account_pcash_account FOREIGN KEY ( id ) REFERENCES accounting.pcash_account( master_id );]]></string>
		</script>
		<script name="pcash_accounting_rows_ledgers" id="Editor_3234e87" language="SQL" >
			<string><![CDATA[CREATE  TABLE accounting.pcash_accounting_vat_rows ( 
	ledger_guid          uuid  NOT NULL ,
	row_guid             uuid  NOT NULL ,
	debit                money DEFAULT 0 NOT NULL ,
	credit               money DEFAULT 0 NOT NULL ,
	CONSTRAINT pk_cash_accounting_vat_rows_guid PRIMARY KEY ( ledger_guid, row_guid )
 );

COMMENT ON COLUMN accounting.pcash_accounting_vat_rows.debit IS 'Debit';

COMMENT ON COLUMN accounting.pcash_accounting_vat_rows.credit IS 'Credit field';]]></string>
		</script>
	</layout>
	<layout name="Sports" id="Layout-fcf" show_relation="columns" >
		<entity schema="sports" name="calendar" color="BED3F4" x="512" y="48" >
			<column name="season_id" />
			<column name="league_id" />
			<column name="match_day_number" />
			<column name="match_day_date" />
			<column name="match_day_played" />
			<column name="rest_team_id" />
			<column name="id" />
		</entity>
		<entity schema="sports" name="championships" color="BED3F4" x="288" y="48" >
			<column name="season_id" />
			<column name="league_id" />
			<column name="promoted" />
			<column name="playoff" />
			<column name="relegation" />
			<column name="champions" />
			<column name="playout" />
			<column name="teams" />
			<column name="id" />
		</entity>
		<entity schema="sports" name="clubs" color="3986C1" x="1008" y="240" >
			<column name="id" />
			<column name="club_name" />
			<column name="foundation_date" />
			<column name="president" />
			<column name="stadium_id" />
			<column name="town" />
			<column name="vice_president" />
			<column name="team_manager" />
			<column name="athletic_manager" />
			<column name="colors" />
			<column name="website" />
			<column name="anagraph_id" />
			<column name="club_image" />
		</entity>
		<entity schema="sports" name="fields" color="3986C1" x="1008" y="592" >
			<column name="id" />
			<column name="db_schema_id" />
			<column name="field_name" />
			<column name="address" />
			<column name="country_id" />
			<column name="region_id" />
			<column name="district_id" />
			<column name="town_id" />
			<column name="remote_id" />
			<column name="town_name" />
			<column name="postal_code" />
			<column name="telephone" />
			<column name="fax" />
			<column name="notes" />
			<column name="img_url" />
		</entity>
		<entity schema="sports" name="leagues" color="BED3F4" x="48" y="528" >
			<column name="id" />
			<column name="league_name" />
			<column name="country_id" />
			<column name="league_position" />
			<column name="league_code" />
			<column name="remote_id" />
			<column name="promotedcss" />
			<column name="playoffcss" />
			<column name="championscss" />
			<column name="playoutcss" />
			<column name="relegationcss" />
			<column name="all_players" />
		</entity>
		<entity schema="sports" name="matches" color="BED3F4" x="496" y="416" >
			<column name="id" />
			<column name="league_id" />
			<column name="season_id" />
			<column name="match_day_number" />
			<column name="match_time" />
			<column name="match_date" />
			<column name="home_team_id" />
			<column name="visitors_team_id" />
			<column name="score_home" />
			<column name="score_visitor" />
			<column name="points_home" />
			<column name="points_visitors" />
			<column name="notes" />
			<column name="confirmed" />
			<column name="home_notes" />
			<column name="visitors_notes" />
			<column name="suspended" />
			<column name="postponed" />
			<column name="forfeit" />
			<column name="remote_id" />
			<column name="field_id" />
			<column name="article_url" />
			<column name="video_url" />
			<column name="confirmed_home" />
			<column name="confirmed_visitors" />
		</entity>
		<entity schema="sports" name="seasons" color="BED3F4" x="256" y="464" >
			<column name="id" />
			<column name="season_des" />
			<column name="season_code" />
			<column name="order_number" />
			<column name="remote_id" />
		</entity>
		<entity schema="sports" name="sets" color="3986C1" x="784" y="528" />
		<entity schema="sports" name="teams" color="3986C1" x="800" y="336" >
			<column name="id" />
			<column name="club_id" />
			<column name="team_name" />
			<column name="trainer_id" />
			<column name="image" />
		</entity>
	</layout>
	<layout name="Update 2023-08" id="Layout_177d" show_relation="columns" >
		<entity schema="planner" name="activities" color="BED3F4" x="304" y="48" />
		<entity schema="planner" name="activities_groups" color="BED3F4" x="80" y="64" />
		<entity schema="ergomercator.anagraph" name="cars" color="BED3F4" x="528" y="48" />
		<entity schema="carservice" name="messages" color="BED3F4" x="304" y="256" />
		<entity schema="planner" name="timetable" color="BED3F4" x="48" y="256" />
		<entity schema="carservice" name="timetable_booking_driver" color="BED3F4" x="544" y="400" />
	</layout>
	<layout name="jpublic" id="Layout_37b20fd" confirmed="y" show_schema_name="y" show_relation="columns" >
		<comment><![CDATA[PostgreSQL]]></comment>
		<entity schema="ergomercator.jpublic" name="buildings" color="BEBEF4" x="544" y="800" />
		<entity schema="ergomercator.jpublic" name="contiguous_regions" color="F4DDBE" x="64" y="128" />
		<entity schema="ergomercator.jpublic" name="countries" color="D1BEF4" x="1136" y="80" />
		<entity schema="ergomercator.jpublic" name="countries_trans" color="D1BEF4" x="928" y="128" />
		<entity schema="ergomercator.jpublic" name="country_currencies" color="D1BEF4" x="1344" y="144" />
		<entity schema="ergomercator.jpublic" name="cultures" color="FF6666" x="896" y="384" />
		<entity schema="ergomercator.jpublic" name="currencies" color="FF6666" x="1280" y="416" />
		<entity schema="ergomercator.jpublic" name="currencies_trans" color="FF6666" x="1120" y="608" />
		<entity schema="ergomercator.jpublic" name="district_trans" color="F4DDBE" x="320" y="448" />
		<entity schema="ergomercator.jpublic" name="districts" color="F4DDBE" x="64" y="528" />
		<entity schema="ergomercator.jpublic" name="lang_translations" color="E6B3E6" x="624" y="576" />
		<entity schema="ergomercator.jpublic" name="languages" color="CC99CC" x="624" y="320" />
		<entity schema="ergomercator.jpublic" name="location_types" color="C7F4BE" x="1008" y="848" />
		<entity schema="ergomercator.jpublic" name="locations" color="C7F4BE" x="768" y="800" />
		<entity schema="ergomercator.jpublic" name="regions" color="F4DDBE" x="64" y="304" />
		<entity schema="ergomercator.jpublic" name="regions_trans" color="F4DDBE" x="336" y="304" />
		<entity schema="ergomercator.jpublic" name="routes" color="BED3F4" x="576" y="1168" />
		<entity schema="ergomercator.jpublic" name="sub_town_areas" color="BED3F4" x="288" y="1216" />
		<entity schema="ergomercator.jpublic" name="town_areas" color="BEBEF4" x="48" y="1056" />
		<entity schema="ergomercator.jpublic" name="town_areas_routes" color="C1D8EE" x="368" y="1072" />
		<entity schema="ergomercator.jpublic" name="towns" color="BEBEF4" x="48" y="816" />
		<group name="Group_Towns" color="C4E0F9" >
			<entity schema="ergomercator.jpublic" name="sub_town_areas" />
			<entity schema="ergomercator.jpublic" name="towns" />
			<entity schema="ergomercator.jpublic" name="buildings" />
			<entity schema="ergomercator.jpublic" name="town_areas_routes" />
			<entity schema="ergomercator.jpublic" name="routes" />
		</group>
		<group name="Group_Locations" color="CCFFCC" >
			<entity schema="ergomercator.jpublic" name="locations" />
			<entity schema="ergomercator.jpublic" name="location_types" />
		</group>
		<group name="Group_Regions" color="FFCC99" >
			<entity schema="ergomercator.jpublic" name="contiguous_regions" />
			<entity schema="ergomercator.jpublic" name="regions" />
			<entity schema="ergomercator.jpublic" name="districts" />
			<entity schema="ergomercator.jpublic" name="regions_trans" />
			<entity schema="ergomercator.jpublic" name="district_trans" />
		</group>
		<group name="Group_Languages" color="E6B3E6" >
			<entity schema="ergomercator.jpublic" name="languages" />
			<entity schema="ergomercator.jpublic" name="lang_translations" />
		</group>
		<group name="Group_Countries" color="8099FF" >
			<entity schema="ergomercator.jpublic" name="countries" />
			<entity schema="ergomercator.jpublic" name="countries_trans" />
			<entity schema="ergomercator.jpublic" name="country_currencies" />
		</group>
		<group name="Group_cultures" color="FF9999" >
			<entity schema="ergomercator.jpublic" name="cultures" />
			<entity schema="ergomercator.jpublic" name="currencies" />
			<entity schema="ergomercator.jpublic" name="currencies_trans" />
		</group>
	</layout>
	<layout name="system" id="Layout_31680f" hide_fks="db_users_payments_schemas_fk,fk_db_users_profiles_db_schemas,fk_db_users_schemas_apps_1," confirmed="y" show_relation="columns" >
		<entity schema="ergomercator.system" name="app_forms" color="3986C1" x="80" y="1168" />
		<entity schema="ergomercator.system" name="app_forms_objects" color="3986C1" x="496" y="1376" />
		<entity schema="ergomercator.system" name="app_forms_objects_properties" color="3986C1" x="384" y="1584" />
		<entity schema="ergomercator.system" name="app_forms_objects_translations" color="3986C1" x="96" y="1632" />
		<entity schema="ergomercator.system" name="app_forms_translations" color="3986C1" x="288" y="1296" />
		<entity schema="ergomercator.system" name="app_functions" color="3986C1" x="784" y="1472" />
		<entity schema="ergomercator.system" name="app_grids" color="3986C1" x="368" y="2080" />
		<entity schema="ergomercator.system" name="app_licenses" color="3986C1" x="80" y="896" >
			<column name="id" />
			<column name="app_id" />
			<column name="code" />
			<column name="db_schema_id" />
		</entity>
		<entity schema="ergomercator.system" name="app_member_forms" color="3986C1" x="80" y="1024" />
		<entity schema="ergomercator.system" name="app_messages" color="3986C1" x="432" y="832" />
		<entity schema="ergomercator.system" name="app_messages_translations" color="3986C1" x="592" y="864" />
		<entity schema="ergomercator.system" name="applications" color="3986C1" x="256" y="816" />
		<entity schema="ergomercator.system" name="db_app_grp_param" color="3986C1" x="256" y="1136" />
		<entity schema="ergomercator.system" name="db_app_schemas" color="3986C1" x="624" y="1008" />
		<entity schema="ergomercator.system" name="db_applications_roles" color="3986C1" x="816" y="816" />
		<entity schema="ergomercator.system" name="db_esr_sch_param" color="3986C1" x="1488" y="2560" />
		<entity schema="ergomercator.system" name="db_grp_sch_param" color="3986C1" x="1136" y="1504" />
		<entity schema="ergomercator.system" name="db_packages_schemas" color="3986C1" x="1072" y="1136" />
		<entity schema="ergomercator.system" name="db_schema_config" color="3986C1" x="1568" y="1216" />
		<entity schema="ergomercator.system" name="db_schema_params" color="3986C1" x="1408" y="1328" />
		<entity schema="ergomercator.system" name="db_schemas" color="3986C1" x="1376" y="976" />
		<entity schema="ergomercator.system" name="db_schemas_roles" color="3986C1" x="1216" y="864" />
		<entity schema="ergomercator.system" name="db_table_params" color="3986C1" x="1696" y="112" />
		<entity schema="ergomercator.system" name="db_tables" color="3986C1" x="1536" y="304" />
		<entity schema="ergomercator.system" name="db_tables_fields" color="3986C1" x="1392" y="112" />
		<entity schema="ergomercator.system" name="db_user_groups" color="3986C1" x="640" y="608" />
		<entity schema="ergomercator.system" name="db_user_schema_params" color="3986C1" x="1136" y="336" />
		<entity schema="ergomercator.system" name="db_user_sessions" color="3986C1" x="864" y="112" />
		<entity schema="ergomercator.system" name="db_users" color="3986C1" x="608" y="112" >
			<column name="db_user_id" />
			<column name="active" />
			<column name="email" />
			<column name="password" />
			<column name="username" />
			<column name="isactive" />
			<column name="verify_token" />
			<column name="verified" />
			<column name="default_schema_id" />
			<column name="ispublic" />
			<column name="internal_key" />
			<column name="default_role_id" />
			<column name="country_id" />
			<column name="main_profile_type_id" />
			<column name="main_profile_id" />
			<column name="image_id" />
			<column name="image_url" />
			<column name="iso_language_code" />
			<column name="iso_culture_code" />
			<column name="user_first_name" />
			<column name="user_family_name" />
			<column name="db_schema_id" />
		</entity>
		<entity schema="ergomercator.system" name="db_users_payments" color="3986C1" x="48" y="80" />
		<entity schema="ergomercator.system" name="db_users_profiles" color="3986C1" x="80" y="272" >
			<column name="db_user_id" />
			<column name="country_id" />
			<column name="region_id" />
			<column name="district_id" />
			<column name="town_id" />
			<column name="first_name" />
			<column name="last_name" />
			<column name="address_street" />
			<column name="address_number" />
			<column name="address_postal_code" />
			<column name="cellular_phone" />
			<column name="gender_code" />
			<column name="birth_date" />
			<column name="public_email" />
			<column name="address_full" />
			<column name="fiscal_code" />
			<column name="address_town" />
			<column name="address_state_province" />
			<column name="db_schema_id" />
			<column name="anagraph_id" />
		</entity>
		<entity schema="ergomercator.system" name="db_users_roles" color="3986C1" x="896" y="608" />
		<entity schema="ergomercator.system" name="db_users_schemas" color="3986C1" x="832" y="368" />
		<entity schema="ergomercator.system" name="db_users_schemas_apps" color="3986C1" x="416" y="624" />
		<entity schema="ergomercator.system" name="db_users_schemas_roles" color="3986C1" x="1136" y="528" />
		<entity schema="ergomercator.system" name="financial_years" color="3986C1" x="1488" y="1520" />
		<entity schema="ergomercator.system" name="form_models" color="3986C1" x="96" y="1440" />
		<entity schema="ergomercator.system" name="form_objects_trans" color="3986C1" x="752" y="2000" />
		<entity schema="ergomercator.system" name="json_objects" color="3986C1" x="1536" y="1776" />
		<entity schema="ergomercator.system" name="packages" color="3986C1" x="784" y="1168" />
		<entity schema="ergomercator.system" name="packages_applications" color="3986C1" x="512" y="1168" />
		<entity schema="ergomercator.system" name="schemalog" color="3986C1" x="1232" y="1632" />
		<entity schema="ergomercator.system" name="sys_params" color="3986C1" x="1552" y="896" />
		<entity schema="ergomercator.system" name="sys_roles" color="3986C1" x="1072" y="816" />
		<entity schema="ergomercator.system" name="syslog" color="3986C1" x="1264" y="2560" />
		<entity schema="ergomercator.system" name="temp_session" color="3986C1" x="1664" y="1680" />
		<entity schema="ergomercator.system" name="tmp_grids" color="3986C1" x="1712" y="1440" />
		<group name="Users" color="C4E0F9" >
			<entity schema="ergomercator.system" name="db_users" />
			<entity schema="ergomercator.system" name="db_user_groups" />
			<entity schema="ergomercator.system" name="db_user_schema_params" />
			<entity schema="ergomercator.system" name="db_user_sessions" />
			<entity schema="ergomercator.system" name="db_users_payments" />
			<entity schema="ergomercator.system" name="db_users_profiles" />
			<entity schema="ergomercator.system" name="db_users_roles" />
			<entity schema="ergomercator.system" name="db_users_schemas" />
			<entity schema="ergomercator.system" name="db_users_schemas_apps" />
			<entity schema="ergomercator.system" name="db_users_schemas_roles" />
		</group>
		<group name="Package Apps" color="B3E6B3" >
			<entity schema="ergomercator.system" name="db_app_grp_param" />
			<entity schema="ergomercator.system" name="app_forms" />
			<entity schema="ergomercator.system" name="app_forms_objects" />
			<entity schema="ergomercator.system" name="app_forms_objects_properties" />
			<entity schema="ergomercator.system" name="app_forms_objects_translations" />
			<entity schema="ergomercator.system" name="app_forms_translations" />
			<entity schema="ergomercator.system" name="app_functions" />
			<entity schema="ergomercator.system" name="app_grids" />
			<entity schema="ergomercator.system" name="app_licenses" />
			<entity schema="ergomercator.system" name="app_member_forms" />
			<entity schema="ergomercator.system" name="app_messages" />
			<entity schema="ergomercator.system" name="applications" />
			<entity schema="ergomercator.system" name="db_app_schemas" />
			<entity schema="ergomercator.system" name="db_applications_roles" />
			<entity schema="ergomercator.system" name="packages" />
			<entity schema="ergomercator.system" name="packages_applications" />
		</group>
		<group name="System Schemas" color="FFE6B3" >
			<entity schema="ergomercator.system" name="sys_roles" />
			<entity schema="ergomercator.system" name="sys_params" />
			<entity schema="ergomercator.system" name="syslog" />
			<entity schema="ergomercator.system" name="db_schemas" />
			<entity schema="ergomercator.system" name="db_schemas_roles" />
			<entity schema="ergomercator.system" name="db_schema_config" />
			<entity schema="ergomercator.system" name="db_schema_params" />
			<entity schema="ergomercator.system" name="schemalog" />
		</group>
	</layout>
</project>