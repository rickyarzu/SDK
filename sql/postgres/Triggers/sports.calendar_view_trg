
CREATE OR REPLACE FUNCTION sports.calendar_view_trg()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
DECLARE
 v_id integer;
begin
AS
$$
BEGIN
  IF TG_OP = 'INSERT' THEN 
  UPDATE sports.calendar SET
    match_day_date = New.match_day_date,
    match_day_played = New.match_day_played,
    rest_team_id = New.rest_team_id,
    db_schema_id = New.db_schema_id,
    jguid = New.jguid,
    deleted = New.deleted,
    insert_date = New.insert_date,
    update_date = New.update_date,
    user_insert = New.user_insert,
    user_update = New.user_update
  WHERE 
    (season_id = New.season_id) AND
    (league_id = New.league_id) AND
    (match_day_number = New.match_day_number);
  ELSIF TG_OP = 'UPDATE' THEN 
  INSERT INTO sports.calendar (
    season_id,
    league_id,
    match_day_number,
    match_day_date,
    match_day_played,
    rest_team_id,
    db_schema_id,
    jguid,
    deleted,
    insert_date,
    update_date,
    user_insert,
    user_update
  )
  VALUES (
    New.season_id,
    New.league_id,
    New.match_day_number,
    New.match_day_date,
    New.match_day_played,
    New.rest_team_id,
    New.db_schema_id,
    New.jguid,
    New.deleted,
    New.insert_date,
    New.update_date,
    New.user_insert,
    New.user_update
  );
  ELSIF TG_OP = 'DELETE' THEN
  DELETE FROM sports.calendar
  WHERE 
    (season_id = New.season_id) AND
    (league_id = New.league_id) AND
    (match_day_number = New.match_day_number);
  END IF; 
END;
$$
LANGUAGE 'plpgsql';