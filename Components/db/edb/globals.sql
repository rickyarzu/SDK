-- Package per la definizione di costanti globali
CREATE OR REPLACE PACKAGE globals is

  c_UNIT_NAME CONSTANT VARCHAR2(20) := 'globals';
  
  c_FALSE CONSTANT NUMBER(1) := 0;
  c_TRUE  CONSTANT NUMBER(1) := 1;

  c_FALSE_CONDITION CONSTANT VARCHAR2(10) := '(0=1)';
  c_TRUE_CONDITION  CONSTANT VARCHAR2(10) := '(1=1)';

  c_MAX_INTEGER CONSTANT NUMBER(9) := 999999999; -- numero massimo da utilizzare in un NUMBER(9)
  c_MAX_INTEGER_DIGITS CONSTANT NUMBER(9) := 9; -- numero massimo di cifre in un NUMBER(9)
  
  c_CR CONSTANT VARCHAR2(1) := CHR(13);
  c_LF CONSTANT VARCHAR2(1) := CHR(10);
  c_CRLF CONSTANT VARCHAR2(2) := CHR(13)||CHR(10);
  c_APICE CONSTANT VARCHAR2(1) := '''';
  c_VIRGOLETTE CONSTANT VARCHAR2(1) := '"';
  c_SPAZIO CONSTANT VARCHAR2(1) := ' ';
  c_SPAZIO_STR CONSTANT VARCHAR(3) := c_APICE||c_SPAZIO||c_APICE;
  c_TAB CONSTANT VARCHAR2(1) := CHR(9);
  c_UNDERSCORE CONSTANT VARCHAR2(1) := '_';
  c_SEGNOPIU  CONSTANT VARCHAR2(1) := '+';
  c_SEGNOMENO CONSTANT VARCHAR2(1) := '-';
  c_PUNTO_VIRGOLA CONSTANT VARCHAR2(1) :=';';
  c_PUNTO CONSTANT VARCHAR2(1) :='.';
  c_VIRGOLA CONSTANT VARCHAR2(1) :=',';
  c_PUNTO_DI_DOMANDA CONSTANT VARCHAR2(1) := CHR(63);
  c_CTRL_Z CONSTANT VARCHAR2(1) := CHR(26);
  c_DEL CONSTANT VARCHAR2(1) := CHR(127);
  c_HASHKEY CONSTANT VARCHAR2(1) := '#';
  c_DOPPIO_APICE CONSTANT VARCHAR2(1) := CHR(34);                
  c_SLASH CONSTANT VARCHAR2(1) := CHR(47);                
  

  -- tipo enumerativo Delphi TDuplicates 
  c_dupIgnore CONSTANT PLS_INTEGER := 0;
  c_dupAccept CONSTANT PLS_INTEGER := 1;
  c_dupError  CONSTANT PLS_INTEGER := 2;
  
  c_SI CONSTANT VARCHAR2(2) :='SI';
  c_NO CONSTANT VARCHAR2(2) :='NO';

  c_YEAR_MIN CONSTANT PLS_INTEGER := 1800;
  c_YEAR_MAX CONSTANT PLS_INTEGER := 2200;
  c_YEAR_MAX_MENO_UNO CONSTANT PLS_INTEGER := 2199;

  c_PARAMETERS_SEPARATOR CONSTANT VARCHAR2(1) := '|';
  c_DUMMY_PARAMETER CONSTANT VARCHAR2(50) := '@#%&'||c_PUNTO_DI_DOMANDA||'$!-\=*+';

  c_CURRENCY_DISPLAY_DECIMALS CONSTANT PLS_INTEGER := 2;

  -- Serve per verificare se in una data c'Ã¨ il valore NULL
  c_DATETIMEZERO      CONSTANT DATE := TO_DATE( '18991230', 'YYYYMMDD' );
  c_DATE_MIN          CONSTANT DATE := TO_DATE( CAST(c_YEAR_MIN AS VARCHAR2)||'0101', 'YYYYMMDD' );
  c_DATE_MAX          CONSTANT DATE := TO_DATE( CAST(c_YEAR_MAX AS VARCHAR2)||'1231', 'YYYYMMDD' );
  c_DATE_MAX_MENO_UNO CONSTANT DATE := TO_DATE( CAST(c_YEAR_MAX_MENO_UNO AS VARCHAR2)||'1231', 'YYYYMMDD' );
  c_DATASTARTANATRIB  CONSTANT DATE := TO_DATE('20061231', 'YYYYMMDD' );
  c_DATAFINE2004      CONSTANT DATE := TO_DATE('20041231', 'YYYYMMDD' );
  c_DATAINI_2005      CONSTANT DATE := TO_DATE('20050101', 'YYYYMMDD' );
  c_DATAFINEMAY_2005  CONSTANT DATE := TO_DATE('20080531', 'YYYYMMDD' );

  c_DATAFINE2006      CONSTANT DATE := TO_DATE('20061231', 'YYYYMMDD' );

  c_DATAFINE2007      CONSTANT DATE := TO_DATE('20071231', 'YYYYMMDD' );
  c_DATAINI2007       CONSTANT DATE := TO_DATE('20070101', 'YYYYMMDD' );
  c_DATAFINEAPR2007   CONSTANT DATE := TO_DATE('20070430', 'YYYYMMDD' );

  c_DATAINI2008       CONSTANT DATE := TO_DATE('20080101', 'YYYYMMDD' );
  c_DATAINILUG2008    CONSTANT DATE := TO_DATE('20080701', 'YYYYMMDD' );
  c_DATAFINEAPR2008   CONSTANT DATE := TO_DATE('20080430', 'YYYYMMDD' );
  c_DATAFINEGIU2008   CONSTANT DATE := TO_DATE('20080630', 'YYYYMMDD' );

  --ATTENZIONE: non usare la X (NONPRODOTTO) o i numeri per codificare nuovi prodotti!!!
  c_NONPRODOTTO     CONSTANT VARCHAR2(1) := 'X';
  c_CHAR_LEASING    CONSTANT VARCHAR2(1) := 'L';
  c_CHAR_RENTAL     CONSTANT VARCHAR2(1) := 'R';
  c_CHAR_FINANCE    CONSTANT VARCHAR2(1) := 'F';
  c_CHAR_CREDIT     CONSTANT VARCHAR2(1) := 'C';
  c_CHAR_PARTECIP   CONSTANT VARCHAR2(1) := 'P';
  c_CHAR_CONTRIBUTI CONSTANT VARCHAR2(1) := 'G';
  c_CHAR_GARANZIE   CONSTANT VARCHAR2(1) := 'Z';
  c_CHAR_INSURANCE  CONSTANT VARCHAR2(1) := 'I';
  c_CHAR_PDR        CONSTANT VARCHAR2(1) := 'D';  
  c_CHAR_SOFF       CONSTANT VARCHAR2(1) := 'S';  

--  c_DESC_NONPRODOTTO CONSTANT VARCHAR2(20) := 'none';
--  c_DESC_LEASING     CONSTANT VARCHAR2(20) := 'Finance Lease';
--  c_DESC_RENTAL      CONSTANT VARCHAR2(20) := 'Operating Lease';
--  c_DESC_FINANCE     CONSTANT VARCHAR2(20) := 'Loan';
--  c_DESC_CREDIT      CONSTANT VARCHAR2(20) := 'Credit';
--  c_DESC_PARTECIP    CONSTANT VARCHAR2(20) := 'Stockholding';
--  c_DESC_CONTRIBUTI  CONSTANT VARCHAR2(20) := 'Contributi';
--  c_DESC_GARANZIE    CONSTANT VARCHAR2(20) := 'Guarantee';
--  c_DESC_INSURANCE   CONSTANT VARCHAR2(20) := 'Insurance';


  c_ISOCODITA  CONSTANT VARCHAR2(20) := 'IT';
  c_ISOCODROM  CONSTANT VARCHAR2(20) := 'RO';
  c_ISOCODJPN  CONSTANT VARCHAR2(20) := 'JP';
  c_ISOCODALB  CONSTANT VARCHAR2(20) := 'AL';
  c_ISOCODSMR  CONSTANT VARCHAR2(20) := 'SM';
  c_ISOCODNLD  CONSTANT VARCHAR2(20) := 'NL';
  c_ISOCODGBR  CONSTANT VARCHAR2(20) := 'GB';
  c_ISOCODBEL  CONSTANT VARCHAR2(20) := 'BE';
  c_ISOCODFRA  CONSTANT VARCHAR2(20) := 'FR';
  c_ISOCODGER  CONSTANT VARCHAR2(20) := 'DE';
  c_ISOCODESP  CONSTANT VARCHAR2(20) := 'ES';
  c_ISOCODPOR  CONSTANT VARCHAR2(20) := 'PT';
  
  c_COUNTRY_DEFAULT CONSTANT VARCHAR2(20) := c_ISOCODITA;

  -- tipo enumerativo TAzione
  c_modVista         CONSTANT PLS_INTEGER := 0;
  c_modElenca        CONSTANT PLS_INTEGER := 1;
  c_modRicerca       CONSTANT PLS_INTEGER := 2;
  c_modModifica      CONSTANT PLS_INTEGER := 3;
  c_modInserimento   CONSTANT PLS_INTEGER := 4;
  c_modCancellazione CONSTANT PLS_INTEGER := 5;
  c_modStampa        CONSTANT PLS_INTEGER := 6;
  c_modTaglia        CONSTANT PLS_INTEGER := 7;
  c_modCopia         CONSTANT PLS_INTEGER := 8;
  c_modIncolla       CONSTANT PLS_INTEGER := 9;
  c_modGrafico       CONSTANT PLS_INTEGER := 10;
  c_modEsporta       CONSTANT PLS_INTEGER := 11;
  c_modInvia         CONSTANT PLS_INTEGER := 12;


  -- costanti per i calcoli finanziari
  c_LSFIN_RATA_FISSA             CONSTANT VARCHAR2(1) := 'F';
  c_LSFIN_RATA_VARIABILE         CONSTANT VARCHAR2(1) := 'V';
  c_LSFIN_RATA_QUOCAPCOST        CONSTANT VARCHAR2(1) := 'K';
  c_LSFIN_RATA_QUOCAPCOST_DAILY  CONSTANT VARCHAR2(1) := 'D';
  c_LSFIN_TIPO_PIANO_ANTICIPATO  CONSTANT VARCHAR2(1) := 'A';
  c_LSFIN_TIPO_PIANO_POSTICIPATO CONSTANT VARCHAR2(1) := 'P';
  c_LSFIN_ADVANCED_PAYMENT_TYPE  CONSTANT VARCHAR2(1) := 'V'; --constant for dutch Advance payment
  c_LSFIN_TIPOAMM_RATA_FRANCESE  CONSTANT VARCHAR2(1) := 'F';
  c_LSFIN_TIPOAMM_RATA_TEDESCO   CONSTANT VARCHAR2(1) := 'T';

  -- costanti per tipologie scadenza flussi
  c_SCADENZA_STIPULA              CONSTANT VARCHAR2(1) := 'S';
  c_SCADENZA_DECORRENZA           CONSTANT VARCHAR2(1) := 'D';
  c_SCADENZA_CANONI               CONSTANT VARCHAR2(1) := 'C';
  c_SCADENZA_RISCATTO             CONSTANT VARCHAR2(1) := 'R';
  c_SCADENZA_LIBERA               CONSTANT VARCHAR2(1) := 'L';
  c_SCADENZA_FLUSSOIVA_QCAPCOST   CONSTANT VARCHAR2(1) := 'K';
  c_RECURRING_BASED_CONTRACT_LIF  CONSTANT VARCHAR2(1) := 'X';
  c_RECURRING_BASED_CALENDAR      CONSTANT VARCHAR2(1) := 'Y';
  c_AT_CUSTOMER_CHANGE            CONSTANT VARCHAR2(1) := 'V';
  c_AT_RE_SCHEDULING              CONSTANT VARCHAR2(1) := 'W';
  c_RATE_DEFINED_ORDER            CONSTANT VARCHAR2(1) := 'O';
  c_SCADENZA_ASCADENZIARIO        CONSTANT VARCHAR2(1) := 'Z';
  c_SCADENZA_RATE_ANTICIPO        CONSTANT VARCHAR2(1) := 'A';

  --Costanti per maturity type
  c_LOGIC_DATE     CONSTANT VARCHAR2(2) := 'DL';
  c_FIXED_DATE     CONSTANT VARCHAR2(2) := 'DF';
  c_ON_INSTALLMENT CONSTANT VARCHAR2(2) := 'RI';
  c_RECURRING      CONSTANT VARCHAR2(2) := 'RR';
  c_ON_INST_ANTI   CONSTANT VARCHAR2(2) := 'AC';

  --  costanti per tipo flussi
  c_LSFIN_DOWN_PAYMENT                    CONSTANT VARCHAR2(3) := 'FRD'; --Vecchio LSFIN_TIPO_FLUSSO_ANTICIPO   = 'A'
  c_LSFIN_ADVAN_PAYMENT                   CONSTANT VARCHAR2(3) := 'FRA'; --Vecchio LSFIN_TIPO_FLUSSO_ANTICIPO   = 'A'
  c_LSFIN_PRE_DEPREC_PAYMENT              CONSTANT VARCHAR2(3) := 'FRP'; --Vecchio LSFIN_TIPO_FLUSSO_PREAMMORTAMENTO = 'P'
  c_LSFIN_PAYMENT                         CONSTANT VARCHAR2(3) := 'FRC'; --Vecchio LSFIN_TIPO_FLUSSO_CANONE     = 'C'
  c_LSFIN_PAYMENT_IND                     CONSTANT VARCHAR2(5) := '#FRC#'; --valore fittizio usato nella fatturazione dei flussi indicizzati insieme alle rate
  c_LSFIN_PURCHASE_OPTION                 CONSTANT VARCHAR2(3) := 'FRR'; --Vecchio LSFIN_TIPO_FLUSSO_RISCATTO   = 'R'
  c_LSFIN_RESIDUAL_VALUE                  CONSTANT VARCHAR2(3) := 'FRV'; --Vecchio LSFIN_TIPO_FLUSSO_RISCATTO   = 'R'
  c_LSFIN_ASSET_RETURN                    CONSTANT VARCHAR2(3) := 'FAR';
  c_LSFIN_ASSET_SELLING                   CONSTANT VARCHAR2(3) := 'FAS';
  c_LSFIN_ASSET_WRITE_OFF                 CONSTANT VARCHAR2(3) := 'FAW';
  c_LSFIN_INDEXATION_TPOS                 CONSTANT VARCHAR2(5) := 'FRIT+'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_INDEXATION_TNEG                 CONSTANT VARCHAR2(5) := 'FRIT-'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_INDEXATION_CPOS                 CONSTANT VARCHAR2(5) := 'FRIC+'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_INDEXATION_CNEG                 CONSTANT VARCHAR2(5) := 'FRIC-'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_REVALUATION_FIN                 CONSTANT VARCHAR2(5) := 'FREV+'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_DEVALUATION_FIN                 CONSTANT VARCHAR2(5) := 'FREV-'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_REVALUATION_SRV                 CONSTANT VARCHAR2(5) := 'SREV+'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_DEVALUATION_SRV                 CONSTANT VARCHAR2(5) := 'SREV-'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_REVALUATION_FIN_COST            CONSTANT VARCHAR2(5) := 'FCRV+'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_DEVALUATION_FIN_COST            CONSTANT VARCHAR2(5) := 'FCRV-'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_REVALUATION_SRV_COST            CONSTANT VARCHAR2(5) := 'SCRV+'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_DEVALUATION_SRV_COST            CONSTANT VARCHAR2(5) := 'SCRV-'; --Vecchio LSFIN_TIPO_FLUSSO_ADEG_IND   = 'I'
  c_LSFIN_RENEWAL                         CONSTANT VARCHAR2(3) := 'FRN'; --Vecchio LSFIN_TIPO_FLUSSO_PROROGA    = 'N'
  c_LSFIN_BLIND_DISCOUNT                  CONSTANT VARCHAR2(3) := 'FRB';
  c_LSFIN_PURCHASE                        CONSTANT VARCHAR2(3) := 'FCP';
  c_LSFIN_LOANDISBURS_F                   CONSTANT VARCHAR2(3) := 'FC1';
  c_LSFIN_LOANDISBURS_C                   CONSTANT VARCHAR2(3) := 'FC2';
  c_LSFIN_CREDSETTLEMENT                  CONSTANT VARCHAR2(3) := 'FC3';
  c_LSFIN_CREDSETTLEMENT_INC              CONSTANT VARCHAR2(3) := 'FC4';
  c_LSFIN_COMMISSION                      CONSTANT VARCHAR2(3) := 'FCC';
  C_LSFIN_PRINCIPAL_INCREASE              CONSTANT VARCHAR2(3) := 'FPI';
  C_LSFIN_PRINCIPAL_DECREASE              CONSTANT VARCHAR2(3) := 'FPD';
  c_LSFIN_MAINTENANCE_CHARGE              CONSTANT VARCHAR2(4) := 'SC01';
  c_LSFIN_ASSISTANCE_CHARGE               CONSTANT VARCHAR2(4) := 'SC02';
  c_LSFIN_INSURANCE_CHARGE                CONSTANT VARCHAR2(4) := 'SC03';
  c_LSFIN_ONERI_RISTORNI_ASS              CONSTANT VARCHAR2(4) := 'SC50';
  c_LSFIN_SUNDRY_SERVICES_CHARGE          CONSTANT VARCHAR2(4) := 'SC99';
  c_LSFIN_MAINTENANCE_FEE                 CONSTANT VARCHAR2(4) := 'SR01';
  c_LSFIN_ASSISTANCE_FEE                  CONSTANT VARCHAR2(4) := 'SR02';
  c_LSFIN_INSURANCE_FEE                   CONSTANT VARCHAR2(4) := 'SR03';
  c_LSFIN_SUNDRY_SERVICES_FEE             CONSTANT VARCHAR2(4) := 'SR99';
  c_LSFIN_MANAGEMENT_CHARGE               CONSTANT VARCHAR2(4) := 'OC01';
  c_LSFIN_ADMINISTRATION_CHARGE           CONSTANT VARCHAR2(4) := 'OC02';
  c_LSFIN_ACCOUNTING_CHARGE               CONSTANT VARCHAR2(4) := 'OC03';
  c_LSFIN_COLLECTION_CHARGE               CONSTANT VARCHAR2(4) := 'OC04';
  c_LSFIN_TAXES_CHARGE                    CONSTANT VARCHAR2(4) := 'OC05';
  c_LSFIN_MANAGE_SERVICE_COST             CONSTANT VARCHAR2(4) := 'OC50';
  c_LSFIN_ONERI_RISTORNI_ISTR             CONSTANT VARCHAR2(4) := 'OC51';
  c_LSFIN_ONERI_RISTORNI_SPESE            CONSTANT VARCHAR2(4) := 'OC52';
  c_LSFIN_MANAGEMENT_FEE                  CONSTANT VARCHAR2(4) := 'OR01';
  c_LSFIN_ADMINISTRATION_FEE              CONSTANT VARCHAR2(4) := 'OR02';
  c_LSFIN_ACCOUNTING_FEE                  CONSTANT VARCHAR2(4) := 'OR03';
  c_LSFIN_PRELIMINARY_FEE                 CONSTANT VARCHAR2(4) := 'OR04';
  c_LSFIN_COLLECTION_FEE                  CONSTANT VARCHAR2(4) := 'OR05';
  c_LSFIN_STAMP_FEE                       CONSTANT VARCHAR2(4) := 'OR06';
  c_LSFIN_END_OF_TERM_FEE                 CONSTANT VARCHAR2(4) := 'OR07';
  c_LSFIN_TAXES                           CONSTANT VARCHAR2(4) := 'OR08';
  c_LSFIN_SUNDRY_FEES                     CONSTANT VARCHAR2(4) := 'OR99';
  c_LSFIN_PENALTY                         CONSTANT VARCHAR2(4) := 'MR01';
  c_LSFIN_PENALTY_ACCRUAL                 CONSTANT VARCHAR2(4) := 'MR02';
  c_LSFIN_INS_PREMIUM_RECEIV              CONSTANT VARCHAR2(4) := 'ORIP'; --RECEV ATTRIB_C OTHER --ex INS0
  c_LSFIN_INS_PREMIUM_COST                CONSTANT VARCHAR2(4) := 'OCIP'; --COST  ATTRIB_C OTHER --ex INS1
  c_LSFIN_INSURANCE_COMMISSION            CONSTANT VARCHAR2(4) := 'ORIC'; --RECEV ATTRIB_C OTHER --ex INS2
  c_LSFIN_INS_COMMISSION_COST             CONSTANT VARCHAR2(4) := 'OCIC'; --
  c_LSFIN_INS_PREMIUM_LESSOR              CONSTANT VARCHAR2(5) := 'ORIPL';
  c_LSFIN_INTEREST_PRE_FIN                CONSTANT VARCHAR2(5) := 'FRIPF';
  c_LSFIN_INTEREST_DEF_FACT               CONSTANT VARCHAR2(8) := 'FRIPFDIL';
  c_LSFIN_ADVANCE_INT                     CONSTANT VARCHAR2(8) := 'FRIPFANT';
  c_LSFIN_INTEREST_PRE_FIN_ACCR           CONSTANT VARCHAR2(5) := 'FRIPA'; --Accrual/Deferral prefinancing interest
  c_LSFIN_CHARGE_PURCHASE                 CONSTANT VARCHAR2(6) := 'FRGAP+';
  c_LSFIN_CREDIT_PURCHASE                 CONSTANT VARCHAR2(6) := 'FRGAP-';
  c_LSFIN_FXDIFFONCASH_FAT_POS            CONSTANT VARCHAR2(6) := 'ORFX1';
  c_LSFIN_FXDIFFONCASH_ACC_POS            CONSTANT VARCHAR2(6) := 'ORFX2';
  c_LSFIN_FXDIFFONCASH_FAT_NEG            CONSTANT VARCHAR2(6) := 'OCFX1';
  c_LSFIN_FXDIFFONCASH_ACC_NEG            CONSTANT VARCHAR2(6) := 'OCFX2';
  c_LSFIN_SUNDRY_REVENUE_CAP              CONSTANT VARCHAR2(4) := 'FPDS';
  c_LSFIN_SUNDRY_COST_CAP                 CONSTANT VARCHAR2(4) := 'FPIS';
  c_LSFIN_CHARGE_REV_SUNDRY               CONSTANT VARCHAR2(7) := 'FRGAPS+';
  c_LSFIN_CREDIT_COST_SUNDRY              CONSTANT VARCHAR2(7) := 'FRGAPS-';
  c_LSFIN_PRJ_MANAGEMENT_COST             CONSTANT VARCHAR2(6) := 'OCPRJ1';
  c_LSFIN_PRJ_CLOSING                     CONSTANT VARCHAR2(5) := 'FCPRJ';
  c_LSFIN_RE_LEASE                        CONSTANT VARCHAR2(4) := 'FCRL';
  c_LSFIN_SPESE_INCASSO                   CONSTANT VARCHAR2(4) := 'OR09';
  c_LSFIN_ONERI_RISTORNI_ASS_DAN          CONSTANT VARCHAR2(4) := 'OC53';
  c_LSFIN_ONERI_RISTORNI_ASS_CPI          CONSTANT VARCHAR2(4) := 'OC54';
  c_LSFIN_ONERI_RISTORNI_ASS_CAR          CONSTANT VARCHAR2(4) := 'OC55';
  c_LSFIN_ONERI_RISTORNI_SERV_AC          CONSTANT VARCHAR2(4) := 'OC56';
  c_LSFIN_ONERI_PREMI_BENEFIT             CONSTANT VARCHAR2(4) := 'OC57';  
  c_LSFIN_STORNI_VARIE                    CONSTANT VARCHAR2(4) := 'OR50'; 
  c_LSFIN_RIST_REC_CRED                   CONSTANT VARCHAR2(4) := 'OC58'; 
  c_LSFIN_EARLYTERM_LOANS                 CONSTANT VARCHAR2(4) := 'FETL';  
  c_LSFIN_MORATORIA                       CONSTANT VARCHAR2(3) := 'FRM';
  c_LSFIN_PRINCREF                        CONSTANT VARCHAR2(4) := 'FRDR';
  c_LSFIN_SUNDRY_COST_SOFF                CONSTANT VARCHAR2(10) := 'OSOF-';
  c_LSFIN_SUNDRY_REVENUE_SOFF             CONSTANT VARCHAR2(10) := 'OSOF+';
  c_LSFIN_CREDIT_SOFF                     CONSTANT VARCHAR2(10) := 'RSOFF';  
  c_LSFIN_R_BLIND_DISCOUNT                CONSTANT VARCHAR2(10) := 'RFRB';  
  c_LSFIN_R_COMMISSION                    CONSTANT VARCHAR2(10) := 'RFCC';  
  c_LSFIN_R_BLIND_DISCOUNT_M              CONSTANT VARCHAR2(10) := 'RFRBM';  
  c_LSFIN_R_COMMISSION_M                  CONSTANT VARCHAR2(10) := 'RFCCM';  
  c_LSFIN_A_BLIND_DISCOUNT                CONSTANT VARCHAR2(10) := 'AFRB';  
  c_LSFIN_A_BLIND_DISCOUNT_M              CONSTANT VARCHAR2(10) := 'AFRBM';  
  c_LSFIN_A_COMMISSION                    CONSTANT VARCHAR2(10) := 'AFCC';  
  c_LSFIN_A_COMMISSION_M                  CONSTANT VARCHAR2(10) := 'AFCCM';    
  c_LSFIN_EXT_COSTCLI                     CONSTANT VARCHAR2(10) := 'EXTCOSTCLI';
  c_LSFIN_ORNEG                           CONSTANT VARCHAR2(10) := 'ORNEG'; -- Costo contrattuale
  c_LSFIN_RANT                            CONSTANT VARCHAR2(10) := 'RANT';
  c_LSFIN_C_INT                           CONSTANT VARCHAR2(10) := 'C-INT'; -- Grace period
  c_LSFIN_P_INT                           CONSTANT VARCHAR2(10) := 'P-INT'; -- Grace period
  
  -- COSTANTI PER TABELLE INTNUMPROD
  --//Leasing
  c_PROD_LEASING_BENI_TARGATI           CONSTANT PLS_INTEGER := 1;
  c_PROD_LEASING_BENI_STRUM             CONSTANT PLS_INTEGER := 2;
  c_PROD_LEASING_BENI_IMMOBILI          CONSTANT PLS_INTEGER := 3;
  c_PROD_LEASING_BENI_NAVALI            CONSTANT PLS_INTEGER := 21;
  c_PROD_LEASING_BENI_IMM_IN_ERI        CONSTANT PLS_INTEGER := 22;
  c_PROD_LEASING_BENI_TARG_IND          CONSTANT PLS_INTEGER := 23; --veicoli industriali
  c_PROD_LEASING_BENI_TARG_LFA          CONSTANT PLS_INTEGER := 24; --veicoli full-auto
  c_PROD_LEASING_BENI_AEREI             CONSTANT PLS_INTEGER := 29;
  c_PROD_LEASING_BENI_FERROV            CONSTANT PLS_INTEGER := 30;
  c_PROD_LEASING_BENI_IMBDADIPOR        CONSTANT PLS_INTEGER := 31;
  c_PROD_LEASING_BENI_IMM_RESID         CONSTANT PLS_INTEGER := 35;  --immobili residenziali
  c_PROD_LEASING_BENI_STR_IN_ERI        CONSTANT PLS_INTEGER := 40;
  c_PROD_LEASING_BENI_AEREI_ERI         CONSTANT PLS_INTEGER := 41;
  c_PROD_LEASING_BENI_NAVALI_ERI        CONSTANT PLS_INTEGER := 42;  
  --//Loans
  c_PROD_FINANZIAMENTO_BENI_IMM         CONSTANT PLS_INTEGER := 7;
  c_PROD_FINANZIAMENTO_BENI_TARG        CONSTANT PLS_INTEGER := 8;
  c_PROD_FINANZIAMENTO_BREVE_STR        CONSTANT PLS_INTEGER := 9;
  c_PROD_FINANZIAMENTO_BENI_STR         CONSTANT PLS_INTEGER := 10;
  c_PROD_FINANZIAMENTO_LUNGO_STR        CONSTANT PLS_INTEGER := 11;
  --//Loans - prestiti partecipativi
  c_PROD_PRESTITI_PARTECIPATIVI         CONSTANT PLS_INTEGER := 28;
  --//Loans - Cofinanziamenti
  c_PROD_COFINANZIAM_BREVE_TERM         CONSTANT PLS_INTEGER := 33;
  c_PROD_COFINANZIAM_LUNGO_TERM         CONSTANT PLS_INTEGER := 34;
  --//partecipazioni
  c_PROD_PARTECIPAZIONI                 CONSTANT PLS_INTEGER := 13;
  --//Rental
  c_PROD_RENTAL_BENI_TARGATI            CONSTANT PLS_INTEGER := 15;
  c_PROD_RENTAL_BENI_STRUMENTALI        CONSTANT PLS_INTEGER := 16;
  c_PROD_RENTAL_BENI_IMMOBILI           CONSTANT PLS_INTEGER := 32;
  --//garanzie attive
  c_PROD_GARANZIE                       CONSTANT PLS_INTEGER := 14;
  --//Cess. crediti
  c_PROD_ANTICIP_CC_PRO_SOLV            CONSTANT PLS_INTEGER := 4;
  c_PROD_ANTICIP_CC_PRO_SOLU            CONSTANT PLS_INTEGER := 5;
  c_PROD_SCONTO                         CONSTANT PLS_INTEGER := 6;
  c_PROD_FACTORING_PRO_SOLV_MAT         CONSTANT PLS_INTEGER := 17;
  c_PROD_FACT_PRO_SOLU_MATU             CONSTANT PLS_INTEGER := 18;
  c_PROD_FACT_PRO_SOLV_ANTIC            CONSTANT PLS_INTEGER := 19;
  c_PROD_FACT_PRO_SOLU_ANTIC            CONSTANT PLS_INTEGER := 20;
  c_PROD_DISCOUNT_OF_RECEIVABLE         CONSTANT PLS_INTEGER := 39;
  --/Contributi
  c_PROD_CONTRIBUTI_CAPITALE            CONSTANT PLS_INTEGER := 26;
  c_PROD_CONTRIBUTI_INTERESSI           CONSTANT PLS_INTEGER := 27;
  --carte di credito
  c_PROD_CARTA_DI_CREDITO               CONSTANT PLS_INTEGER := 12;
  --Insurance
  c_PROD_INSURANCE_PORTFOLIO            CONSTANT PLS_INTEGER := 36;
  c_PROD_INSURANCE_NOT_PORTFOLIO        CONSTANT PLS_INTEGER := 37;
  --Leasing fotovoltaico
  c_PROD_LEAS_FOTO_STR                  CONSTANT PLS_INTEGER := 43;
  c_PROD_LEAS_FOTO_STR_ERIG             CONSTANT PLS_INTEGER := 44;
  c_PROD_LEAS_FOTO_IMM                  CONSTANT PLS_INTEGER := 45;
  c_PROD_LEAS_FOTO_IMM_ERIG             CONSTANT PLS_INTEGER := 46;
  --Leasing energetico
  c_PROD_LEAS_ENER_STR                  CONSTANT PLS_INTEGER := 47;
  c_PROD_LEAS_ENER_STR_ERIG             CONSTANT PLS_INTEGER := 48;
  c_PROD_LEAS_ENER_IMM                  CONSTANT PLS_INTEGER := 49;
  c_PROD_LEAS_ENER_IMM_ERIG             CONSTANT PLS_INTEGER := 50;
  --Piano di rientro
  c_PROD_PDR_ACC                        CONSTANT PLS_INTEGER := 55;
  c_PROD_PDR_NOACC                      CONSTANT PLS_INTEGER := 56;
  --Sofferenza
  c_PROD_SOFF                           CONSTANT PLS_INTEGER := 57;
  c_PROD_SOFF_NPL                       CONSTANT PLS_INTEGER := 58;

  --RABO Products
  c_PROD_VAT_FIN                        CONSTANT PLS_INTEGER := 59;  
  c_PROD_FLG                            CONSTANT PLS_INTEGER := 60;
  c_PROD_VAT                            CONSTANT PLS_INTEGER := 61; 
  c_PROD_OPL							CONSTANT PLS_INTEGER := 62;

  
  c_LCF_ONERE    CONSTANT VARCHAR2(1) := 'O';
  c_LCF_PROVENTO CONSTANT VARCHAR2(1) := 'P';

  --Numero di record massimo per le select di SEARCH
  c_ROW_SEARCH_10   CONSTANT PLS_INTEGER := 10;
  c_ROW_SEARCH_12   CONSTANT PLS_INTEGER := 12;
  c_ROW_SEARCH_20   CONSTANT PLS_INTEGER := 20;
  c_ROW_SEARCH_25   CONSTANT PLS_INTEGER := 25;
  c_ROW_SEARCH_50   CONSTANT PLS_INTEGER := 50;
  c_ROW_SEARCH_100  CONSTANT PLS_INTEGER := 100;
  c_ROW_SEARCH_250  CONSTANT PLS_INTEGER := 250;
  c_MAX_SEARCH      CONSTANT PLS_INTEGER := 1000;
  

  --  costanti per INTBASI
  c_BASE_IMP_FISSO      CONSTANT VARCHAR2(1) := 'X';
  c_BASE_NPV            CONSTANT VARCHAR2(1) := 'N';
  c_BASE_BENE           CONSTANT VARCHAR2(1) := 'B';
  c_BASE_FINANZIATO     CONSTANT VARCHAR2(1) := 'F';
  c_BASE_ANTICIPO       CONSTANT VARCHAR2(1) := 'A';
  c_BASE_RATA           CONSTANT VARCHAR2(1) := 'C';
  c_BASE_RISCATTO       CONSTANT VARCHAR2(1) := 'R';
  c_BASE_INTERESSI      CONSTANT VARCHAR2(1) := 'I';
  c_BASE_INT_GLOBALI    CONSTANT VARCHAR2(1) := 'G';
  c_BASE_PERC_FTT_CD    CONSTANT VARCHAR2(1) := 'D';


  c_DOWNPAYMTYPE_STARTING    CONSTANT VARCHAR2(1) := 'S';
  c_DOWNPAYMTYPE_FIRSTPERIOD CONSTANT VARCHAR2(1) := 'F';


  -- costanti per valorizzare il campo PAFAGGREG del piano finanziario
  c_PAFAGT_FIRST_PAY            CONSTANT VARCHAR2(30) := 'First payment';
  c_PAFAGT_PRE_PAY              CONSTANT VARCHAR2(30) := 'Pre Payment';
  c_PAFAGT_MORATORIA            CONSTANT VARCHAR2(30) := 'Grace period';
  c_PAFAGT_PAY                  CONSTANT VARCHAR2(30) := 'Payment';
  c_PAFAGT_ASS_RET              CONSTANT VARCHAR2(30) := 'Pay-off';
  c_PAFAGT_ASS_SELLING          CONSTANT VARCHAR2(30) := 'Buy-out';
  c_PAFAGT_ASS_WRITE_OFF        CONSTANT VARCHAR2(30) := 'Write-off';
  c_PAFAGT_RES_VAL              CONSTANT VARCHAR2(30) := 'Residual value';
  c_PAFAGT_INDEX                CONSTANT VARCHAR2(30) := 'Indexation';
  c_PAFAGT_REVAL                CONSTANT VARCHAR2(30) := 'Revaluation';
  c_PAFAGT_DEVAL                CONSTANT VARCHAR2(30) := 'Devaluation';
  c_PAFAGT_COST_REVAL           CONSTANT VARCHAR2(30) := 'Cost Revaluation';
  c_PAFAGT_RENEWAL              CONSTANT VARCHAR2(30) := 'Renewal';
  c_PAFAGT_BLD_DSC              CONSTANT VARCHAR2(30) := 'Rebate';
  c_PAFAGT_PURCHASE             CONSTANT VARCHAR2(30) := 'Purchase';
  c_PAFAGT_DISBURS              CONSTANT VARCHAR2(30) := 'Loan settlement';
  c_PAFAGT_COMMISSION           CONSTANT VARCHAR2(30) := 'Commission';
  c_PAGAGT_COST                 CONSTANT VARCHAR2(30) := 'Cost';
  c_PAGAGT_FEE                  CONSTANT VARCHAR2(30) := 'Revenue';
  c_PAGAGT_PENALTY              CONSTANT VARCHAR2(30) := 'Penalty';
  c_PAGAGT_PRINCIPAL_INCREASE   CONSTANT VARCHAR2(30) := 'Principal increase';
  c_PAGAGT_PRINCIPAL_DECREASE   CONSTANT VARCHAR2(30) := 'Principal decrease';
  c_PAGAGT_INTER_PRE_FIN        CONSTANT VARCHAR2(30) := 'Pre-financing Interests';
  c_PAGAGT_INTER_DEFERRD        CONSTANT VARCHAR2(30) := 'Deferred Interests';
  c_PAGAGT_INTER_PRE_FIN_ACCR   CONSTANT VARCHAR2(30) := 'Pre-financing Inter.(accrual)';
  c_PAGAGT_INS_PREMIUM_RECEIV   CONSTANT VARCHAR2(30) := 'Insurance premium';
  c_PAGAGT_INS_PREMIUM_COST     CONSTANT VARCHAR2(30) := 'Premium pay-back';
  c_PAGAGT_INSURANCE_COMMISSION CONSTANT VARCHAR2(30) := 'Insurance commission';
  c_PAGAGT_INS_COMMISSION_COST  CONSTANT VARCHAR2(30) := 'Insurance commission cost';
  c_PAGAGT_INS_PREMIUM_LESSOR   CONSTANT VARCHAR2(30) := 'Overdue premium';
  c_PAFAGT_SUNDRY_REVENUE_CAP   CONSTANT VARCHAR2(30) := 'Sundry revenue-capitalized';
  c_PAFAGT_SUNDRY_COST_CAP      CONSTANT VARCHAR2(30) := 'Sundry cost-capitalized';
  c_PAFAGT_CHARGE_REV_SUNDRY    CONSTANT VARCHAR2(30) := 'Sundry revenue cap.re-invoiced';
  c_PAFAGT_CREDIT_COST_SUNDRY   CONSTANT VARCHAR2(30) := 'Sundry cost cap.re-invoiced';
  c_PAFAGT_CREDIT_SETTLEMENT    CONSTANT VARCHAR2(30) := 'Credit settlement';
  c_PAFAGT_ADVANCE_INT          CONSTANT VARCHAR2(30) := 'Advance interests';
  c_PAFAGT_PRINCIPAL_REFUND     CONSTANT VARCHAR2(30) := 'Principal refund';
  c_PAFAGT_R_BLD_DSC            CONSTANT VARCHAR2(30) := 'Rebate adjustment';
  c_PAFAGT_R_COMMISSION         CONSTANT VARCHAR2(30) := 'Commission adjustment';  
  c_PAFAGT_A_BLD_DSC            CONSTANT VARCHAR2(30) := 'Rebate increase';
  c_PAFAGT_A_COMMISSION         CONSTANT VARCHAR2(30) := 'Commission increase';  
  c_PAFAGT_R_BLD_DSC_M          CONSTANT VARCHAR2(30) := 'Negative accrued interests adj';
  c_PAFAGT_R_COMMISSION_M       CONSTANT VARCHAR2(30) := 'Positive accrued interests adj';
  c_BALLOON_PAYMENT             CONSTANT VARCHAR2(30) := 'Balloon payment';
  
  --Variabile di contesto dove viene salvata la lista di campi obbligatori della mappa in esame
  c_CONVAR_REQFIELDS            CONSTANT VARCHAR2(30) := 'pReqAndErrFieldList';
  --Dimensione massima di una variabile di contesto
  c_MAXLENGHT_VARCONT           CONSTANT NUMBER(9) := 4000;
  --Variabile di contesto dove viene salvato il codice della sessione 
  c_CONVAR_BOSESSIONID          CONSTANT VARCHAR2(30) := 'BO_SESSIONID';
  --Variabile di contesto dove viene salvato il codice del contesto 
  c_CONVAR_CONTEXTID            CONSTANT VARCHAR2(30) := 'CONTEXTID';  
  --Variabile di contesto dove viene salvato il nome della vista per recuperare il numero di righe da visualizzare in pagina (LS_SEARCH)
  --viene settata nel metodo LsGeneric.GetSqlView e viene letta nella funzione LS_FUNC_SEARCH_MAX  
  c_CONVAR_VIEWROWLIM           CONSTANT VARCHAR2(30) := 'VIEWROWLIM';  
  
  --Variabile di contesto dove viene salvato il nome della pagina per visualizzare lista delle esportazioni excel delle liste in pagina 
  --viene settata da webratio alla chiamata di ogni stored procedure e letta nella gestione degli export excel (a partire da LsExportExcelLib)  
  c_CONVAR_PAGEID               CONSTANT VARCHAR2(250) := 'PAGEID';
  
  --Variabile di contesto che indica che per l'indicizzazione appena calcolata Ã¨ stato applicata la gestione del Floor
  c_CONVAR_INDEXFLOOR           CONSTANT VARCHAR2(250) := 'INDEXFLOOR';
  
  -- Costanti per trigger di delete, update, insert
  c_DELETE_TRIGGER              CONSTANT VARCHAR2(250) := 'DELETE';
  c_INSERT_TRIGGER              CONSTANT VARCHAR2(250) := 'INSERT';
  c_UPDATE_TRIGGER              CONSTANT VARCHAR2(250) := 'UPDATE';
  
  --Variabile di contesto dove viene salvato il nome della pagina attiva sui cui l'utente Ã¨ posizionato in quel momento
  --viene settata da webratio   
  c_CONVAR_PAGEACTIVE           CONSTANT VARCHAR2(250) := 'PAGEACTIVE'; 
  c_CONVAR_PROCESSACTIVE        CONSTANT VARCHAR2(250) := 'PROCESSACTIVE';   
  c_CONVAR_ACTIVITYACTIVE       CONSTANT VARCHAR2(250) := 'ACTIVITYACTIVE';
  c_CONVAR_ACTIVITYOIDACTIVE    CONSTANT VARCHAR2(250) := 'ACTIVITYOIDACTIVE';
    
  TYPE t_ArrayParameters IS TABLE OF VARCHAR(4000)  index by binary_integer;
  -- Descrizione per codici di PAFAGGREG
  FUNCTION c_DPAFAGT_FIRST_PAY             RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_PRE_PAY               RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_MORATORIA             RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_PAY                   RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_ASS_RET               RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_ASS_SELLING           RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_ASS_WRITE_OFF         RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_RES_VAL               RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_INDEX                 RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_REVAL                 RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_DEVAL                 RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_COST_REVAL            RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_RENEWAL               RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_BLD_DSC               RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_PURCHASE              RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_DISBURS               RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_COMMISSION            RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_COST                  RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_FEE                   RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_PENALTY               RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_PRINCIPAL_INCREASE    RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_PRINCIPAL_DECREASE    RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INTER_PRE_FIN         RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INTER_PRE_FIN_ACCR    RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INS_PREMIUM_RECEIV    RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INS_PREMIUM_COST      RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INSURANCE_COMMISSION  RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INS_COMMISSION_COST   RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INS_PREMIUM_LESSOR    RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_SUNDRY_REVENUE_CAP    RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_SUNDRY_COST_CAP       RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_CHARGE_REV_SUNDRY     RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_CREDIT_COST_SUNDRY    RETURN VARCHAR2;
  FUNCTION c_DPAGAGT_INTER_DEFERRD         RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_CREDIT_SETTLEMENT     RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_ADVANCE_INT           RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_PRINCIPAL_REFUND      RETURN VARCHAR2;
  FUNCTION c_BB_ANNULLA                    RETURN VARCHAR2;
  FUNCTION c_BB_ESCI                       RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_R_BLD_DSC             RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_R_COMMISSION          RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_R_BLD_DSC_M           RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_R_COMMISSION_M        RETURN VARCHAR2;  
  FUNCTION c_DPAFAGT_A_BLD_DSC             RETURN VARCHAR2;
  FUNCTION c_DPAFAGT_A_COMMISSION          RETURN VARCHAR2;
  FUNCTION c_DBALLOON_PAYMENT              RETURN VARCHAR2;

  
  -- nuova descrizione per rivalutazione IN SIPIAFIN.PAFDESC
  c_PAFAGT_DESC_REVALUATION   CONSTANT VARCHAR2(200) := 'Rivalutazione ISTAT ';

  --Costanti per il PAFSTSFLU (Flow Status)
  c_PAFSTSFLU_ACTIVE    CONSTANT VARCHAR2(1) := 'A';
  c_PAFSTSFLU_INACTIVE  CONSTANT VARCHAR2(1) := 'C';
  c_PAFSTSFLU_SUSPENDED CONSTANT VARCHAR2(1) := 'S';

  --Costanti per la costruzione della partita dei costi sul piano finanziario
  c_REVFLU_SIGNING  CONSTANT VARCHAR2(4) := 'SIGN';
  c_COSTFLU_FINANCE CONSTANT VARCHAR2(3) := 'FIN';
  c_COSTFLU_SERVICE CONSTANT VARCHAR2(3) := 'SRV';
  c_COSTFLU_SUNDRY  CONSTANT VARCHAR2(3) := 'SUN';

  --Costanti relative ai flussi dei piani finanziari
  c_NATURE_PAYBLES     CONSTANT VARCHAR2(1) := 'O';
  c_NATURE_RECEIVABLE  CONSTANT VARCHAR2(1) := 'P';
  c_TYPE_FIN           CONSTANT VARCHAR2(1) := 'F';
  c_TYPE_SRV           CONSTANT VARCHAR2(1) := 'S';
  c_TYPE_SDY           CONSTANT VARCHAR2(1) := 'O';
  c_TYPE_PNY           CONSTANT VARCHAR2(1) := 'M';

  c_COSTFLU_PENALTY CONSTANT VARCHAR2(3) := 'PNY';

  c_LSFIN_PRECISIONE   CONSTANT FLOAT        := 0.000000001;
  c_LSFIN_ARROTONDA    CONSTANT PLS_INTEGER := 8;
  c_BASE_CALC_360       CONSTANT PLS_INTEGER  := 360;

  c_CDINDEX_ISTAT      CONSTANT VARCHAR2(3) := 'IST';

  --Ammortamento cespiti
  c_LSFIN_TIPO_FLUSSO_RISCATTO CONSTANT VARCHAR2(1) := 'R';

  -- INTTABGARSTATUS
  c_GARSTS_PROPOSED    CONSTANT VARCHAR2(1) := 'P';
  c_GARSTS_APPROVED    CONSTANT VARCHAR2(1) := 'D';
  c_GARSTS_ACTIVE      CONSTANT VARCHAR2(1) := 'A';
  c_GARSTS_TERMINATED  CONSTANT VARCHAR2(1) := 'E';

  --Costanti per tipo operazione nella StoreData
  c_OPERATION_TYPE_INSERT CONSTANT NUMBER(9):= 0;
  c_OPERATION_TYPE_MODIFY CONSTANT NUMBER(9):= 1;
  c_OPERATION_TYPE_DELETE CONSTANT NUMBER(9):= 2;
  c_OPERATION_TYPE_BROWSE CONSTANT NUMBER(9):= 3;

  --Costanti per il INTDEFCONST (Company Defaults)
  c_INTDEFCONST_CDIVASTD    CONSTANT VARCHAR2(8) := 'CDIVASTD';
  c_INTDEFCONST_BNKSTD      CONSTANT VARCHAR2(6) := 'BNKSTD';
  c_INTDEFCONST_MODPAGCLI   CONSTANT VARCHAR2(9) := 'MODPAGCLI';
  c_INTDEFCONST_MODPAGFOR   CONSTANT VARCHAR2(9) := 'MODPAGFOR';
  c_INTDEFCONST_CODAGEVSTD  CONSTANT VARCHAR2(10) := 'CODAGEVSTD';
  c_INTDEFCONST_CODCNVZSTD  CONSTANT VARCHAR2(10) := 'CODCNVZSTD';
  c_INTDEFCONST_GGDILRBOOK  CONSTANT VARCHAR2(10) := 'GGDILRBOOK';
  c_INTDEFCONST_BNKRIDSTD   CONSTANT VARCHAR2(9) := 'BNKRIDSTD';
  c_INTDEFCONST_CDIVAVENBENISTD CONSTANT VARCHAR2(15) := 'CDIVAVENBENISTD';
  c_INTDEFCONST_CDINSCOMPANY CONSTANT VARCHAR2(13) := 'INSCOMPANYSTD';
  c_INTDEFCONST_CODCHANNEL CONSTANT VARCHAR2(13) := 'CHANNEL';
  c_INTDEFCONST_CODOFFICE CONSTANT VARCHAR2(13) := 'OFFICE';
  c_INTDEFCONST_CMP_SECTOR CONSTANT VARCHAR2(30) := 'COMPANY_SECTOR';
  c_INTDEFCONST_CMP_SUBSECT CONSTANT VARCHAR2(30) := 'COMPANY_SUBSECTOR';
  c_INTDEFCONST_CMP_INDUSTRY CONSTANT VARCHAR2(30) := 'COMPANY_INDUSTRY';
  c_INTDEFCONST_UNPAIDINSPREMCH CONSTANT VARCHAR2(30) := 'UNPAIDINSPREMCHARGE';
  c_INTDEFCONST_INSIMPSPESE CONSTANT VARCHAR2(11) := 'INSIMPSPESE';
  c_INTDEFCONST_CDREVSPESEINS CONSTANT VARCHAR2(13) := 'CDREVSPESEINS';
  c_INTDEFCONST_INSDTSTART CONSTANT VARCHAR2(10) := 'INSDTSTART';
  c_INTDEFCONST_INSDELAYDD CONSTANT VARCHAR2(10) := 'INSDELAYDD';
  c_INTDEFCONST_FRANCHTRIBUTI CONSTANT VARCHAR2(20) := 'FRANCHIGIATRIBUTI';
  c_INTDEFCONST_CARTLIQRULE CONSTANT VARCHAR2(20) := 'CARTLIQRULE';
  c_INTDEFCONST_PURCHASEOPTDOC CONSTANT VARCHAR2(20) := 'PURCHASEOPTDOC';
  c_INTDEFCONST_ALIQ_IMU_STATO CONSTANT VARCHAR2(20) := 'ALIQ_IMU_STATO';
  c_INTDEFCONST_CDPAYRESVALUE CONSTANT VARCHAR2(20) := 'CDPAYRESVAL';
  c_INTDEFCONST_CDANA_STATO CONSTANT VARCHAR2(20) := 'CDANA_STATO';
  c_INTDEFCONST_CHECKGARANZIE CONSTANT VARCHAR2(20) := 'CHECK_GARANZIE';
  c_INTDEFCONST_FATFACIL_CONTO CONSTANT VARCHAR2(20) := 'FATFACIL_CONTO';
  c_INTDEFCONST_FATFACIL_CDVAT CONSTANT VARCHAR2(20) := 'FATFACIL_CDVAT';
  c_INTDEFCONST_BNKPAYTRACKED CONSTANT VARCHAR2(30) := 'BNKPAYTRACKED';
  c_INTDEFCONST_SPINCMULTICTR CONSTANT VARCHAR2(30) := 'SPINCMULTICTR';
  c_INTDEFCONST_RECDEP_ACCOUNT CONSTANT VARCHAR2(30) := 'RECYCLEDEP_ACCOUNT';
  c_INTDEFCONST_RECDEP_VAT CONSTANT VARCHAR2(30) := 'RECYCLEDEP_VAT';
  c_INTDEFCONST_LPRTIPORAP      CONSTANT VARCHAR2(30) := 'LPRTIPORAP';
  c_INTDEFCONST_LPRPIATTAFORMA  CONSTANT VARCHAR2(30) := 'LPRPIATTAFORMA';
  c_INTDEFCONST_PROD_LEASINGABIT CONSTANT VARCHAR2(30) := 'PROD_LEASINGABIT';
  c_INTDEFCONST_ACC_DAYSAFTER  CONSTANT VARCHAR2(30) := 'ACCOUNTING_DAYSAFTER';
  c_INTDEFCONST_ACC_DAYSAFTER_EB  CONSTANT VARCHAR2(30) := 'ACCOUNTING_DAYSAFTER_EB';
  c_INTDEFCONST_MAXCTRINV CONSTANT VARCHAR2(30) := 'MAXCTRINV';
  c_INTDEFCONST_DATA_MIGRAZ CONSTANT VARCHAR2(30) := 'DATA_MIGRAZ'; -- Data di migrazione dei dati da precedente Sistema Informativo
  c_INTDEFCONST_PROPREVAMOUNT CONSTANT VARCHAR2(30) := 'PROPREVAMOUNT';
  c_INTDEFCONST_MV_MINREC_LOCK CONSTANT VARCHAR2(30) := 'MV_MINREC_LOCK'; -- Numero minimo di records da elaborare affinchÃ© venga effettuato il lock delle viste materializzate
  c_INTDEFCONST_MV_HOUR_NOLOCK CONSTANT VARCHAR2(30) := 'MV_HOUR_NOLOCK'; -- Ora di inizio e fine in cui non effettuare il lock delle viste materializzate
  c_INTDEFCONST_SPV_IDUSER      CONSTANT VARCHAR2(30) := 'SPV_IDUSER'; 
  c_INTDEFCONST_SPV_IDANAG      CONSTANT VARCHAR2(30) := 'SPV_IDANAG';     
  c_INTDEFCONST_SPV_IDDITTA     CONSTANT VARCHAR2(30) := 'SPV_IDDITTA';    
  c_INTDEFCONST_SPV_TESTATATP   CONSTANT VARCHAR2(30) := 'SPV_TESTATATP';  
  c_INTDEFCONST_SPV_IDPNTP      CONSTANT VARCHAR2(30) := 'SPV_IDPNTP';     
  c_INTDEFCONST_SPV_CONTOTP     CONSTANT VARCHAR2(30) := 'SPV_CONTOTP';    
  c_INTDEFCONST_SPV_IDDIVISIONE CONSTANT VARCHAR2(30) := 'SPV_IDDIVISIONE';
  c_INTDEFCONST_SPV_SEZIONE     CONSTANT VARCHAR2(30) := 'SPV_SEZIONE';
  c_INTDEFCONST_RISTRISTRUT     CONSTANT VARCHAR2(30) := 'RISTRISTRUT'; --Ristrutturazione istruttoria : per trattare i ristorni di agenzia come le commissioni 
  c_INTDEFCONST_OPCODICE_SCO    CONSTANT VARCHAR2(30) := 'OPCODICE_SCO';--Per DLL la costante ritorna il codice anagrafico del notaio in caso di inserimento ONERE ='SCO'
  c_INTDEFCONST_MORA_PROVENTO   CONSTANT VARCHAR2(30) := 'MORA_PROVENTO';
  c_INTDEFCONST_FCRINTCDVAT     CONSTANT VARCHAR2(30) := 'FCRINTCDVAT';    
  c_INTDEFCONST_ONPRO_RFRBM     CONSTANT VARCHAR2(30) := 'ONPRO_RFRBM';  
  c_INTDEFCONST_ONPRO_RFCCM     CONSTANT VARCHAR2(30) := 'ONPRO_RFCCM';    

  c_INTDEFCONST_ONPRO_AFRBM     CONSTANT VARCHAR2(30) := 'ONPRO_AFRBM';  
  c_INTDEFCONST_ONPRO_AFCCM     CONSTANT VARCHAR2(30) := 'ONPRO_AFCCM';    


  c_INTDEFCONST_CDREVSPESEINSLOA CONSTANT VARCHAR2(30) := 'CDREVSPESEINSLOA';
  c_INTDEFCONST_AUI_INCASSO_MIN CONSTANT VARCHAR2(30) := 'AUI_INCASSO_MIN'; -- AUI: importo minimo di incasso per cui richiedere l''ABI e il CAB della banca del cliente

  c_INTDEFCONST_CDIVA_NOLIQIVA CONSTANT VARCHAR2(30) := 'CDIVA_NOLIQIVA'; -- Assoggettamenti IVA da escludere dalla Liquidazione IVA
 
  c_INTDEFCONST_EARLYTERM_PEN CONSTANT VARCHAR2(30) := 'EARLYTERM_PENALTY'; 

  c_INTDEFCONST_INVDEBITTYPE CONSTANT VARCHAR2(30) := 'INVDEBITTYPE'; -- Tipo di passivo di default per fatture fornitori
  c_INTDEFCONST_INVTYPE CONSTANT VARCHAR2(30) := 'INVTYPE'; -- Tipo di passivo di default per tipologia fatture fornitori
	
	c_INTDEFCONST_IS_CTR_ZERO_RATE CONSTANT VARCHAR2(30) := 'IS_CTR_ZERO_RATE'; --Contratto a tasso 0
-- gp start bug 111374  
  c_INTDEFCONST_AGEING_MESE CONSTANT VARCHAR2(30) := 'AGEING_CARTO_MESE'; --Abilita l'aging della cartolarizzazione per mese solare e non per 30 giorni Y/N
-- gp stop  bug 111374

  --Costante per indicare che un contratto Ã¨ di interim rent
  c_CTR_INTERIM_RENT CONSTANT VARCHAR2(7) := 'INTERIM';

  --tipi relativi al piano dei conti
  c_SA_DARE       CONSTANT VARCHAR2(1) := 'D';
  c_SA_AVERE      CONSTANT VARCHAR2(1) := 'A';
  c_SA_DAREAVERE  CONSTANT VARCHAR2(1) := 'E';

  c_MAXREC_PAGE CONSTANT NUMBER(9) := 100;

  c_Action_AfterInsert CONSTANT PLS_INTEGER := 0;
  c_Action_InitRec     CONSTANT PLS_INTEGER := 1;
  c_Action_FldChange   CONSTANT PLS_INTEGER := 2;
  c_Action_FldValidate CONSTANT PLS_INTEGER := 3;
  c_Action_DoCheckData CONSTANT PLS_INTEGER := 4;
  c_Action_DoStoreData CONSTANT PLS_INTEGER := 5;
  c_Action_BeforeInsert CONSTANT PLS_INTEGER := 6;
  c_Action_tbEdita CONSTANT PLS_INTEGER := 7;

  --GESTIONE DEGLI STATI
  c_StatoVisualizza  CONSTANT NUMBER := 0;
  c_StatoModifica    CONSTANT NUMBER := 1;
  c_StatoInserimento CONSTANT NUMBER := 2;

  --Costante colore Black
  c_clBlack CONSTANT NUMBER := 0;

  --Code for financial errors
  c_ERR_CALC_MONT_MIN_VALBEN NUMBER(9) := -10;
  c_ERR_CALC_RATE_MULTSOL    NUMBER(9) := -1;
  c_ERR_FIN_CALC_ERREA_MIN   NUMBER(9) := 21;
  c_ERR_FIN_CALC_ERREA_MAX   NUMBER(9) := 22;
  c_ERR_FIN_CALC_TAEG_MIN    NUMBER(9) := 23;
  c_ERR_FIN_CALC_TAEG_MAX    NUMBER(9) := 24;

  -- Costante per TIPOLOGIE ESITI REGOLARIZZAZIONI
  c_EVENTI_SEGNALATO         NUMBER(1) := 2;

  -- Costante per POS principale
  c_SOC_POS                  VARCHAR2(30) := 'SOC_POS';
  
  -- Codici di errore
  c_DefaultErrorNum  INTEGER      :=     -20001;
  c_DefaultErrorCode VARCHAR2(20) := 'ORA-20001';

  
FUNCTION LS_FUNC_SEARCH_MAX(
  p_CodCompany VARCHAR2
)  RETURN PLS_INTEGER;

FUNCTION GetSqlSearch(p_CodCompany      VARCHAR2,
                      p_RowCount        IN OUT NOCOPY NUMBER,
                      p_RowRead         IN OUT NOCOPY NUMBER,
                      p_NumOfPages      IN OUT NOCOPY NUMBER,
                      p_SqlText         VARCHAR2,
                      p_PAGE2EXTRACT    NUMBER,
                      p_ExcOrderInCount BOOLEAN := TRUE, --Esclude dall query per il conteggio dei record l'istruzione Order By
                      p_SqlTextNotOrder VARCHAR2:= NULL
                      ) RETURN VARCHAR2;

FUNCTION GetSqlSearch(  
  p_CodCompany      VARCHAR2,
  p_RowCount        IN OUT NOCOPY NUMBER,
  p_RowRead         IN OUT NOCOPY NUMBER,
  p_NumOfPages      IN OUT NOCOPY NUMBER,
  p_SqlText         VARCHAR2,
  p_PAGE2EXTRACT    NUMBER,
  p_CalcRowCount    BOOLEAN,
  p_ExcOrderInCount BOOLEAN := TRUE,
  p_SqlTextNotOrder VARCHAR2:= NULL --Esclude dall query per il conteggio dei record l'istruzione Order By
) RETURN VARCHAR2;

FUNCTION GetRowCount(
  p_CodCompany      VARCHAR2,
  p_SqlText         VARCHAR2,
  p_CalcRowCount    BOOLEAN,
  p_ExcOrderInCount BOOLEAN := TRUE, --Esclude dall query per il conteggio dei record l'istruzione Order By
  p_SqlTextNotOrder VARCHAR2 := NULL
) RETURN NUMBER;

FUNCTION GetSqlFunSearch(
  p_CodCompany      VARCHAR2,
  p_RowCount        IN OUT NOCOPY NUMBER,
  p_RowRead         IN OUT NOCOPY NUMBER,
  p_NumOfPages      IN OUT NOCOPY NUMBER,
  p_SqlText         VARCHAR2,
  p_PAGE2EXTRACT    NUMBER,
  p_CalcRowCount    BOOLEAN
) RETURN VARCHAR2;
PROCEDURE LsErrorHelp(p_Msg VARCHAR2, p_ErrorCode PLS_INTEGER := 1, p_HelpContext PLS_INTEGER := 0);

PROCEDURE LsError( p_Msg VARCHAR2, p_ErrorCode PLS_INTEGER := 1 );

PROCEDURE LsErrorFmt( p_Msg VARCHAR2, p_Args VARCHAR2, p_ErrorCode PLS_INTEGER := 1 );

FUNCTION CalcolaValoreConIva(
  p_Imponibile      NUMBER, -- Imponibile su cui calcolare l'IVA
  p_AliquotaIva     FLOAT, -- Aliquota IVA
  p_PercImpsoggetta FLOAT := 100.00, -- Percentuale dell'imponibile su cui applicare p_AliquotaIva (Default 100%)
  p_AliquotaIva2    FLOAT := 0.00 -- Aliquota IVA da applicare sulla parte non soggetta a p_AliquotaIva (Default 0%)
) RETURN NUMBER;

FUNCTION CF_Ctrl(
  p_Codice VARCHAR2
) RETURN BOOLEAN;

FUNCTION CF_Ctrl_Number(
  p_Codice VARCHAR2
) RETURN NUMBER;

FUNCTION IVA_Ctrl(
  p_IVA VARCHAR2,
  p_IsItalia BOOLEAN := TRUE,
  p_IsCodiceFiscale BOOLEAN := FALSE
) RETURN BOOLEAN;

FUNCTION GetDataNascFromCFisc(
  p_CFISC VARCHAR2 -- Codice Fiscale
) RETURN DATE;

FUNCTION BooleanToInt( p_B BOOLEAN )
RETURN PLS_INTEGER;

FUNCTION IntToBoolean( p_I PLS_INTEGER )
RETURN BOOLEAN;

FUNCTION VarArrayOf(
  p_ArrayParameters t_ArrayParameters
) RETURN VARCHAR2;

FUNCTION VarArrayOf(
  p_Param1  VARCHAR2,
  p_Param2  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param3  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param4  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param5  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param6  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param7  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param8  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param9  VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param10 VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param11 VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param12 VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param13 VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param14 VARCHAR2 := c_DUMMY_PARAMETER,
  p_Param15 VARCHAR2 := c_DUMMY_PARAMETER
) RETURN VARCHAR2;

FUNCTION GetProgressivoFromSICODICI(
  p_CodCompany   VARCHAR2,
  p_NomeTabella  VARCHAR2
) RETURN PLS_INTEGER;

FUNCTION GetProgressivoFromSICODICIGEN(
  p_NomeTabella  VARCHAR2
) RETURN PLS_INTEGER;

FUNCTION Decode_CF(
  p_CF     VARCHAR2,
  p_Data   OUT NOCOPY DATE,
  p_Donna  OUT NOCOPY BOOLEAN,
  p_CodCit OUT NOCOPY VARCHAR2
) RETURN BOOLEAN;

FUNCTION CharOmoCodiciToValue(
  -- ritorna il valore numerico del carattere C prelevato da un Codice Fiscale omocodice;
  -- ritorna il carattere C
  p_C VARCHAR2
) RETURN VARCHAR2;

FUNCTION DecodeMese_CF(
  -- ritorna il numero del mese corrispondente al carattere passato nel parametro M prelevato da un Codice Fiscale;
  -- ritorna 0 se non trova una corrispondenza
  p_M VARCHAR2
) RETURN NUMBER;

-- Ritorna il calcolo del cognome per il codice fiscale
FUNCTION CognomeForCF(P_COGNOME VARCHAR2) RETURN VARCHAR2;

-- Ritorna il calcolo del nome per il codice fiscale
FUNCTION NomeForCF(P_NOME VARCHAR2) RETURN VARCHAR2;

-- Dato un codice fiscale, nome e cognome, esegue un check sulla congruitÃ  del codice fiscale per i primi 6 caratteri
FUNCTION CheckNomeCognomeCF(P_CFISC VARCHAR2,P_NOME VARCHAR2, P_COGNOME VARCHAR2) RETURN BOOLEAN;

PROCEDURE DISPLAY_MSG (
  P_MSG VARCHAR2,
  P_DEF VARCHAR2 := '');

FUNCTION Func_Format(
    p_field_in       VARCHAR2,
    p_field_type     VARCHAR2,
    p_field_length   PLS_INTEGER
      ) RETURN VARCHAR2;

FUNCTION Func_Format(
    p_field_in       DATE,
    p_field_type     VARCHAR2,
    p_field_length   PLS_INTEGER
      ) RETURN VARCHAR2;

PROCEDURE LsErrorTrace(p_SQLERRM VARCHAR2);

PROCEDURE LsErrorInsertUpdate(p_ErrorList VARCHAR2);

FUNCTION LSERRORINSUPD RETURN VARCHAR2;

PROCEDURE Temp2Stor(p_Cdcmpany VARCHAR2,
                    p_TabTemp  VARCHAR2,
                    p_TabStor  VARCHAR2,
                    p_newProgr PLS_INTEGER,
                    p_FldProgr VARCHAR2,
                    p_FlgEmpty BOOLEAN,
                    p_WhereCond VARCHAR2 := NULL
                   );

FUNCTION CleanDelphiParam(p_Param NUMBER) RETURN NUMBER;

FUNCTION CheckMinMaxNum(p_TableMin   VARCHAR2,
                         p_FieldMin  VARCHAR2,
                         p_ValueMin  NUMBER,
                         p_TableMax  VARCHAR2,
                         p_FieldMax  VARCHAR2,
                         p_ValueMax  NUMBER,
                         p_ErrMsg    VARCHAR2,
                         p_SameValue BOOLEAN) RETURN VARCHAR2;



function UNMILIARDO_STR   RETURN VARCHAR2;
function UNMILIONE_STR    RETURN VARCHAR2;
function MILLE_STR        RETURN VARCHAR2;
function CENTO_STR        RETURN VARCHAR2;
function UNO_STR          RETURN VARCHAR2;

function MILIARDI_STR     RETURN VARCHAR2;
function MILIONI_STR      RETURN VARCHAR2;
function MILA_STR         RETURN VARCHAR2;

function DIECI_STR        RETURN VARCHAR2;
function UNDICI_STR       RETURN VARCHAR2;

function DUE_STR          RETURN VARCHAR2;
function DODICI_STR       RETURN VARCHAR2;
function VENTI_STR        RETURN VARCHAR2;

function TRE_STR          RETURN VARCHAR2;
function TREDICI_STR      RETURN VARCHAR2;
function TRENTA_STR       RETURN VARCHAR2;

function QUATTRO_STR      RETURN VARCHAR2;
function QUATTORDICI_STR  RETURN VARCHAR2;
function QUARANTA_STR     RETURN VARCHAR2;

function CINQUE_STR       RETURN VARCHAR2;
function QUINDICI_STR     RETURN VARCHAR2;
function CINQUANTA_STR    RETURN VARCHAR2;

function SEI_STR          RETURN VARCHAR2;
function SEDICI_STR       RETURN VARCHAR2;
function SESSANTA_STR     RETURN VARCHAR2;

function SETTE_STR        RETURN VARCHAR2;
function DICIASSETTE_STR  RETURN VARCHAR2;
function SETTANTA_STR     RETURN VARCHAR2;

function OTTO_STR         RETURN VARCHAR2;
function DICIOTTO_STR     RETURN VARCHAR2;
function OTTANTA_STR      RETURN VARCHAR2;

function NOVE_STR         RETURN VARCHAR2;
function DICIANNOVE_STR   RETURN VARCHAR2;
function NOVANTA_STR      RETURN VARCHAR2;

function VUOTO_STR        RETURN VARCHAR2;

/* ---------------------------------------------------------------- */
TYPE t_Decodifica_Numero IS RECORD
(
  Col_1        VARCHAR2(20),
  Col_2        VARCHAR2(20),
  Col_3        VARCHAR2(20)
);

TYPE t_Decodifica_Numeri IS TABLE OF t_Decodifica_Numero;

/* ---------------------------------------------------------------- */

TYPE t_Uno IS RECORD
(
  Col_1        VARCHAR2(20)
);

TYPE t_Arr_Uno IS TABLE OF t_Uno;

/* ---------------------------------------------------------------- */


TYPE t_Tanti IS RECORD
(
  Col_1        VARCHAR2(20)
);

TYPE t_Arr_Tanti IS TABLE OF t_Tanti;

/* ---------------------------------------------------------------- */

TYPE t_Num IS RECORD
(
  Col_1        NUMBER
);

TYPE t_Arr_Num IS TABLE OF t_Num;

/* ---------------------------------------------------------------- */

FUNCTION Num2Let(
p_Importo         FLOAT,
p_nDecimali       NUMBER,
p_EliminaDecimali NUMBER := 0
) RETURN VARCHAR2;

/* Trasforma un numero in aggettivo numerale italiano */
FUNCTION Num2NumberAdjIta(
p_Numero          NUMBER,
p_Genere          VARCHAR2 := 'M',
p_Plurale         NUMBER   := 0
) RETURN VARCHAR2;


/* Mantiene una tabella inserendo i dati se non esistono o updetandoli se i dati esistono.
   Il tutto viene gestito creando dinamicamente il comando sql MERGE .
   E' importante che la tabella abbia la chiave primaria in modo che la procedura riconosca in
   autonomia se il record da mantenere esiste giÃ  (UPDATE) o sia assente (INSERT) .
   Vanno passate tutte le colonne della tabella. Se una colonna fosse assente viene sollevata eccezione
   Se una colonna vale null allora passare ....,null, .....

   ESEMPIO : MERGE_TAB('TABCAMPINOTAIAS','Q3|E-SEZ03-REPA1', 'A.1', 'Finanziamenti - Banche - A vista');
             MERGE_TAB('TABCONTROPBDI', 0, 'Nessuna indicazione', 1, 0, 0.00 );
             MERGE_TAB('TABPARGRANADJ', 4.0, 0.883, 0 );

     NOTA: non sono ancora gestite le date ,ma saranno da passare secondo formato YYYYMMDDHHHISS e poi da convertire
           in to_Date all'interno prima di fare insert/update.
*/
C_NOTPASSED  CONSTANT VARCHAR2(12) := '[not_passed]';


FUNCTION getStepsCursor(
  p_FromValue NUMBER,
  p_ToValue NUMBER,
  p_Step NUMBER,
  p_Pattern VARCHAR2,
  p_OrderBy VARCHAR2
)RETURN SYS_REFCURSOR;


FUNCTION GetTrimestre(p_Mese PLS_INTEGER) RETURN PLS_INTEGER;

FUNCTION ExtractFileName(p_FileNameWithPath VARCHAR2) RETURN VARCHAR2;
FUNCTION ExtractFilePath(p_FileNameWithPath VARCHAR2) RETURN VARCHAR2;

FUNCTION RemoveFileExt(p_FileName VARCHAR2) RETURN VARCHAR2;
FUNCTION ExtractFileExt(p_FileName VARCHAR2) RETURN VARCHAR2;
FUNCTION ChangeFileExt(p_FileName VARCHAR2, p_Extension VARCHAR2) RETURN VARCHAR2;


FUNCTION ClobToBlob( p_SourceClob CLOB, p_BlobCharSet VARCHAR2 := NULL ) RETURN BLOB;
FUNCTION BlobToClob( p_SourceBlob BLOB, p_BlobCharSet VARCHAR2 := NULL, p_RaiseException BOOLEAN := TRUE ) RETURN CLOB;
FUNCTION ClobToTextFileWindows( p_SourceClob CLOB ) RETURN BLOB;

--Ritorna il sesso della persona a partire da un Codice Fiscale
FUNCTION CFisc_GetSesso(p_CFisc  VARCHAR2) RETURN VARCHAR2;

FUNCTION Decode_Base64(p_Clob in CLOB) RETURN BLOB ;
FUNCTION Encode_Base64(p_blob BLOB, p_result_with_newlines BOOLEAN := FALSE) RETURN CLOB; 

FUNCTION HexToBase64( p_Hex VARCHAR2 ) RETURN VARCHAR2;
FUNCTION Base64ToHex( p_Base64 VARCHAR2 ) RETURN VARCHAR2;

FUNCTION GetSqlErrmFormatted RETURN VARCHAR2;

END globals;
